import { IfcState, IfcMesh } from '../BaseDefinitions';
/**
 * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.
 */
export declare class IFCParser {
    private state;
    private currentID;
    private computeBoundsTree?;
    private disposeBoundsTree?;
    private acceleratedRaycast?;
    constructor(state: IfcState);
    parse(buffer: any): Promise<IfcMesh>;
    initializeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any): void;
    private setupThreeMeshBVH;
    private applyThreeMeshBVH;
    private newIfcModel;
    private loadAllGeometry;
    private generateAllGeometriesByMaterial;
    private getGeometryAndMaterials;
    private saveAllPlacedGeometriesByMaterial;
    private savePlacedGeometry;
    private getBufferGeometry;
    private getVertices;
    private getIndices;
    private getMeshMatrix;
    private ifcGeomToBufferGeom;
    private extractVertexData;
    private saveGeometryByMaterial;
    private storeGeometryAttribute;
    private createMaterial;
}
