{"version":3,"file":"IFCLoader.js","sources":["../src/IFC/BaseDefinitions.ts","../src/IFC/Components/IFCParser.ts","../src/IFC/Components/SubsetManager.ts","../src/IFC/Components/IFCElementsMap.ts","../src/IFC/Components/PropertyManager.ts","../src/IFC/Components/TypeManager.ts","../src/IFC/Components/IFCModel.ts","../src/IFC/Components/IFCManager.ts","../src/IFCLoader.ts"],"sourcesContent":["import { BufferAttribute, BufferGeometry, Material, Mesh, Scene } from 'three';\r\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils';\r\nimport {\r\n    IFCRELAGGREGATES,\r\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n    IFCRELDEFINESBYPROPERTIES,\r\n    IFCRELDEFINESBYTYPE,\r\n} from 'web-ifc';\r\nimport { IfcAPI } from 'web-ifc';\r\n\r\nexport const IdAttrName = 'expressID';\r\n\r\nexport type IdAttributeByMaterial = { [id: number]: number };\r\nexport type IdAttributesByMaterials = { [materialID: string]: IdAttributeByMaterial };\r\n\r\nexport const merge = (geoms: BufferGeometry[], createGroups = false) => {\r\n    return BufferGeometryUtils.mergeBufferGeometries(geoms, createGroups);\r\n};\r\n\r\nexport const newFloatAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Float32Array(data), size);\r\n};\r\n\r\nexport const newIntAttr = (data: any[], size: number) => {\r\n    return new BufferAttribute(new Uint32Array(data), size);\r\n};\r\n\r\nexport interface HighlightConfig {\r\n    scene: Scene;\r\n    ids: number[];\r\n    removePrevious: boolean;\r\n    material?: Material;\r\n};\r\n\r\nexport interface HighlightConfigOfModel extends HighlightConfig {\r\n    modelID: number;\r\n};\r\n\r\nexport const DEFAULT = 'default';\r\n\r\nexport type SelectedItems = {\r\n    [matID: string]: { ids: Set<number>; mesh: Mesh };\r\n};\r\n\r\nexport type MapFaceindexID = { [key: number]: number };\r\n\r\nexport type IdGeometries = {\r\n    [expressID: number]: BufferGeometry;\r\n};\r\n\r\nexport type GeometriesByMaterial = {\r\n    material: Material;\r\n    geometries: IdGeometries;\r\n};\r\n\r\nexport interface GeometriesByMaterials {\r\n    [materialID: string]: GeometriesByMaterial;\r\n}\r\n\r\nexport interface TypesMap {\r\n    [key: number]: number;\r\n}\r\n\r\nexport interface IfcModel {\r\n    modelID: number;\r\n    mesh: IfcMesh;\r\n    items: GeometriesByMaterials;\r\n    types: TypesMap;\r\n}\r\n\r\nexport interface IfcState {\r\n    models: { [modelID: number]: IfcModel };\r\n    api: IfcAPI;\r\n}\r\n\r\nexport interface IfcMesh extends Mesh {\r\n    modelID: number;\r\n}\r\n\r\nexport interface Node {\r\n    expressID: number;\r\n    type: string;\r\n    children: Node[];\r\n}\r\n\r\nexport interface pName {\r\n    name: number;\r\n    relating: string;\r\n    related: string;\r\n    key: string;\r\n}\r\n\r\nexport const PropsNames = {\r\n    aggregates: {\r\n        name: IFCRELAGGREGATES,\r\n        relating: 'RelatingObject',\r\n        related: 'RelatedObjects',\r\n        key: 'children'\r\n    },\r\n    spatial: {\r\n        name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n        relating: 'RelatingStructure',\r\n        related: 'RelatedElements',\r\n        key: 'children'\r\n    },\r\n    psets: {\r\n        name: IFCRELDEFINESBYPROPERTIES,\r\n        relating: 'RelatingPropertyDefinition',\r\n        related: 'RelatedObjects',\r\n        key: 'hasPsets'\r\n    },\r\n    type: {\r\n        name: IFCRELDEFINESBYTYPE,\r\n        relating: 'RelatingType',\r\n        related: 'RelatedObjects',\r\n        key: 'hasType'\r\n    }\r\n}\r\n","//@ts-ignore\r\nimport { PlacedGeometry, Color as ifcColor, IfcGeometry } from 'web-ifc';\r\nimport {\r\n    IfcState,\r\n    IfcMesh,\r\n    IdAttrName,\r\n    merge,\r\n    newFloatAttr,\r\n    newIntAttr,\r\n    IdAttributesByMaterials\r\n} from '../BaseDefinitions';\r\nimport {\r\n    Mesh,\r\n    Color,\r\n    MeshLambertMaterial,\r\n    DoubleSide,\r\n    Matrix4,\r\n    BufferGeometry,\r\n    BufferAttribute,\r\n    Material\r\n} from 'three';\r\n\r\n/**\r\n * Reads all the geometry of the IFC file and generates an optimized `THREE.Mesh`.\r\n */\r\nexport class IFCParser {\r\n    private state: IfcState;\r\n    private currentID: number;\r\n    private computeBoundsTree?: any;\r\n    private disposeBoundsTree?: any;\r\n    private acceleratedRaycast?: any;\r\n    constructor(state: IfcState) {\r\n        this.currentID = -1;\r\n        this.state = state;\r\n    }\r\n\r\n    async parse(buffer: any) {\r\n        if (this.state.api.wasmModule === undefined) await this.state.api.Init();\r\n        this.currentID = this.newIfcModel(buffer);\r\n        return this.loadAllGeometry();\r\n    }\r\n\r\n    initializeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any) {\r\n        this.computeBoundsTree = computeBoundsTree;\r\n        this.disposeBoundsTree = disposeBoundsTree;\r\n        this.acceleratedRaycast = acceleratedRaycast;\r\n        this.setupThreeMeshBVH();\r\n    }\r\n\r\n    private setupThreeMeshBVH() {\r\n        if (!this.computeBoundsTree || !this.disposeBoundsTree || !this.acceleratedRaycast) return;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\r\n        //@ts-ignore\r\n        BufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\r\n        Mesh.prototype.raycast = this.acceleratedRaycast;\r\n    }\r\n\r\n    private applyThreeMeshBVH(geometry: BufferGeometry) {\r\n        if (this.computeBoundsTree)\r\n            //@ts-ignore\r\n            geometry.computeBoundsTree();\r\n    }\r\n\r\n    private newIfcModel(buffer: any) {\r\n        const data = new Uint8Array(buffer);\r\n        const modelID = this.state.api.OpenModel(data);\r\n        this.state.models[modelID] = { modelID, mesh: {} as IfcMesh, items: {}, types: {} };\r\n        return modelID;\r\n    }\r\n\r\n    private loadAllGeometry() {\r\n        this.saveAllPlacedGeometriesByMaterial();\r\n        return this.generateAllGeometriesByMaterial();\r\n    }\r\n\r\n    private generateAllGeometriesByMaterial() {\r\n        const { geometry, materials } = this.getGeometryAndMaterials();\r\n        this.applyThreeMeshBVH(geometry);\r\n        const mesh = new Mesh(geometry, materials) as IfcMesh;\r\n        mesh.modelID = this.currentID;\r\n        this.state.models[this.currentID].mesh = mesh;\r\n        return mesh;\r\n    }\r\n\r\n    private getGeometryAndMaterials() {\r\n        const items = this.state.models[this.currentID].items;\r\n        const mergedByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let materialID in items) {\r\n            materials.push(items[materialID].material);\r\n            const geometries = Object.values(items[materialID].geometries);\r\n            mergedByMaterial.push(merge(geometries));\r\n        }\r\n        const geometry = merge(mergedByMaterial, true);\r\n        return { geometry, materials };\r\n    }\r\n\r\n    private saveAllPlacedGeometriesByMaterial() {\r\n        const flatMeshes = this.state.api.LoadAllGeometry(this.currentID);\r\n        for (let i = 0; i < flatMeshes.size(); i++) {\r\n            const flatMesh = flatMeshes.get(i);\r\n            const placedGeom = flatMesh.geometries;\r\n            for (let j = 0; j < placedGeom.size(); j++) {\r\n                this.savePlacedGeometry(placedGeom.get(j), flatMesh.expressID);\r\n            }\r\n        }\r\n    }\r\n\r\n    private savePlacedGeometry(placedGeometry: PlacedGeometry, id: number) {\r\n        const geometry = this.getBufferGeometry(placedGeometry);\r\n        geometry.computeVertexNormals();\r\n        const matrix = this.getMeshMatrix(placedGeometry.flatTransformation);\r\n        geometry.applyMatrix4(matrix);\r\n        this.saveGeometryByMaterial(geometry, placedGeometry, id);\r\n    }\r\n\r\n    private getBufferGeometry(placed: PlacedGeometry) {\r\n        const geometry = this.state.api.GetGeometry(this.currentID, placed.geometryExpressID);\r\n        const vertexData = this.getVertices(geometry);\r\n        const indices = this.getIndices(geometry);\r\n        const { vertices, normals } = this.extractVertexData(vertexData);\r\n        return this.ifcGeomToBufferGeom(vertices, normals, indices);\r\n    }\r\n\r\n    private getVertices(geometry: IfcGeometry) {\r\n        const vData = geometry.GetVertexData();\r\n        const vDataSize = geometry.GetVertexDataSize();\r\n        return this.state.api.GetVertexArray(vData, vDataSize);\r\n    }\r\n\r\n    private getIndices(geometry: IfcGeometry) {\r\n        const iData = geometry.GetIndexData();\r\n        const iDataSize = geometry.GetIndexDataSize();\r\n        return this.state.api.GetIndexArray(iData, iDataSize);\r\n    }\r\n\r\n    private getMeshMatrix(matrix: number[]) {\r\n        const mat = new Matrix4();\r\n        mat.fromArray(matrix);\r\n        return mat;\r\n    }\r\n\r\n    private ifcGeomToBufferGeom(vertices: any[], normals: any[], indexData: any) {\r\n        const geometry = new BufferGeometry();\r\n        geometry.setAttribute('position', newFloatAttr(vertices, 3));\r\n        geometry.setAttribute('normal', newFloatAttr(normals, 3));\r\n        geometry.setIndex(new BufferAttribute(indexData, 1));\r\n        return geometry;\r\n    }\r\n\r\n    private extractVertexData(vertexData: any) {\r\n        const vertices = [];\r\n        const normals = [];\r\n        let isNormalData = false;\r\n        for (let i = 0; i < vertexData.length; i++) {\r\n            isNormalData ? normals.push(vertexData[i]) : vertices.push(vertexData[i]);\r\n            if ((i + 1) % 3 == 0) isNormalData = !isNormalData;\r\n        }\r\n        return { vertices, normals };\r\n    }\r\n\r\n    private saveGeometryByMaterial(geom: BufferGeometry, placedGeom: PlacedGeometry, id: number) {\r\n        const color = placedGeom.color;\r\n        const colorID = `${color.x}${color.y}${color.z}${color.w}`;\r\n        this.storeGeometryAttribute(id, geom);\r\n        this.createMaterial(colorID, color);\r\n        const item = this.state.models[this.currentID].items[colorID];\r\n        const currentGeom = item.geometries[id];\r\n        if (!currentGeom) return (item.geometries[id] = geom);\r\n        const merged = merge([currentGeom, geom]);\r\n        item.geometries[id] = merged;\r\n    }\r\n\r\n    private storeGeometryAttribute(id: number, geometry: BufferGeometry) {\r\n        const size = geometry.attributes.position.count;\r\n        const idAttribute = new Array(size).fill(id);\r\n        geometry.setAttribute(IdAttrName, newIntAttr(idAttribute, 1));\r\n    }\r\n\r\n    private createMaterial(colorID: string, color: ifcColor) {\r\n        const items = this.state.models[this.currentID].items;\r\n        if (items[colorID]) return;\r\n        const col = new Color(color.x, color.y, color.z);\r\n        const newMaterial = new MeshLambertMaterial({ color: col, side: DoubleSide });\r\n        newMaterial.transparent = color.w !== 1;\r\n        if (newMaterial.transparent) newMaterial.opacity = color.w;\r\n        items[colorID] = { material: newMaterial, geometries: {} };\r\n    }\r\n}\r\n","import { BufferGeometry, Material, Mesh, MeshLambertMaterial, Scene } from 'three';\r\nimport {\r\n    IfcState,\r\n    GeometriesByMaterials,\r\n    IdGeometries,\r\n    merge,\r\n    SelectedItems,\r\n    DEFAULT,\r\n    HighlightConfigOfModel\r\n} from '../BaseDefinitions';\r\n\r\n/**\r\n * Contains the logic to get, create and delete geometric subsets of an IFC model. For example,\r\n * this can extract all the items in a specific IfcBuildingStorey and create a new Mesh.\r\n */\r\nexport class SubsetManager {\r\n    private state: IfcState;\r\n    private selected: SelectedItems;\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n        this.selected = {};\r\n    }\r\n\r\n    getSubset(modelID: number, material?: Material) {\r\n        const currentMat = this.matIDNoConfig(modelID, material);\r\n        if (!this.selected[currentMat]) return null;\r\n        return this.selected[currentMat].mesh;\r\n    }\r\n\r\n    removeSubset(modelID: number, scene?: Scene, material?: Material) {\r\n        const currentMat = this.matIDNoConfig(modelID, material);\r\n        if (!this.selected[currentMat]) return;\r\n        if(scene) scene.remove(this.selected[currentMat].mesh);\r\n        delete this.selected[currentMat];\r\n    }\r\n\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        if (!this.isConfigValid(config)) return;\r\n        if (this.isPreviousSelection(config)) return;\r\n        if (this.isEasySelection(config)) return this.addToPreviousSelection(config);\r\n        this.updatePreviousSelection(config.scene, config);\r\n        return this.createSelectionInScene(config);\r\n    }\r\n\r\n    private createSelectionInScene(config: HighlightConfigOfModel) {\r\n        const filtered = this.filter(config);\r\n        const { geomsByMaterial, materials } = this.getGeomAndMat(filtered);\r\n        const hasDefaultMaterial = this.matID(config) == DEFAULT;\r\n        const geometry = merge(geomsByMaterial, hasDefaultMaterial);\r\n        const mats = hasDefaultMaterial ? materials : config.material;\r\n        //@ts-ignore\r\n        const mesh = new Mesh(geometry, mats);\r\n        this.selected[this.matID(config)].mesh = mesh;\r\n        //@ts-ignore\r\n        mesh.modelID = config.modelID;\r\n        config.scene.add(mesh);\r\n        return mesh;\r\n    }\r\n\r\n    private isConfigValid(config: HighlightConfigOfModel) {\r\n        return (\r\n            this.isValid(config.scene) &&\r\n            this.isValid(config.modelID) &&\r\n            this.isValid(config.ids) &&\r\n            this.isValid(config.removePrevious)\r\n        );\r\n    }\r\n\r\n    private isValid(item: any) {\r\n        return item != undefined && item != null;\r\n    }\r\n\r\n    private getGeomAndMat(filtered: GeometriesByMaterials) {\r\n        const geomsByMaterial: BufferGeometry[] = [];\r\n        const materials: Material[] = [];\r\n        for (let matID in filtered) {\r\n            const geoms = Object.values(filtered[matID].geometries);\r\n            if (!geoms.length) continue;\r\n            materials.push(filtered[matID].material);\r\n            if (geoms.length > 1) geomsByMaterial.push(merge(geoms));\r\n            else geomsByMaterial.push(...geoms);\r\n        }\r\n        return { geomsByMaterial, materials };\r\n    }\r\n\r\n    private updatePreviousSelection(scene: Scene, config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        if (!previous) return this.newSelectionGroup(config);\r\n        scene.remove(previous.mesh);\r\n        config.removePrevious\r\n            ? (previous.ids = new Set(config.ids))\r\n            : config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private newSelectionGroup(config: HighlightConfigOfModel) {\r\n        this.selected[this.matID(config)] = {\r\n            ids: new Set(config.ids),\r\n            mesh: {} as Mesh\r\n        };\r\n    }\r\n\r\n    private isPreviousSelection(config: HighlightConfigOfModel) {\r\n        if (!this.selected[this.matID(config)]) return false;\r\n        if (this.containsIds(config)) return true;\r\n        const previousIds = this.selected[this.matID(config)].ids;\r\n        return JSON.stringify(config.ids) === JSON.stringify(previousIds);\r\n    }\r\n\r\n    private containsIds(config: HighlightConfigOfModel) {\r\n        const newIds = config.ids;\r\n        const previous = Array.from(this.selected[this.matID(config)].ids);\r\n        // prettier-ignore\r\n        //@ts-ignore\r\n        return newIds.every((i => v => (i = previous.indexOf(v, i) + 1))(0));\r\n    }\r\n\r\n    private addToPreviousSelection(config: HighlightConfigOfModel) {\r\n        const previous = this.selected[this.matID(config)];\r\n        const filtered = this.filter(config);\r\n        // prettier-ignore\r\n        const geometries = Object.values(filtered).map((i) => Object.values(i.geometries)).flat();\r\n        const previousGeom = previous.mesh.geometry;\r\n        previous.mesh.geometry = merge([previousGeom, ...geometries]);\r\n        config.ids.forEach((id) => previous.ids.add(id));\r\n    }\r\n\r\n    private filter(config: HighlightConfigOfModel) {\r\n        const items = this.state.models[config.modelID].items;\r\n        const filtered: GeometriesByMaterials = {};\r\n        for (let matID in items) {\r\n            filtered[matID] = {\r\n                material: items[matID].material,\r\n                geometries: this.filterGeometries(new Set(config.ids), items[matID].geometries)\r\n            };\r\n        }\r\n        return filtered;\r\n    }\r\n\r\n    private filterGeometries(selectedIDs: Set<number>, geometries: IdGeometries) {\r\n        const ids = Array.from(selectedIDs);\r\n        return Object.keys(geometries)\r\n            .filter((key) => ids.includes(parseInt(key, 10)))\r\n            .reduce((obj, key) => {\r\n                //@ts-ignore\r\n                return { ...obj, [key]: geometries[key] };\r\n            }, {});\r\n    }\r\n\r\n    private isEasySelection(config: HighlightConfigOfModel) {\r\n        const matID = this.matID(config);\r\n        const def = this.matIDNoConfig(config.modelID);\r\n        if (!config.removePrevious && matID != def && this.selected[matID]) return true;\r\n    }\r\n\r\n    private matID(config: HighlightConfigOfModel) {\r\n        if (!config.material) return DEFAULT;\r\n        const name = config.material.uuid || DEFAULT;\r\n        return name.concat(\" - \").concat(config.modelID.toString())\r\n    }\r\n\r\n    private matIDNoConfig(modelID: number, material?: Material) {\r\n        let name = DEFAULT;\r\n        if(material) name = material.uuid;\r\n        return name.concat(\" - \").concat(modelID.toString())\r\n    }\r\n}\r\n","export const IfcElements: {[key: string]: string} = {\r\n  '103090709': 'IFCPROJECT',\r\n  '4097777520': 'IFCSITE',\r\n  '4031249490': 'IFCBUILDING',\r\n  '3124254112': 'IFCBUILDINGSTOREY',\r\n  '3856911033': 'IFCSPACE',\r\n  '25142252': 'IFCCONTROLLER',\r\n  '32344328': 'IFCBOILER',\r\n  '76236018': 'IFCLAMP',\r\n  '90941305': 'IFCPUMP',\r\n  '177149247': 'IFCAIRTERMINALBOX',\r\n  '182646315': 'IFCFLOWINSTRUMENT',\r\n  '263784265': 'IFCFURNISHINGELEMENT',\r\n  '264262732': 'IFCELECTRICGENERATOR',\r\n  '277319702': 'IFCAUDIOVISUALAPPLIANCE',\r\n  '310824031': 'IFCPIPEFITTING',\r\n  '331165859': 'IFCSTAIR',\r\n  '342316401': 'IFCDUCTFITTING',\r\n  '377706215': 'IFCMECHANICALFASTENER',\r\n  '395920057': 'IFCDOOR',\r\n  '402227799': 'IFCELECTRICMOTOR',\r\n  '413509423': 'IFCSYSTEMFURNITUREELEMENT',\r\n  '484807127': 'IFCEVAPORATOR',\r\n  '486154966': 'IFCWINDOWSTANDARDCASE',\r\n  '629592764': 'IFCLIGHTFIXTURE',\r\n  '630975310': 'IFCUNITARYCONTROLELEMENT',\r\n  '635142910': 'IFCCABLECARRIERFITTING',\r\n  '639361253': 'IFCCOIL',\r\n  '647756555': 'IFCFASTENER',\r\n  '707683696': 'IFCFLOWSTORAGEDEVICE',\r\n  '738039164': 'IFCPROTECTIVEDEVICE',\r\n  '753842376': 'IFCBEAM',\r\n  '812556717': 'IFCTANK',\r\n  '819412036': 'IFCFILTER',\r\n  '843113511': 'IFCCOLUMN',\r\n  '862014818': 'IFCELECTRICDISTRIBUTIONBOARD',\r\n  '900683007': 'IFCFOOTING',\r\n  '905975707': 'IFCCOLUMNSTANDARDCASE',\r\n  '926996030': 'IFCVOIDINGFEATURE',\r\n  '979691226': 'IFCREINFORCINGBAR',\r\n  '987401354': 'IFCFLOWSEGMENT',\r\n  '1003880860': 'IFCELECTRICTIMECONTROL',\r\n  '1051757585': 'IFCCABLEFITTING',\r\n  '1052013943': 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n  '1062813311': 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n  '1073191201': 'IFCMEMBER',\r\n  '1095909175': 'IFCBUILDINGELEMENTPROXY',\r\n  '1156407060': 'IFCPLATESTANDARDCASE',\r\n  '1162798199': 'IFCSWITCHINGDEVICE',\r\n  '1329646415': 'IFCSHADINGDEVICE',\r\n  '1335981549': 'IFCDISCRETEACCESSORY',\r\n  '1360408905': 'IFCDUCTSILENCER',\r\n  '1404847402': 'IFCSTACKTERMINAL',\r\n  '1426591983': 'IFCFIRESUPPRESSIONTERMINAL',\r\n  '1437502449': 'IFCMEDICALDEVICE',\r\n  '1509553395': 'IFCFURNITURE',\r\n  '1529196076': 'IFCSLAB',\r\n  '1620046519': 'IFCTRANSPORTELEMENT',\r\n  '1634111441': 'IFCAIRTERMINAL',\r\n  '1658829314': 'IFCENERGYCONVERSIONDEVICE',\r\n  '1677625105': 'IFCCIVILELEMENT',\r\n  '1687234759': 'IFCPILE',\r\n  '1904799276': 'IFCELECTRICAPPLIANCE',\r\n  '1911478936': 'IFCMEMBERSTANDARDCASE',\r\n  '1945004755': 'IFCDISTRIBUTIONELEMENT',\r\n  '1973544240': 'IFCCOVERING',\r\n  '1999602285': 'IFCSPACEHEATER',\r\n  '2016517767': 'IFCROOF',\r\n  '2056796094': 'IFCAIRTOAIRHEATRECOVERY',\r\n  '2058353004': 'IFCFLOWCONTROLLER',\r\n  '2068733104': 'IFCHUMIDIFIER',\r\n  '2176052936': 'IFCJUNCTIONBOX',\r\n  '2188021234': 'IFCFLOWMETER',\r\n  '2223149337': 'IFCFLOWTERMINAL',\r\n  '2262370178': 'IFCRAILING',\r\n  '2272882330': 'IFCCONDENSER',\r\n  '2295281155': 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n  '2320036040': 'IFCREINFORCINGMESH',\r\n  '2347447852': 'IFCTENDONANCHOR',\r\n  '2391383451': 'IFCVIBRATIONISOLATOR',\r\n  '2391406946': 'IFCWALL',\r\n  '2474470126': 'IFCMOTORCONNECTION',\r\n  '2769231204': 'IFCVIRTUALELEMENT',\r\n  '2814081492': 'IFCENGINE',\r\n  '2906023776': 'IFCBEAMSTANDARDCASE',\r\n  '2938176219': 'IFCBURNER',\r\n  '2979338954': 'IFCBUILDINGELEMENTPART',\r\n  '3024970846': 'IFCRAMP',\r\n  '3026737570': 'IFCTUBEBUNDLE',\r\n  '3027962421': 'IFCSLABSTANDARDCASE',\r\n  '3040386961': 'IFCDISTRIBUTIONFLOWELEMENT',\r\n  '3053780830': 'IFCSANITARYTERMINAL',\r\n  '3079942009': 'IFCOPENINGSTANDARDCASE',\r\n  '3087945054': 'IFCALARM',\r\n  '3101698114': 'IFCSURFACEFEATURE',\r\n  '3127900445': 'IFCSLABELEMENTEDCASE',\r\n  '3132237377': 'IFCFLOWMOVINGDEVICE',\r\n  '3171933400': 'IFCPLATE',\r\n  '3221913625': 'IFCCOMMUNICATIONSAPPLIANCE',\r\n  '3242481149': 'IFCDOORSTANDARDCASE',\r\n  '3283111854': 'IFCRAMPFLIGHT',\r\n  '3296154744': 'IFCCHIMNEY',\r\n  '3304561284': 'IFCWINDOW',\r\n  '3310460725': 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n  '3319311131': 'IFCHEATEXCHANGER',\r\n  '3415622556': 'IFCFAN',\r\n  '3420628829': 'IFCSOLARDEVICE',\r\n  '3493046030': 'IFCGEOGRAPHICELEMENT',\r\n  '3495092785': 'IFCCURTAINWALL',\r\n  '3508470533': 'IFCFLOWTREATMENTDEVICE',\r\n  '3512223829': 'IFCWALLSTANDARDCASE',\r\n  '3518393246': 'IFCDUCTSEGMENT',\r\n  '3571504051': 'IFCCOMPRESSOR',\r\n  '3588315303': 'IFCOPENINGELEMENT',\r\n  '3612865200': 'IFCPIPESEGMENT',\r\n  '3640358203': 'IFCCOOLINGTOWER',\r\n  '3651124850': 'IFCPROJECTIONELEMENT',\r\n  '3694346114': 'IFCOUTLET',\r\n  '3747195512': 'IFCEVAPORATIVECOOLER',\r\n  '3758799889': 'IFCCABLECARRIERSEGMENT',\r\n  '3824725483': 'IFCTENDON',\r\n  '3825984169': 'IFCTRANSFORMER',\r\n  '3902619387': 'IFCCHILLER',\r\n  '4074379575': 'IFCDAMPER',\r\n  '4086658281': 'IFCSENSOR',\r\n  '4123344466': 'IFCELEMENTASSEMBLY',\r\n  '4136498852': 'IFCCOOLEDBEAM',\r\n  '4156078855': 'IFCWALLELEMENTEDCASE',\r\n  '4175244083': 'IFCINTERCEPTOR',\r\n  '4207607924': 'IFCVALVE',\r\n  '4217484030': 'IFCCABLESEGMENT',\r\n  '4237592921': 'IFCWASTETERMINAL',\r\n  '4252922144': 'IFCSTAIRFLIGHT',\r\n  '4278956645': 'IFCFLOWFITTING',\r\n  '4288193352': 'IFCACTUATOR',\r\n  '4292641817': 'IFCUNITARYEQUIPMENT'\r\n};\r\n","import { IdAttrName } from '../BaseDefinitions';\r\nimport { Node, IfcState, PropsNames, pName } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap';\r\nimport { IFCPROJECT } from 'web-ifc';\r\nimport { BufferGeometry } from 'three';\r\n\r\n/**\r\n * Contains the logic to get the properties of the items within an IFC model.\r\n */\r\nexport class PropertyManager {\r\n    private state: IfcState;\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        if (!geometry.index) return;\r\n        const geoIndex = geometry.index.array;\r\n        return geometry.attributes[IdAttrName].getX(geoIndex[3 * faceIndex]);\r\n    }\r\n\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.state.api.GetLine(modelID, id, recursive);\r\n    }\r\n\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        const items: number[] = [];\r\n        const lines = this.state.api.GetLineIDsWithType(modelID, type);\r\n        for (let i = 0; i < lines.size(); i++) items.push(lines.get(i));\r\n\r\n        if (verbose) return items.map((id) => this.state.api.GetLine(modelID, id));\r\n        return items;\r\n    }\r\n\r\n    getPropertySets(modelID: number, elementID: number, recursive = false) {\r\n        const propSetIds = this.getAllRelatedItemsOfType(modelID, elementID, PropsNames.psets);\r\n        return propSetIds.map((id) => this.state.api.GetLine(modelID, id, recursive));\r\n    }\r\n\r\n    getTypeProperties(modelID: number, elementID: number, recursive = false) {\r\n        const typeId = this.getAllRelatedItemsOfType(modelID, elementID, PropsNames.type);\r\n        return typeId.map((id) => this.state.api.GetLine(modelID, id, recursive));\r\n    }\r\n\r\n    getSpatialStructure(modelID: number) {\r\n        const chunks = this.getSpatialTreeChunks(modelID);\r\n        const projectID = this.state.api.GetLineIDsWithType(modelID, IFCPROJECT).get(0);\r\n        const project = this.newIfcProject(projectID);\r\n        this.getSpatialNode(modelID, project, chunks);\r\n        return project;\r\n    }\r\n\r\n    private newIfcProject(id: number) {\r\n        return {\r\n            expressID: id,\r\n            type: 'IFCPROJECT',\r\n            children: []\r\n        };\r\n    }\r\n\r\n    private getSpatialTreeChunks(modelID: number) {\r\n        const treeChunks: any = {};\r\n        this.getChunks(modelID, treeChunks, PropsNames.aggregates);\r\n        this.getChunks(modelID, treeChunks, PropsNames.spatial);\r\n        return treeChunks;\r\n    }\r\n\r\n    private getChunks(modelID: number, chunks: any, propNames: pName) {\r\n        const relation = this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        for (let i = 0; i < relation.size(); i++) {\r\n            const rel = this.state.api.GetLine(modelID, relation.get(i), false);\r\n            const relating = rel[propNames.relating].value;\r\n            const related = rel[propNames.related].map((r: any) => r.value);\r\n            if(chunks[relating] == undefined){\r\n                chunks[relating] = related;\r\n            }\r\n            else{\r\n                 chunks[relating] = chunks[relating].concat(related);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getSpatialNode(modelID: number, node: Node, treeChunks: any) {\r\n        this.getChildren(modelID, node, treeChunks, PropsNames.aggregates);\r\n        this.getChildren(modelID, node, treeChunks, PropsNames.spatial);\r\n    }\r\n\r\n    private getChildren(modelID: number, node: Node, treeChunks: any, propNames: pName) {\r\n        const children = treeChunks[node.expressID];\r\n        if (children == undefined || children == null) return;\r\n        const prop = propNames.key as keyof Node;\r\n        (node[prop] as Node[]) = children.map((child: number) => {\r\n            const node = this.newNode(modelID, child);\r\n            this.getSpatialNode(modelID, node, treeChunks);\r\n            return node;\r\n        });\r\n    }\r\n\r\n    private newNode(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id].toString();\r\n        const typeName = IfcElements[typeID];\r\n        return {\r\n            expressID: id,\r\n            type: typeName,\r\n            children: [],\r\n        };\r\n    }\r\n\r\n    private getAllRelatedItemsOfType(modelID: number, id: number, propNames: pName) {\r\n        const lines = this.state.api.GetLineIDsWithType(modelID, propNames.name);\r\n        const IDs: number[] = [];\r\n        for (let i = 0; i < lines.size(); i++) {\r\n            const rel = this.state.api.GetLine(modelID, lines.get(i));\r\n            const isRelated = this.isRelated(id, rel, propNames); \r\n            if (isRelated) this.getRelated(rel, propNames, IDs);\r\n        }\r\n        return IDs;\r\n    }\r\n\r\n    private getRelated(rel: any, propNames: pName, IDs: number[]) {\r\n        const element = rel[propNames.relating];\r\n        if (!Array.isArray(element)) IDs.push(element.value);\r\n        else element.forEach((ele) => IDs.push(ele.value));\r\n    }\r\n\r\n    private isRelated(id: number, rel: any, propNames: pName) {\r\n        const relatedItems = rel[propNames.related];\r\n        if (Array.isArray(relatedItems)) {\r\n            const values = relatedItems.map((item) => item.value);\r\n            return values.includes(id);\r\n        }\r\n        return relatedItems.value === id;\r\n    }\r\n}\r\n","import { IfcState, SelectedItems } from '../BaseDefinitions';\r\nimport { IfcElements } from './IFCElementsMap'\r\n\r\n/**\r\n * Contains the logic to manage the type (e. g. IfcWall, IfcWindow, IfcDoor) of\r\n * all the items within an IFC file.\r\n */\r\nexport class TypeManager {\r\n    private state: IfcState;\r\n\r\n    constructor(state: IfcState) {\r\n        this.state = state;\r\n    }\r\n\r\n    getAllTypes(){\r\n        for(let modelID in this.state.models){\r\n            const types = this.state.models[modelID].types;\r\n            if(Object.keys(types).length == 0) this.getAllTypesOfModel(parseInt(modelID));\r\n        }\r\n    }\r\n\r\n    getAllTypesOfModel(modelID: number) {\r\n        this.state.models[modelID].types;\r\n        const elements = Object.keys(IfcElements).map((e) => parseInt(e));\r\n        const types = this.state.models[modelID].types; \r\n        elements.forEach((type) => {\r\n            const lines = this.state.api.GetLineIDsWithType(modelID, type);\r\n            //@ts-ignore\r\n            for (let i = 0; i < lines.size(); i++) types[lines.get(i)] = type;\r\n        });\r\n    }\r\n}\r\n","import { BufferGeometry, Group, Material, Mesh, Scene } from 'three';\r\nimport { HighlightConfig } from '../BaseDefinitions';\r\nimport { IFCManager } from './IFCManager';\r\n\r\nlet modelIdCounter = 0;\r\n\r\n/**\r\n * Represents an IFC model. This object is returned by the `IFCLoader` after loading an IFC.\r\n * @mesh the `THREE.Mesh` that contains the geometry of the IFC.\r\n * @modelID the ID of the IFC model.\r\n */\r\nexport class IFCModel extends Group {\r\n    modelID = modelIdCounter++\r\n\r\n    constructor(public mesh: Mesh, private ifc: IFCManager) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Sets the relative path of web-ifc.wasm file in the project.\r\n     * Beware: you **must** serve this file in your page; this means\r\n     * that you have to copy this files from *node_modules/web-ifc*\r\n     * to your deployment directory.\r\n     *\r\n     * If you don't use this methods,\r\n     * IFC.js assumes that you are serving it in the root directory.\r\n     *\r\n     * Example if web-ifc.wasm is in dist/wasmDir:\r\n     * ```js\r\n     * ifcLoader.setWasmPath(\"dist/wasmDir/\");\r\n     * ```\r\n     *\r\n     * @path The relative path to web-ifc.wasm.\r\n     */\r\n    setWasmPath(path: string) {\r\n        this.ifc.setWasmPath(path);\r\n    }\r\n\r\n    /**\r\n     * Closes the specified model and deletes it from the scene\r\n     * @scene The scene where the model is (if it's located in a scene).\r\n     */\r\n    close(scene?: Scene) {\r\n        this.ifc.close(this.modelID, scene);\r\n    }\r\n\r\n    /**\r\n     * Gets the **Express ID** to which the given face belongs.\r\n     * This ID uniquely identifies this entity within this IFC file.\r\n     * @geometry The geometry of the IFC model.\r\n     * @faceIndex The index of the face of a geometry.You can easily get this index using the [Raycaster](https://threejs.org/docs/#api/en/core/Raycaster).\r\n     */\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        return this.ifc.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    /**\r\n     * Returns all items of the specified type. You can import\r\n     * the types from *web-ifc*.\r\n     *\r\n     * Example to get all the standard walls of a project:\r\n     * ```js\r\n     * import { IFCWALLSTANDARDCASE } from 'web-ifc';\r\n     * const walls = ifcLoader.getAllItemsOfType(IFCWALLSTANDARDCASE);\r\n     * ```\r\n     * @type The type of IFC items to get.\r\n     * @verbose If false (default), this only gets IDs. If true, this also gets the native properties of all the fetched items.\r\n     */\r\n    getAllItemsOfType(type: number, verbose: boolean) {\r\n        return this.ifc.getAllItemsOfType(this.modelID, type, verbose);\r\n    }\r\n\r\n    /**\r\n     * Gets the native properties of the given element.\r\n     * @id The express ID of the element.\r\n     * @recursive Wether you want to get the information of the referenced elements recursively.\r\n     */\r\n    getItemProperties(id: number, recursive = false) {\r\n        return this.ifc.getItemProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the [property sets](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifckernel/lexical/ifcpropertyset.htm)\r\n     * assigned to the given element.\r\n     * @id The express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getPropertySets(id: number, recursive = false) {\r\n        return this.ifc.getPropertySets(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the properties of the type assigned to the element.\r\n     * For example, if applied to a wall (IfcWall), this would get back the information\r\n     * contained in the IfcWallType assigned to it, if any.\r\n     * @id The express ID of the element.\r\n     * @recursive If true, this gets the native properties of the referenced elements recursively.\r\n     */\r\n    getTypeProperties(id: number, recursive = false) {\r\n        return this.ifc.getTypeProperties(this.modelID, id, recursive);\r\n    }\r\n\r\n    /**\r\n     * Gets the ifc type of the specified item.\r\n     * @id The express ID of the element.\r\n     */\r\n    getIfcType(id: number) {\r\n        return this.ifc.getIfcType(this.modelID, id);\r\n    }\r\n\r\n    /**\r\n     * Gets the spatial structure of the project. The\r\n     * [spatial structure](https://standards.buildingsmart.org/IFC/DEV/IFC4_2/FINAL/HTML/schema/ifcproductextension/lexical/ifcspatialstructureelement.htm)\r\n     * is the hierarchical structure that organizes every IFC project (all physical items\r\n     * are referenced to an element of the spatial structure). It is formed by\r\n     * one IfcProject that contains one or more IfcSites, that contain one or more\r\n     * IfcBuildings, that contain one or more IfcBuildingStoreys, that contain\r\n     * one or more IfcSpaces.\r\n     */\r\n    getSpatialStructure() {\r\n        return this.ifc.getSpatialStructure(this.modelID);\r\n    }\r\n\r\n    /**\r\n     * Gets the mesh of the specified subset.\r\n     * @material The material assigned to the subset, if any.\r\n     */\r\n    getSubset(material?: Material) {\r\n        return this.ifc.getSubset(this.modelID, material);\r\n    }\r\n\r\n    /**\r\n     * Removes the specified subset.\r\n     * @scene The scene where the subset is.\r\n     * @material The material assigned to the subset, if any.\r\n     */\r\n    removeSubset(scene?: Scene, material?: Material) {\r\n        this.ifc.removeSubset(this.modelID, scene, material);\r\n    }\r\n\r\n    /**\r\n     * Creates a new geometric subset.\r\n     * @config A configuration object with the following options:\r\n     * - **scene**: the scene where the model is located.\r\n     * - **modelID**: the ID of the model.\r\n     * - **ids**: the IDs of the items of the model that will conform the subset.\r\n     * - **removePrevious**: wether to remove the previous subset of this model with this material.\r\n     * - **material**: (optional) wether to apply a material to the subset\r\n     */\r\n    createSubset(config: HighlightConfig) {\r\n        const modelConfig = {...config, modelID: this.modelID};\r\n        return this.ifc.createSubset(modelConfig);\r\n    }\r\n}\r\n","import * as WebIFC from 'web-ifc';\r\nimport { IFCParser } from './IFCParser';\r\nimport { SubsetManager } from './SubsetManager';\r\nimport { PropertyManager } from './PropertyManager';\r\nimport { IfcElements } from './IFCElementsMap';\r\nimport { TypeManager } from './TypeManager';\r\nimport { HighlightConfig, HighlightConfigOfModel, IfcState, Node } from '../BaseDefinitions';\r\nimport { BufferGeometry, Material, Scene } from 'three';\r\nimport { IFCModel } from './IFCModel';\r\n\r\n/**\r\n * Contains all the logic to work with the loaded IFC files (select, edit, etc).\r\n */\r\nexport class IFCManager {\r\n    private state: IfcState = { models: [], api: new WebIFC.IfcAPI() };\r\n    private parser = new IFCParser(this.state);\r\n    private subsets = new SubsetManager(this.state);\r\n    private properties = new PropertyManager(this.state);\r\n    private types = new TypeManager(this.state);\r\n\r\n    async parse(buffer: ArrayBuffer) {\r\n        const mesh = await this.parser.parse(buffer);\r\n        this.types.getAllTypes();\r\n        return new IFCModel(mesh, this);\r\n    }\r\n\r\n    setWasmPath(path: string) {\r\n        this.state.api.SetWasmPath(path);\r\n    }\r\n\r\n    setupThreeMeshBVH(computeBoundsTree: any, disposeBoundsTree: any, acceleratedRaycast: any ){\r\n        this.parser.initializeMeshBVH(computeBoundsTree, disposeBoundsTree, acceleratedRaycast);\r\n    }\r\n\r\n    close(modelID: number, scene?: Scene) {\r\n        this.state.api.CloseModel(modelID);\r\n        if (scene) scene.remove(this.state.models[modelID].mesh);\r\n        delete this.state.models[modelID];\r\n    }\r\n\r\n    getExpressId(geometry: BufferGeometry, faceIndex: number) {\r\n        return this.properties.getExpressId(geometry, faceIndex);\r\n    }\r\n\r\n    getAllItemsOfType(modelID: number, type: number, verbose: boolean) {\r\n        return this.properties.getAllItemsOfType(modelID, type, verbose);\r\n    }\r\n\r\n    getItemProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getItemProperties(modelID, id, recursive);\r\n    }\r\n\r\n    getPropertySets(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getPropertySets(modelID, id, recursive);\r\n    }\r\n\r\n    getTypeProperties(modelID: number, id: number, recursive = false) {\r\n        return this.properties.getTypeProperties(modelID, id, recursive);\r\n    }\r\n\r\n    getIfcType(modelID: number, id: number) {\r\n        const typeID = this.state.models[modelID].types[id];\r\n        return IfcElements[typeID.toString()];\r\n    }\r\n\r\n    getSpatialStructure(modelID: number) {\r\n        return this.properties.getSpatialStructure(modelID);\r\n    }\r\n\r\n    getSubset(modelID: number, material?: Material) {\r\n        return this.subsets.getSubset(modelID, material);\r\n    }\r\n\r\n    removeSubset(modelID: number, scene?: Scene, material?: Material) {\r\n        this.subsets.removeSubset(modelID, scene, material);\r\n    }\r\n\r\n    createSubset(config: HighlightConfigOfModel) {\r\n        return this.subsets.createSubset(config);\r\n    }\r\n}\r\n","import { IFCManager } from './IFC/Components/IFCManager';\r\nimport { FileLoader, Loader, LoadingManager } from 'three';\r\nimport { IFCModel } from './IFC/Components/IFCModel';\r\n\r\nclass IFCLoader extends Loader {\r\n    ifcManager: IFCManager;\r\n\r\n    constructor(manager?: LoadingManager) {\r\n        super(manager);\r\n        this.ifcManager = new IFCManager();\r\n    }\r\n\r\n    load(\r\n        url: any,\r\n        onLoad: (ifc: IFCModel) => void,\r\n        onProgress?: (event: ProgressEvent) => void,\r\n        onError?: (event: ErrorEvent) => void\r\n    ) {\r\n        const scope = this;\r\n\r\n        const loader = new FileLoader(scope.manager);\r\n        loader.setPath(scope.path);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.setRequestHeader(scope.requestHeader);\r\n        loader.setWithCredentials(scope.withCredentials);\r\n        loader.load(\r\n            url,\r\n            async function (buffer) {\r\n                try {\r\n                    if (typeof buffer == 'string') {\r\n                        throw new Error('IFC files must be given as a buffer!');\r\n                    }\r\n                    onLoad(await scope.parse(buffer));\r\n                } catch (e) {\r\n                    if (onError) {\r\n                        onError(e);\r\n                    } else {\r\n                        console.error(e);\r\n                    }\r\n\r\n                    scope.manager.itemError(url);\r\n                }\r\n            },\r\n            onProgress,\r\n            onError\r\n        );\r\n    }\r\n\r\n    parse(buffer: ArrayBuffer) {\r\n        return this.ifcManager.parse(buffer);\r\n    }\r\n}\r\n\r\nexport { IFCLoader };\r\n"],"names":["WebIFC.IfcAPI"],"mappings":"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"}