export default class BinaryReader {
    constructor(binary) {
        this.offset = 0;
        this.binary = binary;
        this.view = new DataView(binary.buffer, binary.byteOffset);
    }
    atEnd() {
        return this.offset === this.binary.length;
    }
    readInt8() {
        const v = this.view.getInt8(this.offset);
        this.offset += 1;
        return v;
    }
    readInt32() {
        const v = this.view.getInt32(this.offset, true);
        this.offset += 4;
        return v;
    }
    readUInt32() {
        const v = this.view.getUint32(this.offset, true);
        this.offset += 4;
        return v;
    }
    readInt64() {
        const v = this.view.getBigInt64(this.offset, true);
        this.offset += 8;
        return v;
    }
    readFloat32() {
        const v = this.view.getFloat32(this.offset, true);
        this.offset += 4;
        return v;
    }
    readFloat32Array(length) {
        const data = [];
        const endOffset = this.offset + length;
        while (this.offset !== endOffset) {
            data.push(this.readFloat32());
        }
        return data;
    }
    readInt32Array(length) {
        const data = [];
        const endOffset = this.offset + length;
        while (this.offset !== endOffset) {
            data.push(this.readInt32());
        }
        return data;
    }
    readUInt32Array(length) {
        const data = [];
        const endOffset = this.offset + length;
        while (this.offset !== endOffset) {
            data.push(this.readUInt32());
        }
        return data;
    }
    readArrayAsString(length) {
        let string = '';
        for (let i = this.offset; i < this.offset + length; i++) {
            string += String.fromCharCode(this.binary[i]);
        }
        this.offset += length;
        return string;
    }
    readBytes(length) {
        const subArr = this.binary.subarray(this.offset, this.offset + length);
        this.offset += length;
        return subArr;
    }
}
//# sourceMappingURL=binary-reader.js.map