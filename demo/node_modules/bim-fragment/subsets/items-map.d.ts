import { BufferAttribute, BufferGeometry, Material } from 'three';
import { IFragment } from '../base-types';
export interface Indices {
    [materialID: number]: number[];
}
export interface IndexedGeometry extends BufferGeometry {
    index: BufferAttribute;
}
export interface Group {
    start: number;
    count: number;
    materialIndex?: number;
}
export interface IndicesMap {
    indexCache: Uint32Array;
    map: Map<number, Indices>;
}
export declare class ItemsMap {
    blocks: IndicesMap;
    constructor(fragment: IFragment);
    private generateGeometryIndexMap;
    getSubsetID(modelID: number, material?: Material, customID?: string): string;
    dispose(): void;
    private static initializeBlocks;
    private fillBlocksMapWithGroupInfo;
    private getMaterialStore;
}
