import { BufferGeometry, Mesh } from 'three';
import { computeBoundsTree, disposeBoundsTree, acceleratedRaycast } from 'three-mesh-bvh';
// Source: https://github.com/gkjohnson/three-mesh-bvh
export class BVH {
    static apply(geometry) {
        if (!BVH.initialized) {
            BufferGeometry.prototype.computeBoundsTree = computeBoundsTree;
            BufferGeometry.prototype.disposeBoundsTree = disposeBoundsTree;
            Mesh.prototype.raycast = acceleratedRaycast;
            BVH.initialized = true;
        }
        geometry.computeBoundsTree();
    }
    static dispose(geometry) {
        geometry.disposeBoundsTree();
    }
}
BVH.initialized = false;
//# sourceMappingURL=bvh.js.map