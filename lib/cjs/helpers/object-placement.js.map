{"version":3,"sources":["../../../src/helpers/object-placement.ts"],"names":["getGlobalRotation","objectPlacement","console","log","RelativePlacement","getGlobalPosition","globalPlacement","relativeCoordinates","Location","Coordinates","relativePlacement","undefined","length","x","round","value","y","z","getAbsolutePlacement","PlacementRelTo","num","Math"],"mappings":";;;;;;;;AAEO,SAASA,iBAAT,CAA2BC,eAA3B,EAA8D;AAEjE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACG,iBAA5B,EAJiE,CAKjE;AACA;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,iBAAT,CAA2BJ,eAA3B,EAA+F;AAAA;;AAAA,MAA9CK,eAA8C,uEAAlB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAkB;AAElG;AACA,MAAMC,mBAAmB,GAAGN,eAAH,aAAGA,eAAH,gDAAGA,eAAe,CAAEG,iBAApB,oFAAG,sBAAoCI,QAAvC,2DAAG,uBAA8CC,WAA1E;AACA,MAAIC,iBAA2B,GAAG,EAAlC;;AACA,MAAGH,mBAAmB,IAAII,SAAvB,IAAoCJ,mBAAmB,CAACK,MAApB,IAA8B,CAArE,EAAuE;AACnE,QAAMC,CAAC,GAAGC,KAAK,CAACP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBQ,KAAxB,CAAf;AACA,QAAMC,CAAC,GAAGF,KAAK,CAACP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBQ,KAAxB,CAAf;AACA,QAAME,CAAC,GAAGH,KAAK,CAACP,mBAAmB,CAAC,CAAD,CAAnB,CAAuBQ,KAAxB,CAAf;AACAL,IAAAA,iBAAiB,GAAG,CAACG,CAAD,EAAGG,CAAH,EAAKC,CAAL,CAApB;AACH,GAViG,CAYlG;;;AACAX,EAAAA,eAAe,GAAGY,oBAAoB,CAACR,iBAAD,EAAoBJ,eAApB,CAAtC,CAbkG,CAelG;;AACA,MAAGL,eAAe,CAACkB,cAAnB,EAAkC;AAC9B,WAAOd,iBAAiB,CAACJ,eAAe,CAACkB,cAAjB,EAAiCb,eAAjC,CAAxB;AACH;;AAED,SAAOA,eAAP;AACH;;AAED,SAASY,oBAAT,CAA8BR,iBAA9B,EAA2DJ,eAA3D,EAAqF;AACjF,MAAMO,CAAC,GAAGH,iBAAiB,CAAC,CAAD,CAAjB,GAAqBJ,eAAe,CAAC,CAAD,CAA9C;AACA,MAAMU,CAAC,GAAGN,iBAAiB,CAAC,CAAD,CAAjB,GAAqBJ,eAAe,CAAC,CAAD,CAA9C;AACA,MAAMW,CAAC,GAAGP,iBAAiB,CAAC,CAAD,CAAjB,GAAqBJ,eAAe,CAAC,CAAD,CAA9C;AACA,SAAO,CAACO,CAAD,EAAGG,CAAH,EAAKC,CAAL,CAAP;AACH;;AAED,SAASH,KAAT,CAAeM,GAAf,EAA2B;AACvB,SAAOC,IAAI,CAACP,KAAL,CAAWM,GAAG,GAAG,MAAjB,IAA2B,MAAlC;AACH","sourcesContent":["import { IfcAxis2Placement3D, IfcLocalPlacement } from \"web-ifc\";\r\n\r\nexport function getGlobalRotation(objectPlacement: IfcLocalPlacement){\r\n\r\n    // Get relative placement\r\n    console.log(\"Relative placement\");\r\n    console.log(objectPlacement.RelativePlacement);\r\n    // console.log(Object.keys(objectPlacement));\r\n    // console.log(objectPlacement);\r\n}\r\n\r\n/**\r\n * Return the global position (coordinate) from the local one\r\n * @param objectPlacement is the object placement in the local coordinate system\r\n * @param globalPlacement is the global placement (being calculated as the tree is traversed)\r\n * @returns global coordinate\r\n */\r\nexport function getGlobalPosition(objectPlacement: any, globalPlacement: number[] = [0,0,0]): number[]{\r\n    \r\n    // Get relative placement\r\n    const relativeCoordinates = objectPlacement?.RelativePlacement?.Location?.Coordinates;\r\n    let relativePlacement: number[] = [];\r\n    if(relativeCoordinates != undefined && relativeCoordinates.length == 3){\r\n        const x = round(relativeCoordinates[0].value);\r\n        const y = round(relativeCoordinates[1].value);\r\n        const z = round(relativeCoordinates[2].value);\r\n        relativePlacement = [x,y,z];\r\n    }\r\n\r\n    // Update global placement\r\n    globalPlacement = getAbsolutePlacement(relativePlacement, globalPlacement);\r\n\r\n    // If related to something else, continue the journey\r\n    if(objectPlacement.PlacementRelTo){\r\n        return getGlobalPosition(objectPlacement.PlacementRelTo, globalPlacement);\r\n    }\r\n\r\n    return globalPlacement;\r\n}\r\n\r\nfunction getAbsolutePlacement(relativePlacement: number[], globalPlacement: number[]){\r\n    const x = relativePlacement[0]+globalPlacement[0];\r\n    const y = relativePlacement[1]+globalPlacement[1];\r\n    const z = relativePlacement[2]+globalPlacement[2];\r\n    return [x,y,z];\r\n}\r\n\r\nfunction round(num: number){\r\n    return Math.round(num * 100000) / 100000;\r\n}"],"file":"object-placement.js"}