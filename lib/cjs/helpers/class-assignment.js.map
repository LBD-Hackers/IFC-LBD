{"version":3,"sources":["../../../src/helpers/class-assignment.ts"],"names":["buildClassInstances","ifcAPI","modelID","ifcType","rdfClasses","includeSubTypes","properties","getAllItemsOfType","items","buildClassInstancesFromExpressIDs","expressIDs","graph","i","length","expressID","getItemProperties","GlobalId","URI","value","push"],"mappings":";;;;;;;;AAEA;;AACA;;;;;;SAEsBA,mB;;;;;iFAAf,iBAAmCC,MAAnC,EAA0DC,OAA1D,EAA2EC,OAA3E,EAA4FC,UAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkHC,YAAAA,eAAlH,2DAA6I,KAA7I;;AAAA,iBAESA,eAFT;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGS,4CAA2BJ,MAA3B,EAAmCC,OAAnC,EAA4CC,OAA5C,CAHT;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAISF,MAAM,CAACK,UAAP,CAAkBC,iBAAlB,CAAoCL,OAApC,EAA6CC,OAA7C,EAAsD,KAAtD,CAJT;;AAAA;AAAA;;AAAA;AAECK,YAAAA,KAFD;AAAA,6CAMIC,iCAAiC,CAACR,MAAD,EAASC,OAAT,EAAkBM,KAAlB,EAAyBJ,UAAzB,CANrC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeK,iC;;;;;+FAAf,kBAAiDR,MAAjD,EAAwEC,OAAxE,EAAyFQ,UAAzF,EAA+GN,UAA/G;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEGO,YAAAA,KAFH,GAEW,EAFX;AAIMC,YAAAA,CAJN,GAIU,CAJV;;AAAA;AAAA,kBAIaA,CAAC,GAAGF,UAAU,CAACG,MAJ5B;AAAA;AAAA;AAAA;;AAKOC,YAAAA,SALP,GAKmBJ,UAAU,CAACE,CAAD,CAL7B;AAAA;AAAA,mBAM4BX,MAAM,CAACK,UAAP,CAAkBS,iBAAlB,CAAoCb,OAApC,EAA6CY,SAA7C,CAN5B;;AAAA;AAAA;AAMSE,YAAAA,QANT,yBAMSA,QANT;AAOOC,YAAAA,GAPP,GAOa,mCAAkBD,QAAQ,CAACE,KAA3B,CAPb,EASC;;AACAP,YAAAA,KAAK,CAACQ,IAAN,CAAW;AACP,qBAAOF,GADA;AAEP,uBAASb;AAFF,aAAX;;AAVD;AAIoCQ,YAAAA,CAAC,EAJrC;AAAA;AAAA;;AAAA;AAAA,8CAgBID,KAhBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import * as WebIFC from \"web-ifc/web-ifc-api.js\";\r\nimport { TreeNode } from \"./BaseDefinitions\";\r\nimport { getAllItemsOfTypeOrSubtype } from \"./item-search\";\r\nimport { defaultURIBuilder } from \"./uri-builder\";\r\n\r\nexport async function buildClassInstances(ifcAPI: WebIFC.IfcAPI, modelID: number, ifcType: number, rdfClasses: string[], includeSubTypes: boolean = false): Promise<any[]>{\r\n\r\n    let items = includeSubTypes \r\n        ? await getAllItemsOfTypeOrSubtype(ifcAPI, modelID, ifcType) \r\n        : await ifcAPI.properties.getAllItemsOfType(modelID, ifcType, false);\r\n\r\n    return buildClassInstancesFromExpressIDs(ifcAPI, modelID, items, rdfClasses);\r\n    \r\n}\r\n\r\nexport async function buildClassInstancesFromExpressIDs(ifcAPI: WebIFC.IfcAPI, modelID: number, expressIDs: number[], rdfClasses: string[]){\r\n\r\n    const graph = [];\r\n\r\n    for (let i = 0; i < expressIDs.length; i++) {\r\n        const expressID = expressIDs[i];\r\n        const { GlobalId } = await ifcAPI.properties.getItemProperties(modelID, expressID);\r\n        const URI = defaultURIBuilder(GlobalId.value);\r\n\r\n        // Push spaces\r\n        graph.push({\r\n            \"@id\": URI,\r\n            \"@type\": rdfClasses\r\n        });\r\n    }\r\n\r\n    return graph;\r\n\r\n}"],"file":"class-assignment.js"}