{"version":3,"sources":["../../../src/parsers/property-parser.ts"],"names":["PropertyParser","verbose","console","log","time","getAllRelevantItems","itemIDs","timeEnd","jsonLDObject","push","getElementProperties","getTripleCount","tripleCount","getTriples","arr","ifcAPI","modelID","IFCPRODUCT","IFCGROUP","graph","i","length","expressID","properties","getItemProperties","name","Name","value","globalId","GlobalId","description","Description","URI","obj","undefined","type","IFCPORT","IFCDISTRIBUTIONPORT","FlowDirection","Parser"],"mappings":"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","sourcesContent":["import {\r\n    IFCDISTRIBUTIONPORT,\r\n    IFCDISTRIBUTIONSYSTEM,\r\n    IFCELEMENT,\r\n    IFCGROUP,\r\n    IFCOBJECT,\r\n    IFCPORT,\r\n    IFCPRODUCT,\r\n    IFCSYSTEM\r\n} from 'web-ifc';\r\nimport { Parser } from \"./parser\";\r\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\r\nimport { getAllItemsOfTypeOrSubtype } from \"../helpers/item-search\";\r\nimport { defaultURIBuilder } from '../helpers/uri-builder';\r\nimport { decodeString } from '../helpers/character-decode';\r\n\r\nexport class PropertyParser extends Parser{\r\n\r\n    public itemIDs: number[];    // Holds expressIDs for all relevant items\r\n\r\n    public async doParse(): Promise<JSONLD|string>{\r\n\r\n        this.verbose && console.log(\"Started PROPERTIES parsing\");\r\n        this.verbose && console.log(\"\");\r\n        console.time(\"Finished PROPERTIES parsing\");\r\n\r\n        this.verbose && console.log(\"## PRE STEPS ##\");\r\n        this.verbose && console.time(\"Getting element and group IDs\");\r\n        this.itemIDs = await this.getAllRelevantItems();\r\n        this.verbose && console.timeEnd(\"Getting element and group IDs\");\r\n\r\n        this.verbose && console.log(\"## STEP 1: DIRECT PROPERTIES ##\");\r\n        this.verbose && console.time(\"1/1: Finding direct properties\");\r\n        this.jsonLDObject[\"@graph\"].push(...(await this.getElementProperties()));\r\n        this.verbose && console.timeEnd(\"1/1: Finding direct properties\");\r\n        console.log(\"\");\r\n\r\n        console.timeEnd(\"Finished PROPERTIES parsing\");\r\n\r\n        if(this.verbose){\r\n            const tripleCount = await this.getTripleCount();\r\n            console.log(\"Total triples: \" + tripleCount);\r\n        }\r\n\r\n        return await this.getTriples();\r\n\r\n    }\r\n\r\n    async getAllRelevantItems(): Promise<number[]>{\r\n        let arr = [];\r\n        arr.push(...await getAllItemsOfTypeOrSubtype(this.ifcAPI, this.modelID, IFCPRODUCT));   // Elements, spaces etc.\r\n        arr.push(...await getAllItemsOfTypeOrSubtype(this.ifcAPI, this.modelID, IFCGROUP));     // Systems etc.\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * DIRECT\r\n     */\r\n    async getElementProperties(){\r\n\r\n        const graph = [];\r\n\r\n        for (let i = 0; i < this.itemIDs.length; i++) {\r\n\r\n            const expressID = this.itemIDs[i];\r\n\r\n            const properties = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\r\n\r\n            // Example\r\n            // IfcCooledBeam {\r\n            //     expressID: 2701,\r\n            //     type: 4136498852,\r\n            //     GlobalId: { type: 1, value: '0MMKrFmIr4b8IaMYvCQ0YS' },\r\n            //     OwnerHistory: { type: 5, value: 42 },\r\n            //     Name: {\r\n            //       type: 1,\r\n            //       value: 'DID642-4-S2-RR-AV 1200x900-593 158 158 LE - TROX Technik (DEU) #s8hqpa4#:Standard:7295696'\r\n            //     },\r\n            //     Description: null,\r\n            //     ObjectType: {\r\n            //       type: 1,\r\n            //       value: 'DID642-4-S2-RR-AV 1200x900-593 158 158 LE - TROX Technik (DEU) #s8hqpa4#:Standard'\r\n            //     },\r\n            //     ObjectPlacement: { type: 5, value: 2699 },\r\n            //     Representation: { type: 5, value: 2689 },\r\n            //     Tag: { type: 1, value: '7295696' },\r\n            //     PredefinedType: { type: 3, value: 'ACTIVE' }\r\n            //   }\r\n            \r\n            const name = properties.Name?.value;\r\n            const globalId = properties.GlobalId.value;\r\n            const description = properties.Description?.value;\r\n\r\n            const URI = defaultURIBuilder(globalId);\r\n\r\n            let obj = {\"@id\": URI, \"ex:globalId\": globalId};\r\n\r\n            if(name != undefined) obj[\"rdfs:label\"] = decodeString(name);\r\n            if(description != undefined) obj[\"rdfs:description\"] = description;\r\n\r\n            // Specific for ports\r\n            if(properties.type == IFCPORT || properties.type == IFCDISTRIBUTIONPORT){\r\n                obj[\"ex:flowDirection\"] = properties.FlowDirection.value;\r\n            }\r\n\r\n            // // Specific for systems\r\n            // if(properties.type == IFCSYSTEM || properties.type == IFCDISTRIBUTIONSYSTEM){\r\n            //     console.log(properties);\r\n            // }\r\n\r\n            graph.push(obj);\r\n\r\n        }\r\n        \r\n\r\n        return graph;\r\n\r\n     }\r\n\r\n}"],"file":"property-parser.js"}