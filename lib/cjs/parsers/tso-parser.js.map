{"version":3,"sources":["../../../src/parsers/tso-parser.ts"],"names":["typeMappings","TSOParser","verbose","console","log","time","jsonLDObject","push","classify","timeEnd","connections","getTripleCount","tripleCount","getTriples","graph","typeIDs","Object","keys","i","length","typeID","tsoClass","ifcAPI","modelID","inputA","ifcRelationship","IFCRELCONNECTSPORTTOELEMENT","ifcSubjectRel","ifcTargetRel","rdfRelationship","oppoiteRelationship","Parser"],"mappings":"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","sourcesContent":["import { buildClassInstances } from \"../helpers/class-assignment\";\r\nimport { Parser } from \"./parser\";\r\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\r\nimport { buildRelOneToOne, Input } from \"../helpers/path-search\";\r\nimport { IFCRELCONNECTSPORTTOELEMENT } from \"web-ifc\";\r\n\r\nconst typeMappings: {[key: number]: string[]}  = {\r\n    3740093272: [\"tso:ConnectionPoint\"],\r\n    1945004755: [\"tso:Component\"]\r\n}\r\n\r\nexport class TSOParser extends Parser{\r\n\r\n    public async doParse(): Promise<JSONLD|string>{\r\n\r\n        this.verbose && console.log(\"Started TSO parsing\");\r\n        this.verbose && console.log(\"\");\r\n        console.time(\"Finished TSO parsing\");\r\n\r\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\r\n        this.verbose && console.time(\"1/2: Classifying TSO components\");\r\n        this.jsonLDObject[\"@graph\"].push(...(await this.classify()));\r\n        this.verbose && console.timeEnd(\"1/2: Classifying TSO components\");\r\n        this.verbose && console.log(\"\");\r\n\r\n        this.verbose && console.log(\"## STEP 2: CONNECTION POINTS ##\");\r\n        this.verbose && console.time(\"2/2: Finding port-port connections\");\r\n        this.jsonLDObject[\"@graph\"].push(...(await this.connections()));\r\n        this.verbose && console.timeEnd(\"2/2: Finding port-port connections\");\r\n\r\n        console.timeEnd(\"Finished TSO parsing\");\r\n\r\n        if(this.verbose){\r\n            const tripleCount = await this.getTripleCount();\r\n            console.log(\"Total triples: \" + tripleCount);\r\n        }\r\n\r\n        return await this.getTriples();\r\n\r\n    }\r\n\r\n    /**\r\n     * CLASS ASSIGNMENT\r\n     */\r\n    private async classify(): Promise<any[]>{\r\n\r\n        const graph = [];\r\n\r\n        const typeIDs = Object.keys(typeMappings);\r\n        for (let i = 0; i < typeIDs.length; i++) {\r\n            const typeID: any = typeIDs[i];\r\n            const tsoClass = typeMappings[typeID];\r\n            graph.push(...(await buildClassInstances(this.ifcAPI, this.modelID, typeID, tsoClass, true)));\r\n        }\r\n\r\n        return graph;\r\n\r\n    }\r\n\r\n    /**\r\n     * RELATIONSHIPS\r\n     */\r\n\r\n    // <component> tso:connectsAt <connectionPoint>\r\n    // <connectionPoint> tso:connectionPointOf <component>\r\n    private async connections(): Promise<any[]>{\r\n\r\n        let graph = [];\r\n\r\n        // UNTIL IFC 4, THE RELATIONSHIP IS EXPRESSED WITH IFCRELCONNECTSPORTTOELEMENT\r\n        const inputA: Input = {\r\n            ifcAPI: this.ifcAPI,\r\n            modelID: this.modelID,\r\n            ifcRelationship: IFCRELCONNECTSPORTTOELEMENT,\r\n            ifcSubjectRel: \"RelatedElement\",\r\n            ifcTargetRel: \"RelatingPort\",\r\n            rdfRelationship: \"tso:connectsAt\",\r\n            oppoiteRelationship: \"tso:connectionPointOf\"\r\n        }\r\n\r\n        graph.push(...(await buildRelOneToOne(inputA)));\r\n\r\n        return graph;\r\n\r\n    }\r\n\r\n}"],"file":"tso-parser.js"}