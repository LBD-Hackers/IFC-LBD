{"version":3,"sources":["../../../src/helpers/wkt-parser.ts"],"names":["parseWKT","wktString","toLocaleLowerCase","startsWith","parsePoint","point","split","trim","map","p","parseFloat"],"mappings":";;;;;;;AAAO,SAASA,QAAT,CAAkBC,SAAlB,EAAoC;AAEvCA,EAAAA,SAAS,GAAGA,SAAS,CAACC,iBAAV,EAAZ;;AAEA,MAAGD,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAH,EAAiC;AAC7B,WAAOC,UAAU,CAACH,SAAD,CAAjB;AACH;AAEJ;;AAED,SAASG,UAAT,CAAoBH,SAApB,EAAgD;AAC5C,QAAMI,KAAK,GAAGJ,SAAS,CAACK,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,EAAsCC,IAAtC,EAAd,CAD4C,CACiB;;AAC7D,SAAOF,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBE,GAAjB,CAAqBC,CAAC,IAAIC,UAAU,CAACD,CAAD,CAApC,CAAP;AACH","sourcesContent":["export function parseWKT(wktString: string){\n\n    wktString = wktString.toLocaleLowerCase();\n\n    if(wktString.startsWith(\"point\")){\n        return parsePoint(wktString);\n    }\n\n}\n\nfunction parsePoint(wktString: string): number[]{\n    const point = wktString.split(\"(\")[1].split(\")\")[0].trim();  // Ex [\"0 0 0\"]\n    return point.split(\" \").map(p => parseFloat(p));\n}"],"file":"wkt-parser.js"}