{"version":3,"file":"bundle.esm.min.js","sources":["../../node_modules/web-ifc/web-ifc-api.js","../../src/helpers/uri-builder.ts","../../src/helpers/path-search.ts","../../src/helpers/IfcTypesTree.ts","../../src/helpers/BaseDefinitions.ts","../../src/helpers/class-assignment.ts","../../node_modules/rdf-canonize/lib/IdentifierIssuer.js","../../node_modules/rdf-canonize/lib/MessageDigest.js","../../node_modules/rdf-canonize/lib/Permuter.js","../../node_modules/rdf-canonize/lib/NQuads.js","../../node_modules/rdf-canonize/lib/URDNA2015.js","../../node_modules/rdf-canonize/lib/URGNA2012.js","../../node_modules/rdf-canonize/lib/URDNA2015Sync.js","../../node_modules/rdf-canonize/lib/URGNA2012Sync.js","../../node_modules/rdf-canonize/lib/index.js","../../node_modules/rdf-canonize/index.js","../../node_modules/jsonld/lib/types.js","../../node_modules/jsonld/lib/graphTypes.js","../../node_modules/jsonld/lib/JsonLdError.js","../../node_modules/jsonld/lib/util.js","../../node_modules/jsonld/lib/constants.js","../../node_modules/jsonld/lib/RequestQueue.js","../../node_modules/jsonld/lib/url.js","../../node_modules/data-uri-to-buffer/dist/src/index.js","../../node_modules/fetch-blob/index.js","../../node_modules/node-fetch/dist/index.cjs","../../node_modules/event-target-shim/dist/event-target-shim.js","../../node_modules/abort-controller/dist/abort-controller.js","../../node_modules/ky/umd.js","../../node_modules/ky-universal/index.js","../../node_modules/@digitalbazaar/http-client/main.js","../../node_modules/jsonld/lib/documentLoaders/node.js","../../node_modules/jsonld/lib/platform.js","../../node_modules/yallist/yallist.js","../../node_modules/lru-cache/index.js","../../node_modules/jsonld/lib/ResolvedContext.js","../../node_modules/jsonld/lib/ContextResolver.js","../../node_modules/jsonld/lib/NQuads.js","../../node_modules/jsonld/lib/context.js","../../node_modules/jsonld/lib/expand.js","../../node_modules/jsonld/lib/nodeMap.js","../../node_modules/jsonld/lib/flatten.js","../../node_modules/jsonld/lib/fromRdf.js","../../node_modules/jsonld/lib/toRdf.js","../../node_modules/canonicalize/lib/canonicalize.js","../../node_modules/jsonld/lib/frame.js","../../node_modules/jsonld/lib/compact.js","../../node_modules/jsonld/lib/jsonld.js","../../node_modules/jsonld/lib/JsonLdProcessor.js","../../node_modules/jsonld/lib/index.js","../../src/parsers/parser.ts","../../src/parsers/bot-parser.ts","../../src/helpers/IfcElementsMap.ts","../../src/parsers/product-parser.ts","../../src/helpers/object-placement.ts","../../src/parsers/fso-parser.ts","../../src/index.ts"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc-mt.js\nvar require_web_ifc_mt = __commonJS({\n  \"dist/web-ifc-mt.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        function GROWABLE_HEAP_I8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP8;\n        }\n        function GROWABLE_HEAP_U8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU8;\n        }\n        function GROWABLE_HEAP_I16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP16;\n        }\n        function GROWABLE_HEAP_U16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU16;\n        }\n        function GROWABLE_HEAP_I32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP32;\n        }\n        function GROWABLE_HEAP_U32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU32;\n        }\n        function GROWABLE_HEAP_F32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF32;\n        }\n        function GROWABLE_HEAP_F64() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF64;\n        }\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          buffer = Module[\"buffer\"];\n        }\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n          var nodeWorkerThreads;\n          try {\n            nodeWorkerThreads = __require(\"worker_threads\");\n          } catch (e) {\n            console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');\n            throw e;\n          }\n          global.Worker = nodeWorkerThreads.Worker;\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          if (ENVIRONMENT_IS_NODE) {\n            read_ = function shell_read(filename, binary) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n            };\n            readBinary = function readBinary2(filename) {\n              var ret = read_(filename, true);\n              if (!ret.buffer) {\n                ret = new Uint8Array(ret);\n              }\n              assert(ret.buffer);\n              return ret;\n            };\n          } else {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        if (ENVIRONMENT_IS_NODE) {\n          if (typeof performance === \"undefined\") {\n            global.performance = __require(\"perf_hooks\").performance;\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        function warnOnce(text) {\n          if (!warnOnce.shown)\n            warnOnce.shown = {};\n          if (!warnOnce.shown[text]) {\n            warnOnce.shown[text] = 1;\n            err(text);\n          }\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var Atomics_load = Atomics.load;\n        var Atomics_store = Atomics.store;\n        var Atomics_compareExchange = Atomics.compareExchange;\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var wasmModule;\n        var threadInfoStruct = 0;\n        var selfThreadId = 0;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var str = \"\";\n          while (!(idx >= endIdx)) {\n            var u0 = heap[idx++ >>> 0];\n            if (!u0)\n              return str;\n            if (!(u0 & 128)) {\n              str += String.fromCharCode(u0);\n              continue;\n            }\n            var u1 = heap[idx++ >>> 0] & 63;\n            if ((u0 & 224) == 192) {\n              str += String.fromCharCode((u0 & 31) << 6 | u1);\n              continue;\n            }\n            var u2 = heap[idx++ >>> 0] & 63;\n            if ((u0 & 240) == 224) {\n              u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n            } else {\n              u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n            }\n            if (u0 < 65536) {\n              str += String.fromCharCode(u0);\n            } else {\n              var ch = u0 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var str = \"\";\n          for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n            var codeUnit = GROWABLE_HEAP_I16()[ptr + i * 2 >> 1];\n            if (codeUnit == 0)\n              break;\n            str += String.fromCharCode(codeUnit);\n          }\n          return str;\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            GROWABLE_HEAP_I16()[outPtr >> 1] = codeUnit;\n            outPtr += 2;\n          }\n          GROWABLE_HEAP_I16()[outPtr >> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = GROWABLE_HEAP_I32()[ptr + i * 4 >> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            GROWABLE_HEAP_I32()[outPtr >> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          GROWABLE_HEAP_I32()[outPtr >> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          GROWABLE_HEAP_I8().set(array, buffer2);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            GROWABLE_HEAP_I8()[buffer2++ >> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            GROWABLE_HEAP_I8()[buffer2 >> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          wasmMemory = Module[\"wasmMemory\"];\n          buffer = Module[\"buffer\"];\n        } else {\n          if (Module[\"wasmMemory\"]) {\n            wasmMemory = Module[\"wasmMemory\"];\n          } else {\n            wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536, \"shared\": true });\n            if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n              err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n              if (ENVIRONMENT_IS_NODE) {\n                console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\");\n              }\n              throw Error(\"bad memory\");\n            }\n          }\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATEXIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        if (ENVIRONMENT_IS_PTHREAD)\n          runtimeInitialized = true;\n        function preRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          assert(!ENVIRONMENT_IS_PTHREAD, \"addRunDependency cannot be used in a pthread worker\");\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          if (ENVIRONMENT_IS_PTHREAD)\n            console.error(\"Pthread aborting at \" + new Error().stack);\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = \"web-ifc-mt.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"pa\"];\n            wasmModule = module2;\n            if (!ENVIRONMENT_IS_PTHREAD) {\n              var numWorkersToLoad = PThread.unusedWorkers.length;\n              PThread.unusedWorkers.forEach(function(w) {\n                PThread.loadWasmModuleToWorker(w, function() {\n                  if (!--numWorkersToLoad)\n                    removeRunDependency(\"wasm-instantiate\");\n                });\n              });\n            }\n          }\n          if (!ENVIRONMENT_IS_PTHREAD) {\n            addRunDependency(\"wasm-instantiate\");\n          }\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"], output[\"module\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = { 41793: function($0, $1) {\n          setTimeout(function() {\n            _do_emscripten_dispatch_to_thread($0, $1);\n          }, 0);\n        }, 41871: function() {\n          throw \"Canceled!\";\n        } };\n        function initPthreadsJS() {\n          PThread.initRuntime();\n        }\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        Module[\"dynCall\"] = dynCall;\n        var __pthread_ptr = 0;\n        var __pthread_is_main_runtime_thread = 0;\n        var __pthread_is_main_browser_thread = 0;\n        function registerPthreadPtr(pthreadPtr, isMainBrowserThread, isMainRuntimeThread) {\n          pthreadPtr = pthreadPtr | 0;\n          isMainBrowserThread = isMainBrowserThread | 0;\n          isMainRuntimeThread = isMainRuntimeThread | 0;\n          __pthread_ptr = pthreadPtr;\n          __pthread_is_main_browser_thread = isMainBrowserThread;\n          __pthread_is_main_runtime_thread = isMainRuntimeThread;\n        }\n        Module[\"registerPthreadPtr\"] = registerPthreadPtr;\n        var ERRNO_CODES = { EPERM: 63, ENOENT: 44, ESRCH: 71, EINTR: 27, EIO: 29, ENXIO: 60, E2BIG: 1, ENOEXEC: 45, EBADF: 8, ECHILD: 12, EAGAIN: 6, EWOULDBLOCK: 6, ENOMEM: 48, EACCES: 2, EFAULT: 21, ENOTBLK: 105, EBUSY: 10, EEXIST: 20, EXDEV: 75, ENODEV: 43, ENOTDIR: 54, EISDIR: 31, EINVAL: 28, ENFILE: 41, EMFILE: 33, ENOTTY: 59, ETXTBSY: 74, EFBIG: 22, ENOSPC: 51, ESPIPE: 70, EROFS: 69, EMLINK: 34, EPIPE: 64, EDOM: 18, ERANGE: 68, ENOMSG: 49, EIDRM: 24, ECHRNG: 106, EL2NSYNC: 156, EL3HLT: 107, EL3RST: 108, ELNRNG: 109, EUNATCH: 110, ENOCSI: 111, EL2HLT: 112, EDEADLK: 16, ENOLCK: 46, EBADE: 113, EBADR: 114, EXFULL: 115, ENOANO: 104, EBADRQC: 103, EBADSLT: 102, EDEADLOCK: 16, EBFONT: 101, ENOSTR: 100, ENODATA: 116, ETIME: 117, ENOSR: 118, ENONET: 119, ENOPKG: 120, EREMOTE: 121, ENOLINK: 47, EADV: 122, ESRMNT: 123, ECOMM: 124, EPROTO: 65, EMULTIHOP: 36, EDOTDOT: 125, EBADMSG: 9, ENOTUNIQ: 126, EBADFD: 127, EREMCHG: 128, ELIBACC: 129, ELIBBAD: 130, ELIBSCN: 131, ELIBMAX: 132, ELIBEXEC: 133, ENOSYS: 52, ENOTEMPTY: 55, ENAMETOOLONG: 37, ELOOP: 32, EOPNOTSUPP: 138, EPFNOSUPPORT: 139, ECONNRESET: 15, ENOBUFS: 42, EAFNOSUPPORT: 5, EPROTOTYPE: 67, ENOTSOCK: 57, ENOPROTOOPT: 50, ESHUTDOWN: 140, ECONNREFUSED: 14, EADDRINUSE: 3, ECONNABORTED: 13, ENETUNREACH: 40, ENETDOWN: 38, ETIMEDOUT: 73, EHOSTDOWN: 142, EHOSTUNREACH: 23, EINPROGRESS: 26, EALREADY: 7, EDESTADDRREQ: 17, EMSGSIZE: 35, EPROTONOSUPPORT: 66, ESOCKTNOSUPPORT: 137, EADDRNOTAVAIL: 4, ENETRESET: 39, EISCONN: 30, ENOTCONN: 53, ETOOMANYREFS: 141, EUSERS: 136, EDQUOT: 19, ESTALE: 72, ENOTSUP: 138, ENOMEDIUM: 148, EILSEQ: 25, EOVERFLOW: 61, ECANCELED: 11, ENOTRECOVERABLE: 56, EOWNERDEAD: 62, ESTRPIPE: 135 };\n        function _emscripten_futex_wake(addr, count) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true || count < 0)\n            return -28;\n          if (count == 0)\n            return 0;\n          if (count >= 2147483647)\n            count = Infinity;\n          var mainThreadWaitAddress = Atomics.load(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2);\n          var mainThreadWoken = 0;\n          if (mainThreadWaitAddress == addr) {\n            var loadedAddr = Atomics.compareExchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, mainThreadWaitAddress, 0);\n            if (loadedAddr == mainThreadWaitAddress) {\n              --count;\n              mainThreadWoken = 1;\n              if (count <= 0)\n                return 1;\n            }\n          }\n          var ret = Atomics.notify(GROWABLE_HEAP_I32(), addr >> 2, count);\n          if (ret >= 0)\n            return ret + mainThreadWoken;\n          throw \"Atomics.notify returned an unexpected value \" + ret;\n        }\n        Module[\"_emscripten_futex_wake\"] = _emscripten_futex_wake;\n        function killThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! killThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in killThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.terminate();\n          PThread.freeThreadData(pthread);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker), 1);\n          pthread.worker.pthread = void 0;\n        }\n        function cancelThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cancelThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cancelThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.postMessage({ \"cmd\": \"cancel\" });\n        }\n        function cleanupThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cleanupThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cleanupThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          if (pthread) {\n            var worker = pthread.worker;\n            PThread.returnWorkerToPool(worker);\n          }\n        }\n        var PThread = { MAIN_THREAD_ID: 1, mainThreadInfo: { schedPolicy: 0, schedPrio: 0 }, unusedWorkers: [], runningWorkers: [], initMainThreadBlock: function() {\n          var pthreadPoolSize = navigator.hardwareConcurrency;\n          for (var i = 0; i < pthreadPoolSize; ++i) {\n            PThread.allocateUnusedWorker();\n          }\n        }, initRuntime: function() {\n          PThread.mainThreadBlock = _malloc(232);\n          for (var i = 0; i < 232 / 4; ++i)\n            GROWABLE_HEAP_U32()[PThread.mainThreadBlock / 4 + i] = 0;\n          GROWABLE_HEAP_I32()[PThread.mainThreadBlock + 12 >> 2] = PThread.mainThreadBlock;\n          var headPtr = PThread.mainThreadBlock + 156;\n          GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;\n          var tlsMemory = _malloc(512);\n          for (var i = 0; i < 128; ++i)\n            GROWABLE_HEAP_U32()[tlsMemory / 4 + i] = 0;\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 104 >> 2, tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 40 >> 2, PThread.mainThreadBlock);\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 44 >> 2, 42);\n          PThread.initShared();\n          registerPthreadPtr(PThread.mainThreadBlock, !ENVIRONMENT_IS_WORKER, 1);\n          _emscripten_register_main_browser_thread_id(PThread.mainThreadBlock);\n        }, initWorker: function() {\n          PThread.initShared();\n          readyPromiseResolve(Module);\n        }, initShared: function() {\n          PThread.mainThreadFutex = _main_thread_futex;\n        }, pthreads: {}, threadExitHandlers: [], setThreadStatus: function() {\n        }, runExitHandlers: function() {\n          while (PThread.threadExitHandlers.length > 0) {\n            PThread.threadExitHandlers.pop()();\n          }\n          if (ENVIRONMENT_IS_PTHREAD && threadInfoStruct)\n            ___pthread_tsd_run_dtors();\n        }, threadExit: function(exitCode) {\n          var tb = _pthread_self();\n          if (tb) {\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 4 >> 2, exitCode);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 0 >> 2, 1);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 60 >> 2, 1);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 64 >> 2, 0);\n            PThread.runExitHandlers();\n            _emscripten_futex_wake(tb + 0, 2147483647);\n            registerPthreadPtr(0, 0, 0);\n            threadInfoStruct = 0;\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exit\" });\n            }\n          }\n        }, threadCancel: function() {\n          PThread.runExitHandlers();\n          Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 4 >> 2, -1);\n          Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 0 >> 2, 1);\n          _emscripten_futex_wake(threadInfoStruct + 0, 2147483647);\n          threadInfoStruct = selfThreadId = 0;\n          registerPthreadPtr(0, 0, 0);\n          postMessage({ \"cmd\": \"cancelDone\" });\n        }, terminateAllThreads: function() {\n          for (var t in PThread.pthreads) {\n            var pthread = PThread.pthreads[t];\n            if (pthread && pthread.worker) {\n              PThread.returnWorkerToPool(pthread.worker);\n            }\n          }\n          PThread.pthreads = {};\n          for (var i = 0; i < PThread.unusedWorkers.length; ++i) {\n            var worker = PThread.unusedWorkers[i];\n            worker.terminate();\n          }\n          PThread.unusedWorkers = [];\n          for (var i = 0; i < PThread.runningWorkers.length; ++i) {\n            var worker = PThread.runningWorkers[i];\n            var pthread = worker.pthread;\n            PThread.freeThreadData(pthread);\n            worker.terminate();\n          }\n          PThread.runningWorkers = [];\n        }, freeThreadData: function(pthread) {\n          if (!pthread)\n            return;\n          if (pthread.threadInfoStruct) {\n            var tlsMemory = GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2];\n            GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2] = 0;\n            _free(tlsMemory);\n            _free(pthread.threadInfoStruct);\n          }\n          pthread.threadInfoStruct = 0;\n          if (pthread.allocatedOwnStack && pthread.stackBase)\n            _free(pthread.stackBase);\n          pthread.stackBase = 0;\n          if (pthread.worker)\n            pthread.worker.pthread = null;\n        }, returnWorkerToPool: function(worker) {\n          delete PThread.pthreads[worker.pthread.thread];\n          PThread.unusedWorkers.push(worker);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n          PThread.freeThreadData(worker.pthread);\n          worker.pthread = void 0;\n        }, receiveObjectTransfer: function(data) {\n        }, loadWasmModuleToWorker: function(worker, onFinishedLoading) {\n          worker.onmessage = function(e) {\n            var d = e[\"data\"];\n            var cmd = d[\"cmd\"];\n            if (worker.pthread)\n              PThread.currentProxiedOperationCallerThread = worker.pthread.threadInfoStruct;\n            if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n              var thread = PThread.pthreads[d.targetThread];\n              if (thread) {\n                thread.worker.postMessage(e.data, d[\"transferList\"]);\n              } else {\n                console.error('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n              }\n              PThread.currentProxiedOperationCallerThread = void 0;\n              return;\n            }\n            if (cmd === \"processQueuedMainThreadWork\") {\n              _emscripten_main_thread_process_queued_calls();\n            } else if (cmd === \"spawnThread\") {\n              spawnThread(e.data);\n            } else if (cmd === \"cleanupThread\") {\n              cleanupThread(d[\"thread\"]);\n            } else if (cmd === \"killThread\") {\n              killThread(d[\"thread\"]);\n            } else if (cmd === \"cancelThread\") {\n              cancelThread(d[\"thread\"]);\n            } else if (cmd === \"loaded\") {\n              worker.loaded = true;\n              if (onFinishedLoading)\n                onFinishedLoading(worker);\n              if (worker.runPthread) {\n                worker.runPthread();\n                delete worker.runPthread;\n              }\n            } else if (cmd === \"print\") {\n              out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"printErr\") {\n              err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"alert\") {\n              alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"exit\") {\n              var detached = worker.pthread && Atomics.load(GROWABLE_HEAP_U32(), worker.pthread.thread + 68 >> 2);\n              if (detached) {\n                PThread.returnWorkerToPool(worker);\n              }\n            } else if (cmd === \"cancelDone\") {\n              PThread.returnWorkerToPool(worker);\n            } else if (cmd === \"objectTransfer\") {\n              PThread.receiveObjectTransfer(e.data);\n            } else if (e.data.target === \"setimmediate\") {\n              worker.postMessage(e.data);\n            } else {\n              err(\"worker sent an unknown command \" + cmd);\n            }\n            PThread.currentProxiedOperationCallerThread = void 0;\n          };\n          worker.onerror = function(e) {\n            err(\"pthread sent an error! \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n          };\n          if (ENVIRONMENT_IS_NODE) {\n            worker.on(\"message\", function(data) {\n              worker.onmessage({ data });\n            });\n            worker.on(\"error\", function(data) {\n              worker.onerror(data);\n            });\n            worker.on(\"exit\", function(data) {\n            });\n          }\n          worker.postMessage({ \"cmd\": \"load\", \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"] || _scriptDir, \"wasmMemory\": wasmMemory, \"wasmModule\": wasmModule });\n        }, allocateUnusedWorker: function() {\n          var pthreadMainJs = locateFile(\"web-ifc-mt.worker.js\");\n          PThread.unusedWorkers.push(new Worker(pthreadMainJs));\n        }, getNewWorker: function() {\n          if (PThread.unusedWorkers.length == 0) {\n            PThread.allocateUnusedWorker();\n            PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n          }\n          if (PThread.unusedWorkers.length > 0)\n            return PThread.unusedWorkers.pop();\n          else\n            return null;\n        }, busySpinWait: function(msecs) {\n          var t = performance.now() + msecs;\n          while (performance.now() < t) {\n          }\n        } };\n        function establishStackSpace(stackTop, stackMax) {\n          _emscripten_stack_set_limits(stackTop, stackMax);\n          stackRestore(stackTop);\n        }\n        Module[\"establishStackSpace\"] = establishStackSpace;\n        function getNoExitRuntime() {\n          return noExitRuntime;\n        }\n        Module[\"getNoExitRuntime\"] = getNoExitRuntime;\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (ENVIRONMENT_IS_PTHREAD) {\n          _emscripten_get_now = function() {\n            return performance.now() - Module[\"__performance_now_clock_drift\"];\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          GROWABLE_HEAP_I32()[___errno_location() >> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          GROWABLE_HEAP_I32()[tp >> 2] = now / 1e3 | 0;\n          GROWABLE_HEAP_I32()[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        var ExceptionInfoAttrs = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\n        }\n        function _atexit(func, arg) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(1, 1, func, arg);\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\n          this.set_type = function(type) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2] = type;\n          };\n          this.get_type = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2];\n          };\n          this.set_destructor = function(destructor) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2];\n          };\n          this.set_refcount = function(refcount) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] = caught;\n          };\n          this.get_caught = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            Atomics.add(GROWABLE_HEAP_I32(), this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2, 1);\n          };\n          this.release_ref = function() {\n            var prev = Atomics.sub(GROWABLE_HEAP_I32(), this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2, 1);\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            GROWABLE_HEAP_I8()[ptr + size++] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === GROWABLE_HEAP_I8().buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            GROWABLE_HEAP_I8().set(contents, ptr);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          GROWABLE_HEAP_I32()[buf >> 2] = stat.dev;\n          GROWABLE_HEAP_I32()[buf + 4 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 8 >> 2] = stat.ino;\n          GROWABLE_HEAP_I32()[buf + 12 >> 2] = stat.mode;\n          GROWABLE_HEAP_I32()[buf + 16 >> 2] = stat.nlink;\n          GROWABLE_HEAP_I32()[buf + 20 >> 2] = stat.uid;\n          GROWABLE_HEAP_I32()[buf + 24 >> 2] = stat.gid;\n          GROWABLE_HEAP_I32()[buf + 28 >> 2] = stat.rdev;\n          GROWABLE_HEAP_I32()[buf + 32 >> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 40 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 44 >> 2] = tempI64[1];\n          GROWABLE_HEAP_I32()[buf + 48 >> 2] = 4096;\n          GROWABLE_HEAP_I32()[buf + 52 >> 2] = stat.blocks;\n          GROWABLE_HEAP_I32()[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 60 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 68 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 76 >> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 80 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 84 >> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = GROWABLE_HEAP_U8().slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = GROWABLE_HEAP_I8()[buf + len];\n          stringToUTF8(ret, buf, bufsize + 1);\n          GROWABLE_HEAP_I8()[buf + len] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];\n            var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];\n            var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_ioctl(fd, op, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(2, 1, fd, op, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                GROWABLE_HEAP_I32()[argp >> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(3, 1, path, flags, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](GROWABLE_HEAP_U32()[pointer >> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (GROWABLE_HEAP_U8()[c]) {\n            ret += embind_charCodes[GROWABLE_HEAP_U8()[c++]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = GROWABLE_HEAP_I8();\n            } else if (size === 2) {\n              heap = GROWABLE_HEAP_I16();\n            } else if (size === 4) {\n              heap = GROWABLE_HEAP_I32();\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(GROWABLE_HEAP_I32()[(firstElement >> 2) + i]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I8() : GROWABLE_HEAP_U8();\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I16() : GROWABLE_HEAP_U16();\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I32() : GROWABLE_HEAP_U32();\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F32()[pointer >> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F64()[pointer >> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return GROWABLE_HEAP_I8()[pointer];\n              } : function readU8FromPointer(pointer) {\n                return GROWABLE_HEAP_U8()[pointer];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return GROWABLE_HEAP_I16()[pointer >> 1];\n              } : function readU16FromPointer(pointer) {\n                return GROWABLE_HEAP_U16()[pointer >> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return GROWABLE_HEAP_I32()[pointer >> 2];\n              } : function readU32FromPointer(pointer) {\n                return GROWABLE_HEAP_U32()[pointer >> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = GROWABLE_HEAP_U32();\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || GROWABLE_HEAP_U8()[currentBytePtr] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[value + 4 + i]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  GROWABLE_HEAP_U8()[ptr + 4 + i] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  GROWABLE_HEAP_U8()[ptr + 4 + i] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return GROWABLE_HEAP_U16();\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return GROWABLE_HEAP_U32();\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function __emscripten_notify_thread_queue(targetThreadId, mainThreadId) {\n          if (targetThreadId == mainThreadId) {\n            postMessage({ \"cmd\": \"processQueuedMainThreadWork\" });\n          } else if (ENVIRONMENT_IS_PTHREAD) {\n            postMessage({ \"targetThread\": targetThreadId, \"cmd\": \"processThreadQueue\" });\n          } else {\n            var pthread = PThread.pthreads[targetThreadId];\n            var worker = pthread && pthread.worker;\n            if (!worker) {\n              return;\n            }\n            worker.postMessage({ \"cmd\": \"processThreadQueue\" });\n          }\n          return 1;\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          GROWABLE_HEAP_I32()[destructorsRef >> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(GROWABLE_HEAP_I32()[(argTypes >> 2) + i], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n        function _emscripten_check_blocking_allowed() {\n          if (ENVIRONMENT_IS_NODE)\n            return;\n          if (ENVIRONMENT_IS_WORKER)\n            return;\n          warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n        }\n        function _emscripten_conditional_set_current_thread_status(expectedStatus, newStatus) {\n          expectedStatus = expectedStatus | 0;\n          newStatus = newStatus | 0;\n        }\n        function _emscripten_futex_wait(addr, val, timeout) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true)\n            return -28;\n          if (!ENVIRONMENT_IS_WEB) {\n            var ret = Atomics.wait(GROWABLE_HEAP_I32(), addr >> 2, val, timeout);\n            if (ret === \"timed-out\")\n              return -73;\n            if (ret === \"not-equal\")\n              return -6;\n            if (ret === \"ok\")\n              return 0;\n            throw \"Atomics.wait returned an unexpected value \" + ret;\n          } else {\n            if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n              return -6;\n            }\n            var tNow = performance.now();\n            var tEnd = tNow + timeout;\n            var lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, addr);\n            while (1) {\n              tNow = performance.now();\n              if (tNow > tEnd) {\n                lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, 0);\n                return -73;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, 0);\n              if (lastAddr == 0) {\n                break;\n              }\n              _emscripten_main_thread_process_queued_calls();\n              if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n                return -6;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, addr);\n            }\n            return 0;\n          }\n        }\n        function _emscripten_is_main_browser_thread() {\n          return __pthread_is_main_browser_thread | 0;\n        }\n        function _emscripten_is_main_runtime_thread() {\n          return __pthread_is_main_runtime_thread | 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          GROWABLE_HEAP_U8().copyWithin(dest, src, src + num);\n        }\n        function _emscripten_proxy_to_main_thread_js(index, sync) {\n          var numCallArgs = arguments.length - 2;\n          var stack = stackSave();\n          var args = stackAlloc(numCallArgs * 8);\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            GROWABLE_HEAP_F64()[b + i] = arguments[2 + i];\n          }\n          var ret = _emscripten_run_in_main_runtime_thread_js(index, numCallArgs, args, sync);\n          stackRestore(stack);\n          return ret;\n        }\n        var _emscripten_receive_on_main_thread_js_callArgs = [];\n        var readAsmConstArgsArray = [];\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n          while (ch = GROWABLE_HEAP_U8()[sigPtr++]) {\n            var double = ch < 105;\n            if (double && buf & 1)\n              buf++;\n            readAsmConstArgsArray.push(double ? GROWABLE_HEAP_F64()[buf++ >> 1] : GROWABLE_HEAP_I32()[buf]);\n            ++buf;\n          }\n          return readAsmConstArgsArray;\n        }\n        function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n          _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i];\n          }\n          var isEmAsmConst = index < 0;\n          var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];\n          return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);\n        }\n        function _emscripten_get_heap_size() {\n          return GROWABLE_HEAP_U8().length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          if (requestedSize <= oldSize) {\n            return false;\n          }\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var JSEvents = { inEventHandler: 0, removeAllEventListeners: function() {\n          for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {\n            JSEvents._removeHandler(i);\n          }\n          JSEvents.eventHandlers = [];\n          JSEvents.deferredCalls = [];\n        }, registerRemoveEventListeners: function() {\n          if (!JSEvents.removeEventListenersRegistered) {\n            __ATEXIT__.push(JSEvents.removeAllEventListeners);\n            JSEvents.removeEventListenersRegistered = true;\n          }\n        }, deferredCalls: [], deferCall: function(targetFunction, precedence, argsList) {\n          function arraysHaveEqualContent(arrA, arrB) {\n            if (arrA.length != arrB.length)\n              return false;\n            for (var i2 in arrA) {\n              if (arrA[i2] != arrB[i2])\n                return false;\n            }\n            return true;\n          }\n          for (var i in JSEvents.deferredCalls) {\n            var call = JSEvents.deferredCalls[i];\n            if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n              return;\n            }\n          }\n          JSEvents.deferredCalls.push({ targetFunction, precedence, argsList });\n          JSEvents.deferredCalls.sort(function(x, y) {\n            return x.precedence < y.precedence;\n          });\n        }, removeDeferredCalls: function(targetFunction) {\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n              JSEvents.deferredCalls.splice(i, 1);\n              --i;\n            }\n          }\n        }, canPerformEventHandlerRequests: function() {\n          return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n        }, runDeferredCalls: function() {\n          if (!JSEvents.canPerformEventHandlerRequests()) {\n            return;\n          }\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            var call = JSEvents.deferredCalls[i];\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n            call.targetFunction.apply(null, call.argsList);\n          }\n        }, eventHandlers: [], removeAllHandlersOnTarget: function(target, eventTypeString) {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n              JSEvents._removeHandler(i--);\n            }\n          }\n        }, _removeHandler: function(i) {\n          var h = JSEvents.eventHandlers[i];\n          h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n          JSEvents.eventHandlers.splice(i, 1);\n        }, registerOrRemoveHandler: function(eventHandler) {\n          var jsEventHandler = function jsEventHandler2(event) {\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            JSEvents.runDeferredCalls();\n            eventHandler.handlerFunc(event);\n            JSEvents.runDeferredCalls();\n            --JSEvents.inEventHandler;\n          };\n          if (eventHandler.callbackfunc) {\n            eventHandler.eventListenerFunc = jsEventHandler;\n            eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n            JSEvents.eventHandlers.push(eventHandler);\n            JSEvents.registerRemoveEventListeners();\n          } else {\n            for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n              if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n                JSEvents._removeHandler(i--);\n              }\n            }\n          }\n        }, queueEventHandlerOnThread_iiii: function(targetThread, eventHandlerFunc, eventTypeId, eventData, userData) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          GROWABLE_HEAP_I32()[varargs >> 2] = eventTypeId;\n          GROWABLE_HEAP_I32()[varargs + 4 >> 2] = eventData;\n          GROWABLE_HEAP_I32()[varargs + 8 >> 2] = userData;\n          __emscripten_call_on_thread(0, targetThread, 637534208, eventHandlerFunc, eventData, varargs);\n          stackRestore(stackTop);\n        }, getTargetThreadForEventCallback: function(targetThread) {\n          switch (targetThread) {\n            case 1:\n              return 0;\n            case 2:\n              return PThread.currentProxiedOperationCallerThread;\n            default:\n              return targetThread;\n          }\n        }, getNodeNameForTarget: function(target) {\n          if (!target)\n            return \"\";\n          if (target == window)\n            return \"#window\";\n          if (target == screen)\n            return \"#screen\";\n          return target && target.nodeName ? target.nodeName : \"\";\n        }, fullscreenEnabled: function() {\n          return document.fullscreenEnabled || document.webkitFullscreenEnabled;\n        } };\n        function stringToNewUTF8(jsString) {\n          var length = lengthBytesUTF8(jsString) + 1;\n          var cString = _malloc(length);\n          stringToUTF8(jsString, cString, length);\n          return cString;\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          var targetCanvasPtr = 0;\n          if (targetCanvas) {\n            targetCanvasPtr = stringToNewUTF8(targetCanvas);\n          }\n          GROWABLE_HEAP_I32()[varargs >> 2] = targetCanvasPtr;\n          GROWABLE_HEAP_I32()[varargs + 4 >> 2] = width;\n          GROWABLE_HEAP_I32()[varargs + 8 >> 2] = height;\n          __emscripten_call_on_thread(0, targetThread, 657457152, 0, targetCanvasPtr, varargs);\n          stackRestore(stackTop);\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, targetCanvas, width, height) {\n          targetCanvas = targetCanvas ? UTF8ToString(targetCanvas) : \"\";\n          _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height);\n        }\n        function maybeCStringToJsString(cString) {\n          return cString > 2 ? UTF8ToString(cString) : cString;\n        }\n        var specialHTMLTargets = [0, typeof document !== \"undefined\" ? document : 0, typeof window !== \"undefined\" ? window : 0];\n        function findEventTarget(target) {\n          target = maybeCStringToJsString(target);\n          var domElement = specialHTMLTargets[target] || (typeof document !== \"undefined\" ? document.querySelector(target) : void 0);\n          return domElement;\n        }\n        function findCanvasEventTarget(target) {\n          return findEventTarget(target);\n        }\n        function _emscripten_set_canvas_element_size_calling_thread(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas)\n            return -4;\n          if (canvas.canvasSharedPtr) {\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr >> 2] = width;\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 4 >> 2] = height;\n          }\n          if (canvas.offscreenCanvas || !canvas.controlTransferredOffscreen) {\n            if (canvas.offscreenCanvas)\n              canvas = canvas.offscreenCanvas;\n            var autoResizeViewport = false;\n            if (canvas.GLctxObject && canvas.GLctxObject.GLctx) {\n              var prevViewport = canvas.GLctxObject.GLctx.getParameter(2978);\n              autoResizeViewport = prevViewport[0] === 0 && prevViewport[1] === 0 && prevViewport[2] === canvas.width && prevViewport[3] === canvas.height;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            if (autoResizeViewport) {\n              canvas.GLctxObject.GLctx.viewport(0, 0, width, height);\n            }\n          } else if (canvas.canvasSharedPtr) {\n            var targetThread = GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 8 >> 2];\n            _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, target, width, height);\n            return 1;\n          } else {\n            return -4;\n          }\n          return 0;\n        }\n        function _emscripten_set_canvas_element_size_main_thread(target, width, height) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(4, 1, target, width, height);\n          return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n        }\n        function _emscripten_set_canvas_element_size(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (canvas) {\n            return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n          } else {\n            return _emscripten_set_canvas_element_size_main_thread(target, width, height);\n          }\n        }\n        function _emscripten_set_current_thread_status(newStatus) {\n          newStatus = newStatus | 0;\n        }\n        function __webgl_enable_ANGLE_instanced_arrays(ctx) {\n          var ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n          if (ext) {\n            ctx[\"vertexAttribDivisor\"] = function(index, divisor) {\n              ext[\"vertexAttribDivisorANGLE\"](index, divisor);\n            };\n            ctx[\"drawArraysInstanced\"] = function(mode, first, count, primcount) {\n              ext[\"drawArraysInstancedANGLE\"](mode, first, count, primcount);\n            };\n            ctx[\"drawElementsInstanced\"] = function(mode, count, type, indices, primcount) {\n              ext[\"drawElementsInstancedANGLE\"](mode, count, type, indices, primcount);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_OES_vertex_array_object(ctx) {\n          var ext = ctx.getExtension(\"OES_vertex_array_object\");\n          if (ext) {\n            ctx[\"createVertexArray\"] = function() {\n              return ext[\"createVertexArrayOES\"]();\n            };\n            ctx[\"deleteVertexArray\"] = function(vao) {\n              ext[\"deleteVertexArrayOES\"](vao);\n            };\n            ctx[\"bindVertexArray\"] = function(vao) {\n              ext[\"bindVertexArrayOES\"](vao);\n            };\n            ctx[\"isVertexArray\"] = function(vao) {\n              return ext[\"isVertexArrayOES\"](vao);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_draw_buffers(ctx) {\n          var ext = ctx.getExtension(\"WEBGL_draw_buffers\");\n          if (ext) {\n            ctx[\"drawBuffers\"] = function(n, bufs) {\n              ext[\"drawBuffersWEBGL\"](n, bufs);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_multi_draw(ctx) {\n          return !!(ctx.multiDrawWebgl = ctx.getExtension(\"WEBGL_multi_draw\"));\n        }\n        var GL = { counter: 1, buffers: [], programs: [], framebuffers: [], renderbuffers: [], textures: [], uniforms: [], shaders: [], vaos: [], contexts: {}, offscreenCanvases: {}, timerQueriesEXT: [], programInfos: {}, stringCache: {}, unpackAlignment: 4, recordError: function recordError(errorCode) {\n          if (!GL.lastError) {\n            GL.lastError = errorCode;\n          }\n        }, getNewId: function(table) {\n          var ret = GL.counter++;\n          for (var i = table.length; i < ret; i++) {\n            table[i] = null;\n          }\n          return ret;\n        }, getSource: function(shader, count, string, length) {\n          var source = \"\";\n          for (var i = 0; i < count; ++i) {\n            var len = length ? GROWABLE_HEAP_I32()[length + i * 4 >> 2] : -1;\n            source += UTF8ToString(GROWABLE_HEAP_I32()[string + i * 4 >> 2], len < 0 ? void 0 : len);\n          }\n          return source;\n        }, createContext: function(canvas, webGLContextAttributes) {\n          var ctx = canvas.getContext(\"webgl\", webGLContextAttributes);\n          if (!ctx)\n            return 0;\n          var handle = GL.registerContext(ctx, webGLContextAttributes);\n          return handle;\n        }, registerContext: function(ctx, webGLContextAttributes) {\n          var handle = _malloc(8);\n          GROWABLE_HEAP_I32()[handle + 4 >> 2] = _pthread_self();\n          var context = { handle, attributes: webGLContextAttributes, version: webGLContextAttributes.majorVersion, GLctx: ctx };\n          if (ctx.canvas)\n            ctx.canvas.GLctxObject = context;\n          GL.contexts[handle] = context;\n          if (typeof webGLContextAttributes.enableExtensionsByDefault === \"undefined\" || webGLContextAttributes.enableExtensionsByDefault) {\n            GL.initExtensions(context);\n          }\n          return handle;\n        }, makeContextCurrent: function(contextHandle) {\n          GL.currentContext = GL.contexts[contextHandle];\n          Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;\n          return !(contextHandle && !GLctx);\n        }, getContext: function(contextHandle) {\n          return GL.contexts[contextHandle];\n        }, deleteContext: function(contextHandle) {\n          if (GL.currentContext === GL.contexts[contextHandle])\n            GL.currentContext = null;\n          if (typeof JSEvents === \"object\")\n            JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n          if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas)\n            GL.contexts[contextHandle].GLctx.canvas.GLctxObject = void 0;\n          _free(GL.contexts[contextHandle].handle);\n          GL.contexts[contextHandle] = null;\n        }, initExtensions: function(context) {\n          if (!context)\n            context = GL.currentContext;\n          if (context.initExtensionsDone)\n            return;\n          context.initExtensionsDone = true;\n          var GLctx2 = context.GLctx;\n          __webgl_enable_ANGLE_instanced_arrays(GLctx2);\n          __webgl_enable_OES_vertex_array_object(GLctx2);\n          __webgl_enable_WEBGL_draw_buffers(GLctx2);\n          GLctx2.disjointTimerQueryExt = GLctx2.getExtension(\"EXT_disjoint_timer_query\");\n          __webgl_enable_WEBGL_multi_draw(GLctx2);\n          var automaticallyEnabledExtensions = [\"OES_texture_float\", \"OES_texture_half_float\", \"OES_standard_derivatives\", \"OES_vertex_array_object\", \"WEBGL_compressed_texture_s3tc\", \"WEBGL_depth_texture\", \"OES_element_index_uint\", \"EXT_texture_filter_anisotropic\", \"EXT_frag_depth\", \"WEBGL_draw_buffers\", \"ANGLE_instanced_arrays\", \"OES_texture_float_linear\", \"OES_texture_half_float_linear\", \"EXT_blend_minmax\", \"EXT_shader_texture_lod\", \"EXT_texture_norm16\", \"WEBGL_compressed_texture_pvrtc\", \"EXT_color_buffer_half_float\", \"WEBGL_color_buffer_float\", \"EXT_sRGB\", \"WEBGL_compressed_texture_etc1\", \"EXT_disjoint_timer_query\", \"WEBGL_compressed_texture_etc\", \"WEBGL_compressed_texture_astc\", \"EXT_color_buffer_float\", \"WEBGL_compressed_texture_s3tc_srgb\", \"EXT_disjoint_timer_query_webgl2\", \"WEBKIT_WEBGL_compressed_texture_pvrtc\"];\n          var exts = GLctx2.getSupportedExtensions() || [];\n          exts.forEach(function(ext) {\n            if (automaticallyEnabledExtensions.indexOf(ext) != -1) {\n              GLctx2.getExtension(ext);\n            }\n          });\n        }, populateUniformTable: function(program) {\n          var p = GL.programs[program];\n          var ptable = GL.programInfos[program] = { uniforms: {}, maxUniformLength: 0, maxAttributeLength: -1, maxUniformBlockNameLength: -1 };\n          var utable = ptable.uniforms;\n          var numUniforms = GLctx.getProgramParameter(p, 35718);\n          for (var i = 0; i < numUniforms; ++i) {\n            var u = GLctx.getActiveUniform(p, i);\n            var name2 = u.name;\n            ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name2.length + 1);\n            if (name2.slice(-1) == \"]\") {\n              name2 = name2.slice(0, name2.lastIndexOf(\"[\"));\n            }\n            var loc = GLctx.getUniformLocation(p, name2);\n            if (loc) {\n              var id = GL.getNewId(GL.uniforms);\n              utable[name2] = [u.size, id];\n              GL.uniforms[id] = loc;\n              for (var j = 1; j < u.size; ++j) {\n                var n = name2 + \"[\" + j + \"]\";\n                loc = GLctx.getUniformLocation(p, n);\n                id = GL.getNewId(GL.uniforms);\n                GL.uniforms[id] = loc;\n              }\n            }\n          }\n        } };\n        var __emscripten_webgl_power_preferences = [\"default\", \"low-power\", \"high-performance\"];\n        function _emscripten_webgl_do_create_context(target, attributes) {\n          var a = attributes >> 2;\n          var powerPreference = GROWABLE_HEAP_I32()[a + (24 >> 2)];\n          var contextAttributes = { \"alpha\": !!GROWABLE_HEAP_I32()[a + (0 >> 2)], \"depth\": !!GROWABLE_HEAP_I32()[a + (4 >> 2)], \"stencil\": !!GROWABLE_HEAP_I32()[a + (8 >> 2)], \"antialias\": !!GROWABLE_HEAP_I32()[a + (12 >> 2)], \"premultipliedAlpha\": !!GROWABLE_HEAP_I32()[a + (16 >> 2)], \"preserveDrawingBuffer\": !!GROWABLE_HEAP_I32()[a + (20 >> 2)], \"powerPreference\": __emscripten_webgl_power_preferences[powerPreference], \"failIfMajorPerformanceCaveat\": !!GROWABLE_HEAP_I32()[a + (28 >> 2)], majorVersion: GROWABLE_HEAP_I32()[a + (32 >> 2)], minorVersion: GROWABLE_HEAP_I32()[a + (36 >> 2)], enableExtensionsByDefault: GROWABLE_HEAP_I32()[a + (40 >> 2)], explicitSwapControl: GROWABLE_HEAP_I32()[a + (44 >> 2)], proxyContextToMainThread: GROWABLE_HEAP_I32()[a + (48 >> 2)], renderViaOffscreenBackBuffer: GROWABLE_HEAP_I32()[a + (52 >> 2)] };\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas) {\n            return 0;\n          }\n          if (contextAttributes.explicitSwapControl) {\n            return 0;\n          }\n          var contextHandle = GL.createContext(canvas, contextAttributes);\n          return contextHandle;\n        }\n        function _emscripten_webgl_create_context(a0, a1) {\n          return _emscripten_webgl_do_create_context(a0, a1);\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(5, 1, __environ, environ_buf);\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              GROWABLE_HEAP_I32()[__environ + i * 4 >> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(6, 1, penviron_count, penviron_buf_size);\n          try {\n            var strings = getEnvStrings();\n            GROWABLE_HEAP_I32()[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            GROWABLE_HEAP_I32()[penviron_buf_size >> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(7, 1, fd);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(8, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(9, 1, fd, offset_low, offset_high, whence, newOffset);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[newOffset >> 2] = tempI64[0], GROWABLE_HEAP_I32()[newOffset + 4 >> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(10, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _pthread_cleanup_push(routine, arg) {\n          PThread.threadExitHandlers.push(function() {\n            wasmTable.get(routine)(arg);\n          });\n        }\n        function spawnThread(threadParams) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! spawnThread() can only ever be called from main application thread!\";\n          var worker = PThread.getNewWorker();\n          if (worker.pthread !== void 0)\n            throw \"Internal error!\";\n          if (!threadParams.pthread_ptr)\n            throw \"Internal error, no pthread ptr!\";\n          PThread.runningWorkers.push(worker);\n          var tlsMemory = _malloc(128 * 4);\n          for (var i = 0; i < 128; ++i) {\n            GROWABLE_HEAP_I32()[tlsMemory + i * 4 >> 2] = 0;\n          }\n          var stackHigh = threadParams.stackBase + threadParams.stackSize;\n          var pthread = PThread.pthreads[threadParams.pthread_ptr] = { worker, stackBase: threadParams.stackBase, stackSize: threadParams.stackSize, allocatedOwnStack: threadParams.allocatedOwnStack, thread: threadParams.pthread_ptr, threadInfoStruct: threadParams.pthread_ptr };\n          var tis = pthread.threadInfoStruct >> 2;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (0 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (4 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (8 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (68 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 >> 2), tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (48 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (40 >> 2), pthread.threadInfoStruct);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (44 >> 2), 42);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (84 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (80 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 8 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 12 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 20 >> 2), threadParams.schedPolicy);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 24 >> 2), threadParams.schedPrio);\n          var global_libc = _emscripten_get_global_libc();\n          var global_locale = global_libc + 40;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (176 >> 2), global_locale);\n          worker.pthread = pthread;\n          var msg = { \"cmd\": \"run\", \"start_routine\": threadParams.startRoutine, \"arg\": threadParams.arg, \"threadInfoStruct\": threadParams.pthread_ptr, \"selfThreadId\": threadParams.pthread_ptr, \"parentThreadId\": threadParams.parent_pthread_ptr, \"stackBase\": threadParams.stackBase, \"stackSize\": threadParams.stackSize };\n          worker.runPthread = function() {\n            msg.time = performance.now();\n            worker.postMessage(msg, threadParams.transferList);\n          };\n          if (worker.loaded) {\n            worker.runPthread();\n            delete worker.runPthread;\n          }\n        }\n        function _pthread_getschedparam(thread, policy, schedparam) {\n          if (!policy && !schedparam)\n            return ERRNO_CODES.EINVAL;\n          if (!thread) {\n            err(\"pthread_getschedparam called with a null thread pointer!\");\n            return ERRNO_CODES.ESRCH;\n          }\n          var self2 = GROWABLE_HEAP_I32()[thread + 12 >> 2];\n          if (self2 !== thread) {\n            err(\"pthread_getschedparam attempted on thread \" + thread + \", which does not point to a valid thread, or does not exist anymore!\");\n            return ERRNO_CODES.ESRCH;\n          }\n          var schedPolicy = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 20 >> 2);\n          var schedPrio = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 24 >> 2);\n          if (policy)\n            GROWABLE_HEAP_I32()[policy >> 2] = schedPolicy;\n          if (schedparam)\n            GROWABLE_HEAP_I32()[schedparam >> 2] = schedPrio;\n          return 0;\n        }\n        function _pthread_self() {\n          return __pthread_ptr | 0;\n        }\n        Module[\"_pthread_self\"] = _pthread_self;\n        function _pthread_create(pthread_ptr, attr, start_routine, arg) {\n          if (typeof SharedArrayBuffer === \"undefined\") {\n            err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n            return 6;\n          }\n          if (!pthread_ptr) {\n            err(\"pthread_create called with a null thread pointer!\");\n            return 28;\n          }\n          var transferList = [];\n          var error = 0;\n          if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\n            return _emscripten_sync_run_in_main_thread_4(687865856, pthread_ptr, attr, start_routine, arg);\n          }\n          if (error)\n            return error;\n          var stackSize = 0;\n          var stackBase = 0;\n          var detached = 0;\n          var schedPolicy = 0;\n          var schedPrio = 0;\n          if (attr) {\n            stackSize = GROWABLE_HEAP_I32()[attr >> 2];\n            stackSize += 81920;\n            stackBase = GROWABLE_HEAP_I32()[attr + 8 >> 2];\n            detached = GROWABLE_HEAP_I32()[attr + 12 >> 2] !== 0;\n            var inheritSched = GROWABLE_HEAP_I32()[attr + 16 >> 2] === 0;\n            if (inheritSched) {\n              var prevSchedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              var prevSchedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n              var parentThreadPtr = PThread.currentProxiedOperationCallerThread ? PThread.currentProxiedOperationCallerThread : _pthread_self();\n              _pthread_getschedparam(parentThreadPtr, attr + 20, attr + 24);\n              schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n              GROWABLE_HEAP_I32()[attr + 20 >> 2] = prevSchedPolicy;\n              GROWABLE_HEAP_I32()[attr + 24 >> 2] = prevSchedPrio;\n            } else {\n              schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n            }\n          } else {\n            stackSize = 2097152;\n          }\n          var allocatedOwnStack = stackBase == 0;\n          if (allocatedOwnStack) {\n            stackBase = _memalign(16, stackSize);\n          } else {\n            stackBase -= stackSize;\n            assert(stackBase > 0);\n          }\n          var threadInfoStruct2 = _malloc(232);\n          for (var i = 0; i < 232 >> 2; ++i)\n            GROWABLE_HEAP_U32()[(threadInfoStruct2 >> 2) + i] = 0;\n          GROWABLE_HEAP_I32()[pthread_ptr >> 2] = threadInfoStruct2;\n          GROWABLE_HEAP_I32()[threadInfoStruct2 + 12 >> 2] = threadInfoStruct2;\n          var headPtr = threadInfoStruct2 + 156;\n          GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;\n          var threadParams = { stackBase, stackSize, allocatedOwnStack, schedPolicy, schedPrio, detached, startRoutine: start_routine, pthread_ptr: threadInfoStruct2, parent_pthread_ptr: _pthread_self(), arg, transferList };\n          if (ENVIRONMENT_IS_PTHREAD) {\n            threadParams.cmd = \"spawnThread\";\n            postMessage(threadParams, transferList);\n          } else {\n            spawnThread(threadParams);\n          }\n          return 0;\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = GROWABLE_HEAP_I32()[tm + 40 >> 2];\n          var date = { tm_sec: GROWABLE_HEAP_I32()[tm >> 2], tm_min: GROWABLE_HEAP_I32()[tm + 4 >> 2], tm_hour: GROWABLE_HEAP_I32()[tm + 8 >> 2], tm_mday: GROWABLE_HEAP_I32()[tm + 12 >> 2], tm_mon: GROWABLE_HEAP_I32()[tm + 16 >> 2], tm_year: GROWABLE_HEAP_I32()[tm + 20 >> 2], tm_wday: GROWABLE_HEAP_I32()[tm + 24 >> 2], tm_yday: GROWABLE_HEAP_I32()[tm + 28 >> 2], tm_isdst: GROWABLE_HEAP_I32()[tm + 32 >> 2], tm_gmtoff: GROWABLE_HEAP_I32()[tm + 36 >> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          PThread.initMainThreadBlock();\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        var GLctx;\n        var proxiedFunctionTable = [null, _atexit, ___sys_ioctl, ___sys_open, _emscripten_set_canvas_element_size_main_thread, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write];\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          __ATINIT__.push({ func: function() {\n            ___wasm_call_ctors();\n          } });\n        var asmLibraryArg = { \"p\": ___assert_fail, \"H\": ___cxa_allocate_exception, \"G\": ___cxa_throw, \"ha\": ___sys_ioctl, \"ia\": ___sys_open, \"na\": __embind_finalize_value_array, \"w\": __embind_finalize_value_object, \"ka\": __embind_register_bool, \"z\": __embind_register_class, \"y\": __embind_register_class_constructor, \"e\": __embind_register_class_function, \"ja\": __embind_register_emval, \"ma\": __embind_register_enum, \"E\": __embind_register_enum_value, \"N\": __embind_register_float, \"i\": __embind_register_function, \"u\": __embind_register_integer, \"q\": __embind_register_memory_view, \"O\": __embind_register_std_string, \"F\": __embind_register_std_wstring, \"oa\": __embind_register_value_array, \"l\": __embind_register_value_array_element, \"x\": __embind_register_value_object, \"h\": __embind_register_value_object_field, \"la\": __embind_register_void, \"$\": __emscripten_notify_thread_queue, \"s\": __emval_as, \"P\": __emval_call, \"b\": __emval_decref, \"Z\": __emval_get_global, \"t\": __emval_get_property, \"o\": __emval_incref, \"ba\": __emval_instanceof, \"Q\": __emval_is_number, \"I\": __emval_new_array, \"j\": __emval_new_cstring, \"A\": __emval_new_object, \"r\": __emval_run_destructors, \"m\": __emval_set_property, \"g\": __emval_take_value, \"K\": _abort, \"fa\": _clock_gettime, \"B\": _emscripten_asm_const_int, \"aa\": _emscripten_check_blocking_allowed, \"J\": _emscripten_conditional_set_current_thread_status, \"k\": _emscripten_futex_wait, \"n\": _emscripten_futex_wake, \"d\": _emscripten_get_now, \"D\": _emscripten_is_main_browser_thread, \"C\": _emscripten_is_main_runtime_thread, \"U\": _emscripten_memcpy_big, \"W\": _emscripten_receive_on_main_thread_js, \"v\": _emscripten_resize_heap, \"X\": _emscripten_set_canvas_element_size, \"f\": _emscripten_set_current_thread_status, \"Y\": _emscripten_webgl_create_context, \"da\": _environ_get, \"ea\": _environ_sizes_get, \"M\": _fd_close, \"ga\": _fd_read, \"R\": _fd_seek, \"L\": _fd_write, \"T\": initPthreadsJS, \"a\": wasmMemory || Module[\"wasmMemory\"], \"V\": _pthread_cleanup_push, \"_\": _pthread_create, \"c\": _pthread_self, \"S\": _setTempRet0, \"ca\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ta\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"va\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments);\n        };\n        var _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = function() {\n          return (_emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments);\n        };\n        var ___em_js__initPthreadsJS = Module[\"___em_js__initPthreadsJS\"] = function() {\n          return (___em_js__initPthreadsJS = Module[\"___em_js__initPthreadsJS\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments);\n        };\n        var stackSave = Module[\"stackSave\"] = function() {\n          return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"za\"]).apply(null, arguments);\n        };\n        var stackRestore = Module[\"stackRestore\"] = function() {\n          return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments);\n        };\n        var stackAlloc = Module[\"stackAlloc\"] = function() {\n          return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments);\n        };\n        var _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function() {\n          return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments);\n        };\n        var _memalign = Module[\"_memalign\"] = function() {\n          return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments);\n        };\n        var _emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = function() {\n          return (_emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments);\n        };\n        var ___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = function() {\n          return (___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments);\n        };\n        var _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function() {\n          return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments);\n        };\n        var _emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = function() {\n          return (_emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments);\n        };\n        var _emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = function() {\n          return (_emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments);\n        };\n        var _do_emscripten_dispatch_to_thread = Module[\"_do_emscripten_dispatch_to_thread\"] = function() {\n          return (_do_emscripten_dispatch_to_thread = Module[\"_do_emscripten_dispatch_to_thread\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments);\n        };\n        var _emscripten_async_run_in_main_thread = Module[\"_emscripten_async_run_in_main_thread\"] = function() {\n          return (_emscripten_async_run_in_main_thread = Module[\"_emscripten_async_run_in_main_thread\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread = Module[\"_emscripten_sync_run_in_main_thread\"] = function() {\n          return (_emscripten_sync_run_in_main_thread = Module[\"_emscripten_sync_run_in_main_thread\"] = Module[\"asm\"][\"La\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_0 = Module[\"_emscripten_sync_run_in_main_thread_0\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_0 = Module[\"_emscripten_sync_run_in_main_thread_0\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_1 = Module[\"_emscripten_sync_run_in_main_thread_1\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_1 = Module[\"_emscripten_sync_run_in_main_thread_1\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_2 = Module[\"_emscripten_sync_run_in_main_thread_2\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_2 = Module[\"_emscripten_sync_run_in_main_thread_2\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_xprintf_varargs = Module[\"_emscripten_sync_run_in_main_thread_xprintf_varargs\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_xprintf_varargs = Module[\"_emscripten_sync_run_in_main_thread_xprintf_varargs\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_3 = Module[\"_emscripten_sync_run_in_main_thread_3\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_3 = Module[\"_emscripten_sync_run_in_main_thread_3\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_5 = Module[\"_emscripten_sync_run_in_main_thread_5\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_5 = Module[\"_emscripten_sync_run_in_main_thread_5\"] = Module[\"asm\"][\"Sa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_6 = Module[\"_emscripten_sync_run_in_main_thread_6\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_6 = Module[\"_emscripten_sync_run_in_main_thread_6\"] = Module[\"asm\"][\"Ta\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_7 = Module[\"_emscripten_sync_run_in_main_thread_7\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_7 = Module[\"_emscripten_sync_run_in_main_thread_7\"] = Module[\"asm\"][\"Ua\"]).apply(null, arguments);\n        };\n        var _emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = function() {\n          return (_emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = Module[\"asm\"][\"Va\"]).apply(null, arguments);\n        };\n        var __emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = function() {\n          return (__emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = Module[\"asm\"][\"Wa\"]).apply(null, arguments);\n        };\n        var _emscripten_tls_init = Module[\"_emscripten_tls_init\"] = function() {\n          return (_emscripten_tls_init = Module[\"_emscripten_tls_init\"] = Module[\"asm\"][\"Xa\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"Ya\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Za\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"_a\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"$a\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"ab\"]).apply(null, arguments);\n        };\n        var _main_thread_futex = Module[\"_main_thread_futex\"] = 51928;\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        Module[\"PThread\"] = PThread;\n        Module[\"PThread\"] = PThread;\n        Module[\"_pthread_self\"] = _pthread_self;\n        Module[\"wasmMemory\"] = wasmMemory;\n        Module[\"ExitStatus\"] = ExitStatus;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            PThread.terminateAllThreads();\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        if (!ENVIRONMENT_IS_PTHREAD)\n          noExitRuntime = true;\n        if (!ENVIRONMENT_IS_PTHREAD) {\n          run();\n        } else {\n          PThread.initWorker();\n        }\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (Module[\"wasmMemory\"]) {\n          wasmMemory = Module[\"wasmMemory\"];\n        } else {\n          wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536 });\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"ba\"];\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var ExceptionInfoAttrs = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\n          this.set_type = function(type) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >>> 2] = type;\n          };\n          this.get_type = function() {\n            return HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            var value = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2];\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = value + 1;\n          };\n          this.release_ref = function() {\n            var prev = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2];\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = prev - 1;\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            HEAP8[ptr + size++ >>> 0] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? HEAP8 : HEAPU8;\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? HEAP16 : HEAPU16;\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? HEAP32 : HEAPU32;\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_get_heap_size() {\n          return HEAPU8.length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _pthread_mutexattr_destroy() {\n        }\n        function _pthread_mutexattr_init() {\n        }\n        function _pthread_mutexattr_settype() {\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        __ATINIT__.push({ func: function() {\n          ___wasm_call_ctors();\n        } });\n        var asmLibraryArg = { \"z\": ___assert_fail, \"y\": ___cxa_allocate_exception, \"x\": ___cxa_throw, \"V\": ___sys_ioctl, \"W\": ___sys_open, \"$\": __embind_finalize_value_array, \"q\": __embind_finalize_value_object, \"Y\": __embind_register_bool, \"t\": __embind_register_class, \"s\": __embind_register_class_constructor, \"c\": __embind_register_class_function, \"X\": __embind_register_emval, \"_\": __embind_register_enum, \"v\": __embind_register_enum_value, \"F\": __embind_register_float, \"f\": __embind_register_function, \"o\": __embind_register_integer, \"k\": __embind_register_memory_view, \"G\": __embind_register_std_string, \"w\": __embind_register_std_wstring, \"aa\": __embind_register_value_array, \"h\": __embind_register_value_array_element, \"r\": __embind_register_value_object, \"e\": __embind_register_value_object_field, \"Z\": __embind_register_void, \"m\": __emval_as, \"H\": __emval_call, \"b\": __emval_decref, \"J\": __emval_get_global, \"n\": __emval_get_property, \"j\": __emval_incref, \"N\": __emval_instanceof, \"I\": __emval_is_number, \"A\": __emval_new_array, \"g\": __emval_new_cstring, \"u\": __emval_new_object, \"l\": __emval_run_destructors, \"i\": __emval_set_property, \"d\": __emval_take_value, \"C\": _abort, \"T\": _clock_gettime, \"M\": _emscripten_memcpy_big, \"p\": _emscripten_resize_heap, \"R\": _environ_get, \"S\": _environ_sizes_get, \"E\": _fd_close, \"U\": _fd_read, \"K\": _fd_seek, \"D\": _fd_write, \"a\": wasmMemory, \"B\": _pthread_mutexattr_destroy, \"P\": _pthread_mutexattr_init, \"O\": _pthread_mutexattr_settype, \"L\": _setTempRet0, \"Q\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"la\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"na\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        noExitRuntime = true;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  IFCACTUATOR,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCALARM,\n  IFCALIGNMENT,\n  IFCANNOTATION,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEARING,\n  IFCBOILER,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGSTOREY,\n  IFCBURNER,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLEFITTING,\n  IFCCABLESEGMENT,\n  IFCCAISSONFOUNDATION,\n  IFCCHILLER,\n  IFCCHIMNEY,\n  IFCCIVILELEMENT,\n  IFCCOIL,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMPRESSOR,\n  IFCCONDENSER,\n  IFCCONTROLLER,\n  IFCCOOLEDBEAM,\n  IFCCOOLINGTOWER,\n  IFCCOVERING,\n  IFCCURTAINWALL,\n  IFCDAMPER,\n  IFCDEEPFOUNDATION,\n  IFCDISCRETEACCESSORY,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONPORT,\n  IFCDOOR,\n  IFCDOORSTANDARDCASE,\n  IFCDUCTFITTING,\n  IFCDUCTSEGMENT,\n  IFCDUCTSILENCER,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICMOTOR,\n  IFCELECTRICTIMECONTROL,\n  IFCELEMENT,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTCOMPONENT,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENGINE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATOR,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAN,\n  IFCFASTENER,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILTER,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFLOWCONTROLLER,\n  IFCFLOWFITTING,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWMETER,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFOOTING,\n  IFCFURNISHINGELEMENT,\n  IFCFURNITURE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGRID,\n  IFCHEATEXCHANGER,\n  IFCHUMIDIFIER,\n  IFCINTERCEPTOR,\n  IFCJUNCTIONBOX,\n  IFCLAMP,\n  IFCLIGHTFIXTURE,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCMECHANICALFASTENER,\n  IFCMEDICALDEVICE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMOTORCONNECTION,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOUTLET,\n  IFCPILE,\n  IFCPIPEFITTING,\n  IFCPIPESEGMENT,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPROJECTIONELEMENT,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROXY,\n  IFCPUMP,\n  IFCRAILING,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCREFERENT,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGMESH,\n  IFCROOF,\n  IFCSANITARYTERMINAL,\n  IFCSENSOR,\n  IFCSHADINGDEVICE,\n  IFCSITE,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSOLARDEVICE,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPATIALELEMENT,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALZONE,\n  IFCSTACKTERMINAL,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSURFACEFEATURE,\n  IFCSWITCHINGDEVICE,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCTANK,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONCONDUIT,\n  IFCTRANSFORMER,\n  IFCTRANSPORTELEMENT,\n  IFCTUBEBUNDLE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYEQUIPMENT,\n  IFCVALVE,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONISOLATOR,\n  IFCVIRTUALELEMENT,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWASTETERMINAL,\n  IFCWINDOW,\n  IFCWINDOWSTANDARDCASE\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties2, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties2, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/helpers/ifc-elements.ts\nvar IfcElements2 = {\n  103090709: \"IFCPROJECT\",\n  4097777520: \"IFCSITE\",\n  4031249490: \"IFCBUILDING\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  3856911033: \"IFCSPACE\",\n  1674181508: \"IFCANNOTATION\",\n  25142252: \"IFCCONTROLLER\",\n  32344328: \"IFCBOILER\",\n  76236018: \"IFCLAMP\",\n  90941305: \"IFCPUMP\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  310824031: \"IFCPIPEFITTING\",\n  331165859: \"IFCSTAIR\",\n  342316401: \"IFCDUCTFITTING\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  395920057: \"IFCDOOR\",\n  402227799: \"IFCELECTRICMOTOR\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  639361253: \"IFCCOIL\",\n  647756555: \"IFCFASTENER\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  753842376: \"IFCBEAM\",\n  812556717: \"IFCTANK\",\n  819412036: \"IFCFILTER\",\n  843113511: \"IFCCOLUMN\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  900683007: \"IFCFOOTING\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  979691226: \"IFCREINFORCINGBAR\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  1051757585: \"IFCCABLEFITTING\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1073191201: \"IFCMEMBER\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  1360408905: \"IFCDUCTSILENCER\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1509553395: \"IFCFURNITURE\",\n  1529196076: \"IFCSLAB\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1634111441: \"IFCAIRTERMINAL\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  1687234759: \"IFCPILE\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  1973544240: \"IFCCOVERING\",\n  1999602285: \"IFCSPACEHEATER\",\n  2016517767: \"IFCROOF\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  2068733104: \"IFCHUMIDIFIER\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  2188021234: \"IFCFLOWMETER\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2262370178: \"IFCRAILING\",\n  2272882330: \"IFCCONDENSER\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2347447852: \"IFCTENDONANCHOR\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2391406946: \"IFCWALL\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  2814081492: \"IFCENGINE\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  2938176219: \"IFCBURNER\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  3024970846: \"IFCRAMP\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  3087945054: \"IFCALARM\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  3171933400: \"IFCPLATE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3296154744: \"IFCCHIMNEY\",\n  3304561284: \"IFCWINDOW\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  3415622556: \"IFCFAN\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  3495092785: \"IFCCURTAINWALL\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3612865200: \"IFCPIPESEGMENT\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3694346114: \"IFCOUTLET\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3824725483: \"IFCTENDON\",\n  3825984169: \"IFCTRANSFORMER\",\n  3902619387: \"IFCCHILLER\",\n  4074379575: \"IFCDAMPER\",\n  4086658281: \"IFCSENSOR\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4175244083: \"IFCINTERCEPTOR\",\n  4207607924: \"IFCVALVE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  4278956645: \"IFCFLOWFITTING\",\n  4288193352: \"IFCACTUATOR\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3009204131: \"IFCGRID\"\n};\n\n// dist/helpers/properties.ts\nvar PropsNames = {\n  aggregates: {\n    name: IFCRELAGGREGATES,\n    relating: \"RelatingObject\",\n    related: \"RelatedObjects\",\n    key: \"children\"\n  },\n  spatial: {\n    name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    relating: \"RelatingStructure\",\n    related: \"RelatedElements\",\n    key: \"children\"\n  },\n  psets: {\n    name: IFCRELDEFINESBYPROPERTIES,\n    relating: \"RelatingPropertyDefinition\",\n    related: \"RelatedObjects\",\n    key: \"hasPsets\"\n  },\n  materials: {\n    name: IFCRELASSOCIATESMATERIAL,\n    relating: \"RelatingMaterial\",\n    related: \"RelatedObjects\",\n    key: \"hasMaterial\"\n  },\n  type: {\n    name: IFCRELDEFINESBYTYPE,\n    relating: \"RelatingType\",\n    related: \"RelatedObjects\",\n    key: \"hasType\"\n  }\n};\nvar Properties = class {\n  constructor(api) {\n    this.api = api;\n  }\n  getItemProperties(modelID, id, recursive = false) {\n    return __async(this, null, function* () {\n      return this.api.GetLine(modelID, id, recursive);\n    });\n  }\n  getPropertySets(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.psets);\n    });\n  }\n  getTypeProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.type);\n    });\n  }\n  getMaterialsProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.materials);\n    });\n  }\n  getSpatialStructure(modelID, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getAllTypesOfModel(modelID);\n      const chunks = yield this.getSpatialTreeChunks(modelID);\n      const allLines = yield this.api.GetLineIDsWithType(modelID, IFCPROJECT);\n      const projectID = allLines.get(0);\n      const project = Properties.newIfcProject(projectID);\n      yield this.getSpatialNode(modelID, project, chunks, includeProperties);\n      this.cleanupTypes();\n      return project;\n    });\n  }\n  getAllItemsOfType(modelID, type, verbose) {\n    return __async(this, null, function* () {\n      let items = [];\n      const lines = yield this.api.GetLineIDsWithType(modelID, type);\n      for (let i = 0; i < lines.size(); i++)\n        items.push(lines.get(i));\n      if (!verbose)\n        return items;\n      const result = [];\n      for (let i = 0; i < items.length; i++) {\n        result.push(yield this.api.GetLine(modelID, items[i]));\n      }\n      return result;\n    });\n  }\n  getProperty(modelID, elementID, recursive = false, propName) {\n    return __async(this, null, function* () {\n      const propSetIds = yield this.getAllRelatedItemsOfType(modelID, elementID, propName);\n      const result = [];\n      for (let i = 0; i < propSetIds.length; i++) {\n        result.push(yield this.api.GetLine(modelID, propSetIds[i], recursive));\n      }\n      return result;\n    });\n  }\n  getChunks(modelID, chunks, propNames) {\n    return __async(this, null, function* () {\n      const relation = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      for (let i = 0; i < relation.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, relation.get(i), false);\n        this.saveChunk(chunks, propNames, rel);\n      }\n    });\n  }\n  static isRelated(id, rel, propNames) {\n    const relatedItems = rel[propNames.related];\n    if (Array.isArray(relatedItems)) {\n      const values = relatedItems.map((item) => item.value);\n      return values.includes(id);\n    }\n    return relatedItems.value === id;\n  }\n  static newIfcProject(id) {\n    return {\n      expressID: id,\n      type: \"IFCPROJECT\",\n      children: []\n    };\n  }\n  getSpatialNode(modelID, node, treeChunks, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\n    });\n  }\n  getChildren(modelID, node, treeChunks, propNames, includeProperties) {\n    return __async(this, null, function* () {\n      const children = treeChunks[node.expressID];\n      if (children == void 0)\n        return;\n      const prop = propNames.key;\n      const nodes = [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let node2 = this.newNode(child);\n        if (includeProperties) {\n          const properties = yield this.getItemProperties(modelID, node2.expressID);\n          node2 = __spreadValues(__spreadValues({}, properties), node2);\n        }\n        yield this.getSpatialNode(modelID, node2, treeChunks, includeProperties);\n        nodes.push(node2);\n      }\n      node[prop] = nodes;\n    });\n  }\n  newNode(id) {\n    const typeName = this.getNodeType(id);\n    return {\n      expressID: id,\n      type: typeName,\n      children: []\n    };\n  }\n  getNodeType(id) {\n    const typeID = this.types[id];\n    return IfcElements2[typeID];\n  }\n  getSpatialTreeChunks(modelID) {\n    return __async(this, null, function* () {\n      const treeChunks = {};\n      yield this.getChunks(modelID, treeChunks, PropsNames.aggregates);\n      yield this.getChunks(modelID, treeChunks, PropsNames.spatial);\n      return treeChunks;\n    });\n  }\n  saveChunk(chunks, propNames, rel) {\n    const relating = rel[propNames.relating].value;\n    const related = rel[propNames.related].map((r) => r.value);\n    if (chunks[relating] == void 0) {\n      chunks[relating] = related;\n    } else {\n      chunks[relating] = chunks[relating].concat(related);\n    }\n  }\n  getRelated(rel, propNames, IDs) {\n    const element = rel[propNames.relating];\n    if (!Array.isArray(element))\n      IDs.push(element.value);\n    else\n      element.forEach((ele) => IDs.push(ele.value));\n  }\n  getAllRelatedItemsOfType(modelID, id, propNames) {\n    return __async(this, null, function* () {\n      const lines = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      const IDs = [];\n      for (let i = 0; i < lines.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, lines.get(i));\n        const isRelated = Properties.isRelated(id, rel, propNames);\n        if (isRelated)\n          this.getRelated(rel, propNames, IDs);\n      }\n      return IDs;\n    });\n  }\n  cleanupTypes() {\n    this.types = {};\n  }\n  getAllTypesOfModel(modelID) {\n    return __async(this, null, function* () {\n      const result = {};\n      const elements = Object.keys(IfcElements2).map((e) => parseInt(e));\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        const lines = yield this.api.GetLineIDsWithType(modelID, element);\n        const size = lines.size();\n        for (let i2 = 0; i2 < size; i2++)\n          result[lines.get(i2)] = element;\n      }\n      this.types = result;\n    });\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm;\nif (typeof self !== \"undefined\" && self.crossOriginIsolated) {\n  WebIFCWasm = require_web_ifc_mt();\n} else {\n  WebIFCWasm = require_web_ifc();\n}\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI2 = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n    this.wasmPath = \"\";\n    this.ifcGuidMap = new Map();\n    this.properties = new Properties(this);\n  }\n  Init(customLocateFileHandler) {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        let locateFileHandler = (path, prefix) => {\n          if (path.endsWith(\".wasm\")) {\n            return prefix + this.wasmPath + path;\n          }\n          return prefix + path;\n        };\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true, locateFile: customLocateFileHandler || locateFileHandler });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let offsetInSrc = 0;\n    let result = this.wasmModule.OpenModel(s, (destPtr, destSize) => {\n      let srcSize = Math.min(data.byteLength - offsetInSrc, destSize);\n      let dest = this.wasmModule.HEAPU8.subarray(destPtr, destPtr + destSize);\n      let src = data.subarray(offsetInSrc, offsetInSrc + srcSize);\n      dest.set(src);\n      offsetInSrc += srcSize;\n      return srcSize;\n    });\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  GetAndClearErrors(modelID) {\n    return this.wasmModule.GetAndClearErrors(modelID);\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetCoordinationMatrix(modelID) {\n    return this.wasmModule.GetCoordinationMatrix(modelID);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.ifcGuidMap.delete(modelID);\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  StreamAllMeshesWithTypes(modelID, types, meshCallback) {\n    this.wasmModule.StreamAllMeshesWithTypes(modelID, types, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  CreateIfcGuidToExpressIdMapping(modelID) {\n    const map = new Map();\n    for (let x = 0; x < IfcElements.length; x++) {\n      const type = IfcElements[x];\n      const lines = this.GetLineIDsWithType(modelID, type);\n      const size = lines.size();\n      for (let y = 0; y < size; y++) {\n        const expressID = lines.get(y);\n        const info = this.GetLine(modelID, expressID);\n        const globalID = info.GlobalId.value;\n        map.set(expressID, globalID);\n        map.set(globalID, expressID);\n      }\n    }\n    this.ifcGuidMap.set(modelID, map);\n  }\n  SetWasmPath(path) {\n    this.wasmPath = path;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI2 as IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n","export function defaultURIBuilder(globalId: string) {\n    return `inst:${encodeURIComponent(globalId)}`;\n}\n\nexport function relativeURIBuilder(globalId: string) {\n    return `#${encodeURIComponent(globalId)}`;\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { defaultURIBuilder } from \"./uri-builder\";\n\nexport async function buildRelOneToOne(ifcAPI: WebIFC.IfcAPI, modelID: number = 0, relationshipType: number, subjectRef: string, targetRef: string, rdfRelationship: string, includeInterface: boolean = false, biderectional: boolean = false): Promise<any>{\n\n    const graph = [];\n\n    const rels = await ifcAPI.properties.getAllItemsOfType(modelID, relationshipType, false);\n\n    for (let i = 0; i < rels.length; i++) {\n\n        const relID = rels[i];\n\n        const relProps = await ifcAPI.properties.getItemProperties(modelID, relID);\n\n        // Only continue if the interface is between an element and a space\n        if(!relProps[subjectRef] || !relProps[targetRef]) { continue; }\n\n        // Get properties of related and relating\n        const [subject, target] = await Promise.all([\n            ifcAPI.properties.getItemProperties(modelID, relProps[subjectRef].value),\n            ifcAPI.properties.getItemProperties(modelID, relProps[targetRef].value)\n        ]);\n\n        const subjectURI = defaultURIBuilder(subject.GlobalId.value);\n        const targetURI = defaultURIBuilder(target.GlobalId.value);\n        const interfaceURI = defaultURIBuilder(relProps.GlobalId.value);\n\n        // Push relationships\n        graph.push({\n            \"@id\": subjectURI,\n            [rdfRelationship]: {\"@id\": targetURI}\n        });\n\n        // Optionally, push it in opposite direction\n        if(biderectional){\n            graph.push({\n                \"@id\": targetURI,\n                [rdfRelationship]: {\"@id\": subjectURI}\n            });\n        }\n\n        // Optionally, also include the interface\n        if(includeInterface){\n            graph.push({\n                \"@id\": interfaceURI,\n                \"@type\": \"bot:Interface\",\n                \"ex:expressID\": relProps.expressID,\n                \"bot:interfaceOf\": [\n                    {\"@id\": subjectURI},\n                    {\"@id\": targetURI}\n                ]\n            });\n        }\n\n    }\n\n    return graph;\n\n}\n\nexport async function buildRelOneToMany(ifcAPI: WebIFC.IfcAPI, modelID: number = 0, relationshipType: number, subjectRef: string, targetRef: string, rdfRelationship: string, subjectClassConstraint?: number, targetClassConstraint?: number): Promise<any>{\n\n    const graph = [];\n\n    const rels = await ifcAPI.properties.getAllItemsOfType(modelID, relationshipType, false);\n\n    for (let i = 0; i < rels.length; i++) {\n\n        const relID = rels[i];\n\n        const relProps = await ifcAPI.properties.getItemProperties(modelID, relID);\n\n        // Only continue if the interface is between an element and a space\n        if(!relProps[subjectRef] || !relProps[targetRef]) { continue; }\n\n        const subject = await ifcAPI.properties.getItemProperties(modelID, relProps[subjectRef].value);\n\n        // It might be that we are only interested in relationship where the subject fulfills the constraint\n        if(subjectClassConstraint && subject.type != subjectClassConstraint) { continue; }\n\n        const targetPromises: any = [];\n        for (let i = 0; i < relProps[targetRef].length; i++) {\n            targetPromises.push(ifcAPI.properties.getItemProperties(modelID, relProps[targetRef][i].value));\n        }\n        const targets = await Promise.all(targetPromises);\n\n        const targetObjects = targets\n            .filter((t: any) => {\n                // It might be that we are only interested in relationship where the target fulfills the constraint\n                if(targetClassConstraint && t.type != targetClassConstraint) return false;\n                return true;\n            })\n            .map((t: any) => {\n                const targetURI = defaultURIBuilder(t.GlobalId.value);\n                return {\"@id\": targetURI}\n            });\n\n        // Skip if no target objects\n        if(!targetObjects.length) { continue; }\n\n        const subjectURI = defaultURIBuilder(subject.GlobalId.value);\n\n        // Push relationships\n        graph.push({\n            \"@id\": subjectURI,\n            [rdfRelationship]: targetObjects\n        });\n\n    }\n\n    return graph;\n\n}","import { TreeNode } from \"./BaseDefinitions\";\n\nexport const IfcTypesTree: TreeNode = {\n\t\"children\": [\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcProject\",\n\t\t\t\t\t\t\t\"id\": 103090709\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcProjectLibrary\",\n\t\t\t\t\t\t\t\"id\": 653396225\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcContext\",\n\t\t\t\t\t\"id\": 3419103109\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcOccupant\",\n\t\t\t\t\t\t\t\t\t\"id\": 4143007308\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcActor\",\n\t\t\t\t\t\t\t\"id\": 2296667514\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcActionRequest\",\n\t\t\t\t\t\t\t\t\t\"id\": 3821786052\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcCostItem\",\n\t\t\t\t\t\t\t\t\t\"id\": 3895139033\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcCostSchedule\",\n\t\t\t\t\t\t\t\t\t\"id\": 1419761937\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPerformanceHistory\",\n\t\t\t\t\t\t\t\t\t\"id\": 2382730787\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPermit\",\n\t\t\t\t\t\t\t\t\t\"id\": 3327091369\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProjectOrder\",\n\t\t\t\t\t\t\t\t\t\"id\": 2904328755\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkCalendar\",\n\t\t\t\t\t\t\t\t\t\"id\": 4088093105\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkPlan\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4218914973\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkSchedule\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3342526732\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkControl\",\n\t\t\t\t\t\t\t\t\t\"id\": 1028945134\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcControl\",\n\t\t\t\t\t\t\t\"id\": 3293443760\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcAsset\",\n\t\t\t\t\t\t\t\t\t\"id\": 3460190687\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcInventory\",\n\t\t\t\t\t\t\t\t\t\"id\": 2391368822\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLoadCase\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 385403989\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLoadGroup\",\n\t\t\t\t\t\t\t\t\t\"id\": 1252848954\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralResultGroup\",\n\t\t\t\t\t\t\t\t\t\"id\": 2986769608\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingSystem\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1177604601\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionCircuit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 562808652\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionSystem\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3205830791\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralAnalysisModel\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2515109513\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcZone\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1033361043\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystem\",\n\t\t\t\t\t\t\t\t\t\"id\": 2254336722\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcGroup\",\n\t\t\t\t\t\t\t\"id\": 2706460486\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvent\",\n\t\t\t\t\t\t\t\t\t\"id\": 4148101412\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProcedure\",\n\t\t\t\t\t\t\t\t\t\"id\": 2744685151\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcTask\",\n\t\t\t\t\t\t\t\t\t\"id\": 3473067441\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcProcess\",\n\t\t\t\t\t\t\t\"id\": 2945172077\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcAnnotation\",\n\t\t\t\t\t\t\t\t\t\"id\": 1674181508\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeamStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2906023776\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeam\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 753842376\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementProxy\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1095909175\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChimney\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3296154744\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumnStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 905975707\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumn\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 843113511\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCovering\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1973544240\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCurtainWall\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3495092785\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3242481149\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 395920057\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFooting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 900683007\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMemberStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1911478936\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1073191201\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPile\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1687234759\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlateStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1156407060\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlate\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3171933400\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRailing\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2262370178\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRamp\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3024970846\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampFlight\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3283111854\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRoof\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2016517767\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcShadingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1329646415\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabElementedCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3127900445\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3027962421\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlab\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1529196076\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStair\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 331165859\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairFlight\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4252922144\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallElementedCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4156078855\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3512223829\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWall\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2391406946\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 486154966\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindow\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3304561284\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3299480353\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCivilElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1677625105\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcActuator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4288193352\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAlarm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3087945054\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcController\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 25142252\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowInstrument\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 182646315\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceTrippingUnit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2295281155\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSensor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4086658281\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryControlElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 630975310\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionControlElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1062813311\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionChamberElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1052013943\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirToAirHeatRecovery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2056796094\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBoiler\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 32344328\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBurner\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2938176219\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChiller\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3902619387\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoil\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 639361253\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCondenser\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2272882330\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCooledBeam\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4136498852\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoolingTower\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3640358203\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricGenerator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 264262732\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricMotor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 402227799\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEngine\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2814081492\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporativeCooler\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3747195512\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 484807127\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHeatExchanger\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3319311131\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHumidifier\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2068733104\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMotorConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2474470126\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSolarDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3420628829\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransformer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3825984169\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTubeBundle\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3026737570\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryEquipment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4292641817\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEnergyConversionDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1658829314\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalBox\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 177149247\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDamper\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4074379575\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricDistributionBoard\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 862014818\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricTimeControl\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1003880860\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMeter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2188021234\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 738039164\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSwitchingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1162798199\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcValve\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4207607924\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowController\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2058353004\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 635142910\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1051757585\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 342316401\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcJunctionBox\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2176052936\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 310824031\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4278956645\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCompressor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3571504051\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFan\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3415622556\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPump\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 90941305\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMovingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3132237377\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3758799889\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4217484030\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3518393246\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3612865200\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 987401354\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricFlowStorageDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3310460725\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTank\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 812556717\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowStorageDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 707683696\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1634111441\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAudioVisualAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 277319702\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCommunicationsAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3221913625\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1904799276\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFireSuppressionTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1426591983\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLamp\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 76236018\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLightFixture\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 629592764\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMedicalDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1437502449\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOutlet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3694346114\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSanitaryTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3053780830\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceHeater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1999602285\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStackTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1404847402\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWasteTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4237592921\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2223149337\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSilencer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1360408905\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 819412036\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcInterceptor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4175244083\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTreatmentDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3508470533\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionFlowElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3040386961\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1945004755\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementAssembly\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4123344466\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementPart\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2979338954\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDiscreteAccessory\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1335981549\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFastener\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 647756555\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMechanicalFastener\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 377706215\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingBar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 979691226\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingMesh\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2320036040\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendon\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3824725483\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonAnchor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2347447852\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3027567501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVibrationIsolator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2391383451\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementComponent\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1623761950\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProjectionElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3651124850\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElementAddition\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2143335405\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOpeningStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3079942009\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOpeningElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3588315303\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVoidingFeature\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 926996030\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElementSubtraction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1287392070\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSurfaceFeature\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3101698114\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2827207264\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurniture\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1509553395\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystemFurnitureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 413509423\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnishingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 263784265\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcGeographicElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3493046030\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransportElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1620046519\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVirtualElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2769231204\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElement\",\n\t\t\t\t\t\t\t\t\t\"id\": 1758889154\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcGrid\",\n\t\t\t\t\t\t\t\t\t\"id\": 3009204131\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionPort\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3041715199\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPort\",\n\t\t\t\t\t\t\t\t\t\"id\": 3740093272\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProxy\",\n\t\t\t\t\t\t\t\t\t\"id\": 3219374653\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcExternalSpatialElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1209101575\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcExternalSpatialStructureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2853485674\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuilding\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4031249490\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingStorey\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3124254112\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSite\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4097777520\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpace\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3856911033\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialStructureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2706606064\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialZone\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 463610769\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialElement\",\n\t\t\t\t\t\t\t\t\t\"id\": 1412071761\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLinearAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1807405624\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1004757350\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2082059205\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPlanarAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1621171031\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3657597509\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralAction\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 682877961\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2757150158\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1235345126\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 603775116\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3689010777\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralActivity\",\n\t\t\t\t\t\t\t\t\t\"id\": 3544373492\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4243806635\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 734778138\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1975003073\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1179482911\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveMemberVarying\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2445595289\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 214636428\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceMemberVarying\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2218152070\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3979015343\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralMember\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 530289379\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralItem\",\n\t\t\t\t\t\t\t\t\t\"id\": 3136571912\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcProduct\",\n\t\t\t\t\t\t\t\"id\": 4208778838\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionEquipmentResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3898045240\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionMaterialResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1060000209\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionProductResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 488727124\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCrewResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3295246426\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLaborResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3827777499\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSubContractResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 148013059\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionResource\",\n\t\t\t\t\t\t\t\t\t\"id\": 2559216714\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcResource\",\n\t\t\t\t\t\t\t\"id\": 2914609552\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcObject\",\n\t\t\t\t\t\"id\": 3888040117\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcEventType\",\n\t\t\t\t\t\t\t\t\t\"id\": 4024345920\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProcedureType\",\n\t\t\t\t\t\t\t\t\t\"id\": 569719735\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcTaskType\",\n\t\t\t\t\t\t\t\t\t\"id\": 3206491090\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeProcess\",\n\t\t\t\t\t\t\t\"id\": 3736923433\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorStyle\",\n\t\t\t\t\t\t\t\t\t\"id\": 526551008\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeamType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 819618141\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementProxyType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1909888760\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChimneyType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2197970202\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumnType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 300633059\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoveringType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1916426348\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCurtainWallType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1457835157\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2323601079\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFootingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1893162501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMemberType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3181161470\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPileType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1158309216\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlateType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4017108033\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRailingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2893384427\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampFlightType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2324767716\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1469900589\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRoofType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2781568857\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcShadingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4074543187\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2533589738\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairFlightType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1039846685\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 338393293\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1898987631\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4009809668\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1950629157\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCivilElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3893394355\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcActuatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2874132201\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAlarmType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3001207471\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcControllerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 578613899\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowInstrumentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4037862832\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceTrippingUnitType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 655969474\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSensorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1783015770\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryControlElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3179687236\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionControlElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2063403501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionChamberElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1599208980\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirToAirHeatRecoveryType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1871374353\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBoilerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 231477066\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBurnerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2188180465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChillerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2951183804\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoilType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2301859152\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCondenserType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2816379211\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCooledBeamType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 335055490\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoolingTowerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2954562838\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricGeneratorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1534661035\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricMotorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1217240411\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEngineType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 132023988\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporativeCoolerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3174744832\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3390157468\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHeatExchangerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1251058090\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHumidifierType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1806887404\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMotorConnectionType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 977012517\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSolarDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1072016465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransformerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1692211062\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTubeBundleType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1600972822\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryEquipmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1911125066\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEnergyConversionDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2107101300\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalBoxType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1411407467\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDamperType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3961806047\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricDistributionBoardType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2417008758\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricTimeControlType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 712377611\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMeterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3815607619\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1842657554\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSwitchingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2315554128\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcValveType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 728799441\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowControllerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3907093117\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 395041908\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2674252688\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 869906466\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcJunctionBoxType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4288270099\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 804291784\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3198132628\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCompressorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3850581409\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFanType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 346874300\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPumpType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2250791053\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMovingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1482959167\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3293546465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1285652485\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3760055223\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4231323485\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1834744321\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricFlowStorageDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3277789161\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTankType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 5716631\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowStorageDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1339347760\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3352864051\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAudioVisualApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1532957894\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCommunicationsApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 400855858\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 663422040\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFireSuppressionTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4222183408\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLampType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1051575348\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLightFixtureType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1161773419\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMedicalDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1114901282\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOutletType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2837617999\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSanitaryTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1768891740\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceHeaterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1305183839\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStackTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3112655638\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWasteTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1133259667\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2297155007\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSilencerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2030761528\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFilterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1810631287\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcInterceptorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3946677679\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTreatmentDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3009222698\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionFlowElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3849074793\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3256556792\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementAssemblyType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2397081782\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementPartType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 39481116\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDiscreteAccessoryType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2635815018\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFastenerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2489546625\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMechanicalFastenerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2108223431\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingBarType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2572171363\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingMeshType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2310774935\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonAnchorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3081323446\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2415094496\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 964333572\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVibrationIsolatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3313531582\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementComponentType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2590856083\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnitureType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1268542332\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystemFurnitureElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1580310250\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnishingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4238390223\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcGeographicElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4095422895\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransportElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2097647324\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementType\",\n\t\t\t\t\t\t\t\t\t\"id\": 339256511\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3812236995\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialStructureElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3893378262\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialZoneType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2481509218\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialElementType\",\n\t\t\t\t\t\t\t\t\t\"id\": 710998568\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowStyle\",\n\t\t\t\t\t\t\t\t\t\"id\": 1299126871\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeProduct\",\n\t\t\t\t\t\t\t\"id\": 2347495698\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionEquipmentResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2185764099\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionMaterialResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4105962743\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionProductResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1525564444\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCrewResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1815067380\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLaborResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 428585644\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSubContractResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4095615324\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionResourceType\",\n\t\t\t\t\t\t\t\t\t\"id\": 2574617495\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeResource\",\n\t\t\t\t\t\t\t\"id\": 3698973494\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcTypeObject\",\n\t\t\t\t\t\"id\": 1628702193\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcObjectDefinition\",\n\t\t\t\"id\": 219451334\n\t\t},\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorLiningProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 2963535650\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorPanelProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 1714330368\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPermeableCoveringProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 3566463478\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcementDefinitionProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 3765753017\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowLiningProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 336235671\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowPanelProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 512836454\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcPreDefinedPropertySet\",\n\t\t\t\t\t\t\t\"id\": 3967405729\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcPropertySet\",\n\t\t\t\t\t\t\t\"id\": 1451395588\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementQuantity\",\n\t\t\t\t\t\t\t\t\t\"id\": 1883228015\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcQuantitySet\",\n\t\t\t\t\t\t\t\"id\": 2090586900\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcPropertySetDefinition\",\n\t\t\t\t\t\"id\": 3357820518\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcPropertySetTemplate\",\n\t\t\t\t\t\t\t\"id\": 492091185\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcComplexPropertyTemplate\",\n\t\t\t\t\t\t\t\t\t\"id\": 3875453745\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSimplePropertyTemplate\",\n\t\t\t\t\t\t\t\t\t\"id\": 3663146110\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcPropertyTemplate\",\n\t\t\t\t\t\t\t\"id\": 3521284610\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcPropertyTemplateDefinition\",\n\t\t\t\t\t\"id\": 1482703590\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcPropertyDefinition\",\n\t\t\t\"id\": 1680319473\n\t\t},\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToActor\",\n\t\t\t\t\t\t\t\"id\": 1683148259\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToControl\",\n\t\t\t\t\t\t\t\"id\": 2495723537\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToGroupByFactor\",\n\t\t\t\t\t\t\t\t\t\"id\": 1027710054\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToGroup\",\n\t\t\t\t\t\t\t\"id\": 1307041759\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToProcess\",\n\t\t\t\t\t\t\t\"id\": 4278684876\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToProduct\",\n\t\t\t\t\t\t\t\"id\": 2857406711\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToResource\",\n\t\t\t\t\t\t\t\"id\": 205026976\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelAssigns\",\n\t\t\t\t\t\"id\": 3939117080\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesApproval\",\n\t\t\t\t\t\t\t\"id\": 4095574036\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesClassification\",\n\t\t\t\t\t\t\t\"id\": 919958153\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesConstraint\",\n\t\t\t\t\t\t\t\"id\": 2728634034\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesDocument\",\n\t\t\t\t\t\t\t\"id\": 982818633\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesLibrary\",\n\t\t\t\t\t\t\t\"id\": 3840914261\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesMaterial\",\n\t\t\t\t\t\t\t\"id\": 2655215786\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelAssociates\",\n\t\t\t\t\t\"id\": 1865459582\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPathElements\",\n\t\t\t\t\t\t\t\t\t\"id\": 3945020480\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsWithRealizingElements\",\n\t\t\t\t\t\t\t\t\t\"id\": 3678494232\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsElements\",\n\t\t\t\t\t\t\t\"id\": 1204542856\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPortToElement\",\n\t\t\t\t\t\t\t\"id\": 4201705270\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPorts\",\n\t\t\t\t\t\t\t\"id\": 3190031847\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsStructuralActivity\",\n\t\t\t\t\t\t\t\"id\": 2127690289\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsWithEccentricity\",\n\t\t\t\t\t\t\t\t\t\"id\": 504942748\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsStructuralMember\",\n\t\t\t\t\t\t\t\"id\": 1638771189\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelContainedInSpatialStructure\",\n\t\t\t\t\t\t\t\"id\": 3242617779\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelCoversBldgElements\",\n\t\t\t\t\t\t\t\"id\": 886880790\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelCoversSpaces\",\n\t\t\t\t\t\t\t\"id\": 2802773753\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelFillsElement\",\n\t\t\t\t\t\t\t\"id\": 3940055652\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelFlowControlElements\",\n\t\t\t\t\t\t\t\"id\": 279856033\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelInterferesElements\",\n\t\t\t\t\t\t\t\"id\": 427948657\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelReferencedInSpatialStructure\",\n\t\t\t\t\t\t\t\"id\": 1245217292\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelSequence\",\n\t\t\t\t\t\t\t\"id\": 4122056220\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelServicesBuildings\",\n\t\t\t\t\t\t\t\"id\": 366585022\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary2ndLevel\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1521410863\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary1stLevel\",\n\t\t\t\t\t\t\t\t\t\"id\": 3523091289\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary\",\n\t\t\t\t\t\t\t\"id\": 3451746338\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelConnects\",\n\t\t\t\t\t\"id\": 826625072\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"IfcRelDeclares\",\n\t\t\t\t\t\"id\": 2565941209\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAggregates\",\n\t\t\t\t\t\t\t\"id\": 160246688\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelNests\",\n\t\t\t\t\t\t\t\"id\": 3268803585\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelProjectsElement\",\n\t\t\t\t\t\t\t\"id\": 750771296\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelVoidsElement\",\n\t\t\t\t\t\t\t\"id\": 1401173127\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelDecomposes\",\n\t\t\t\t\t\"id\": 2551354335\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByObject\",\n\t\t\t\t\t\t\t\"id\": 1462361463\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByProperties\",\n\t\t\t\t\t\t\t\"id\": 4186316022\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByTemplate\",\n\t\t\t\t\t\t\t\"id\": 307848117\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByType\",\n\t\t\t\t\t\t\t\"id\": 781010003\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelDefines\",\n\t\t\t\t\t\"id\": 693640335\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcRelationship\",\n\t\t\t\"id\": 478536968\n\t\t}\n\t],\n\t\"name\": \"IfcRoot\",\n\t\"id\": 2341007311\n}","export interface JSONLD{\n    \"@context\": any,\n    \"@graph\": any[]\n}\n\nexport interface TreeNode{\n    \"name\": string;\n    \"id\": number;\n    \"children\"?: TreeNode[];\n}\n\nexport enum SerializationFormat{\n    NQuads=\"nquads\",\n    JSONLD=\"jsonld\"\n}\n\nexport enum Mimetype{\n    NTriples=\"application/n-triples\",\n    Turtle=\"text/turtle\",\n    NQuads=\"application/n-quads\",\n    Trig=\"application/trig\",\n    SPARQLJSON=\"application/sparql-results+json\",\n    JSONLD=\"application/ld+json\",\n    DLOG=\"application/x.datalog\"\n}\n\nexport interface Triple{\n    subject: TripleItem,\n    predicate: TripleItem,\n    object: TripleItem,\n    graph: TripleItem\n}\n\nexport interface TripleItem{\n    termType: string;\n    value: string;\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { TreeNode } from \"./BaseDefinitions\";\nimport { IfcTypesTree } from \"./IfcTypesTree\";\nimport { defaultURIBuilder } from \"./uri-builder\";\n\nexport async function buildClassInstances(ifcAPI: WebIFC.IfcAPI, modelID: number, ifcType: number, rdfClasses: string[], includeSubTypes: boolean = false): Promise<any[]>{\n\n    let items: any[] = [];\n\n    // Traversing IfcProductTree for subtypes takes around 0.3ms, so not very expensive\n    if(includeSubTypes){\n\n        const subTypes: number[] = getElementSubtypes(ifcType);\n\n        for (let i = 0; i < subTypes.length; i++) {\n            items.push(...await ifcAPI.properties.getAllItemsOfType(modelID, subTypes[i], false));\n        }\n\n    }else{\n        items = await ifcAPI.properties.getAllItemsOfType(modelID, ifcType, false);\n    }\n\n    return buildClassInstancesFromExpressIDs(ifcAPI, modelID, items, rdfClasses);\n    \n}\n\nexport async function buildClassInstancesFromExpressIDs(ifcAPI: WebIFC.IfcAPI, modelID: number, expressIDs: number[], rdfClasses: string[]){\n\n    const graph = [];\n\n    for (let i = 0; i < expressIDs.length; i++) {\n        const expressID = expressIDs[i];\n        const { GlobalId } = await ifcAPI.properties.getItemProperties(modelID, expressID);\n        const URI = defaultURIBuilder(GlobalId.value);\n\n        // Push spaces\n        graph.push({\n            \"@id\": URI,\n            \"@type\": rdfClasses\n        });\n    }\n\n    return graph;\n\n}\n\nexport function getElementSubtypes(type: number): number[]{\n\n    let subTypes: number[] = [];\n\n    // Get the tree node that corresponds to the requested type\n    const treeNode = searchProductTree(IfcTypesTree, type);\n\n    if(treeNode){\n        // Get all typeIds for the node itself and its subtypes\n        collectAllIds(treeNode, subTypes);\n    }\n\n    return subTypes;\n\n    // Search IfcProductTree for the particular typeID and get the node\n    function searchProductTree(node: TreeNode, typeID: number): TreeNode|null{\n        if(node.id == typeID){\n             return node;\n        }else if (node.children != null){\n             var i;\n             var result: TreeNode|null = null;\n             for(i=0; result == null && i < node.children.length; i++){\n                  result = searchProductTree(node.children[i], typeID);\n             }\n             return result;\n        }\n        return null;\n    }\n\n    // Collect all ids of tree node and its children\n    function collectAllIds(node: TreeNode, ids: number[] = []){\n        ids.push(node.id);\n        if(node.children){\n            for (let i = 0; i < node.children.length; i++) {\n                collectAllIds(node.children[i], ids);\n            }\n        }\n    }\n\n}","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class IdentifierIssuer {\n  /**\n   * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n   * identifiers, keeping track of any previously issued identifiers.\n   *\n   * @param prefix the prefix to use ('<prefix><counter>').\n   * @param existing an existing Map to use.\n   * @param counter the counter to use.\n   */\n  constructor(prefix, existing = new Map(), counter = 0) {\n    this.prefix = prefix;\n    this._existing = existing;\n    this.counter = counter;\n  }\n\n  /**\n   * Copies this IdentifierIssuer.\n   *\n   * @return a copy of this IdentifierIssuer.\n   */\n  clone() {\n    const {prefix, _existing, counter} = this;\n    return new IdentifierIssuer(prefix, new Map(_existing), counter);\n  }\n\n  /**\n   * Gets the new identifier for the given old identifier, where if no old\n   * identifier is given a new identifier will be generated.\n   *\n   * @param [old] the old identifier to get the new identifier for.\n   *\n   * @return the new identifier.\n   */\n  getId(old) {\n    // return existing old identifier\n    const existing = old && this._existing.get(old);\n    if(existing) {\n      return existing;\n    }\n\n    // get next identifier\n    const identifier = this.prefix + this.counter;\n    this.counter++;\n\n    // save mapping\n    if(old) {\n      this._existing.set(old, identifier);\n    }\n\n    return identifier;\n  }\n\n  /**\n   * Returns true if the given old identifer has already been assigned a new\n   * identifier.\n   *\n   * @param old the old identifier to check.\n   *\n   * @return true if the old identifier has been assigned a new identifier,\n   *   false if not.\n   */\n  hasId(old) {\n    return this._existing.has(old);\n  }\n\n  /**\n   * Returns all of the IDs that have been issued new IDs in the order in\n   * which they were issued new IDs.\n   *\n   * @return the list of old IDs that has been issued new IDs in order.\n   */\n  getOldIds() {\n    return [...this._existing.keys()];\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst crypto = require('crypto');\n\nmodule.exports = class MessageDigest {\n  /**\n   * Creates a new MessageDigest.\n   *\n   * @param algorithm the algorithm to use.\n   */\n  constructor(algorithm) {\n    this.md = crypto.createHash(algorithm);\n  }\n\n  update(msg) {\n    this.md.update(msg, 'utf8');\n  }\n\n  digest() {\n    return this.md.digest('hex');\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: convert to ES6 iterable?\n\nmodule.exports = class Permuter {\n  /**\n   * A Permuter iterates over all possible permutations of the given array\n   * of elements.\n   *\n   * @param list the array of elements to iterate over.\n   */\n  constructor(list) {\n    // original array\n    this.current = list.sort();\n    // indicates whether there are more permutations\n    this.done = false;\n    // directional info for permutation algorithm\n    this.dir = new Map();\n    for(let i = 0; i < list.length; ++i) {\n      this.dir.set(list[i], true);\n    }\n  }\n\n  /**\n   * Returns true if there is another permutation.\n   *\n   * @return true if there is another permutation, false if not.\n   */\n  hasNext() {\n    return !this.done;\n  }\n\n  /**\n   * Gets the next permutation. Call hasNext() to ensure there is another one\n   * first.\n   *\n   * @return the next permutation.\n   */\n  next() {\n    // copy current permutation to return it\n    const {current, dir} = this;\n    const rval = current.slice();\n\n    /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n     permutation algorithm. */\n\n    // get largest mobile element k\n    // (mobile: element is greater than the one it is looking at)\n    let k = null;\n    let pos = 0;\n    const length = current.length;\n    for(let i = 0; i < length; ++i) {\n      const element = current[i];\n      const left = dir.get(element);\n      if((k === null || element > k) &&\n        ((left && i > 0 && element > current[i - 1]) ||\n        (!left && i < (length - 1) && element > current[i + 1]))) {\n        k = element;\n        pos = i;\n      }\n    }\n\n    // no more permutations\n    if(k === null) {\n      this.done = true;\n    } else {\n      // swap k and the element it is looking at\n      const swap = dir.get(k) ? pos - 1 : pos + 1;\n      current[pos] = current[swap];\n      current[swap] = k;\n\n      // reverse the direction of all elements larger than k\n      for(const element of current) {\n        if(element > k) {\n          dir.set(element, !dir.get(element));\n        }\n      }\n    }\n\n    return rval;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// eslint-disable-next-line no-unused-vars\nconst TERMS = ['subject', 'predicate', 'object', 'graph'];\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst RDF_LANGSTRING = RDF + 'langString';\nconst XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nconst TYPE_NAMED_NODE = 'NamedNode';\nconst TYPE_BLANK_NODE = 'BlankNode';\nconst TYPE_LITERAL = 'Literal';\nconst TYPE_DEFAULT_GRAPH = 'DefaultGraph';\n\n// build regexes\nconst REGEX = {};\n(() => {\n  const iri = '(?:<([^:]+:[^>]*)>)';\n  // https://www.w3.org/TR/turtle/#grammar-production-BLANK_NODE_LABEL\n  const PN_CHARS_BASE =\n    'A-Z' + 'a-z' +\n    '\\u00C0-\\u00D6' +\n    '\\u00D8-\\u00F6' +\n    '\\u00F8-\\u02FF' +\n    '\\u0370-\\u037D' +\n    '\\u037F-\\u1FFF' +\n    '\\u200C-\\u200D' +\n    '\\u2070-\\u218F' +\n    '\\u2C00-\\u2FEF' +\n    '\\u3001-\\uD7FF' +\n    '\\uF900-\\uFDCF' +\n    '\\uFDF0-\\uFFFD';\n    // TODO:\n    //'\\u10000-\\uEFFFF';\n  const PN_CHARS_U =\n    PN_CHARS_BASE +\n    '_';\n  const PN_CHARS =\n    PN_CHARS_U +\n    '0-9' +\n    '-' +\n    '\\u00B7' +\n    '\\u0300-\\u036F' +\n    '\\u203F-\\u2040';\n  const BLANK_NODE_LABEL =\n    '(_:' +\n      '(?:[' + PN_CHARS_U + '0-9])' +\n      '(?:(?:[' + PN_CHARS + '.])*(?:[' + PN_CHARS + ']))?' +\n    ')';\n  const bnode = BLANK_NODE_LABEL;\n  const plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  const datatype = '(?:\\\\^\\\\^' + iri + ')';\n  const language = '(?:@([a-zA-Z]+(?:-[a-zA-Z0-9]+)*))';\n  const literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  const ws = '[ \\\\t]+';\n  const wso = '[ \\\\t]*';\n\n  // define quad part regexes\n  const subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  const property = iri + ws;\n  const object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  const graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // end of line and empty regexes\n  REGEX.eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  REGEX.empty = new RegExp('^' + wso + '$');\n\n  // full quad regex\n  REGEX.quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + '$');\n})();\n\nmodule.exports = class NQuads {\n  /**\n   * Parses RDF in the form of N-Quads.\n   *\n   * @param input the N-Quads input to parse.\n   *\n   * @return an RDF dataset (an array of quads per http://rdf.js.org/).\n   */\n  static parse(input) {\n    // build RDF dataset\n    const dataset = [];\n\n    const graphs = {};\n\n    // split N-Quad input into lines\n    const lines = input.split(REGEX.eoln);\n    let lineNumber = 0;\n    for(const line of lines) {\n      lineNumber++;\n\n      // skip empty lines\n      if(REGEX.empty.test(line)) {\n        continue;\n      }\n\n      // parse quad\n      const match = line.match(REGEX.quad);\n      if(match === null) {\n        throw new Error('N-Quads parse error on line ' + lineNumber + '.');\n      }\n\n      // create RDF quad\n      const quad = {subject: null, predicate: null, object: null, graph: null};\n\n      // get subject\n      if(match[1] !== undefined) {\n        quad.subject = {termType: TYPE_NAMED_NODE, value: match[1]};\n      } else {\n        quad.subject = {termType: TYPE_BLANK_NODE, value: match[2]};\n      }\n\n      // get predicate\n      quad.predicate = {termType: TYPE_NAMED_NODE, value: match[3]};\n\n      // get object\n      if(match[4] !== undefined) {\n        quad.object = {termType: TYPE_NAMED_NODE, value: match[4]};\n      } else if(match[5] !== undefined) {\n        quad.object = {termType: TYPE_BLANK_NODE, value: match[5]};\n      } else {\n        quad.object = {\n          termType: TYPE_LITERAL,\n          value: undefined,\n          datatype: {\n            termType: TYPE_NAMED_NODE\n          }\n        };\n        if(match[7] !== undefined) {\n          quad.object.datatype.value = match[7];\n        } else if(match[8] !== undefined) {\n          quad.object.datatype.value = RDF_LANGSTRING;\n          quad.object.language = match[8];\n        } else {\n          quad.object.datatype.value = XSD_STRING;\n        }\n        quad.object.value = _unescape(match[6]);\n      }\n\n      // get graph\n      if(match[9] !== undefined) {\n        quad.graph = {\n          termType: TYPE_NAMED_NODE,\n          value: match[9]\n        };\n      } else if(match[10] !== undefined) {\n        quad.graph = {\n          termType: TYPE_BLANK_NODE,\n          value: match[10]\n        };\n      } else {\n        quad.graph = {\n          termType: TYPE_DEFAULT_GRAPH,\n          value: ''\n        };\n      }\n\n      // only add quad if it is unique in its graph\n      if(!(quad.graph.value in graphs)) {\n        graphs[quad.graph.value] = [quad];\n        dataset.push(quad);\n      } else {\n        let unique = true;\n        const quads = graphs[quad.graph.value];\n        for(const q of quads) {\n          if(_compareTriples(q, quad)) {\n            unique = false;\n            break;\n          }\n        }\n        if(unique) {\n          quads.push(quad);\n          dataset.push(quad);\n        }\n      }\n    }\n\n    return dataset;\n  }\n\n  /**\n   * Converts an RDF dataset to N-Quads.\n   *\n   * @param dataset (array of quads) the RDF dataset to convert.\n   *\n   * @return the N-Quads string.\n   */\n  static serialize(dataset) {\n    if(!Array.isArray(dataset)) {\n      dataset = NQuads.legacyDatasetToQuads(dataset);\n    }\n    const quads = [];\n    for(const quad of dataset) {\n      quads.push(NQuads.serializeQuad(quad));\n    }\n    return quads.sort().join('');\n  }\n\n  /**\n   * Converts an RDF quad to an N-Quad string (a single quad).\n   *\n   * @param quad the RDF quad convert.\n   *\n   * @return the N-Quad string.\n   */\n  static serializeQuad(quad) {\n    const s = quad.subject;\n    const p = quad.predicate;\n    const o = quad.object;\n    const g = quad.graph;\n\n    let nquad = '';\n\n    // subject can only be NamedNode or BlankNode\n    if(s.termType === TYPE_NAMED_NODE) {\n      nquad += `<${s.value}>`;\n    } else {\n      nquad += `${s.value}`;\n    }\n\n    // predicate can only be NamedNode\n    nquad += ` <${p.value}> `;\n\n    // object is NamedNode, BlankNode, or Literal\n    if(o.termType === TYPE_NAMED_NODE) {\n      nquad += `<${o.value}>`;\n    } else if(o.termType === TYPE_BLANK_NODE) {\n      nquad += o.value;\n    } else {\n      nquad += `\"${_escape(o.value)}\"`;\n      if(o.datatype.value === RDF_LANGSTRING) {\n        if(o.language) {\n          nquad += `@${o.language}`;\n        }\n      } else if(o.datatype.value !== XSD_STRING) {\n        nquad += `^^<${o.datatype.value}>`;\n      }\n    }\n\n    // graph can only be NamedNode or BlankNode (or DefaultGraph, but that\n    // does not add to `nquad`)\n    if(g.termType === TYPE_NAMED_NODE) {\n      nquad += ` <${g.value}>`;\n    } else if(g.termType === TYPE_BLANK_NODE) {\n      nquad += ` ${g.value}`;\n    }\n\n    nquad += ' .\\n';\n    return nquad;\n  }\n\n  /**\n   * Converts a legacy-formatted dataset to an array of quads dataset per\n   * http://rdf.js.org/.\n   *\n   * @param dataset the legacy dataset to convert.\n   *\n   * @return the array of quads dataset.\n   */\n  static legacyDatasetToQuads(dataset) {\n    const quads = [];\n\n    const termTypeMap = {\n      'blank node': TYPE_BLANK_NODE,\n      IRI: TYPE_NAMED_NODE,\n      literal: TYPE_LITERAL\n    };\n\n    for(const graphName in dataset) {\n      const triples = dataset[graphName];\n      triples.forEach(triple => {\n        const quad = {};\n        for(const componentName in triple) {\n          const oldComponent = triple[componentName];\n          const newComponent = {\n            termType: termTypeMap[oldComponent.type],\n            value: oldComponent.value\n          };\n          if(newComponent.termType === TYPE_LITERAL) {\n            newComponent.datatype = {\n              termType: TYPE_NAMED_NODE\n            };\n            if('datatype' in oldComponent) {\n              newComponent.datatype.value = oldComponent.datatype;\n            }\n            if('language' in oldComponent) {\n              if(!('datatype' in oldComponent)) {\n                newComponent.datatype.value = RDF_LANGSTRING;\n              }\n              newComponent.language = oldComponent.language;\n            } else if(!('datatype' in oldComponent)) {\n              newComponent.datatype.value = XSD_STRING;\n            }\n          }\n          quad[componentName] = newComponent;\n        }\n        if(graphName === '@default') {\n          quad.graph = {\n            termType: TYPE_DEFAULT_GRAPH,\n            value: ''\n          };\n        } else {\n          quad.graph = {\n            termType: graphName.startsWith('_:') ?\n              TYPE_BLANK_NODE : TYPE_NAMED_NODE,\n            value: graphName\n          };\n        }\n        quads.push(quad);\n      });\n    }\n\n    return quads;\n  }\n};\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareTriples(t1, t2) {\n  // compare subject and object types first as it is the quickest check\n  if(!(t1.subject.termType === t2.subject.termType &&\n    t1.object.termType === t2.object.termType)) {\n    return false;\n  }\n  // compare values\n  if(!(t1.subject.value === t2.subject.value &&\n    t1.predicate.value === t2.predicate.value &&\n    t1.object.value === t2.object.value)) {\n    return false;\n  }\n  if(t1.object.termType !== TYPE_LITERAL) {\n    // no `datatype` or `language` to check\n    return true;\n  }\n  return (\n    (t1.object.datatype.termType === t2.object.datatype.termType) &&\n    (t1.object.language === t2.object.language) &&\n    (t1.object.datatype.value === t2.object.datatype.value)\n  );\n}\n\nconst _escapeRegex = /[\"\\\\\\n\\r]/g;\n/**\n * Escape string to N-Quads literal\n */\nfunction _escape(s) {\n  return s.replace(_escapeRegex, function(match) {\n    switch(match) {\n      case '\"': return '\\\\\"';\n      case '\\\\': return '\\\\\\\\';\n      case '\\n': return '\\\\n';\n      case '\\r': return '\\\\r';\n    }\n  });\n}\n\nconst _unescapeRegex =\n  /(?:\\\\([tbnrf\"'\\\\]))|(?:\\\\u([0-9A-Fa-f]{4}))|(?:\\\\U([0-9A-Fa-f]{8}))/g;\n/**\n * Unescape N-Quads literal to string\n */\nfunction _unescape(s) {\n  return s.replace(_unescapeRegex, function(match, code, u, U) {\n    if(code) {\n      switch(code) {\n        case 't': return '\\t';\n        case 'b': return '\\b';\n        case 'n': return '\\n';\n        case 'r': return '\\r';\n        case 'f': return '\\f';\n        case '\"': return '\"';\n        case '\\'': return '\\'';\n        case '\\\\': return '\\\\';\n      }\n    }\n    if(u) {\n      return String.fromCharCode(parseInt(u, 16));\n    }\n    if(U) {\n      // FIXME: support larger values\n      throw new Error('Unsupported U escape');\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015 {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  async main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    let i = 0;\n    for(const id of nonNormalized) {\n      // Note: batch hashing first degree quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // steps 5.3.1 and 5.3.2:\n      await this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = await this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  async hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = await md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  async hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  async hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = await this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      let i = 0;\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n        // Note: batch permutations 3 at a time\n        if(++i % 3 === 0) {\n          await this._yield();\n        }\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = await this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: await md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // Note: batch hashing related blank node quads 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.1) For each component in quad, if component is the subject, object,\n      // and graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      await Promise.all([\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.subject, position: 's',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.object, position: 'o',\n          id, issuer, hashToRelated\n        }),\n        this._addRelatedBlankNodeHash({\n          quad, component: quad.graph, position: 'g',\n          id, issuer, hashToRelated\n        })\n      ]);\n    }\n\n    return hashToRelated;\n  }\n\n  async _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = await this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  async _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = await this.hashRelatedBlankNode(\n      related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n\n  async _yield() {\n    return new Promise(resolve => setImmediate(resolve));\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\n\nmodule.exports = class URDNA2012 extends URDNA2015 {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  async createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    let i = 0;\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // Note: batch hashing related blank nodes 100 at a time\n      if(++i % 100 === 0) {\n        await this._yield();\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = await this.hashRelatedBlankNode(\n        related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst IdentifierIssuer = require('./IdentifierIssuer');\nconst MessageDigest = require('./MessageDigest');\nconst Permuter = require('./Permuter');\nconst NQuads = require('./NQuads');\n\nmodule.exports = class URDNA2015Sync {\n  constructor() {\n    this.name = 'URDNA2015';\n    this.blankNodeInfo = new Map();\n    this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n    this.hashAlgorithm = 'sha256';\n    this.quads = null;\n  }\n\n  // 4.4) Normalization Algorithm\n  main(dataset) {\n    this.quads = dataset;\n\n    // 1) Create the normalization state.\n    // 2) For every quad in input dataset:\n    for(const quad of dataset) {\n      // 2.1) For each blank node that occurs in the quad, add a reference\n      // to the quad using the blank node identifier in the blank node to\n      // quads map, creating a new entry if necessary.\n      this._addBlankNodeQuadInfo({quad, component: quad.subject});\n      this._addBlankNodeQuadInfo({quad, component: quad.object});\n      this._addBlankNodeQuadInfo({quad, component: quad.graph});\n    }\n\n    // 3) Create a list of non-normalized blank node identifiers\n    // non-normalized identifiers and populate it using the keys from the\n    // blank node to quads map.\n    // Note: We use a map here and it was generated during step 2.\n\n    // 4) `simple` flag is skipped -- loop is optimized away. This optimization\n    // is permitted because there was a typo in the hash first degree quads\n    // algorithm in the URDNA2015 spec that was implemented widely making it\n    // such that it could not be fixed; the result was that the loop only\n    // needs to be run once and the first degree quad hashes will never change.\n    // 5.1-5.2 are skipped; first degree quad hashes are generated just once\n    // for all non-normalized blank nodes.\n\n    // 5.3) For each blank node identifier identifier in non-normalized\n    // identifiers:\n    const hashToBlankNodes = new Map();\n    const nonNormalized = [...this.blankNodeInfo.keys()];\n    for(const id of nonNormalized) {\n      // steps 5.3.1 and 5.3.2:\n      this._hashAndTrackBlankNode({id, hashToBlankNodes});\n    }\n\n    // 5.4) For each hash to identifier list mapping in hash to blank\n    // nodes map, lexicographically-sorted by hash:\n    const hashes = [...hashToBlankNodes.keys()].sort();\n    // optimize away second sort, gather non-unique hashes in order as we go\n    const nonUnique = [];\n    for(const hash of hashes) {\n      // 5.4.1) If the length of identifier list is greater than 1,\n      // continue to the next mapping.\n      const idList = hashToBlankNodes.get(hash);\n      if(idList.length > 1) {\n        nonUnique.push(idList);\n        continue;\n      }\n\n      // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n      // issuer and the single blank node identifier in identifier\n      // list, identifier, to issue a canonical replacement identifier\n      // for identifier.\n      const id = idList[0];\n      this.canonicalIssuer.getId(id);\n\n      // Note: These steps are skipped, optimized away since the loop\n      // only needs to be run once.\n      // 5.4.3) Remove identifier from non-normalized identifiers.\n      // 5.4.4) Remove hash from the hash to blank nodes map.\n      // 5.4.5) Set simple to true.\n    }\n\n    // 6) For each hash to identifier list mapping in hash to blank nodes map,\n    // lexicographically-sorted by hash:\n    // Note: sort optimized away, use `nonUnique`.\n    for(const idList of nonUnique) {\n      // 6.1) Create hash path list where each item will be a result of\n      // running the Hash N-Degree Quads algorithm.\n      const hashPathList = [];\n\n      // 6.2) For each blank node identifier identifier in identifier list:\n      for(const id of idList) {\n        // 6.2.1) If a canonical identifier has already been issued for\n        // identifier, continue to the next identifier.\n        if(this.canonicalIssuer.hasId(id)) {\n          continue;\n        }\n\n        // 6.2.2) Create temporary issuer, an identifier issuer\n        // initialized with the prefix _:b.\n        const issuer = new IdentifierIssuer('_:b');\n\n        // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n        // issuer and identifier, to issue a new temporary blank node\n        // identifier for identifier.\n        issuer.getId(id);\n\n        // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n        // temporary issuer, and append the result to the hash path list.\n        const result = this.hashNDegreeQuads(id, issuer);\n        hashPathList.push(result);\n      }\n\n      // 6.3) For each result in the hash path list,\n      // lexicographically-sorted by the hash in result:\n      hashPathList.sort(_stringHashCompare);\n      for(const result of hashPathList) {\n        // 6.3.1) For each blank node identifier, existing identifier,\n        // that was issued a temporary identifier by identifier issuer\n        // in result, issue a canonical identifier, in the same order,\n        // using the Issue Identifier algorithm, passing canonical\n        // issuer and existing identifier.\n        const oldIds = result.issuer.getOldIds();\n        for(const id of oldIds) {\n          this.canonicalIssuer.getId(id);\n        }\n      }\n    }\n\n    /* Note: At this point all blank nodes in the set of RDF quads have been\n    assigned canonical identifiers, which have been stored in the canonical\n    issuer. Here each quad is updated by assigning each of its blank nodes\n    its new identifier. */\n\n    // 7) For each quad, quad, in input dataset:\n    const normalized = [];\n    for(const quad of this.quads) {\n      // 7.1) Create a copy, quad copy, of quad and replace any existing\n      // blank node identifiers using the canonical identifiers\n      // previously issued by canonical issuer.\n      // Note: We optimize with shallow copies here.\n      const q = {...quad};\n      q.subject = this._useCanonicalId({component: q.subject});\n      q.object = this._useCanonicalId({component: q.object});\n      q.graph = this._useCanonicalId({component: q.graph});\n      // 7.2) Add quad copy to the normalized dataset.\n      normalized.push(NQuads.serializeQuad(q));\n    }\n\n    // sort normalized output\n    normalized.sort();\n\n    // 8) Return the normalized dataset.\n    return normalized.join('');\n  }\n\n  // 4.6) Hash First Degree Quads\n  hashFirstDegreeQuads(id) {\n    // 1) Initialize nquads to an empty list. It will be used to store quads in\n    // N-Quads format.\n    const nquads = [];\n\n    // 2) Get the list of quads `quads` associated with the reference blank node\n    // identifier in the blank node to quads map.\n    const info = this.blankNodeInfo.get(id);\n    const quads = info.quads;\n\n    // 3) For each quad `quad` in `quads`:\n    for(const quad of quads) {\n      // 3.1) Serialize the quad in N-Quads format with the following special\n      // rule:\n\n      // 3.1.1) If any component in quad is an blank node, then serialize it\n      // using a special identifier as follows:\n      const copy = {\n        subject: null, predicate: quad.predicate, object: null, graph: null\n      };\n      // 3.1.2) If the blank node's existing blank node identifier matches\n      // the reference blank node identifier then use the blank node\n      // identifier _:a, otherwise, use the blank node identifier _:z.\n      copy.subject = this.modifyFirstDegreeComponent(\n        id, quad.subject, 'subject');\n      copy.object = this.modifyFirstDegreeComponent(\n        id, quad.object, 'object');\n      copy.graph = this.modifyFirstDegreeComponent(\n        id, quad.graph, 'graph');\n      nquads.push(NQuads.serializeQuad(copy));\n    }\n\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    const md = new MessageDigest(this.hashAlgorithm);\n    for(const nquad of nquads) {\n      md.update(nquad);\n    }\n    info.hash = md.digest();\n    return info.hash;\n  }\n\n  // 4.7) Hash Related Blank Node\n  hashRelatedBlankNode(related, quad, issuer, position) {\n    // 1) Set the identifier to use for related, preferring first the canonical\n    // identifier for related if issued, second the identifier issued by issuer\n    // if issued, and last, if necessary, the result of the Hash First Degree\n    // Quads algorithm, passing related.\n    let id;\n    if(this.canonicalIssuer.hasId(related)) {\n      id = this.canonicalIssuer.getId(related);\n    } else if(issuer.hasId(related)) {\n      id = issuer.getId(related);\n    } else {\n      id = this.blankNodeInfo.get(related).hash;\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    const md = new MessageDigest(this.hashAlgorithm);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(this.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return md.digest();\n  }\n\n  // 4.8) Hash N-Degree Quads\n  hashNDegreeQuads(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    // Note: 2) and 3) handled within `createHashToRelated`\n    const md = new MessageDigest(this.hashAlgorithm);\n    const hashToRelated = this.createHashToRelated(id, issuer);\n\n    // 4) Create an empty string, data to hash.\n    // Note: We created a hash object `md` above instead.\n\n    // 5) For each related hash to blank node list mapping in hash to related\n    // blank nodes map, sorted lexicographically by related hash:\n    const hashes = [...hashToRelated.keys()].sort();\n    for(const hash of hashes) {\n      // 5.1) Append the related hash to the data to hash.\n      md.update(hash);\n\n      // 5.2) Create a string chosen path.\n      let chosenPath = '';\n\n      // 5.3) Create an unset chosen issuer variable.\n      let chosenIssuer;\n\n      // 5.4) For each permutation of blank node list:\n      const permuter = new Permuter(hashToRelated.get(hash));\n      while(permuter.hasNext()) {\n        const permutation = permuter.next();\n\n        // 5.4.1) Create a copy of issuer, issuer copy.\n        let issuerCopy = issuer.clone();\n\n        // 5.4.2) Create a string path.\n        let path = '';\n\n        // 5.4.3) Create a recursion list, to store blank node identifiers\n        // that must be recursively processed by this algorithm.\n        const recursionList = [];\n\n        // 5.4.4) For each related in permutation:\n        let nextPermutation = false;\n        for(const related of permutation) {\n          // 5.4.4.1) If a canonical identifier has been issued for\n          // related, append it to path.\n          if(this.canonicalIssuer.hasId(related)) {\n            path += this.canonicalIssuer.getId(related);\n          } else {\n            // 5.4.4.2) Otherwise:\n            // 5.4.4.2.1) If issuer copy has not issued an identifier for\n            // related, append related to recursion list.\n            if(!issuerCopy.hasId(related)) {\n              recursionList.push(related);\n            }\n            // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n            // issuer copy and related and append the result to path.\n            path += issuerCopy.getId(related);\n          }\n\n          // 5.4.4.3) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.5) For each related in recursion list:\n        for(const related of recursionList) {\n          // 5.4.5.1) Set result to the result of recursively executing\n          // the Hash N-Degree Quads algorithm, passing related for\n          // identifier and issuer copy for path identifier issuer.\n          const result = this.hashNDegreeQuads(related, issuerCopy);\n\n          // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n          // copy and related and append the result to path.\n          path += issuerCopy.getId(related);\n\n          // 5.4.5.3) Append <, the hash in result, and > to path.\n          path += `<${result.hash}>`;\n\n          // 5.4.5.4) Set issuer copy to the identifier issuer in\n          // result.\n          issuerCopy = result.issuer;\n\n          // 5.4.5.5) If chosen path is not empty and the length of path\n          // is greater than or equal to the length of chosen path and\n          // path is lexicographically greater than chosen path, then\n          // skip to the next permutation.\n          // Note: Comparing path length to chosen path length can be optimized\n          // away; only compare lexicographically.\n          if(chosenPath.length !== 0 && path > chosenPath) {\n            nextPermutation = true;\n            break;\n          }\n        }\n\n        if(nextPermutation) {\n          continue;\n        }\n\n        // 5.4.6) If chosen path is empty or path is lexicographically\n        // less than chosen path, set chosen path to path and chosen\n        // issuer to issuer copy.\n        if(chosenPath.length === 0 || path < chosenPath) {\n          chosenPath = path;\n          chosenIssuer = issuerCopy;\n        }\n      }\n\n      // 5.5) Append chosen path to data to hash.\n      md.update(chosenPath);\n\n      // 5.6) Replace issuer, by reference, with chosen issuer.\n      issuer = chosenIssuer;\n    }\n\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    return {hash: md.digest(), issuer};\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    /* Note: A mistake in the URDNA2015 spec that made its way into\n    implementations (and therefore must stay to avoid interop breakage)\n    resulted in an assigned canonical ID, if available for\n    `component.value`, not being used in place of `_:a`/`_:z`, so\n    we don't use it here. */\n    return {\n      termType: 'BlankNode',\n      value: component.value === id ? '_:a' : '_:z'\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return `<${quad.predicate.value}>`;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) For each component in quad, if component is the subject, object,\n      // or graph name and it is a blank node that is not identified by\n      // identifier:\n      // steps 3.1.1 and 3.1.2 occur in helpers:\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.subject, position: 's',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.object, position: 'o',\n        id, issuer, hashToRelated\n      });\n      this._addRelatedBlankNodeHash({\n        quad, component: quad.graph, position: 'g',\n        id, issuer, hashToRelated\n      });\n    }\n\n    return hashToRelated;\n  }\n\n  _hashAndTrackBlankNode({id, hashToBlankNodes}) {\n    // 5.3.1) Create a hash, hash, according to the Hash First Degree\n    // Quads algorithm.\n    const hash = this.hashFirstDegreeQuads(id);\n\n    // 5.3.2) Add hash and identifier to hash to blank nodes map,\n    // creating a new entry if necessary.\n    const idList = hashToBlankNodes.get(hash);\n    if(!idList) {\n      hashToBlankNodes.set(hash, [id]);\n    } else {\n      idList.push(id);\n    }\n  }\n\n  _addBlankNodeQuadInfo({quad, component}) {\n    if(component.termType !== 'BlankNode') {\n      return;\n    }\n    const id = component.value;\n    const info = this.blankNodeInfo.get(id);\n    if(info) {\n      info.quads.add(quad);\n    } else {\n      this.blankNodeInfo.set(id, {quads: new Set([quad]), hash: null});\n    }\n  }\n\n  _addRelatedBlankNodeHash(\n    {quad, component, position, id, issuer, hashToRelated}) {\n    if(!(component.termType === 'BlankNode' && component.value !== id)) {\n      return;\n    }\n    // 3.1.1) Set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for component as\n    // related, quad, path identifier issuer as issuer, and position as\n    // either s, o, or g based on whether component is a subject, object,\n    // graph name, respectively.\n    const related = component.value;\n    const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n\n    // 3.1.2) Add a mapping of hash to the blank node identifier for\n    // component to hash to related blank nodes map, adding an entry as\n    // necessary.\n    const entries = hashToRelated.get(hash);\n    if(entries) {\n      entries.push(related);\n    } else {\n      hashToRelated.set(hash, [related]);\n    }\n  }\n\n  _useCanonicalId({component}) {\n    if(component.termType === 'BlankNode' &&\n      !component.value.startsWith(this.canonicalIssuer.prefix)) {\n      return {\n        termType: 'BlankNode',\n        value: this.canonicalIssuer.getId(component.value)\n      };\n    }\n    return component;\n  }\n};\n\nfunction _stringHashCompare(a, b) {\n  return a.hash < b.hash ? -1 : a.hash > b.hash ? 1 : 0;\n}\n","/*\n * Copyright (c) 2016-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst URDNA2015Sync = require('./URDNA2015Sync');\n\nmodule.exports = class URDNA2012Sync extends URDNA2015Sync {\n  constructor() {\n    super();\n    this.name = 'URGNA2012';\n    this.hashAlgorithm = 'sha1';\n  }\n\n  // helper for modifying component during Hash First Degree Quads\n  modifyFirstDegreeComponent(id, component, key) {\n    if(component.termType !== 'BlankNode') {\n      return component;\n    }\n    if(key === 'graph') {\n      return {\n        termType: 'BlankNode',\n        value: '_:g'\n      };\n    }\n    return {\n      termType: 'BlankNode',\n      value: (component.value === id ? '_:a' : '_:z')\n    };\n  }\n\n  // helper for getting a related predicate\n  getRelatedPredicate(quad) {\n    return quad.predicate.value;\n  }\n\n  // helper for creating hash to related blank nodes map\n  createHashToRelated(id, issuer) {\n    // 1) Create a hash to related blank nodes map for storing hashes that\n    // identify related blank nodes.\n    const hashToRelated = new Map();\n\n    // 2) Get a reference, quads, to the list of quads in the blank node to\n    // quads map for the key identifier.\n    const quads = this.blankNodeInfo.get(id).quads;\n\n    // 3) For each quad in quads:\n    for(const quad of quads) {\n      // 3.1) If the quad's subject is a blank node that does not match\n      // identifier, set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for subject as related,\n      // quad, path identifier issuer as issuer, and p as position.\n      let position;\n      let related;\n      if(quad.subject.termType === 'BlankNode' && quad.subject.value !== id) {\n        related = quad.subject.value;\n        position = 'p';\n      } else if(\n        quad.object.termType === 'BlankNode' && quad.object.value !== id) {\n        // 3.2) Otherwise, if quad's object is a blank node that does not match\n        // identifier, to the result of the Hash Related Blank Node algorithm,\n        // passing the blank node identifier for object as related, quad, path\n        // identifier issuer as issuer, and r as position.\n        related = quad.object.value;\n        position = 'r';\n      } else {\n        // 3.3) Otherwise, continue to the next quad.\n        continue;\n      }\n      // 3.4) Add a mapping of hash to the blank node identifier for the\n      // component that matched (subject or object) to hash to related blank\n      // nodes map, adding an entry as necessary.\n      const hash = this.hashRelatedBlankNode(related, quad, issuer, position);\n      const entries = hashToRelated.get(hash);\n      if(entries) {\n        entries.push(related);\n      } else {\n        hashToRelated.set(hash, [related]);\n      }\n    }\n\n    return hashToRelated;\n  }\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n * This library works in the browser and node.js.\n *\n * BSD 3-Clause License\n * Copyright (c) 2016-2021 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n'use strict';\n\nconst URDNA2015 = require('./URDNA2015');\nconst URGNA2012 = require('./URGNA2012');\nconst URDNA2015Sync = require('./URDNA2015Sync');\nconst URGNA2012Sync = require('./URGNA2012Sync');\n\n// optional native support\nlet rdfCanonizeNative;\ntry {\n  rdfCanonizeNative = require('rdf-canonize-native');\n} catch(e) {}\n\nconst api = {};\nmodule.exports = api;\n\n// expose helpers\napi.NQuads = require('./NQuads');\napi.IdentifierIssuer = require('./IdentifierIssuer');\n\n/**\n * Get or set native API.\n *\n * @param api the native API.\n *\n * @return the currently set native API.\n */\napi._rdfCanonizeNative = function(api) {\n  if(api) {\n    rdfCanonizeNative = api;\n  }\n  return rdfCanonizeNative;\n};\n\n/**\n * Asynchronously canonizes an RDF dataset.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return a Promise that resolves to the canonicalized RDF Dataset.\n */\napi.canonize = async function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(!rdfCanonizeNative) {\n      throw new Error('rdf-canonize-native not available');\n    }\n    // TODO: convert native algorithm to Promise-based async\n    return new Promise((resolve, reject) =>\n      rdfCanonizeNative.canonize(dataset, options, (err, canonical) =>\n        err ? reject(err) : resolve(canonical)));\n  }\n\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n\n/**\n * This method is no longer available in the public API, it is for testing\n * only. It synchronously canonizes an RDF dataset and does not work in the\n * browser.\n *\n * @param dataset the dataset to canonize.\n * @param options the options to use:\n *          algorithm the canonicalization algorithm to use, `URDNA2015` or\n *            `URGNA2012`.\n *          [useNative] use native implementation (default: false).\n *\n * @return the RDF dataset in canonical form.\n */\napi._canonizeSync = function(dataset, options) {\n  // back-compat with legacy dataset\n  if(!Array.isArray(dataset)) {\n    dataset = api.NQuads.legacyDatasetToQuads(dataset);\n  }\n\n  if(options.useNative) {\n    if(rdfCanonizeNative) {\n      return rdfCanonizeNative.canonizeSync(dataset, options);\n    }\n    throw new Error('rdf-canonize-native not available');\n  }\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015Sync(options).main(dataset);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012Sync(options).main(dataset);\n  }\n  if(!('algorithm' in options)) {\n    throw new Error('No RDF Dataset Canonicalization algorithm specified.');\n  }\n  throw new Error(\n    'Invalid RDF Dataset Canonicalization algorithm: ' + options.algorithm);\n};\n","/**\n * An implementation of the RDF Dataset Normalization specification.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./lib');\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\napi.isArray = Array.isArray;\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\napi.isBoolean = v => (typeof v === 'boolean' ||\n  Object.prototype.toString.call(v) === '[object Boolean]');\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\napi.isDouble = v => api.isNumber(v) &&\n  (String(v).indexOf('.') !== -1 || Math.abs(v) >= 1e21);\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\napi.isEmptyObject = v => api.isObject(v) && Object.keys(v).length === 0;\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\napi.isNumber = v => (typeof v === 'number' ||\n  Object.prototype.toString.call(v) === '[object Number]');\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\napi.isNumeric = v => !isNaN(parseFloat(v)) && isFinite(v);\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\napi.isObject = v => Object.prototype.toString.call(v) === '[object Object]';\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\napi.isString = v => (typeof v === 'string' ||\n  Object.prototype.toString.call(v) === '[object String]');\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\napi.isUndefined = v => typeof v === 'undefined';\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\napi.isSubject = v => {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  if(types.isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    const keyCount = Object.keys(v).length;\n    return (keyCount > 1 || !('@id' in v));\n  }\n  return false;\n};\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\napi.isSubjectReference = v =>\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  (types.isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\napi.isValue = v =>\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  types.isObject(v) && ('@value' in v);\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\napi.isList = v =>\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  types.isObject(v) && ('@list' in v);\n\n/**\n * Returns true if the given value is a @graph.\n *\n * @return true if the value is a @graph, false if not.\n */\napi.isGraph = v => {\n  // Note: A value is a graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It may have '@id' or '@index'\n  return types.isObject(v) &&\n    '@graph' in v &&\n    Object.keys(v)\n      .filter(key => key !== '@id' && key !== '@index').length === 1;\n};\n\n/**\n * Returns true if the given value is a simple @graph.\n *\n * @return true if the value is a simple @graph, false if not.\n */\napi.isSimpleGraph = v => {\n  // Note: A value is a simple graph if all of these hold true:\n  // 1. It is an object.\n  // 2. It has an `@graph` key.\n  // 3. It has only 1 key or 2 keys where one of them is `@index`.\n  return api.isGraph(v) && !('@id' in v);\n};\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\napi.isBlankNode = v => {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  if(types.isObject(v)) {\n    if('@id' in v) {\n      return (v['@id'].indexOf('_:') === 0);\n    }\n    return (Object.keys(v).length === 0 ||\n      !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n  }\n  return false;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class JsonLdError extends Error {\n  /**\n   * Creates a JSON-LD Error.\n   *\n   * @param msg the error message.\n   * @param type the error type.\n   * @param details the error details.\n   */\n  constructor(\n    message = 'An unspecified JSON-LD error occurred.',\n    name = 'jsonld.Error',\n    details = {}) {\n    super(message);\n    this.name = name;\n    this.message = message;\n    this.details = details;\n  }\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\n// TODO: move `IdentifierIssuer` to its own package\nconst IdentifierIssuer = require('rdf-canonize').IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\n\n// constants\nconst REGEX_LINK_HEADERS = /(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g;\nconst REGEX_LINK_HEADER = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\nconst REGEX_LINK_HEADER_PARAMS =\n  /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n\nconst DEFAULTS = {\n  headers: {\n    accept: 'application/ld+json, application/json'\n  }\n};\n\nconst api = {};\nmodule.exports = api;\napi.IdentifierIssuer = IdentifierIssuer;\n\n/**\n * Clones an object, array, Map, Set, or string/number. If a typed JavaScript\n * object is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\napi.clone = function(value) {\n  if(value && typeof value === 'object') {\n    let rval;\n    if(types.isArray(value)) {\n      rval = [];\n      for(let i = 0; i < value.length; ++i) {\n        rval[i] = api.clone(value[i]);\n      }\n    } else if(value instanceof Map) {\n      rval = new Map();\n      for(const [k, v] of value) {\n        rval.set(k, api.clone(v));\n      }\n    } else if(value instanceof Set) {\n      rval = new Set();\n      for(const v of value) {\n        rval.add(api.clone(v));\n      }\n    } else if(types.isObject(value)) {\n      rval = {};\n      for(const key in value) {\n        rval[key] = api.clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n};\n\n/**\n * Ensure a value is an array. If the value is an array, it is returned.\n * Otherwise, it is wrapped in an array.\n *\n * @param value the value to return as an array.\n *\n * @return the value as an array.\n */\napi.asArray = function(value) {\n  return Array.isArray(value) ? value : [value];\n};\n\n/**\n * Builds an HTTP headers object for making a JSON-LD request from custom\n * headers and asserts the `accept` header isn't overridden.\n *\n * @param headers an object of headers with keys as header names and values\n *          as header values.\n *\n * @return an object of headers with a valid `accept` header.\n */\napi.buildHeaders = (headers = {}) => {\n  const hasAccept = Object.keys(headers).some(\n    h => h.toLowerCase() === 'accept');\n\n  if(hasAccept) {\n    throw new RangeError(\n      'Accept header may not be specified; only \"' +\n      DEFAULTS.headers.accept + '\" is supported.');\n  }\n\n  return Object.assign({Accept: DEFAULTS.headers.accept}, headers);\n};\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>;\n * rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\napi.parseLinkHeader = header => {\n  const rval = {};\n  // split on unbracketed/unquoted commas\n  const entries = header.match(REGEX_LINK_HEADERS);\n  for(let i = 0; i < entries.length; ++i) {\n    let match = entries[i].match(REGEX_LINK_HEADER);\n    if(!match) {\n      continue;\n    }\n    const result = {target: match[1]};\n    const params = match[2];\n    while((match = REGEX_LINK_HEADER_PARAMS.exec(params))) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    const rel = result['rel'] || '';\n    if(Array.isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rval.hasOwnProperty(rel)) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\napi.validateTypeValue = (v, isFrame) => {\n  if(types.isString(v)) {\n    return;\n  }\n\n  if(types.isArray(v) && v.every(vv => types.isString(vv))) {\n    return;\n  }\n  if(isFrame && types.isObject(v)) {\n    switch(Object.keys(v).length) {\n      case 0:\n        // empty object is wildcard\n        return;\n      case 1:\n        // default entry is all strings\n        if('@default' in v &&\n          api.asArray(v['@default']).every(vv => types.isString(vv))) {\n          return;\n        }\n    }\n  }\n\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n    'strings, an empty object, ' +\n    'or a default object.', 'jsonld.SyntaxError',\n    {code: 'invalid type value', value: v});\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\napi.hasProperty = (subject, property) => {\n  if(subject.hasOwnProperty(property)) {\n    const value = subject[property];\n    return (!types.isArray(value) || value.length > 0);\n  }\n  return false;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\napi.hasValue = (subject, property, value) => {\n  if(api.hasProperty(subject, property)) {\n    let val = subject[property];\n    const isList = graphTypes.isList(val);\n    if(types.isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(let i = 0; i < val.length; ++i) {\n        if(api.compareValues(value, val[i])) {\n          return true;\n        }\n      }\n    } else if(!types.isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      return api.compareValues(value, val);\n    }\n  }\n  return false;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [valueIsArray] true if the value to be added should be preserved as\n *          an array (lists) (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n *        [prependValue] false to prepend value to any existing values.\n *          (default: false)\n */\napi.addValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('valueIsArray' in options)) {\n    options.valueIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n  if(!('prependValue' in options)) {\n    options.prependValue = false;\n  }\n\n  if(options.valueIsArray) {\n    subject[property] = value;\n  } else if(types.isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !subject.hasOwnProperty(property)) {\n      subject[property] = [];\n    }\n    if(options.prependValue) {\n      value = value.concat(subject[property]);\n      subject[property] = [];\n    }\n    for(let i = 0; i < value.length; ++i) {\n      api.addValue(subject, property, value[i], options);\n    }\n  } else if(subject.hasOwnProperty(property)) {\n    // check if subject already has value if duplicates not allowed\n    const hasValue = (!options.allowDuplicate &&\n      api.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!types.isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      if(options.prependValue) {\n        subject[property].unshift(value);\n      } else {\n        subject[property].push(value);\n      }\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\napi.getValues = (subject, property) => [].concat(subject[property] || []);\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\napi.removeProperty = (subject, property) => {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\napi.removeValue = (subject, property, value, options) => {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  const values = api.getValues(subject, property).filter(\n    e => !api.compareValues(e, value));\n\n  if(values.length === 0) {\n    api.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] an IdentifierIssuer to use to label blank nodes.\n */\napi.relabelBlankNodes = (input, options) => {\n  options = options || {};\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\napi.compareValues = (v1, v2) => {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(graphTypes.isValue(v1) && graphTypes.isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(types.isObject(v1) &&\n    ('@id' in v1) &&\n    types.isObject(v2) &&\n    ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a === b.\n */\napi.compareShortestLeast = (a, b) => {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n};\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(types.isArray(element)) {\n    for(let i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(graphTypes.isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(types.isObject(element)) {\n    // relabel blank node\n    if(graphTypes.isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    const keys = Object.keys(element).sort();\n    for(let ki = 0; ki < keys.length; ++ki) {\n      const key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nconst XSD = 'http://www.w3.org/2001/XMLSchema#';\n\nmodule.exports = {\n  // TODO: Deprecated and will be removed later. Use LINK_HEADER_CONTEXT.\n  LINK_HEADER_REL: 'http://www.w3.org/ns/json-ld#context',\n\n  LINK_HEADER_CONTEXT: 'http://www.w3.org/ns/json-ld#context',\n\n  RDF,\n  RDF_LIST: RDF + 'List',\n  RDF_FIRST: RDF + 'first',\n  RDF_REST: RDF + 'rest',\n  RDF_NIL: RDF + 'nil',\n  RDF_TYPE: RDF + 'type',\n  RDF_PLAIN_LITERAL: RDF + 'PlainLiteral',\n  RDF_XML_LITERAL: RDF + 'XMLLiteral',\n  RDF_JSON_LITERAL: RDF + 'JSON',\n  RDF_OBJECT: RDF + 'object',\n  RDF_LANGSTRING: RDF + 'langString',\n\n  XSD,\n  XSD_BOOLEAN: XSD + 'boolean',\n  XSD_DOUBLE: XSD + 'double',\n  XSD_INTEGER: XSD + 'integer',\n  XSD_STRING: XSD + 'string',\n};\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = class RequestQueue {\n  /**\n   * Creates a simple queue for requesting documents.\n   */\n  constructor() {\n    this._requests = {};\n  }\n\n  wrapLoader(loader) {\n    const self = this;\n    self._loader = loader;\n    return function(/* url */) {\n      return self.add.apply(self, arguments);\n    };\n  }\n\n  async add(url) {\n    let promise = this._requests[url];\n    if(promise) {\n      // URL already queued, wait for it to load\n      return Promise.resolve(promise);\n    }\n\n    // queue URL and load it\n    promise = this._requests[url] = this._loader(url);\n\n    try {\n      return await promise;\n    } finally {\n      delete this._requests[url];\n    }\n  }\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst types = require('./types');\n\nconst api = {};\nmodule.exports = api;\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\napi.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: [\n      'href', 'scheme', 'authority', 'path', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: [\n      'href', 'protocol', 'scheme', 'authority', 'auth', 'user', 'password',\n      'hostname', 'port', 'path', 'directory', 'file', 'query', 'fragment'\n    ],\n    /* eslint-disable-next-line max-len */\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\napi.parse = (str, parser) => {\n  const parsed = {};\n  const o = api.parsers[parser || 'full'];\n  const m = o.regex.exec(str);\n  let i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n\n  // remove default ports in found in URLs\n  if((parsed.scheme === 'https' && parsed.port === '443') ||\n    (parsed.scheme === 'http' && parsed.port === '80')) {\n    parsed.href = parsed.href.replace(':' + parsed.port, '');\n    parsed.authority = parsed.authority.replace(':' + parsed.port, '');\n    parsed.port = null;\n  }\n\n  parsed.normalizedPath = api.removeDotSegments(parsed.path);\n  return parsed;\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\napi.prependBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(api.isAbsolute(iri)) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // parse given IRI\n  const rel = api.parse(iri);\n\n  // per RFC3986 5.2.2\n  const transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        let path = base.path;\n\n        // append relative path to the end of the last directory from base\n        path = path.substr(0, path.lastIndexOf('/') + 1);\n        if((path.length > 0 || base.authority) && path.substr(-1) !== '/') {\n          path += '/';\n        }\n        path += rel.path;\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  if(rel.path !== '') {\n    // remove slashes and dots in path\n    transform.path = api.removeDotSegments(transform.path);\n  }\n\n  // construct URL\n  let rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\napi.removeBase = (base, iri) => {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(!base || types.isString(base)) {\n    base = api.parse(base || '');\n  }\n\n  // establish base root\n  let root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  const rel = api.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  const baseSegments = base.normalizedPath.split('/');\n  const iriSegments = rel.normalizedPath.split('/');\n  const last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  let rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(let i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n */\napi.removeDotSegments = path => {\n  // RFC 3986 5.2.4 (reworked)\n\n  // empty path shortcut\n  if(path.length === 0) {\n    return '';\n  }\n\n  const input = path.split('/');\n  const output = [];\n\n  while(input.length > 0) {\n    const next = input.shift();\n    const done = input.length === 0;\n\n    if(next === '.') {\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    if(next === '..') {\n      output.pop();\n      if(done) {\n        // ensure output has trailing /\n        output.push('');\n      }\n      continue;\n    }\n\n    output.push(next);\n  }\n\n  // if path was absolute, ensure output has leading /\n  if(path[0] === '/' && output.length > 0 && output[0] !== '') {\n    output.unshift('');\n  }\n  if(output.length === 1 && output[0] === '') {\n    return '/';\n  }\n\n  return output.join('/');\n};\n\n// TODO: time better isAbsolute/isRelative checks using full regexes:\n// http://jmrware.com/articles/2009/uri_regexp/URI_regex.html\n\n// regex to check for absolute IRI (starting scheme and ':') or blank node IRI\nconst isAbsoluteRegex = /^([A-Za-z][A-Za-z0-9+-.]*|_):[^\\s]*$/;\n\n/**\n * Returns true if the given value is an absolute IRI or blank node IRI, false\n * if not.\n * Note: This weak check only checks for a correct starting scheme.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\napi.isAbsolute = v => types.isString(v) && isAbsoluteRegex.test(v);\n\n/**\n * Returns true if the given value is a relative IRI, false if not.\n * Note: this is a weak check.\n *\n * @param v the value to check.\n *\n * @return true if the value is a relative IRI, false if not.\n */\napi.isRelative = v => types.isString(v);\n","\"use strict\";\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\nfunction dataUriToBuffer(uri) {\n    if (!/^data:/i.test(uri)) {\n        throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n    }\n    // strip newlines\n    uri = uri.replace(/\\r?\\n/g, '');\n    // split the URI up into the \"metadata\" and the \"data\" portions\n    const firstComma = uri.indexOf(',');\n    if (firstComma === -1 || firstComma <= 4) {\n        throw new TypeError('malformed data: URI');\n    }\n    // remove the \"data:\" scheme and parse the metadata\n    const meta = uri.substring(5, firstComma).split(';');\n    let charset = '';\n    let base64 = false;\n    const type = meta[0] || 'text/plain';\n    let typeFull = type;\n    for (let i = 1; i < meta.length; i++) {\n        if (meta[i] === 'base64') {\n            base64 = true;\n        }\n        else {\n            typeFull += `;${meta[i]}`;\n            if (meta[i].indexOf('charset=') === 0) {\n                charset = meta[i].substring(8);\n            }\n        }\n    }\n    // defaults to US-ASCII only if type is not provided\n    if (!meta[0] && !charset.length) {\n        typeFull += ';charset=US-ASCII';\n        charset = 'US-ASCII';\n    }\n    // get the encoded data portion and decode URI-encoded chars\n    const encoding = base64 ? 'base64' : 'ascii';\n    const data = unescape(uri.substring(firstComma + 1));\n    const buffer = Buffer.from(data, encoding);\n    // set `.type` and `.typeFull` properties to MIME type\n    buffer.type = type;\n    buffer.typeFull = typeFull;\n    // set the `.charset` property\n    buffer.charset = charset;\n    return buffer;\n}\nmodule.exports = dataUriToBuffer;\n//# sourceMappingURL=index.js.map","const {Readable} = require('stream');\n\n/**\n * @type {WeakMap<Blob, {type: string, size: number, parts: (Blob | Buffer)[] }>}\n */\nconst wm = new WeakMap();\n\nasync function * read(parts) {\n\tfor (const part of parts) {\n\t\tif ('stream' in part) {\n\t\t\tyield * part.stream();\n\t\t} else {\n\t\t\tyield part;\n\t\t}\n\t}\n}\n\nclass Blob {\n\t/**\n\t * The Blob() constructor returns a new Blob object. The content\n\t * of the blob consists of the concatenation of the values given\n\t * in the parameter array.\n\t *\n\t * @param {(ArrayBufferLike | ArrayBufferView | Blob | Buffer | string)[]} blobParts\n\t * @param {{ type?: string }} [options]\n\t */\n\tconstructor(blobParts = [], options = {}) {\n\t\tlet size = 0;\n\n\t\tconst parts = blobParts.map(element => {\n\t\t\tlet buffer;\n\t\t\tif (element instanceof Buffer) {\n\t\t\t\tbuffer = element;\n\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t} else if (element instanceof Blob) {\n\t\t\t\tbuffer = element;\n\t\t\t} else {\n\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line unicorn/explicit-length-check\n\t\t\tsize += buffer.length || buffer.size || 0;\n\t\t\treturn buffer;\n\t\t});\n\n\t\tconst type = options.type === undefined ? '' : String(options.type).toLowerCase();\n\n\t\twm.set(this, {\n\t\t\ttype: /[^\\u0020-\\u007E]/.test(type) ? '' : type,\n\t\t\tsize,\n\t\t\tparts\n\t\t});\n\t}\n\n\t/**\n\t * The Blob interface's size property returns the\n\t * size of the Blob in bytes.\n\t */\n\tget size() {\n\t\treturn wm.get(this).size;\n\t}\n\n\t/**\n\t * The type property of a Blob object returns the MIME type of the file.\n\t */\n\tget type() {\n\t\treturn wm.get(this).type;\n\t}\n\n\t/**\n\t * The text() method in the Blob interface returns a Promise\n\t * that resolves with a string containing the contents of\n\t * the blob, interpreted as UTF-8.\n\t *\n\t * @return {Promise<string>}\n\t */\n\tasync text() {\n\t\treturn Buffer.from(await this.arrayBuffer()).toString();\n\t}\n\n\t/**\n\t * The arrayBuffer() method in the Blob interface returns a\n\t * Promise that resolves with the contents of the blob as\n\t * binary data contained in an ArrayBuffer.\n\t *\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tasync arrayBuffer() {\n\t\tconst data = new Uint8Array(this.size);\n\t\tlet offset = 0;\n\t\tfor await (const chunk of this.stream()) {\n\t\t\tdata.set(chunk, offset);\n\t\t\toffset += chunk.length;\n\t\t}\n\n\t\treturn data.buffer;\n\t}\n\n\t/**\n\t * The Blob interface's stream() method is difference from native\n\t * and uses node streams instead of whatwg streams.\n\t *\n\t * @returns {Readable} Node readable stream\n\t */\n\tstream() {\n\t\treturn Readable.from(read(wm.get(this).parts));\n\t}\n\n\t/**\n\t * The Blob interface's slice() method creates and returns a\n\t * new Blob object which contains data from a subset of the\n\t * blob on which it's called.\n\t *\n\t * @param {number} [start]\n\t * @param {number} [end]\n\t * @param {string} [type]\n\t */\n\tslice(start = 0, end = this.size, type = '') {\n\t\tconst {size} = this;\n\n\t\tlet relativeStart = start < 0 ? Math.max(size + start, 0) : Math.min(start, size);\n\t\tlet relativeEnd = end < 0 ? Math.max(size + end, 0) : Math.min(end, size);\n\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\t\tconst parts = wm.get(this).parts.values();\n\t\tconst blobParts = [];\n\t\tlet added = 0;\n\n\t\tfor (const part of parts) {\n\t\t\tconst size = ArrayBuffer.isView(part) ? part.byteLength : part.size;\n\t\t\tif (relativeStart && size <= relativeStart) {\n\t\t\t\t// Skip the beginning and change the relative\n\t\t\t\t// start & end position as we skip the unwanted parts\n\t\t\t\trelativeStart -= size;\n\t\t\t\trelativeEnd -= size;\n\t\t\t} else {\n\t\t\t\tconst chunk = part.slice(relativeStart, Math.min(size, relativeEnd));\n\t\t\t\tblobParts.push(chunk);\n\t\t\t\tadded += ArrayBuffer.isView(chunk) ? chunk.byteLength : chunk.size;\n\t\t\t\trelativeStart = 0; // All next sequental parts should start at 0\n\n\t\t\t\t// don't add the overflow to new blobParts\n\t\t\t\tif (added >= span) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst blob = new Blob([], {type: String(type).toLowerCase()});\n\t\tObject.assign(wm.get(blob), {size: span, parts: blobParts});\n\n\t\treturn blob;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Blob';\n\t}\n\n\tstatic [Symbol.hasInstance](object) {\n\t\treturn (\n\t\t\tobject &&\n\t\t\ttypeof object === 'object' &&\n\t\t\ttypeof object.stream === 'function' &&\n\t\t\tobject.stream.length === 0 &&\n\t\t\ttypeof object.constructor === 'function' &&\n\t\t\t/^(Blob|File)$/.test(object[Symbol.toStringTag])\n\t\t);\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: {enumerable: true},\n\ttype: {enumerable: true},\n\tslice: {enumerable: true}\n});\n\nmodule.exports = Blob;\n","'use strict';\n\nexports = module.exports = fetch;\n\nconst http = require('http');\nconst https = require('https');\nconst zlib = require('zlib');\nconst Stream = require('stream');\nconst dataUriToBuffer = require('data-uri-to-buffer');\nconst util = require('util');\nconst Blob = require('fetch-blob');\nconst crypto = require('crypto');\nconst url = require('url');\n\nclass FetchBaseError extends Error {\n\tconstructor(message, type) {\n\t\tsuper(message);\n\t\t// Hide custom error implementation details from end-users\n\t\tError.captureStackTrace(this, this.constructor);\n\n\t\tthis.type = type;\n\t}\n\n\tget name() {\n\t\treturn this.constructor.name;\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n}\n\n/**\n * @typedef {{ address?: string, code: string, dest?: string, errno: number, info?: object, message: string, path?: string, port?: number, syscall: string}} SystemError\n*/\n\n/**\n * FetchError interface for operational errors\n */\nclass FetchError extends FetchBaseError {\n\t/**\n\t * @param  {string} message -      Error message for human\n\t * @param  {string} [type] -        Error type for machine\n\t * @param  {SystemError} [systemError] - For Node.js system error\n\t */\n\tconstructor(message, type, systemError) {\n\t\tsuper(message, type);\n\t\t// When err.type is `system`, err.erroredSysCall contains system error and err.code contains system error code\n\t\tif (systemError) {\n\t\t\t// eslint-disable-next-line no-multi-assign\n\t\t\tthis.code = this.errno = systemError.code;\n\t\t\tthis.erroredSysCall = systemError.syscall;\n\t\t}\n\t}\n}\n\n/**\n * Is.js\n *\n * Object type checks.\n */\n\nconst NAME = Symbol.toStringTag;\n\n/**\n * Check if `obj` is a URLSearchParams object\n * ref: https://github.com/node-fetch/node-fetch/issues/296#issuecomment-307598143\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isURLSearchParameters = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.has === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.sort === 'function' &&\n\t\tobject[NAME] === 'URLSearchParams'\n\t);\n};\n\n/**\n * Check if `object` is a W3C `Blob` object (which `File` inherits from)\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isBlob = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.arrayBuffer === 'function' &&\n\t\ttypeof object.type === 'string' &&\n\t\ttypeof object.stream === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\t/^(Blob|File)$/.test(object[NAME])\n\t);\n};\n\n/**\n * Check if `obj` is a spec-compliant `FormData` object\n *\n * @param {*} object\n * @return {boolean}\n */\nfunction isFormData(object) {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object.append === 'function' &&\n\t\ttypeof object.set === 'function' &&\n\t\ttypeof object.get === 'function' &&\n\t\ttypeof object.getAll === 'function' &&\n\t\ttypeof object.delete === 'function' &&\n\t\ttypeof object.keys === 'function' &&\n\t\ttypeof object.values === 'function' &&\n\t\ttypeof object.entries === 'function' &&\n\t\ttypeof object.constructor === 'function' &&\n\t\tobject[NAME] === 'FormData'\n\t);\n}\n\n/**\n * Check if `obj` is an instance of AbortSignal.\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isAbortSignal = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\tobject[NAME] === 'AbortSignal'\n\t);\n};\n\nconst carriage = '\\r\\n';\nconst dashes = '-'.repeat(2);\nconst carriageLength = Buffer.byteLength(carriage);\n\n/**\n * @param {string} boundary\n */\nconst getFooter = boundary => `${dashes}${boundary}${dashes}${carriage.repeat(2)}`;\n\n/**\n * @param {string} boundary\n * @param {string} name\n * @param {*} field\n *\n * @return {string}\n */\nfunction getHeader(boundary, name, field) {\n\tlet header = '';\n\n\theader += `${dashes}${boundary}${carriage}`;\n\theader += `Content-Disposition: form-data; name=\"${name}\"`;\n\n\tif (isBlob(field)) {\n\t\theader += `; filename=\"${field.name}\"${carriage}`;\n\t\theader += `Content-Type: ${field.type || 'application/octet-stream'}`;\n\t}\n\n\treturn `${header}${carriage.repeat(2)}`;\n}\n\n/**\n * @return {string}\n */\nconst getBoundary = () => crypto.randomBytes(8).toString('hex');\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nasync function * formDataIterator(form, boundary) {\n\tfor (const [name, value] of form) {\n\t\tyield getHeader(boundary, name, value);\n\n\t\tif (isBlob(value)) {\n\t\t\tyield * value.stream();\n\t\t} else {\n\t\t\tyield value;\n\t\t}\n\n\t\tyield carriage;\n\t}\n\n\tyield getFooter(boundary);\n}\n\n/**\n * @param {FormData} form\n * @param {string} boundary\n */\nfunction getFormDataLength(form, boundary) {\n\tlet length = 0;\n\n\tfor (const [name, value] of form) {\n\t\tlength += Buffer.byteLength(getHeader(boundary, name, value));\n\n\t\tif (isBlob(value)) {\n\t\t\tlength += value.size;\n\t\t} else {\n\t\t\tlength += Buffer.byteLength(String(value));\n\t\t}\n\n\t\tlength += carriageLength;\n\t}\n\n\tlength += Buffer.byteLength(getFooter(boundary));\n\n\treturn length;\n}\n\nconst INTERNALS = Symbol('Body internals');\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Body {\n\tconstructor(body, {\n\t\tsize = 0\n\t} = {}) {\n\t\tlet boundary = null;\n\n\t\tif (body === null) {\n\t\t\t// Body is undefined or null\n\t\t\tbody = null;\n\t\t} else if (isURLSearchParameters(body)) {\n\t\t// Body is a URLSearchParams\n\t\t\tbody = Buffer.from(body.toString());\n\t\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (util.types.isAnyArrayBuffer(body)) {\n\t\t\t// Body is ArrayBuffer\n\t\t\tbody = Buffer.from(body);\n\t\t} else if (ArrayBuffer.isView(body)) {\n\t\t\t// Body is ArrayBufferView\n\t\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t\t} else if (body instanceof Stream) ; else if (isFormData(body)) {\n\t\t\t// Body is an instance of formdata-node\n\t\t\tboundary = `NodeFetchFormDataBoundary${getBoundary()}`;\n\t\t\tbody = Stream.Readable.from(formDataIterator(body, boundary));\n\t\t} else {\n\t\t\t// None of the above\n\t\t\t// coerce to string then buffer\n\t\t\tbody = Buffer.from(String(body));\n\t\t}\n\n\t\tthis[INTERNALS] = {\n\t\t\tbody,\n\t\t\tboundary,\n\t\t\tdisturbed: false,\n\t\t\terror: null\n\t\t};\n\t\tthis.size = size;\n\n\t\tif (body instanceof Stream) {\n\t\t\tbody.on('error', err => {\n\t\t\t\tconst error = err instanceof FetchBaseError ?\n\t\t\t\t\terr :\n\t\t\t\t\tnew FetchError(`Invalid response body while trying to fetch ${this.url}: ${err.message}`, 'system', err);\n\t\t\t\tthis[INTERNALS].error = error;\n\t\t\t});\n\t\t}\n\t}\n\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t}\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t}\n\n\t/**\n\t * Decode response as ArrayBuffer\n\t *\n\t * @return  Promise\n\t */\n\tasync arrayBuffer() {\n\t\tconst {buffer, byteOffset, byteLength} = await consumeBody(this);\n\t\treturn buffer.slice(byteOffset, byteOffset + byteLength);\n\t}\n\n\t/**\n\t * Return raw response as Blob\n\t *\n\t * @return Promise\n\t */\n\tasync blob() {\n\t\tconst ct = (this.headers && this.headers.get('content-type')) || (this[INTERNALS].body && this[INTERNALS].body.type) || '';\n\t\tconst buf = await this.buffer();\n\n\t\treturn new Blob([buf], {\n\t\t\ttype: ct\n\t\t});\n\t}\n\n\t/**\n\t * Decode response as json\n\t *\n\t * @return  Promise\n\t */\n\tasync json() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn JSON.parse(buffer.toString());\n\t}\n\n\t/**\n\t * Decode response as text\n\t *\n\t * @return  Promise\n\t */\n\tasync text() {\n\t\tconst buffer = await consumeBody(this);\n\t\treturn buffer.toString();\n\t}\n\n\t/**\n\t * Decode response as buffer (non-spec api)\n\t *\n\t * @return  Promise\n\t */\n\tbuffer() {\n\t\treturn consumeBody(this);\n\t}\n}\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: {enumerable: true},\n\tbodyUsed: {enumerable: true},\n\tarrayBuffer: {enumerable: true},\n\tblob: {enumerable: true},\n\tjson: {enumerable: true},\n\ttext: {enumerable: true}\n});\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return Promise\n */\nasync function consumeBody(data) {\n\tif (data[INTERNALS].disturbed) {\n\t\tthrow new TypeError(`body used already for: ${data.url}`);\n\t}\n\n\tdata[INTERNALS].disturbed = true;\n\n\tif (data[INTERNALS].error) {\n\t\tthrow data[INTERNALS].error;\n\t}\n\n\tlet {body} = data;\n\n\t// Body is null\n\tif (body === null) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// Body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body;\n\t}\n\n\t/* c8 ignore next 3 */\n\tif (!(body instanceof Stream)) {\n\t\treturn Buffer.alloc(0);\n\t}\n\n\t// Body is stream\n\t// get ready to actually consume the body\n\tconst accum = [];\n\tlet accumBytes = 0;\n\n\ttry {\n\t\tfor await (const chunk of body) {\n\t\t\tif (data.size > 0 && accumBytes + chunk.length > data.size) {\n\t\t\t\tconst err = new FetchError(`content size at ${data.url} over limit: ${data.size}`, 'max-size');\n\t\t\t\tbody.destroy(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t}\n\t} catch (error) {\n\t\tif (error instanceof FetchBaseError) {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\t// Other errors, such as incorrect content-encoding\n\t\t\tthrow new FetchError(`Invalid response body while trying to fetch ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t}\n\n\tif (body.readableEnded === true || body._readableState.ended === true) {\n\t\ttry {\n\t\t\tif (accum.every(c => typeof c === 'string')) {\n\t\t\t\treturn Buffer.from(accum.join(''));\n\t\t\t}\n\n\t\t\treturn Buffer.concat(accum, accumBytes);\n\t\t} catch (error) {\n\t\t\tthrow new FetchError(`Could not create Buffer from response body for ${data.url}: ${error.message}`, 'system', error);\n\t\t}\n\t} else {\n\t\tthrow new FetchError(`Premature close of server response while trying to fetch ${data.url}`);\n\t}\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed   instance       Response or Request instance\n * @param   String  highWaterMark  highWaterMark for both PassThrough body streams\n * @return  Mixed\n */\nconst clone = (instance, highWaterMark) => {\n\tlet p1;\n\tlet p2;\n\tlet {body} = instance;\n\n\t// Don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// Check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif ((body instanceof Stream) && (typeof body.getBoundary !== 'function')) {\n\t\t// Tee instance body\n\t\tp1 = new Stream.PassThrough({highWaterMark});\n\t\tp2 = new Stream.PassThrough({highWaterMark});\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// Set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n};\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param {any} body Any options.body input\n * @returns {string | null}\n */\nconst extractContentType = (body, request) => {\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn null;\n\t}\n\n\t// Body is string\n\tif (typeof body === 'string') {\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n\n\t// Body is a URLSearchParams\n\tif (isURLSearchParameters(body)) {\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t}\n\n\t// Body is blob\n\tif (isBlob(body)) {\n\t\treturn body.type || null;\n\t}\n\n\t// Body is a Buffer (Buffer, ArrayBuffer or ArrayBufferView)\n\tif (Buffer.isBuffer(body) || util.types.isAnyArrayBuffer(body) || ArrayBuffer.isView(body)) {\n\t\treturn null;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getBoundary === 'function') {\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t}\n\n\tif (isFormData(body)) {\n\t\treturn `multipart/form-data; boundary=${request[INTERNALS].boundary}`;\n\t}\n\n\t// Body is stream - can't really do much about this\n\tif (body instanceof Stream) {\n\t\treturn null;\n\t}\n\n\t// Body constructor defaults other things to string\n\treturn 'text/plain;charset=UTF-8';\n};\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param {any} obj.body Body object from the Body instance.\n * @returns {number | null}\n */\nconst getTotalBytes = request => {\n\tconst {body} = request;\n\n\t// Body is null or undefined\n\tif (body === null) {\n\t\treturn 0;\n\t}\n\n\t// Body is Blob\n\tif (isBlob(body)) {\n\t\treturn body.size;\n\t}\n\n\t// Body is Buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn body.length;\n\t}\n\n\t// Detect form data input from form-data module\n\tif (body && typeof body.getLengthSync === 'function') {\n\t\treturn body.hasKnownLength && body.hasKnownLength() ? body.getLengthSync() : null;\n\t}\n\n\t// Body is a spec-compliant form-data\n\tif (isFormData(body)) {\n\t\treturn getFormDataLength(request[INTERNALS].boundary);\n\t}\n\n\t// Body is stream\n\treturn null;\n};\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param {Stream.Writable} dest The stream to write to.\n * @param obj.body Body object from the Body instance.\n * @returns {void}\n */\nconst writeToStream = (dest, {body}) => {\n\tif (body === null) {\n\t\t// Body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\t// Body is Blob\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// Body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// Body is stream\n\t\tbody.pipe(dest);\n\t}\n};\n\n/**\n * Headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst validateHeaderName = typeof http.validateHeaderName === 'function' ?\n\thttp.validateHeaderName :\n\tname => {\n\t\tif (!/^[\\^`\\-\\w!#$%&'*+.|~]+$/.test(name)) {\n\t\t\tconst err = new TypeError(`Header name must be a valid HTTP token [${name}]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_HTTP_TOKEN'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\nconst validateHeaderValue = typeof http.validateHeaderValue === 'function' ?\n\thttp.validateHeaderValue :\n\t(name, value) => {\n\t\tif (/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(value)) {\n\t\t\tconst err = new TypeError(`Invalid character in header content [\"${name}\"]`);\n\t\t\tObject.defineProperty(err, 'code', {value: 'ERR_INVALID_CHAR'});\n\t\t\tthrow err;\n\t\t}\n\t};\n\n/**\n * @typedef {Headers | Record<string, string> | Iterable<readonly [string, string]> | Iterable<Iterable<string>>} HeadersInit\n */\n\n/**\n * This Fetch API interface allows you to perform various actions on HTTP request and response headers.\n * These actions include retrieving, setting, adding to, and removing.\n * A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.\n * You can add to this using methods like append() (see Examples.)\n * In all methods of this interface, header names are matched by case-insensitive byte sequence.\n *\n */\nclass Headers extends URLSearchParams {\n\t/**\n\t * Headers class\n\t *\n\t * @constructor\n\t * @param {HeadersInit} [init] - Response headers\n\t */\n\tconstructor(init) {\n\t\t// Validate and normalize init object in [name, value(s)][]\n\t\t/** @type {string[][]} */\n\t\tlet result = [];\n\t\tif (init instanceof Headers) {\n\t\t\tconst raw = init.raw();\n\t\t\tfor (const [name, values] of Object.entries(raw)) {\n\t\t\t\tresult.push(...values.map(value => [name, value]));\n\t\t\t}\n\t\t} else if (init == null) ; else if (typeof init === 'object' && !util.types.isBoxedPrimitive(init)) {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\t\tif (method == null) {\n\t\t\t\t// Record<ByteString, ByteString>\n\t\t\t\tresult.push(...Object.entries(init));\n\t\t\t} else {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// Sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tresult = [...init]\n\t\t\t\t\t.map(pair => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\ttypeof pair !== 'object' || util.types.isBoxedPrimitive(pair)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be an iterable object');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t}).map(pair => {\n\t\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn [...pair];\n\t\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Failed to construct \\'Headers\\': The provided value is not of type \\'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)');\n\t\t}\n\n\t\t// Validate and lowercase\n\t\tresult =\n\t\t\tresult.length > 0 ?\n\t\t\t\tresult.map(([name, value]) => {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn [String(name).toLowerCase(), String(value)];\n\t\t\t\t}) :\n\t\t\t\tundefined;\n\n\t\tsuper(result);\n\n\t\t// Returning a Proxy that will lowercase key names, validate parameters and sort keys\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn new Proxy(this, {\n\t\t\tget(target, p, receiver) {\n\t\t\t\tswitch (p) {\n\t\t\t\t\tcase 'append':\n\t\t\t\t\tcase 'set':\n\t\t\t\t\t\treturn (name, value) => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase(),\n\t\t\t\t\t\t\t\tString(value)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'delete':\n\t\t\t\t\tcase 'has':\n\t\t\t\t\tcase 'getAll':\n\t\t\t\t\t\treturn name => {\n\t\t\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\t\t\treturn URLSearchParams.prototype[p].call(\n\t\t\t\t\t\t\t\treceiver,\n\t\t\t\t\t\t\t\tString(name).toLowerCase()\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t};\n\n\t\t\t\t\tcase 'keys':\n\t\t\t\t\t\treturn () => {\n\t\t\t\t\t\t\ttarget.sort();\n\t\t\t\t\t\t\treturn new Set(URLSearchParams.prototype.keys.call(target)).keys();\n\t\t\t\t\t\t};\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn Reflect.get(target, p, receiver);\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* c8 ignore next */\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn this.constructor.name;\n\t}\n\n\ttoString() {\n\t\treturn Object.prototype.toString.call(this);\n\t}\n\n\tget(name) {\n\t\tconst values = this.getAll(name);\n\t\tif (values.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = values.join(', ');\n\t\tif (/^content-encoding$/i.test(name)) {\n\t\t\tvalue = value.toLowerCase();\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tforEach(callback) {\n\t\tfor (const name of this.keys()) {\n\t\t\tcallback(this.get(name), name);\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield this.get(name);\n\t\t}\n\t}\n\n\t/**\n\t * @type {() => IterableIterator<[string, string]>}\n\t */\n\t* entries() {\n\t\tfor (const name of this.keys()) {\n\t\t\tyield [name, this.get(name)];\n\t\t}\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n\n\t/**\n\t * Node-fetch non-spec method\n\t * returning all headers and their values as array\n\t * @returns {Record<string, string[]>}\n\t */\n\traw() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tresult[key] = this.getAll(key);\n\t\t\treturn result;\n\t\t}, {});\n\t}\n\n\t/**\n\t * For better console.log(headers) and also to convert Headers into Node.js Request compatible format\n\t */\n\t[Symbol.for('nodejs.util.inspect.custom')]() {\n\t\treturn [...this.keys()].reduce((result, key) => {\n\t\t\tconst values = this.getAll(key);\n\t\t\t// Http.request() only supports string as Host header.\n\t\t\t// This hack makes specifying custom Host header possible.\n\t\t\tif (key === 'host') {\n\t\t\t\tresult[key] = values[0];\n\t\t\t} else {\n\t\t\t\tresult[key] = values.length > 1 ? values : values[0];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}, {});\n\t}\n}\n\n/**\n * Re-shaping object for Web IDL tests\n * Only need to do it for overridden methods\n */\nObject.defineProperties(\n\tHeaders.prototype,\n\t['get', 'entries', 'forEach', 'values'].reduce((result, property) => {\n\t\tresult[property] = {enumerable: true};\n\t\treturn result;\n\t}, {})\n);\n\n/**\n * Create a Headers object from an http.IncomingMessage.rawHeaders, ignoring those that do\n * not conform to HTTP grammar productions.\n * @param {import('http').IncomingMessage['rawHeaders']} headers\n */\nfunction fromRawHeaders(headers = []) {\n\treturn new Headers(\n\t\theaders\n\t\t\t// Split into pairs\n\t\t\t.reduce((result, value, index, array) => {\n\t\t\t\tif (index % 2 === 0) {\n\t\t\t\t\tresult.push(array.slice(index, index + 2));\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t\t.filter(([name, value]) => {\n\t\t\t\ttry {\n\t\t\t\t\tvalidateHeaderName(name);\n\t\t\t\t\tvalidateHeaderValue(name, String(value));\n\t\t\t\t\treturn true;\n\t\t\t\t} catch {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t})\n\n\t);\n}\n\nconst redirectStatus = new Set([301, 302, 303, 307, 308]);\n\n/**\n * Redirect code matching\n *\n * @param {number} code - Status code\n * @return {boolean}\n */\nconst isRedirect = code => {\n\treturn redirectStatus.has(code);\n};\n\n/**\n * Response.js\n *\n * Response class provides content decoding\n */\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response extends Body {\n\tconstructor(body = null, options = {}) {\n\t\tsuper(body, options);\n\n\t\tconst status = options.status || 200;\n\t\tconst headers = new Headers(options.headers);\n\n\t\tif (body !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: options.url,\n\t\t\tstatus,\n\t\t\tstatusText: options.statusText || '',\n\t\t\theaders,\n\t\t\tcounter: options.counter,\n\t\t\thighWaterMark: options.highWaterMark\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n\t * Convenience property representing if the request ended normally\n\t */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\tget highWaterMark() {\n\t\treturn this[INTERNALS$1].highWaterMark;\n\t}\n\n\t/**\n\t * Clone this response\n\t *\n\t * @return  Response\n\t */\n\tclone() {\n\t\treturn new Response(clone(this, this.highWaterMark), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected,\n\t\t\tsize: this.size\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} url    The URL that the new response is to originate from.\n\t * @param {number} status An optional status code for the response (e.g., 302.)\n\t * @returns {Response}    A Response object.\n\t */\n\tstatic redirect(url, status = 302) {\n\t\tif (!isRedirect(status)) {\n\t\t\tthrow new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n\t\t}\n\n\t\treturn new Response(null, {\n\t\t\theaders: {\n\t\t\t\tlocation: new URL(url).toString()\n\t\t\t},\n\t\t\tstatus\n\t\t});\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Response';\n\t}\n}\n\nObject.defineProperties(Response.prototype, {\n\turl: {enumerable: true},\n\tstatus: {enumerable: true},\n\tok: {enumerable: true},\n\tredirected: {enumerable: true},\n\tstatusText: {enumerable: true},\n\theaders: {enumerable: true},\n\tclone: {enumerable: true}\n});\n\nconst getSearch = parsedURL => {\n\tif (parsedURL.search) {\n\t\treturn parsedURL.search;\n\t}\n\n\tconst lastOffset = parsedURL.href.length - 1;\n\tconst hash = parsedURL.hash || (parsedURL.href[lastOffset] === '#' ? '#' : '');\n\treturn parsedURL.href[lastOffset - hash.length] === '?' ? '?' : '';\n};\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n/**\n * Check if `obj` is an instance of Request.\n *\n * @param  {*} obj\n * @return {boolean}\n */\nconst isRequest = object => {\n\treturn (\n\t\ttypeof object === 'object' &&\n\t\ttypeof object[INTERNALS$2] === 'object'\n\t);\n};\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request extends Body {\n\tconstructor(input, init = {}) {\n\t\tlet parsedURL;\n\n\t\t// Normalize input and force URL to be encoded as UTF-8 (https://github.com/node-fetch/node-fetch/issues/245)\n\t\tif (isRequest(input)) {\n\t\t\tparsedURL = new URL(input.url);\n\t\t} else {\n\t\t\tparsedURL = new URL(input);\n\t\t\tinput = {};\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\t// eslint-disable-next-line no-eq-null, eqeqeq\n\t\tif (((init.body != null || isRequest(input)) && input.body !== null) &&\n\t\t\t(method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tconst inputBody = init.body ?\n\t\t\tinit.body :\n\t\t\t(isRequest(input) && input.body !== null ?\n\t\t\t\tclone(input) :\n\t\t\t\tnull);\n\n\t\tsuper(inputBody, {\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody !== null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody, this);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ?\n\t\t\tinput.signal :\n\t\t\tnull;\n\t\tif ('signal' in init) {\n\t\t\tsignal = init.signal;\n\t\t}\n\n\t\tif (signal !== null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// Node-fetch-only options\n\t\tthis.follow = init.follow === undefined ? (input.follow === undefined ? 20 : input.follow) : init.follow;\n\t\tthis.compress = init.compress === undefined ? (input.compress === undefined ? true : input.compress) : init.compress;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t\tthis.highWaterMark = init.highWaterMark || input.highWaterMark || 16384;\n\t\tthis.insecureHTTPParser = init.insecureHTTPParser || input.insecureHTTPParser || false;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn url.format(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n\t * Clone this request\n\t *\n\t * @return  Request\n\t */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn 'Request';\n\t}\n}\n\nObject.defineProperties(Request.prototype, {\n\tmethod: {enumerable: true},\n\turl: {enumerable: true},\n\theaders: {enumerable: true},\n\tredirect: {enumerable: true},\n\tclone: {enumerable: true},\n\tsignal: {enumerable: true}\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nconst getNodeRequestOptions = request => {\n\tconst {parsedURL} = request[INTERNALS$2];\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// Fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body === null && /^(post|put)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\n\tif (request.body !== null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\t// Set Content-Length if totalBytes is a number (that is not NaN)\n\t\tif (typeof totalBytes === 'number' && !Number.isNaN(totalBytes)) {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate,br');\n\t}\n\n\tlet {agent} = request;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\tconst search = getSearch(parsedURL);\n\n\t// Manually spread the URL object instead of spread syntax\n\tconst requestOptions = {\n\t\tpath: parsedURL.pathname + search,\n\t\tpathname: parsedURL.pathname,\n\t\thostname: parsedURL.hostname,\n\t\tprotocol: parsedURL.protocol,\n\t\tport: parsedURL.port,\n\t\thash: parsedURL.hash,\n\t\tsearch: parsedURL.search,\n\t\tquery: parsedURL.query,\n\t\thref: parsedURL.href,\n\t\tmethod: request.method,\n\t\theaders: headers[Symbol.for('nodejs.util.inspect.custom')](),\n\t\tinsecureHTTPParser: request.insecureHTTPParser,\n\t\tagent\n\t};\n\n\treturn requestOptions;\n};\n\n/**\n * AbortError interface for cancelled requests\n */\nclass AbortError extends FetchBaseError {\n\tconstructor(message, type = 'aborted') {\n\t\tsuper(message, type);\n\t}\n}\n\n/**\n * Index.js\n *\n * a request API compatible with window.fetch\n *\n * All spec algorithm step numbers are based on https://fetch.spec.whatwg.org/commit-snapshots/ae716822cb3a61843226cd090eefc6589446c1d2/.\n */\n\nconst supportedSchemas = new Set(['data:', 'http:', 'https:']);\n\n/**\n * Fetch function\n *\n * @param   {string | URL | import('./request').default} url - Absolute url or Request instance\n * @param   {*} [options_] - Fetch options\n * @return  {Promise<import('./response').default>}\n */\nasync function fetch(url, options_) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Build request object\n\t\tconst request = new Request(url, options_);\n\t\tconst options = getNodeRequestOptions(request);\n\t\tif (!supportedSchemas.has(options.protocol)) {\n\t\t\tthrow new TypeError(`node-fetch cannot load ${url}. URL scheme \"${options.protocol.replace(/:$/, '')}\" is not supported.`);\n\t\t}\n\n\t\tif (options.protocol === 'data:') {\n\t\t\tconst data = dataUriToBuffer(request.url);\n\t\t\tconst response = new Response(data, {headers: {'Content-Type': data.typeFull}});\n\t\t\tresolve(response);\n\t\t\treturn;\n\t\t}\n\n\t\t// Wrap http.request into fetch\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst {signal} = request;\n\t\tlet response = null;\n\n\t\tconst abort = () => {\n\t\t\tconst error = new AbortError('The operation was aborted.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\n\t\t\tif (!response || !response.body) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = () => {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// Send request\n\t\tconst request_ = send(options);\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tconst finalize = () => {\n\t\t\trequest_.abort();\n\t\t\tif (signal) {\n\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t}\n\t\t};\n\n\t\trequest_.on('error', err => {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\trequest_.on('response', response_ => {\n\t\t\trequest_.setTimeout(0);\n\t\t\tconst headers = fromRawHeaders(response_.rawHeaders);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (isRedirect(response_.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : new URL(location, request.url);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// Node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// Handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t\t/* c8 ignore next 3 */\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (response_.statusCode !== 303 && request.body && options_.body instanceof Stream.Readable) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (response_.statusCode === 303 || ((response_.statusCode === 301 || response_.statusCode === 302) && request.method === 'POST')) {\n\t\t\t\t\t\t\trequestOptions.method = 'GET';\n\t\t\t\t\t\t\trequestOptions.body = undefined;\n\t\t\t\t\t\t\trequestOptions.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOptions)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// Do nothing\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Prepare response\n\t\t\tresponse_.once('end', () => {\n\t\t\t\tif (signal) {\n\t\t\t\t\tsignal.removeEventListener('abort', abortAndFinalize);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlet body = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t\t// see https://github.com/nodejs/node/pull/29376\n\t\t\tif (process.version < 'v12.10') {\n\t\t\t\tresponse_.on('aborted', abortAndFinalize);\n\t\t\t}\n\n\t\t\tconst responseOptions = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: response_.statusCode,\n\t\t\t\tstatusText: response_.statusMessage,\n\t\t\t\theaders,\n\t\t\t\tsize: request.size,\n\t\t\t\tcounter: request.counter,\n\t\t\t\thighWaterMark: request.highWaterMark\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// For gzip\n\t\t\tif (codings === 'gzip' || codings === 'x-gzip') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createGunzip(zlibOptions), error => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For deflate\n\t\t\tif (codings === 'deflate' || codings === 'x-deflate') {\n\t\t\t\t// Handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = Stream.pipeline(response_, new Stream.PassThrough(), error => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t\traw.once('data', chunk => {\n\t\t\t\t\t// See http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflate(), error => {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = Stream.pipeline(body, zlib.createInflateRaw(), error => {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For br\n\t\t\tif (codings === 'br') {\n\t\t\t\tbody = Stream.pipeline(body, zlib.createBrotliDecompress(), error => {\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\t\t\t\tresponse = new Response(body, responseOptions);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, use response as-is\n\t\t\tresponse = new Response(body, responseOptions);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(request_, request);\n\t});\n}\n\nexports.AbortError = AbortError;\nexports.FetchError = FetchError;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.default = fetch;\nexports.isRedirect = isRedirect;\n//# sourceMappingURL=index.cjs.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * @typedef {object} PrivateData\n * @property {EventTarget} eventTarget The event target.\n * @property {{type:string}} event The original event object.\n * @property {number} eventPhase The current event phase.\n * @property {EventTarget|null} currentTarget The current event target.\n * @property {boolean} canceled The flag to prevent default.\n * @property {boolean} stopped The flag to stop propagation.\n * @property {boolean} immediateStopped The flag to stop propagation immediately.\n * @property {Function|null} passiveListener The listener if the current listener is passive. Otherwise this is null.\n * @property {number} timeStamp The unix time.\n * @private\n */\n\n/**\n * Private data for event wrappers.\n * @type {WeakMap<Event, PrivateData>}\n * @private\n */\nconst privateData = new WeakMap();\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrappers = new WeakMap();\n\n/**\n * Get private data.\n * @param {Event} event The event object to get private data.\n * @returns {PrivateData} The private data of the event.\n * @private\n */\nfunction pd(event) {\n    const retv = privateData.get(event);\n    console.assert(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event\n    );\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data {PrivateData} private data.\n */\nfunction setCancelFlag(data) {\n    if (data.passiveListener != null) {\n        if (\n            typeof console !== \"undefined\" &&\n            typeof console.error === \"function\"\n        ) {\n            console.error(\n                \"Unable to preventDefault inside passive event listener invocation.\",\n                data.passiveListener\n            );\n        }\n        return\n    }\n    if (!data.event.cancelable) {\n        return\n    }\n\n    data.canceled = true;\n    if (typeof data.event.preventDefault === \"function\") {\n        data.event.preventDefault();\n    }\n}\n\n/**\n * @see https://dom.spec.whatwg.org/#interface-event\n * @private\n */\n/**\n * The event wrapper.\n * @constructor\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Event|{type:string}} event The original event to wrap.\n */\nfunction Event(eventTarget, event) {\n    privateData.set(this, {\n        eventTarget,\n        event,\n        eventPhase: 2,\n        currentTarget: eventTarget,\n        canceled: false,\n        stopped: false,\n        immediateStopped: false,\n        passiveListener: null,\n        timeStamp: event.timeStamp || Date.now(),\n    });\n\n    // https://heycam.github.io/webidl/#Unforgeable\n    Object.defineProperty(this, \"isTrusted\", { value: false, enumerable: true });\n\n    // Define accessors\n    const keys = Object.keys(event);\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in this)) {\n            Object.defineProperty(this, key, defineRedirectDescriptor(key));\n        }\n    }\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEvent.prototype = {\n    /**\n     * The type of this event.\n     * @type {string}\n     */\n    get type() {\n        return pd(this).event.type\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get target() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     */\n    get currentTarget() {\n        return pd(this).currentTarget\n    },\n\n    /**\n     * @returns {EventTarget[]} The composed path of this event.\n     */\n    composedPath() {\n        const currentTarget = pd(this).currentTarget;\n        if (currentTarget == null) {\n            return []\n        }\n        return [currentTarget]\n    },\n\n    /**\n     * Constant of NONE.\n     * @type {number}\n     */\n    get NONE() {\n        return 0\n    },\n\n    /**\n     * Constant of CAPTURING_PHASE.\n     * @type {number}\n     */\n    get CAPTURING_PHASE() {\n        return 1\n    },\n\n    /**\n     * Constant of AT_TARGET.\n     * @type {number}\n     */\n    get AT_TARGET() {\n        return 2\n    },\n\n    /**\n     * Constant of BUBBLING_PHASE.\n     * @type {number}\n     */\n    get BUBBLING_PHASE() {\n        return 3\n    },\n\n    /**\n     * The target of this event.\n     * @type {number}\n     */\n    get eventPhase() {\n        return pd(this).eventPhase\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopPropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.stopPropagation === \"function\") {\n            data.event.stopPropagation();\n        }\n    },\n\n    /**\n     * Stop event bubbling.\n     * @returns {void}\n     */\n    stopImmediatePropagation() {\n        const data = pd(this);\n\n        data.stopped = true;\n        data.immediateStopped = true;\n        if (typeof data.event.stopImmediatePropagation === \"function\") {\n            data.event.stopImmediatePropagation();\n        }\n    },\n\n    /**\n     * The flag to be bubbling.\n     * @type {boolean}\n     */\n    get bubbles() {\n        return Boolean(pd(this).event.bubbles)\n    },\n\n    /**\n     * The flag to be cancelable.\n     * @type {boolean}\n     */\n    get cancelable() {\n        return Boolean(pd(this).event.cancelable)\n    },\n\n    /**\n     * Cancel this event.\n     * @returns {void}\n     */\n    preventDefault() {\n        setCancelFlag(pd(this));\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     */\n    get defaultPrevented() {\n        return pd(this).canceled\n    },\n\n    /**\n     * The flag to be composed.\n     * @type {boolean}\n     */\n    get composed() {\n        return Boolean(pd(this).event.composed)\n    },\n\n    /**\n     * The unix time of this event.\n     * @type {number}\n     */\n    get timeStamp() {\n        return pd(this).timeStamp\n    },\n\n    /**\n     * The target of this event.\n     * @type {EventTarget}\n     * @deprecated\n     */\n    get srcElement() {\n        return pd(this).eventTarget\n    },\n\n    /**\n     * The flag to stop event bubbling.\n     * @type {boolean}\n     * @deprecated\n     */\n    get cancelBubble() {\n        return pd(this).stopped\n    },\n    set cancelBubble(value) {\n        if (!value) {\n            return\n        }\n        const data = pd(this);\n\n        data.stopped = true;\n        if (typeof data.event.cancelBubble === \"boolean\") {\n            data.event.cancelBubble = true;\n        }\n    },\n\n    /**\n     * The flag to indicate cancellation state.\n     * @type {boolean}\n     * @deprecated\n     */\n    get returnValue() {\n        return !pd(this).canceled\n    },\n    set returnValue(value) {\n        if (!value) {\n            setCancelFlag(pd(this));\n        }\n    },\n\n    /**\n     * Initialize this event object. But do nothing under event dispatching.\n     * @param {string} type The event type.\n     * @param {boolean} [bubbles=false] The flag to be possible to bubble up.\n     * @param {boolean} [cancelable=false] The flag to be possible to cancel.\n     * @deprecated\n     */\n    initEvent() {\n        // Do nothing.\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(Event.prototype, \"constructor\", {\n    value: Event,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof window !== \"undefined\" && typeof window.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, window.Event.prototype);\n\n    // Make association for wrappers.\n    wrappers.set(window.Event.prototype, Event);\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to redirect the property.\n * @private\n */\nfunction defineRedirectDescriptor(key) {\n    return {\n        get() {\n            return pd(this).event[key]\n        },\n        set(value) {\n            pd(this).event[key] = value;\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Get the property descriptor to call a given method property.\n * @param {string} key Property name to define property descriptor.\n * @returns {PropertyDescriptor} The property descriptor to call the method property.\n * @private\n */\nfunction defineCallDescriptor(key) {\n    return {\n        value() {\n            const event = pd(this).event;\n            return event[key].apply(event, arguments)\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define new wrapper class.\n * @param {Function} BaseEvent The base wrapper class.\n * @param {Object} proto The prototype of the original event.\n * @returns {Function} The defined wrapper class.\n * @private\n */\nfunction defineWrapper(BaseEvent, proto) {\n    const keys = Object.keys(proto);\n    if (keys.length === 0) {\n        return BaseEvent\n    }\n\n    /** CustomEvent */\n    function CustomEvent(eventTarget, event) {\n        BaseEvent.call(this, eventTarget, event);\n    }\n\n    CustomEvent.prototype = Object.create(BaseEvent.prototype, {\n        constructor: { value: CustomEvent, configurable: true, writable: true },\n    });\n\n    // Define accessors.\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i];\n        if (!(key in BaseEvent.prototype)) {\n            const descriptor = Object.getOwnPropertyDescriptor(proto, key);\n            const isFunc = typeof descriptor.value === \"function\";\n            Object.defineProperty(\n                CustomEvent.prototype,\n                key,\n                isFunc\n                    ? defineCallDescriptor(key)\n                    : defineRedirectDescriptor(key)\n            );\n        }\n    }\n\n    return CustomEvent\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param {Object} proto The prototype of the original event to get its wrapper.\n * @returns {Function} The wrapper class.\n * @private\n */\nfunction getWrapper(proto) {\n    if (proto == null || proto === Object.prototype) {\n        return Event\n    }\n\n    let wrapper = wrappers.get(proto);\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapper(Object.getPrototypeOf(proto)), proto);\n        wrappers.set(proto, wrapper);\n    }\n    return wrapper\n}\n\n/**\n * Wrap a given event to management a dispatching.\n * @param {EventTarget} eventTarget The event target of this dispatching.\n * @param {Object} event The event to wrap.\n * @returns {Event} The wrapper instance.\n * @private\n */\nfunction wrapEvent(eventTarget, event) {\n    const Wrapper = getWrapper(Object.getPrototypeOf(event));\n    return new Wrapper(eventTarget, event)\n}\n\n/**\n * Get the immediateStopped flag of a given event.\n * @param {Event} event The event to get.\n * @returns {boolean} The flag to stop propagation immediately.\n * @private\n */\nfunction isStopped(event) {\n    return pd(event).immediateStopped\n}\n\n/**\n * Set the current event phase of a given event.\n * @param {Event} event The event to set current target.\n * @param {number} eventPhase New event phase.\n * @returns {void}\n * @private\n */\nfunction setEventPhase(event, eventPhase) {\n    pd(event).eventPhase = eventPhase;\n}\n\n/**\n * Set the current target of a given event.\n * @param {Event} event The event to set current target.\n * @param {EventTarget|null} currentTarget New current target.\n * @returns {void}\n * @private\n */\nfunction setCurrentTarget(event, currentTarget) {\n    pd(event).currentTarget = currentTarget;\n}\n\n/**\n * Set a passive listener of a given event.\n * @param {Event} event The event to set current target.\n * @param {Function|null} passiveListener New passive listener.\n * @returns {void}\n * @private\n */\nfunction setPassiveListener(event, passiveListener) {\n    pd(event).passiveListener = passiveListener;\n}\n\n/**\n * @typedef {object} ListenerNode\n * @property {Function} listener\n * @property {1|2|3} listenerType\n * @property {boolean} passive\n * @property {boolean} once\n * @property {ListenerNode|null} next\n * @private\n */\n\n/**\n * @type {WeakMap<object, Map<string, ListenerNode>>}\n * @private\n */\nconst listenersMap = new WeakMap();\n\n// Listener types\nconst CAPTURE = 1;\nconst BUBBLE = 2;\nconst ATTRIBUTE = 3;\n\n/**\n * Check whether a given value is an object or not.\n * @param {any} x The value to check.\n * @returns {boolean} `true` if the value is an object.\n */\nfunction isObject(x) {\n    return x !== null && typeof x === \"object\" //eslint-disable-line no-restricted-syntax\n}\n\n/**\n * Get listeners.\n * @param {EventTarget} eventTarget The event target to get.\n * @returns {Map<string, ListenerNode>} The listeners.\n * @private\n */\nfunction getListeners(eventTarget) {\n    const listeners = listenersMap.get(eventTarget);\n    if (listeners == null) {\n        throw new TypeError(\n            \"'this' is expected an EventTarget object, but got another value.\"\n        )\n    }\n    return listeners\n}\n\n/**\n * Get the property descriptor for the event attribute of a given event.\n * @param {string} eventName The event name to get property descriptor.\n * @returns {PropertyDescriptor} The property descriptor.\n * @private\n */\nfunction defineEventAttributeDescriptor(eventName) {\n    return {\n        get() {\n            const listeners = getListeners(this);\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    return node.listener\n                }\n                node = node.next;\n            }\n            return null\n        },\n\n        set(listener) {\n            if (typeof listener !== \"function\" && !isObject(listener)) {\n                listener = null; // eslint-disable-line no-param-reassign\n            }\n            const listeners = getListeners(this);\n\n            // Traverse to the tail while removing old value.\n            let prev = null;\n            let node = listeners.get(eventName);\n            while (node != null) {\n                if (node.listenerType === ATTRIBUTE) {\n                    // Remove old value.\n                    if (prev !== null) {\n                        prev.next = node.next;\n                    } else if (node.next !== null) {\n                        listeners.set(eventName, node.next);\n                    } else {\n                        listeners.delete(eventName);\n                    }\n                } else {\n                    prev = node;\n                }\n\n                node = node.next;\n            }\n\n            // Add new value.\n            if (listener !== null) {\n                const newNode = {\n                    listener,\n                    listenerType: ATTRIBUTE,\n                    passive: false,\n                    once: false,\n                    next: null,\n                };\n                if (prev === null) {\n                    listeners.set(eventName, newNode);\n                } else {\n                    prev.next = newNode;\n                }\n            }\n        },\n        configurable: true,\n        enumerable: true,\n    }\n}\n\n/**\n * Define an event attribute (e.g. `eventTarget.onclick`).\n * @param {Object} eventTargetPrototype The event target prototype to define an event attrbite.\n * @param {string} eventName The event name to define.\n * @returns {void}\n */\nfunction defineEventAttribute(eventTargetPrototype, eventName) {\n    Object.defineProperty(\n        eventTargetPrototype,\n        `on${eventName}`,\n        defineEventAttributeDescriptor(eventName)\n    );\n}\n\n/**\n * Define a custom EventTarget with event attributes.\n * @param {string[]} eventNames Event names for event attributes.\n * @returns {EventTarget} The custom EventTarget.\n * @private\n */\nfunction defineCustomEventTarget(eventNames) {\n    /** CustomEventTarget */\n    function CustomEventTarget() {\n        EventTarget.call(this);\n    }\n\n    CustomEventTarget.prototype = Object.create(EventTarget.prototype, {\n        constructor: {\n            value: CustomEventTarget,\n            configurable: true,\n            writable: true,\n        },\n    });\n\n    for (let i = 0; i < eventNames.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, eventNames[i]);\n    }\n\n    return CustomEventTarget\n}\n\n/**\n * EventTarget.\n *\n * - This is constructor if no arguments.\n * - This is a function which returns a CustomEventTarget constructor if there are arguments.\n *\n * For example:\n *\n *     class A extends EventTarget {}\n *     class B extends EventTarget(\"message\") {}\n *     class C extends EventTarget(\"message\", \"error\") {}\n *     class D extends EventTarget([\"message\", \"error\"]) {}\n */\nfunction EventTarget() {\n    /*eslint-disable consistent-return */\n    if (this instanceof EventTarget) {\n        listenersMap.set(this, new Map());\n        return\n    }\n    if (arguments.length === 1 && Array.isArray(arguments[0])) {\n        return defineCustomEventTarget(arguments[0])\n    }\n    if (arguments.length > 0) {\n        const types = new Array(arguments.length);\n        for (let i = 0; i < arguments.length; ++i) {\n            types[i] = arguments[i];\n        }\n        return defineCustomEventTarget(types)\n    }\n    throw new TypeError(\"Cannot call a class as a function\")\n    /*eslint-enable consistent-return */\n}\n\n// Should be enumerable, but class methods are not enumerable.\nEventTarget.prototype = {\n    /**\n     * Add a given listener to this event target.\n     * @param {string} eventName The event name to add.\n     * @param {Function} listener The listener to add.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    addEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n        if (typeof listener !== \"function\" && !isObject(listener)) {\n            throw new TypeError(\"'listener' should be a function or an object.\")\n        }\n\n        const listeners = getListeners(this);\n        const optionsIsObj = isObject(options);\n        const capture = optionsIsObj\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n        const newNode = {\n            listener,\n            listenerType,\n            passive: optionsIsObj && Boolean(options.passive),\n            once: optionsIsObj && Boolean(options.once),\n            next: null,\n        };\n\n        // Set it as the first node if the first node is null.\n        let node = listeners.get(eventName);\n        if (node === undefined) {\n            listeners.set(eventName, newNode);\n            return\n        }\n\n        // Traverse to the tail while checking duplication..\n        let prev = null;\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                // Should ignore duplication.\n                return\n            }\n            prev = node;\n            node = node.next;\n        }\n\n        // Add it.\n        prev.next = newNode;\n    },\n\n    /**\n     * Remove a given listener from this event target.\n     * @param {string} eventName The event name to remove.\n     * @param {Function} listener The listener to remove.\n     * @param {boolean|{capture?:boolean,passive?:boolean,once?:boolean}} [options] The options for this listener.\n     * @returns {void}\n     */\n    removeEventListener(eventName, listener, options) {\n        if (listener == null) {\n            return\n        }\n\n        const listeners = getListeners(this);\n        const capture = isObject(options)\n            ? Boolean(options.capture)\n            : Boolean(options);\n        const listenerType = capture ? CAPTURE : BUBBLE;\n\n        let prev = null;\n        let node = listeners.get(eventName);\n        while (node != null) {\n            if (\n                node.listener === listener &&\n                node.listenerType === listenerType\n            ) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n                return\n            }\n\n            prev = node;\n            node = node.next;\n        }\n    },\n\n    /**\n     * Dispatch a given event.\n     * @param {Event|{type:string}} event The event to dispatch.\n     * @returns {boolean} `false` if canceled.\n     */\n    dispatchEvent(event) {\n        if (event == null || typeof event.type !== \"string\") {\n            throw new TypeError('\"event.type\" should be a string.')\n        }\n\n        // If listeners aren't registered, terminate.\n        const listeners = getListeners(this);\n        const eventName = event.type;\n        let node = listeners.get(eventName);\n        if (node == null) {\n            return true\n        }\n\n        // Since we cannot rewrite several properties, so wrap object.\n        const wrappedEvent = wrapEvent(this, event);\n\n        // This doesn't process capturing phase and bubbling phase.\n        // This isn't participating in a tree.\n        let prev = null;\n        while (node != null) {\n            // Remove this listener if it's once\n            if (node.once) {\n                if (prev !== null) {\n                    prev.next = node.next;\n                } else if (node.next !== null) {\n                    listeners.set(eventName, node.next);\n                } else {\n                    listeners.delete(eventName);\n                }\n            } else {\n                prev = node;\n            }\n\n            // Call this listener\n            setPassiveListener(\n                wrappedEvent,\n                node.passive ? node.listener : null\n            );\n            if (typeof node.listener === \"function\") {\n                try {\n                    node.listener.call(this, wrappedEvent);\n                } catch (err) {\n                    if (\n                        typeof console !== \"undefined\" &&\n                        typeof console.error === \"function\"\n                    ) {\n                        console.error(err);\n                    }\n                }\n            } else if (\n                node.listenerType !== ATTRIBUTE &&\n                typeof node.listener.handleEvent === \"function\"\n            ) {\n                node.listener.handleEvent(wrappedEvent);\n            }\n\n            // Break if `event.stopImmediatePropagation` was called.\n            if (isStopped(wrappedEvent)) {\n                break\n            }\n\n            node = node.next;\n        }\n        setPassiveListener(wrappedEvent, null);\n        setEventPhase(wrappedEvent, 0);\n        setCurrentTarget(wrappedEvent, null);\n\n        return !wrappedEvent.defaultPrevented\n    },\n};\n\n// `constructor` is not enumerable.\nObject.defineProperty(EventTarget.prototype, \"constructor\", {\n    value: EventTarget,\n    configurable: true,\n    writable: true,\n});\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof window !== \"undefined\" &&\n    typeof window.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, window.EventTarget.prototype);\n}\n\nexports.defineEventAttribute = defineEventAttribute;\nexports.EventTarget = EventTarget;\nexports.default = EventTarget;\n\nmodule.exports = EventTarget\nmodule.exports.EventTarget = module.exports[\"default\"] = EventTarget\nmodule.exports.defineEventAttribute = defineEventAttribute\n//# sourceMappingURL=event-target-shim.js.map\n","/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar eventTargetShim = require('event-target-shim');\n\n/**\n * The signal class.\n * @see https://dom.spec.whatwg.org/#abortsignal\n */\nclass AbortSignal extends eventTargetShim.EventTarget {\n    /**\n     * AbortSignal cannot be constructed directly.\n     */\n    constructor() {\n        super();\n        throw new TypeError(\"AbortSignal cannot be constructed directly\");\n    }\n    /**\n     * Returns `true` if this `AbortSignal`'s `AbortController` has signaled to abort, and `false` otherwise.\n     */\n    get aborted() {\n        const aborted = abortedFlags.get(this);\n        if (typeof aborted !== \"boolean\") {\n            throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this === null ? \"null\" : typeof this}`);\n        }\n        return aborted;\n    }\n}\neventTargetShim.defineEventAttribute(AbortSignal.prototype, \"abort\");\n/**\n * Create an AbortSignal object.\n */\nfunction createAbortSignal() {\n    const signal = Object.create(AbortSignal.prototype);\n    eventTargetShim.EventTarget.call(signal);\n    abortedFlags.set(signal, false);\n    return signal;\n}\n/**\n * Abort a given signal.\n */\nfunction abortSignal(signal) {\n    if (abortedFlags.get(signal) !== false) {\n        return;\n    }\n    abortedFlags.set(signal, true);\n    signal.dispatchEvent({ type: \"abort\" });\n}\n/**\n * Aborted flag for each instances.\n */\nconst abortedFlags = new WeakMap();\n// Properties should be enumerable.\nObject.defineProperties(AbortSignal.prototype, {\n    aborted: { enumerable: true },\n});\n// `toString()` should return `\"[object AbortSignal]\"`\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortSignal.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortSignal\",\n    });\n}\n\n/**\n * The AbortController.\n * @see https://dom.spec.whatwg.org/#abortcontroller\n */\nclass AbortController {\n    /**\n     * Initialize this controller.\n     */\n    constructor() {\n        signals.set(this, createAbortSignal());\n    }\n    /**\n     * Returns the `AbortSignal` object associated with this object.\n     */\n    get signal() {\n        return getSignal(this);\n    }\n    /**\n     * Abort and signal to any observers that the associated activity is to be aborted.\n     */\n    abort() {\n        abortSignal(getSignal(this));\n    }\n}\n/**\n * Associated signals.\n */\nconst signals = new WeakMap();\n/**\n * Get the associated signal of a given controller.\n */\nfunction getSignal(controller) {\n    const signal = signals.get(controller);\n    if (signal == null) {\n        throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${controller === null ? \"null\" : typeof controller}`);\n    }\n    return signal;\n}\n// Properties should be enumerable.\nObject.defineProperties(AbortController.prototype, {\n    signal: { enumerable: true },\n    abort: { enumerable: true },\n});\nif (typeof Symbol === \"function\" && typeof Symbol.toStringTag === \"symbol\") {\n    Object.defineProperty(AbortController.prototype, Symbol.toStringTag, {\n        configurable: true,\n        value: \"AbortController\",\n    });\n}\n\nexports.AbortController = AbortController;\nexports.AbortSignal = AbortSignal;\nexports.default = AbortController;\n\nmodule.exports = AbortController\nmodule.exports.AbortController = module.exports[\"default\"] = AbortController\nmodule.exports.AbortSignal = AbortSignal\n//# sourceMappingURL=abort-controller.js.map\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.ky = factory());\n}(this, (function () { 'use strict';\n\n\t/*! MIT License © Sindre Sorhus */\n\n\tconst globals = {};\n\n\tconst getGlobal = property => {\n\t\t/* istanbul ignore next */\n\t\tif (typeof self !== 'undefined' && self && property in self) {\n\t\t\treturn self;\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (typeof window !== 'undefined' && window && property in window) {\n\t\t\treturn window;\n\t\t}\n\n\t\tif (typeof global !== 'undefined' && global && property in global) {\n\t\t\treturn global;\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\tif (typeof globalThis !== 'undefined' && globalThis) {\n\t\t\treturn globalThis;\n\t\t}\n\t};\n\n\tconst globalProperties = [\n\t\t'Headers',\n\t\t'Request',\n\t\t'Response',\n\t\t'ReadableStream',\n\t\t'fetch',\n\t\t'AbortController',\n\t\t'FormData'\n\t];\n\n\tfor (const property of globalProperties) {\n\t\tObject.defineProperty(globals, property, {\n\t\t\tget() {\n\t\t\t\tconst globalObject = getGlobal(property);\n\t\t\t\tconst value = globalObject && globalObject[property];\n\t\t\t\treturn typeof value === 'function' ? value.bind(globalObject) : value;\n\t\t\t}\n\t\t});\n\t}\n\n\tconst isObject = value => value !== null && typeof value === 'object';\n\tconst supportsAbortController = typeof globals.AbortController === 'function';\n\tconst supportsStreams = typeof globals.ReadableStream === 'function';\n\tconst supportsFormData = typeof globals.FormData === 'function';\n\n\tconst mergeHeaders = (source1, source2) => {\n\t\tconst result = new globals.Headers(source1 || {});\n\t\tconst isHeadersInstance = source2 instanceof globals.Headers;\n\t\tconst source = new globals.Headers(source2 || {});\n\n\t\tfor (const [key, value] of source) {\n\t\t\tif ((isHeadersInstance && value === 'undefined') || value === undefined) {\n\t\t\t\tresult.delete(key);\n\t\t\t} else {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tconst deepMerge = (...sources) => {\n\t\tlet returnValue = {};\n\t\tlet headers = {};\n\n\t\tfor (const source of sources) {\n\t\t\tif (Array.isArray(source)) {\n\t\t\t\tif (!(Array.isArray(returnValue))) {\n\t\t\t\t\treturnValue = [];\n\t\t\t\t}\n\n\t\t\t\treturnValue = [...returnValue, ...source];\n\t\t\t} else if (isObject(source)) {\n\t\t\t\tfor (let [key, value] of Object.entries(source)) {\n\t\t\t\t\tif (isObject(value) && (key in returnValue)) {\n\t\t\t\t\t\tvalue = deepMerge(returnValue[key], value);\n\t\t\t\t\t}\n\n\t\t\t\t\treturnValue = {...returnValue, [key]: value};\n\t\t\t\t}\n\n\t\t\t\tif (isObject(source.headers)) {\n\t\t\t\t\theaders = mergeHeaders(headers, source.headers);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturnValue.headers = headers;\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tconst requestMethods = [\n\t\t'get',\n\t\t'post',\n\t\t'put',\n\t\t'patch',\n\t\t'head',\n\t\t'delete'\n\t];\n\n\tconst responseTypes = {\n\t\tjson: 'application/json',\n\t\ttext: 'text/*',\n\t\tformData: 'multipart/form-data',\n\t\tarrayBuffer: '*/*',\n\t\tblob: '*/*'\n\t};\n\n\tconst retryMethods = [\n\t\t'get',\n\t\t'put',\n\t\t'head',\n\t\t'delete',\n\t\t'options',\n\t\t'trace'\n\t];\n\n\tconst retryStatusCodes = [\n\t\t408,\n\t\t413,\n\t\t429,\n\t\t500,\n\t\t502,\n\t\t503,\n\t\t504\n\t];\n\n\tconst retryAfterStatusCodes = [\n\t\t413,\n\t\t429,\n\t\t503\n\t];\n\n\tconst stop = Symbol('stop');\n\n\tclass HTTPError extends Error {\n\t\tconstructor(response) {\n\t\t\t// Set the message to the status text, such as Unauthorized,\n\t\t\t// with some fallbacks. This message should never be undefined.\n\t\t\tsuper(\n\t\t\t\tresponse.statusText ||\n\t\t\t\tString(\n\t\t\t\t\t(response.status === 0 || response.status) ?\n\t\t\t\t\t\tresponse.status : 'Unknown response error'\n\t\t\t\t)\n\t\t\t);\n\t\t\tthis.name = 'HTTPError';\n\t\t\tthis.response = response;\n\t\t}\n\t}\n\n\tclass TimeoutError extends Error {\n\t\tconstructor(request) {\n\t\t\tsuper('Request timed out');\n\t\t\tthis.name = 'TimeoutError';\n\t\t\tthis.request = request;\n\t\t}\n\t}\n\n\tconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n\t// `Promise.race()` workaround (#91)\n\tconst timeout = (request, abortController, options) =>\n\t\tnew Promise((resolve, reject) => {\n\t\t\tconst timeoutID = setTimeout(() => {\n\t\t\t\tif (abortController) {\n\t\t\t\t\tabortController.abort();\n\t\t\t\t}\n\n\t\t\t\treject(new TimeoutError(request));\n\t\t\t}, options.timeout);\n\n\t\t\t/* eslint-disable promise/prefer-await-to-then */\n\t\t\toptions.fetch(request)\n\t\t\t\t.then(resolve)\n\t\t\t\t.catch(reject)\n\t\t\t\t.then(() => {\n\t\t\t\t\tclearTimeout(timeoutID);\n\t\t\t\t});\n\t\t\t/* eslint-enable promise/prefer-await-to-then */\n\t\t});\n\n\tconst normalizeRequestMethod = input => requestMethods.includes(input) ? input.toUpperCase() : input;\n\n\tconst defaultRetryOptions = {\n\t\tlimit: 2,\n\t\tmethods: retryMethods,\n\t\tstatusCodes: retryStatusCodes,\n\t\tafterStatusCodes: retryAfterStatusCodes\n\t};\n\n\tconst normalizeRetryOptions = (retry = {}) => {\n\t\tif (typeof retry === 'number') {\n\t\t\treturn {\n\t\t\t\t...defaultRetryOptions,\n\t\t\t\tlimit: retry\n\t\t\t};\n\t\t}\n\n\t\tif (retry.methods && !Array.isArray(retry.methods)) {\n\t\t\tthrow new Error('retry.methods must be an array');\n\t\t}\n\n\t\tif (retry.statusCodes && !Array.isArray(retry.statusCodes)) {\n\t\t\tthrow new Error('retry.statusCodes must be an array');\n\t\t}\n\n\t\treturn {\n\t\t\t...defaultRetryOptions,\n\t\t\t...retry,\n\t\t\tafterStatusCodes: retryAfterStatusCodes\n\t\t};\n\t};\n\n\t// The maximum value of a 32bit int (see issue #117)\n\tconst maxSafeTimeout = 2147483647;\n\n\tclass Ky {\n\t\tconstructor(input, options = {}) {\n\t\t\tthis._retryCount = 0;\n\t\t\tthis._input = input;\n\t\t\tthis._options = {\n\t\t\t\t// TODO: credentials can be removed when the spec change is implemented in all browsers. Context: https://www.chromestatus.com/feature/4539473312350208\n\t\t\t\tcredentials: this._input.credentials || 'same-origin',\n\t\t\t\t...options,\n\t\t\t\theaders: mergeHeaders(this._input.headers, options.headers),\n\t\t\t\thooks: deepMerge({\n\t\t\t\t\tbeforeRequest: [],\n\t\t\t\t\tbeforeRetry: [],\n\t\t\t\t\tafterResponse: []\n\t\t\t\t}, options.hooks),\n\t\t\t\tmethod: normalizeRequestMethod(options.method || this._input.method),\n\t\t\t\tprefixUrl: String(options.prefixUrl || ''),\n\t\t\t\tretry: normalizeRetryOptions(options.retry),\n\t\t\t\tthrowHttpErrors: options.throwHttpErrors !== false,\n\t\t\t\ttimeout: typeof options.timeout === 'undefined' ? 10000 : options.timeout,\n\t\t\t\tfetch: options.fetch || globals.fetch\n\t\t\t};\n\n\t\t\tif (typeof this._input !== 'string' && !(this._input instanceof URL || this._input instanceof globals.Request)) {\n\t\t\t\tthrow new TypeError('`input` must be a string, URL, or Request');\n\t\t\t}\n\n\t\t\tif (this._options.prefixUrl && typeof this._input === 'string') {\n\t\t\t\tif (this._input.startsWith('/')) {\n\t\t\t\t\tthrow new Error('`input` must not begin with a slash when using `prefixUrl`');\n\t\t\t\t}\n\n\t\t\t\tif (!this._options.prefixUrl.endsWith('/')) {\n\t\t\t\t\tthis._options.prefixUrl += '/';\n\t\t\t\t}\n\n\t\t\t\tthis._input = this._options.prefixUrl + this._input;\n\t\t\t}\n\n\t\t\tif (supportsAbortController) {\n\t\t\t\tthis.abortController = new globals.AbortController();\n\t\t\t\tif (this._options.signal) {\n\t\t\t\t\tthis._options.signal.addEventListener('abort', () => {\n\t\t\t\t\t\tthis.abortController.abort();\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._options.signal = this.abortController.signal;\n\t\t\t}\n\n\t\t\tthis.request = new globals.Request(this._input, this._options);\n\n\t\t\tif (this._options.searchParams) {\n\t\t\t\tconst searchParams = '?' + new URLSearchParams(this._options.searchParams).toString();\n\t\t\t\tconst url = this.request.url.replace(/(?:\\?.*?)?(?=#|$)/, searchParams);\n\n\t\t\t\t// To provide correct form boundary, Content-Type header should be deleted each time when new Request instantiated from another one\n\t\t\t\tif (((supportsFormData && this._options.body instanceof globals.FormData) || this._options.body instanceof URLSearchParams) && !(this._options.headers && this._options.headers['content-type'])) {\n\t\t\t\t\tthis.request.headers.delete('content-type');\n\t\t\t\t}\n\n\t\t\t\tthis.request = new globals.Request(new globals.Request(url, this.request), this._options);\n\t\t\t}\n\n\t\t\tif (this._options.json !== undefined) {\n\t\t\t\tthis._options.body = JSON.stringify(this._options.json);\n\t\t\t\tthis.request.headers.set('content-type', 'application/json');\n\t\t\t\tthis.request = new globals.Request(this.request, {body: this._options.body});\n\t\t\t}\n\n\t\t\tconst fn = async () => {\n\t\t\t\tif (this._options.timeout > maxSafeTimeout) {\n\t\t\t\t\tthrow new RangeError(`The \\`timeout\\` option cannot be greater than ${maxSafeTimeout}`);\n\t\t\t\t}\n\n\t\t\t\tawait delay(1);\n\t\t\t\tlet response = await this._fetch();\n\n\t\t\t\tfor (const hook of this._options.hooks.afterResponse) {\n\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\tconst modifiedResponse = await hook(\n\t\t\t\t\t\tthis.request,\n\t\t\t\t\t\tthis._options,\n\t\t\t\t\t\tthis._decorateResponse(response.clone())\n\t\t\t\t\t);\n\n\t\t\t\t\tif (modifiedResponse instanceof globals.Response) {\n\t\t\t\t\t\tresponse = modifiedResponse;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._decorateResponse(response);\n\n\t\t\t\tif (!response.ok && this._options.throwHttpErrors) {\n\t\t\t\t\tthrow new HTTPError(response);\n\t\t\t\t}\n\n\t\t\t\t// If `onDownloadProgress` is passed, it uses the stream API internally\n\t\t\t\t/* istanbul ignore next */\n\t\t\t\tif (this._options.onDownloadProgress) {\n\t\t\t\t\tif (typeof this._options.onDownloadProgress !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('The `onDownloadProgress` option must be a function');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!supportsStreams) {\n\t\t\t\t\t\tthrow new Error('Streams are not supported in your environment. `ReadableStream` is missing.');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this._stream(response.clone(), this._options.onDownloadProgress);\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t};\n\n\t\t\tconst isRetriableMethod = this._options.retry.methods.includes(this.request.method.toLowerCase());\n\t\t\tconst result = isRetriableMethod ? this._retry(fn) : fn();\n\n\t\t\tfor (const [type, mimeType] of Object.entries(responseTypes)) {\n\t\t\t\tresult[type] = async () => {\n\t\t\t\t\tthis.request.headers.set('accept', this.request.headers.get('accept') || mimeType);\n\n\t\t\t\t\tconst response = (await result).clone();\n\n\t\t\t\t\tif (type === 'json') {\n\t\t\t\t\t\tif (response.status === 204) {\n\t\t\t\t\t\t\treturn '';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (options.parseJson) {\n\t\t\t\t\t\t\treturn options.parseJson(await response.text());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response[type]();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\t_calculateRetryDelay(error) {\n\t\t\tthis._retryCount++;\n\n\t\t\tif (this._retryCount < this._options.retry.limit && !(error instanceof TimeoutError)) {\n\t\t\t\tif (error instanceof HTTPError) {\n\t\t\t\t\tif (!this._options.retry.statusCodes.includes(error.response.status)) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst retryAfter = error.response.headers.get('Retry-After');\n\t\t\t\t\tif (retryAfter && this._options.retry.afterStatusCodes.includes(error.response.status)) {\n\t\t\t\t\t\tlet after = Number(retryAfter);\n\t\t\t\t\t\tif (Number.isNaN(after)) {\n\t\t\t\t\t\t\tafter = Date.parse(retryAfter) - Date.now();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tafter *= 1000;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (typeof this._options.retry.maxRetryAfter !== 'undefined' && after > this._options.retry.maxRetryAfter) {\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn after;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (error.response.status === 413) {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst BACKOFF_FACTOR = 0.3;\n\t\t\t\treturn BACKOFF_FACTOR * (2 ** (this._retryCount - 1)) * 1000;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\t_decorateResponse(response) {\n\t\t\tif (this._options.parseJson) {\n\t\t\t\tresponse.json = async () => {\n\t\t\t\t\treturn this._options.parseJson(await response.text());\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn response;\n\t\t}\n\n\t\tasync _retry(fn) {\n\t\t\ttry {\n\t\t\t\treturn await fn();\n\t\t\t} catch (error) {\n\t\t\t\tconst ms = Math.min(this._calculateRetryDelay(error), maxSafeTimeout);\n\t\t\t\tif (ms !== 0 && this._retryCount > 0) {\n\t\t\t\t\tawait delay(ms);\n\n\t\t\t\t\tfor (const hook of this._options.hooks.beforeRetry) {\n\t\t\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\t\t\tconst hookResult = await hook({\n\t\t\t\t\t\t\trequest: this.request,\n\t\t\t\t\t\t\toptions: this._options,\n\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\tretryCount: this._retryCount\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\t// If `stop` is returned from the hook, the retry process is stopped\n\t\t\t\t\t\tif (hookResult === stop) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this._retry(fn);\n\t\t\t\t}\n\n\t\t\t\tif (this._options.throwHttpErrors) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync _fetch() {\n\t\t\tfor (const hook of this._options.hooks.beforeRequest) {\n\t\t\t\t// eslint-disable-next-line no-await-in-loop\n\t\t\t\tconst result = await hook(this.request, this._options);\n\n\t\t\t\tif (result instanceof Request) {\n\t\t\t\t\tthis.request = result;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (result instanceof Response) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._options.timeout === false) {\n\t\t\t\treturn this._options.fetch(this.request.clone());\n\t\t\t}\n\n\t\t\treturn timeout(this.request.clone(), this.abortController, this._options);\n\t\t}\n\n\t\t/* istanbul ignore next */\n\t\t_stream(response, onDownloadProgress) {\n\t\t\tconst totalBytes = Number(response.headers.get('content-length')) || 0;\n\t\t\tlet transferredBytes = 0;\n\n\t\t\treturn new globals.Response(\n\t\t\t\tnew globals.ReadableStream({\n\t\t\t\t\tstart(controller) {\n\t\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\tonDownloadProgress({percent: 0, transferredBytes: 0, totalBytes}, new Uint8Array());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tasync function read() {\n\t\t\t\t\t\t\tconst {done, value} = await reader.read();\n\t\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (onDownloadProgress) {\n\t\t\t\t\t\t\t\ttransferredBytes += value.byteLength;\n\t\t\t\t\t\t\t\tconst percent = totalBytes === 0 ? 0 : transferredBytes / totalBytes;\n\t\t\t\t\t\t\t\tonDownloadProgress({percent, transferredBytes, totalBytes}, value);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t\tread();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tread();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}\n\n\tconst validateAndMerge = (...sources) => {\n\t\tfor (const source of sources) {\n\t\t\tif ((!isObject(source) || Array.isArray(source)) && typeof source !== 'undefined') {\n\t\t\t\tthrow new TypeError('The `options` argument must be an object');\n\t\t\t}\n\t\t}\n\n\t\treturn deepMerge({}, ...sources);\n\t};\n\n\tconst createInstance = defaults => {\n\t\tconst ky = (input, options) => new Ky(input, validateAndMerge(defaults, options));\n\n\t\tfor (const method of requestMethods) {\n\t\t\tky[method] = (input, options) => new Ky(input, validateAndMerge(defaults, options, {method}));\n\t\t}\n\n\t\tky.HTTPError = HTTPError;\n\t\tky.TimeoutError = TimeoutError;\n\t\tky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n\t\tky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n\t\tky.stop = stop;\n\n\t\treturn ky;\n\t};\n\n\tvar index = createInstance();\n\n\treturn index;\n\n})));\n","'use strict';\nconst fetch = require('node-fetch');\nconst AbortController = require('abort-controller');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nif (!global.fetch) {\n\tglobal.fetch = (url, options) => fetch(url, {highWaterMark: TEN_MEGABYTES, ...options});\n}\n\nif (!global.Headers) {\n\tglobal.Headers = fetch.Headers;\n}\n\nif (!global.Request) {\n\tglobal.Request = fetch.Request;\n}\n\nif (!global.Response) {\n\tglobal.Response = fetch.Response;\n}\n\nif (!global.AbortController) {\n\tglobal.AbortController = AbortController;\n}\n\nif (!global.ReadableStream) {\n\ttry {\n\t\tglobal.ReadableStream = require('web-streams-polyfill/ponyfill/es2018');\n\t} catch (_) {}\n}\n\nmodule.exports = require('ky/umd');\n","/*!\n * Copyright (c) 2020 Digital Bazaar, Inc. All rights reserved.\n */\nimport kyOriginal from 'ky-universal';\n\nexport const DEFAULT_HEADERS = {\n  Accept: 'application/ld+json, application/json'\n};\n\nconst ky = kyOriginal.create({headers: DEFAULT_HEADERS});\n\nconst proxyMethods = new Set([\n  'get', 'post', 'push', 'patch', 'head', 'delete'\n]);\n\nexport const httpClient = new Proxy(ky, {\n  apply: _handleResponse,\n  get(target, propKey) {\n    const propValue = target[propKey];\n\n    // only intercept particular methods\n    if(!proxyMethods.has(propKey)) {\n      return propValue;\n    }\n    return async function() {\n      return _handleResponse(propValue, this, arguments);\n    };\n  }\n});\n\nasync function _handleResponse(target, thisArg, args) {\n  let response;\n  try {\n    response = await target.apply(thisArg, args);\n  } catch(e) {\n    return _handleError(e);\n  }\n  const {parseBody = true} = args[1] || {};\n  if(parseBody) {\n    // a 204 will not include a content-type header\n    const contentType = response.headers.get('content-type');\n    if(contentType && contentType.includes('json')) {\n      response.data = await response.json();\n    }\n  }\n  return response;\n}\n\nasync function _handleError(e) {\n  // handle network errors that do not have a response\n  if(!e.response) {\n    if(e.message === 'Failed to fetch') {\n      e.message = `${e.message}. Possible CORS error.`;\n    }\n    throw e;\n  }\n\n  // always move status up to the root of e\n  e.status = e.response.status;\n\n  const contentType = e.response.headers.get('content-type');\n  if(contentType && contentType.includes('json')) {\n    const errorBody = await e.response.json();\n    // the HTTPError received from ky has a generic message based on status\n    // use that if the JSON body does not include a message\n    e.message = errorBody.message || e.message;\n    e.data = errorBody;\n  }\n  throw e;\n}\n\nexport default {\n  httpClient,\n  ky: kyOriginal,\n  DEFAULT_HEADERS,\n};\n","/*\n * Copyright (c) 2017-2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst https = require('https');\nconst {parseLinkHeader, buildHeaders} = require('../util');\nconst {LINK_HEADER_CONTEXT} = require('../constants');\nconst JsonLdError = require('../JsonLdError');\nconst RequestQueue = require('../RequestQueue');\nconst {prependBase} = require('../url');\nconst {httpClient} = require('@digitalbazaar/http-client');\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          [secure]: require all URLs to use HTTPS. (default: false)\n *          [strictSSL]: true to require SSL certificates to be valid,\n *            false not to. (default: true)\n *          [maxRedirects]: the maximum number of redirects to permit.\n *            (default: none)\n *          [headers]: an object (map) of headers which will be passed as\n *            request headers for the requested document. Accept is not\n *            allowed. (default: none).\n *          [httpAgent]: a Node.js `http.Agent` to use with 'http' requests.\n *            (default: none)\n *          [httpsAgent]: a Node.js `https.Agent` to use with 'https' requests.\n *            (default: An agent with rejectUnauthorized to the strictSSL\n *            value)\n *\n * @return the node document loader.\n */\nmodule.exports = ({\n  secure,\n  strictSSL = true,\n  maxRedirects = -1,\n  headers = {},\n  httpAgent,\n  httpsAgent\n} = {strictSSL: true, maxRedirects: -1, headers: {}}) => {\n  headers = buildHeaders(headers);\n  // if no default user-agent header, copy headers and set one\n  if(!('user-agent' in headers)) {\n    headers = Object.assign({}, headers, {\n      'user-agent': 'jsonld.js'\n    });\n  }\n  const http = require('http');\n\n  const queue = new RequestQueue();\n  return queue.wrapLoader(function(url) {\n    return loadDocument(url, []);\n  });\n\n  async function loadDocument(url, redirects) {\n    const isHttp = url.startsWith('http:');\n    const isHttps = url.startsWith('https:');\n    if(!isHttp && !isHttps) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    if(secure && !isHttps) {\n      throw new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url});\n    }\n    // TODO: disable cache until HTTP caching implemented\n    let doc = null;//cache.get(url);\n    if(doc !== null) {\n      return doc;\n    }\n\n    let alternate = null;\n\n    const {res, body} = await _fetch({\n      url, headers, strictSSL, httpAgent, httpsAgent\n    });\n    doc = {contextUrl: null, documentUrl: url, document: body || null};\n    // handle error\n    const statusText = http.STATUS_CODES[res.status];\n    if(res.status >= 400) {\n      throw new JsonLdError(\n        `URL \"${url}\" could not be dereferenced: ${statusText}`,\n        'jsonld.InvalidUrl', {\n          code: 'loading document failed',\n          url,\n          httpStatusCode: res.status\n        });\n    }\n    const link = res.headers.get('link');\n    const contentType = res.headers.get('content-type');\n    // handle Link Header\n    if(link && contentType !== 'application/ld+json') {\n      // only 1 related link header permitted\n      const linkHeaders = parseLinkHeader(link);\n      const linkedContext = linkHeaders[LINK_HEADER_CONTEXT];\n      if(Array.isArray(linkedContext)) {\n        throw new JsonLdError(\n          'URL could not be dereferenced, it has more than one associated ' +\n          'HTTP Link Header.',\n          'jsonld.InvalidUrl',\n          {code: 'multiple context link headers', url});\n      }\n      if(linkedContext) {\n        doc.contextUrl = linkedContext.target;\n      }\n\n      // \"alternate\" link header is a redirect\n      alternate = linkHeaders['alternate'];\n      if(alternate &&\n        alternate.type == 'application/ld+json' &&\n        !(contentType || '')\n          .match(/^application\\/(\\w*\\+)?json$/)) {\n        res.headers.set('location', prependBase(url, alternate.target));\n      }\n    }\n    const location = res.headers.get('location');\n    // handle redirect\n    if((alternate ||\n      res.status >= 300 && res.status < 400) && location) {\n      if(redirects.length === maxRedirects) {\n        throw new JsonLdError(\n          'URL could not be dereferenced; there were too many redirects.',\n          'jsonld.TooManyRedirects', {\n            code: 'loading document failed',\n            url,\n            httpStatusCode: res.status,\n            redirects\n          });\n      }\n      if(redirects.indexOf(url) !== -1) {\n        throw new JsonLdError(\n          'URL could not be dereferenced; infinite redirection was detected.',\n          'jsonld.InfiniteRedirectDetected', {\n            code: 'recursive context inclusion',\n            url,\n            httpStatusCode: res.status,\n            redirects\n          });\n      }\n      redirects.push(url);\n      return loadDocument(location, redirects);\n    }\n\n    // cache for each redirected URL\n    redirects.push(url);\n    // TODO: disable cache until HTTP caching implemented\n    /*\n    for(let i = 0; i < redirects.length; ++i) {\n      cache.set(\n        redirects[i],\n        {contextUrl: null, documentUrl: redirects[i], document: body});\n    }\n    */\n\n    return doc;\n  }\n};\n\nasync function _fetch({url, headers, strictSSL, httpAgent, httpsAgent}) {\n  try {\n    const options = {headers, redirect: 'manual'};\n    const isHttps = url.startsWith('https:');\n    if(isHttps) {\n      options.agent =\n        httpsAgent || new https.Agent({rejectUnauthorized: strictSSL});\n    } else {\n      if(httpAgent) {\n        options.agent = httpAgent;\n      }\n    }\n    const res = await httpClient.get(url, options);\n    return {res, body: res.data};\n  } catch(e) {\n    // HTTP errors have a response in them\n    // ky considers redirects HTTP errors\n    if(e.response) {\n      return {res: e.response, body: null};\n    }\n    throw new JsonLdError(\n      'URL could not be dereferenced, an error occurred.',\n      'jsonld.LoadDocumentError',\n      {code: 'loading document failed', url, cause: e});\n  }\n}\n","/*\n * Copyright (c) 2021 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst nodeLoader = require('./documentLoaders/node');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Setup Node.js document loaders.\n *\n * @param jsonld the jsonld api.\n */\napi.setupDocumentLoaders = function(jsonld) {\n  jsonld.documentLoaders.node = nodeLoader;\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n};\n\n/**\n * Setup Node.js globals.\n *\n * @param jsonld the jsonld api.\n */\n/* eslint-disable-next-line no-unused-vars */\napi.setupGlobals = function(jsonld) {\n  // none for Node.js\n};\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst LRU = require('lru-cache');\n\nconst MAX_ACTIVE_CONTEXTS = 10;\n\nmodule.exports = class ResolvedContext {\n  /**\n   * Creates a ResolvedContext.\n   *\n   * @param document the context document.\n   */\n  constructor({document}) {\n    this.document = document;\n    // TODO: enable customization of processed context cache\n    // TODO: limit based on size of processed contexts vs. number of them\n    this.cache = new LRU({max: MAX_ACTIVE_CONTEXTS});\n  }\n\n  getProcessed(activeCtx) {\n    return this.cache.get(activeCtx);\n  }\n\n  setProcessed(activeCtx, processedCtx) {\n    this.cache.set(activeCtx, processedCtx);\n  }\n};\n","/*\n * Copyright (c) 2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n} = require('./types');\nconst {\n  asArray: _asArray\n} = require('./util');\nconst {prependBase} = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst ResolvedContext = require('./ResolvedContext');\n\nconst MAX_CONTEXT_URLS = 10;\n\nmodule.exports = class ContextResolver {\n  /**\n   * Creates a ContextResolver.\n   *\n   * @param sharedCache a shared LRU cache with `get` and `set` APIs.\n   */\n  constructor({sharedCache}) {\n    this.perOpCache = new Map();\n    this.sharedCache = sharedCache;\n  }\n\n  async resolve({\n    activeCtx, context, documentLoader, base, cycles = new Set()\n  }) {\n    // process `@context`\n    if(context && _isObject(context) && context['@context']) {\n      context = context['@context'];\n    }\n\n    // context is one or more contexts\n    context = _asArray(context);\n\n    // resolve each context in the array\n    const allResolved = [];\n    for(const ctx of context) {\n      if(_isString(ctx)) {\n        // see if `ctx` has been resolved before...\n        let resolved = this._get(ctx);\n        if(!resolved) {\n          // not resolved yet, resolve\n          resolved = await this._resolveRemoteContext(\n            {activeCtx, url: ctx, documentLoader, base, cycles});\n        }\n\n        // add to output and continue\n        if(_isArray(resolved)) {\n          allResolved.push(...resolved);\n        } else {\n          allResolved.push(resolved);\n        }\n        continue;\n      }\n      if(ctx === null) {\n        // handle `null` context, nothing to cache\n        allResolved.push(new ResolvedContext({document: null}));\n        continue;\n      }\n      if(!_isObject(ctx)) {\n        _throwInvalidLocalContext(context);\n      }\n      // context is an object, get/create `ResolvedContext` for it\n      const key = JSON.stringify(ctx);\n      let resolved = this._get(key);\n      if(!resolved) {\n        // create a new static `ResolvedContext` and cache it\n        resolved = new ResolvedContext({document: ctx});\n        this._cacheResolvedContext({key, resolved, tag: 'static'});\n      }\n      allResolved.push(resolved);\n    }\n\n    return allResolved;\n  }\n\n  _get(key) {\n    // get key from per operation cache; no `tag` is used with this cache so\n    // any retrieved context will always be the same during a single operation\n    let resolved = this.perOpCache.get(key);\n    if(!resolved) {\n      // see if the shared cache has a `static` entry for this URL\n      const tagMap = this.sharedCache.get(key);\n      if(tagMap) {\n        resolved = tagMap.get('static');\n        if(resolved) {\n          this.perOpCache.set(key, resolved);\n        }\n      }\n    }\n    return resolved;\n  }\n\n  _cacheResolvedContext({key, resolved, tag}) {\n    this.perOpCache.set(key, resolved);\n    if(tag !== undefined) {\n      let tagMap = this.sharedCache.get(key);\n      if(!tagMap) {\n        tagMap = new Map();\n        this.sharedCache.set(key, tagMap);\n      }\n      tagMap.set(tag, resolved);\n    }\n    return resolved;\n  }\n\n  async _resolveRemoteContext({activeCtx, url, documentLoader, base, cycles}) {\n    // resolve relative URL and fetch context\n    url = prependBase(base, url);\n    const {context, remoteDoc} = await this._fetchContext(\n      {activeCtx, url, documentLoader, cycles});\n\n    // update base according to remote document and resolve any relative URLs\n    base = remoteDoc.documentUrl || url;\n    _resolveContextUrls({context, base});\n\n    // resolve, cache, and return context\n    const resolved = await this.resolve(\n      {activeCtx, context, documentLoader, base, cycles});\n    this._cacheResolvedContext({key: url, resolved, tag: remoteDoc.tag});\n    return resolved;\n  }\n\n  async _fetchContext({activeCtx, url, documentLoader, cycles}) {\n    // check for max context URLs fetched during a resolve operation\n    if(cycles.size > MAX_CONTEXT_URLS) {\n      throw new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'loading remote context failed' :\n            'context overflow',\n          max: MAX_CONTEXT_URLS\n        });\n    }\n\n    // check for context URL cycle\n    // shortcut to avoid extra work that would eventually hit the max above\n    if(cycles.has(url)) {\n      throw new JsonLdError(\n        'Cyclical @context URLs detected.',\n        'jsonld.ContextUrlError',\n        {\n          code: activeCtx.processingMode === 'json-ld-1.0' ?\n            'recursive context inclusion' :\n            'context overflow',\n          url\n        });\n    }\n\n    // track cycles\n    cycles.add(url);\n\n    let context;\n    let remoteDoc;\n\n    try {\n      remoteDoc = await documentLoader(url);\n      context = remoteDoc.document || null;\n      // parse string context as JSON\n      if(_isString(context)) {\n        context = JSON.parse(context);\n      }\n    } catch(e) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n        'Possible causes are an inaccessible URL perhaps due to ' +\n        'a same-origin policy (ensure the server uses CORS if you are ' +\n        'using client-side JavaScript), too many redirects, a ' +\n        'non-JSON response, or more than one HTTP Link Header was ' +\n        'provided for a remote context.',\n        'jsonld.InvalidUrl',\n        {code: 'loading remote context failed', url, cause: e});\n    }\n\n    // ensure ctx is an object\n    if(!_isObject(context)) {\n      throw new JsonLdError(\n        'Dereferencing a URL did not result in a JSON object. The ' +\n        'response was valid JSON, but it was not a JSON object.',\n        'jsonld.InvalidUrl', {code: 'invalid remote context', url});\n    }\n\n    // use empty context if no @context key is present\n    if(!('@context' in context)) {\n      context = {'@context': {}};\n    } else {\n      context = {'@context': context['@context']};\n    }\n\n    // append @context URL to context if given\n    if(remoteDoc.contextUrl) {\n      if(!_isArray(context['@context'])) {\n        context['@context'] = [context['@context']];\n      }\n      context['@context'].push(remoteDoc.contextUrl);\n    }\n\n    return {context, remoteDoc};\n  }\n};\n\nfunction _throwInvalidLocalContext(ctx) {\n  throw new JsonLdError(\n    'Invalid JSON-LD syntax; @context must be an object.',\n    'jsonld.SyntaxError', {\n      code: 'invalid local context', context: ctx\n    });\n}\n\n/**\n * Resolve all relative `@context` URLs in the given context by inline\n * replacing them with absolute URLs.\n *\n * @param context the context.\n * @param base the base IRI to use to resolve relative IRIs.\n */\nfunction _resolveContextUrls({context, base}) {\n  if(!context) {\n    return;\n  }\n\n  const ctx = context['@context'];\n\n  if(_isString(ctx)) {\n    context['@context'] = prependBase(base, ctx);\n    return;\n  }\n\n  if(_isArray(ctx)) {\n    for(let i = 0; i < ctx.length; ++i) {\n      const element = ctx[i];\n      if(_isString(element)) {\n        ctx[i] = prependBase(base, element);\n        continue;\n      }\n      if(_isObject(element)) {\n        _resolveContextUrls({context: {'@context': element}, base});\n      }\n    }\n    return;\n  }\n\n  if(!_isObject(ctx)) {\n    // no @context URLs can be found in non-object\n    return;\n  }\n\n  // ctx is an object, resolve any context URLs in terms\n  for(const term in ctx) {\n    _resolveContextUrls({context: ctx[term], base});\n  }\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\n// TODO: move `NQuads` to its own package\nmodule.exports = require('rdf-canonize').NQuads;\n","/*\n * Copyright (c) 2017-2019 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isAbsolute: _isAbsoluteIri,\n  isRelative: _isRelativeIri,\n  prependBase\n} = require('./url');\n\nconst {\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst INITIAL_CONTEXT_CACHE = new Map();\nconst INITIAL_CONTEXT_CACHE_MAX_SIZE = 10000;\nconst KEYWORD_PATTERN = /^@[a-zA-Z]+$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n * @param propagate `true` if `false`, retains any previously defined term,\n *   which can be rolled back when the descending into a new node object.\n * @param overrideProtected `false` allows protected terms to be modified.\n *\n * @return a Promise that resolves to the new active context.\n */\napi.process = async ({\n  activeCtx, localCtx, options,\n  propagate = true,\n  overrideProtected = false,\n  cycles = new Set()\n}) => {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  const ctxs = _asArray(localCtx);\n\n  // no contexts in array, return current active context w/o changes\n  if(ctxs.length === 0) {\n    return activeCtx;\n  }\n\n  // resolve contexts\n  const resolved = await options.contextResolver.resolve({\n    activeCtx,\n    context: localCtx,\n    documentLoader: options.documentLoader,\n    base: options.base\n  });\n\n  // override propagate if first resolved context has `@propagate`\n  if(_isObject(resolved[0].document) &&\n    typeof resolved[0].document['@propagate'] === 'boolean') {\n    // retrieve early, error checking done later\n    propagate = resolved[0].document['@propagate'];\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  let rval = activeCtx;\n\n  // track the previous context\n  // if not propagating, make sure rval has a previous context\n  if(!propagate && !rval.previousContext) {\n    // clone `rval` context before updating\n    rval = rval.clone();\n    rval.previousContext = activeCtx;\n  }\n\n  for(const resolvedContext of resolved) {\n    let {document: ctx} = resolvedContext;\n\n    // update active context to one computed from last iteration\n    activeCtx = rval;\n\n    // reset to initial context\n    if(ctx === null) {\n      // We can't nullify if there are protected terms and we're\n      // not allowing overrides (e.g. processing a property term scoped context)\n      if(!overrideProtected &&\n        Object.keys(activeCtx.protected).length !== 0) {\n        const protectedMode = (options && options.protectedMode) || 'error';\n        if(protectedMode === 'error') {\n          throw new JsonLdError(\n            'Tried to nullify a context with protected terms outside of ' +\n            'a term definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context nullification'});\n        } else if(protectedMode === 'warn') {\n          // FIXME: remove logging and use a handler\n          console.warn('WARNING: invalid context nullification');\n\n          // get processed context from cache if available\n          const processed = resolvedContext.getProcessed(activeCtx);\n          if(processed) {\n            rval = activeCtx = processed;\n            continue;\n          }\n\n          const oldActiveCtx = activeCtx;\n          // copy all protected term definitions to fresh initial context\n          rval = activeCtx = api.getInitialContext(options).clone();\n          for(const [term, _protected] of\n            Object.entries(oldActiveCtx.protected)) {\n            if(_protected) {\n              activeCtx.mappings[term] =\n                util.clone(oldActiveCtx.mappings[term]);\n            }\n          }\n          activeCtx.protected = util.clone(oldActiveCtx.protected);\n\n          // cache processed result\n          resolvedContext.setProcessed(oldActiveCtx, rval);\n          continue;\n        }\n        throw new JsonLdError(\n          'Invalid protectedMode.',\n          'jsonld.SyntaxError',\n          {code: 'invalid protected mode', context: localCtx, protectedMode});\n      }\n      rval = activeCtx = api.getInitialContext(options).clone();\n      continue;\n    }\n\n    // get processed context from cache if available\n    const processed = resolvedContext.getProcessed(activeCtx);\n    if(processed) {\n      rval = activeCtx = processed;\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // TODO: there is likely a `previousContext` cloning optimization that\n    // could be applied here (no need to copy it under certain conditions)\n\n    // clone context before updating it\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    const defined = new Map();\n\n    // handle @version\n    if('@version' in ctx) {\n      if(ctx['@version'] !== 1.1) {\n        throw new JsonLdError(\n          'Unsupported JSON-LD version: ' + ctx['@version'],\n          'jsonld.UnsupportedVersion',\n          {code: 'invalid @version value', context: ctx});\n      }\n      if(activeCtx.processingMode &&\n        activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          '@version: ' + ctx['@version'] + ' not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.ProcessingModeConflict',\n          {code: 'processing mode conflict', context: ctx});\n      }\n      rval.processingMode = 'json-ld-1.1';\n      rval['@version'] = ctx['@version'];\n      defined.set('@version', true);\n    }\n\n    // if not set explicitly, set processingMode to \"json-ld-1.1\"\n    rval.processingMode =\n      rval.processingMode || activeCtx.processingMode;\n\n    // handle @base\n    if('@base' in ctx) {\n      let base = ctx['@base'];\n\n      if(base === null || _isAbsoluteIri(base)) {\n        // no action\n      } else if(_isRelativeIri(base)) {\n        base = prependBase(rval['@base'], base);\n      } else {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI, a relative IRI, or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      rval['@base'] = base;\n      defined.set('@base', true);\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      const value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value) && api.processingMode(rval, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = _expandIri(rval, value, {vocab: true, base: true},\n          undefined, undefined, options);\n      }\n      defined.set('@vocab', true);\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      const value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined.set('@language', true);\n    }\n\n    // handle @direction\n    if('@direction' in ctx) {\n      const value = ctx['@direction'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @direction not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context member', context: ctx});\n      }\n      if(value === null) {\n        delete rval['@direction'];\n      } else if(value !== 'ltr' && value !== 'rtl') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@direction\" in a ' +\n          '@context must be null, \"ltr\", or \"rtl\".',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', context: ctx});\n      } else {\n        rval['@direction'] = value;\n      }\n      defined.set('@direction', true);\n    }\n\n    // handle @propagate\n    // note: we've already extracted it, here we just do error checking\n    if('@propagate' in ctx) {\n      const value = ctx['@propagate'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(typeof value !== 'boolean') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @propagate value must be a boolean.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @propagate value', context: localCtx});\n      }\n      defined.set('@propagate', true);\n    }\n\n    // handle @import\n    if('@import' in ctx) {\n      const value = ctx['@import'];\n      if(activeCtx.processingMode === 'json-ld-1.0') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import not compatible with ' +\n          activeCtx.processingMode,\n          'jsonld.SyntaxError',\n          {code: 'invalid context entry', context: ctx});\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @import value', context: localCtx});\n      }\n\n      // resolve contexts\n      const resolvedImport = await options.contextResolver.resolve({\n        activeCtx,\n        context: value,\n        documentLoader: options.documentLoader,\n        base: options.base\n      });\n      if(resolvedImport.length !== 1) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @import must reference a single context.',\n          'jsonld.SyntaxError',\n          {code: 'invalid remote context', context: localCtx});\n      }\n      const processedImport = resolvedImport[0].getProcessed(activeCtx);\n      if(processedImport) {\n        // Note: if the same context were used in this active context\n        // as a reference context, then processed_input might not\n        // be a dict.\n        ctx = processedImport;\n      } else {\n        const importCtx = resolvedImport[0].document;\n        if('@import' in importCtx) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax: ' +\n            'imported context must not include @import.',\n            'jsonld.SyntaxError',\n            {code: 'invalid context entry', context: localCtx});\n        }\n\n        // merge ctx into importCtx and replace rval with the result\n        for(const key in importCtx) {\n          if(!ctx.hasOwnProperty(key)) {\n            ctx[key] = importCtx[key];\n          }\n        }\n\n        // Note: this could potenially conflict if the import\n        // were used in the same active context as a referenced\n        // context and an import. In this case, we\n        // could override the cached result, but seems unlikely.\n        resolvedImport[0].setProcessed(activeCtx, ctx);\n      }\n\n      defined.set('@import', true);\n    }\n\n    // handle @protected; determine whether this sub-context is declaring\n    // all its terms to be \"protected\" (exceptions can be made on a\n    // per-definition basis)\n    defined.set('@protected', ctx['@protected'] || false);\n\n    // process all other keys\n    for(const key in ctx) {\n      api.createTermDefinition({\n        activeCtx: rval,\n        localCtx: ctx,\n        term: key,\n        defined,\n        options,\n        overrideProtected\n      });\n\n      if(_isObject(ctx[key]) && '@context' in ctx[key]) {\n        const keyCtx = ctx[key]['@context'];\n        let process = true;\n        if(_isString(keyCtx)) {\n          const url = prependBase(options.base, keyCtx);\n          // track processed contexts to avoid scoped context recursion\n          if(cycles.has(url)) {\n            process = false;\n          } else {\n            cycles.add(url);\n          }\n        }\n        // parse context to validate\n        if(process) {\n          try {\n            await api.process({\n              activeCtx: rval.clone(),\n              localCtx: ctx[key]['@context'],\n              overrideProtected: true,\n              options,\n              cycles\n            });\n          } catch(e) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; invalid scoped context.',\n              'jsonld.SyntaxError',\n              {\n                code: 'invalid scoped context',\n                context: ctx[key]['@context'],\n                term: key\n              });\n          }\n        }\n      }\n    }\n\n    // cache processed result\n    resolvedContext.setProcessed(activeCtx, rval);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n * @param {Object} [options] - creation options.\n * @param {string} [options.protectedMode=\"error\"] - \"error\" to throw error\n *   on `@protected` constraint violation, \"warn\" to allow violations and\n *   signal a warning.\n * @param overrideProtected `false` allows protected terms to be modified.\n */\napi.createTermDefinition = ({\n  activeCtx,\n  localCtx,\n  term,\n  defined,\n  options,\n  overrideProtected = false,\n}) => {\n  if(defined.has(term)) {\n    // term already defined\n    if(defined.get(term)) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term});\n  }\n\n  // now defining term\n  defined.set(term, false);\n\n  // get context term value\n  let value;\n  if(localCtx.hasOwnProperty(term)) {\n    value = localCtx[term];\n  }\n\n  if(term === '@type' &&\n     _isObject(value) &&\n     (value['@container'] || '@set') === '@set' &&\n     api.processingMode(activeCtx, 1.1)) {\n\n    const validKeys = ['@container', '@id', '@protected'];\n    const keys = Object.keys(value);\n    if(keys.length === 0 || keys.some(k => !validKeys.includes(k))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords cannot be overridden.',\n        'jsonld.SyntaxError',\n        {code: 'keyword redefinition', context: localCtx, term});\n    }\n  } else if(api.isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term});\n  } else if(term.match(KEYWORD_PATTERN)) {\n    // FIXME: remove logging and use a handler\n    console.warn('WARNING: terms beginning with \"@\" are reserved' +\n      ' for future use and ignored', {term});\n    return;\n  } else if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // keep reference to previous mapping for potential `@protected` check\n  const previousMapping = activeCtx.mappings.get(term);\n\n  // remove old mapping\n  if(activeCtx.mappings.has(term)) {\n    activeCtx.mappings.delete(term);\n  }\n\n  // convert short-hand value to object w/@id\n  let simpleTerm = false;\n  if(_isString(value) || value === null) {\n    simpleTerm = true;\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context term values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  const mapping = {};\n  activeCtx.mappings.set(term, mapping);\n  mapping.reverse = false;\n\n  // make sure term definition only has expected keywords\n  const validKeys = ['@container', '@id', '@language', '@reverse', '@type'];\n\n  // JSON-LD 1.1 support\n  if(api.processingMode(activeCtx, 1.1)) {\n    validKeys.push(\n      '@context', '@direction', '@index', '@nest', '@prefix', '@protected');\n  }\n\n  for(const kw in value) {\n    if(!validKeys.includes(kw)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a term definition must not contain ' + kw,\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  const colon = term.indexOf(':');\n  mapping._termHasColon = (colon > 0);\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    if('@nest' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @nest.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    const reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    if(!api.isKeyword(reverse) && reverse.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {reverse});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    }\n\n    // expand and add @id mapping\n    const id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined,\n      options);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    let id = value['@id'];\n    if(id && !_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id === null) {\n      // reserve a null term, which may be protected\n      mapping['@id'] = null;\n    } else if(!api.isKeyword(id) && id.match(KEYWORD_PATTERN)) {\n      // FIXME: remove logging and use a handler\n      console.warn('WARNING: values beginning with \"@\" are reserved' +\n        ' for future use and ignored', {id});\n      if(previousMapping) {\n        activeCtx.mappings.set(term, previousMapping);\n      } else {\n        activeCtx.mappings.delete(term);\n      }\n      return;\n    } else if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined, options);\n      if(!_isAbsoluteIri(id) && !api.isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n\n      // if term has the form of an IRI it must map the same\n      if(term.match(/(?::[^:])|\\//)) {\n        const termDefined = new Map(defined).set(term, true);\n        const termIri = _expandIri(\n          activeCtx, term, {vocab: true, base: false},\n          localCtx, termDefined, options);\n        if(termIri !== id) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; term in form of IRI must ' +\n            'expand to definition.',\n            'jsonld.SyntaxError',\n            {code: 'invalid IRI mapping', context: localCtx});\n        }\n      }\n\n      mapping['@id'] = id;\n      // indicate if this term may be used as a compact IRI prefix\n      mapping._prefix = (simpleTerm &&\n        !mapping._termHasColon &&\n        id.match(/[:\\/\\?#\\[\\]@]$/));\n    }\n  }\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      const prefix = term.substr(0, colon);\n      if(localCtx.hasOwnProperty(prefix)) {\n        // define parent prefix\n        api.createTermDefinition({\n          activeCtx, localCtx, term: prefix, defined, options\n        });\n      }\n\n      if(activeCtx.mappings.has(prefix)) {\n        // set @id based on prefix parent\n        const suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings.get(prefix)['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else if(term === '@type') {\n      // Special case, were we've previously determined that container is @set\n      mapping['@id'] = term;\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // Handle term protection\n  if(value['@protected'] === true ||\n    (defined.get('@protected') === true && value['@protected'] !== false)) {\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n  }\n\n  // IRI mapping now defined\n  defined.set(term, true);\n\n  if('@type' in value) {\n    let type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type value must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if((type === '@json' || type === '@none')) {\n      if(api.processingMode(activeCtx, 1.0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must not be ' +\n          `\"${type}\" in JSON-LD 1.0 mode.`,\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    } else if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined,\n        options);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    // normalize container to an array form\n    const container = _isString(value['@container']) ?\n      [value['@container']] : (value['@container'] || []);\n    const validContainers = ['@list', '@set', '@index', '@language'];\n    let isValid = true;\n    const hasSet = container.includes('@set');\n\n    // JSON-LD 1.1 support\n    if(api.processingMode(activeCtx, 1.1)) {\n      validContainers.push('@graph', '@id', '@type');\n\n      // check container length\n      if(container.includes('@list')) {\n        if(container.length !== 1) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @list must ' +\n            'have no other values',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else if(container.includes('@graph')) {\n        if(container.some(key =>\n          key !== '@graph' && key !== '@id' && key !== '@index' &&\n          key !== '@set')) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; @context @container with @graph must ' +\n            'have no other values other than @id, @index, and @set',\n            'jsonld.SyntaxError',\n            {code: 'invalid container mapping', context: localCtx});\n        }\n      } else {\n        // otherwise, container may also include @set\n        isValid &= container.length <= (hasSet ? 2 : 1);\n      }\n\n      if(container.includes('@type')) {\n        // If mapping does not have an @type,\n        // set it to @id\n        mapping['@type'] = mapping['@type'] || '@id';\n\n        // type mapping must be either @id or @vocab\n        if(!['@id', '@vocab'].includes(mapping['@type'])) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; container: @type requires @type to be ' +\n            '@id or @vocab.',\n            'jsonld.SyntaxError',\n            {code: 'invalid type mapping', context: localCtx});\n        }\n      }\n    } else {\n      // in JSON-LD 1.0, container must not be an array (it must be a string,\n      // which is one of the validContainers)\n      isValid &= !_isArray(value['@container']);\n\n      // check container length\n      isValid &= container.length <= 1;\n    }\n\n    // check against valid containers\n    isValid &= container.every(c => validContainers.includes(c));\n\n    // @set not allowed with @list\n    isValid &= !(hasSet && container.includes('@list'));\n\n    if(!isValid) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: ' + validContainers.join(', '),\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n\n    if(mapping.reverse &&\n      !container.every(c => ['@index', '@set'].includes(c))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  // property indexing\n  if('@index' in value) {\n    if(!('@container' in value) || !mapping['@container'].includes('@index')) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index without @index in @container: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(!_isString(value['@index']) || value['@index'].indexOf('@') === 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @index must expand to an IRI: ' +\n        `\"${value['@index']}\" on term \"${term}\".`, 'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    mapping['@index'] = value['@index'];\n  }\n\n  // scoped contexts\n  if('@context' in value) {\n    mapping['@context'] = value['@context'];\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    let language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // term may be used as a prefix\n  if('@prefix' in value) {\n    if(term.match(/:|\\//)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @prefix used on a compact IRI term',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(api.isKeyword(mapping['@id'])) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; keywords may not be used as prefixes',\n        'jsonld.SyntaxError',\n        {code: 'invalid term definition', context: localCtx});\n    }\n    if(typeof value['@prefix'] === 'boolean') {\n      mapping._prefix = value['@prefix'] === true;\n    } else {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context value for @prefix must be boolean',\n        'jsonld.SyntaxError',\n        {code: 'invalid @prefix value', context: localCtx});\n    }\n  }\n\n  if('@direction' in value) {\n    const direction = value['@direction'];\n    if(direction !== null && direction !== 'ltr' && direction !== 'rtl') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @direction value must be ' +\n        'null, \"ltr\", or \"rtl\".',\n        'jsonld.SyntaxError',\n        {code: 'invalid base direction', context: localCtx});\n    }\n    mapping['@direction'] = direction;\n  }\n\n  if('@nest' in value) {\n    const nest = value['@nest'];\n    if(!_isString(nest) || (nest !== '@nest' && nest.indexOf('@') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @nest value must be ' +\n        'a string which is not a keyword other than @nest.',\n        'jsonld.SyntaxError',\n        {code: 'invalid @nest value', context: localCtx});\n    }\n    mapping['@nest'] = nest;\n  }\n\n  // disallow aliasing @context and @preserve\n  const id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n\n  // Check for overriding protected terms\n  if(previousMapping && previousMapping.protected && !overrideProtected) {\n    // force new term to continue to be protected and see if the mappings would\n    // be equal\n    activeCtx.protected[term] = true;\n    mapping.protected = true;\n    if(!_deepCompare(previousMapping, mapping)) {\n      const protectedMode = (options && options.protectedMode) || 'error';\n      if(protectedMode === 'error') {\n        throw new JsonLdError(\n          `Invalid JSON-LD syntax; tried to redefine \"${term}\" which is a ` +\n          'protected term.',\n          'jsonld.SyntaxError',\n          {code: 'protected term redefinition', context: localCtx, term});\n      } else if(protectedMode === 'warn') {\n        // FIXME: remove logging and use a handler\n        console.warn('WARNING: protected term redefinition', {term});\n        return;\n      }\n      throw new JsonLdError(\n        'Invalid protectedMode.',\n        'jsonld.SyntaxError',\n        {code: 'invalid protected mode', context: localCtx, term,\n          protectedMode});\n    }\n  }\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\napi.expandIri = (activeCtx, value, relativeTo, options) => {\n  return _expandIri(activeCtx, value, relativeTo, undefined, undefined,\n    options);\n};\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined, options) {\n  // already expanded\n  if(value === null || !_isString(value) || api.isKeyword(value)) {\n    return value;\n  }\n\n  // ignore non-keyword things that look like a keyword\n  if(value.match(KEYWORD_PATTERN)) {\n    return null;\n  }\n\n  // define term dependency if not defined\n  if(localCtx && localCtx.hasOwnProperty(value) &&\n    defined.get(value) !== true) {\n    api.createTermDefinition({\n      activeCtx, localCtx, term: value, defined, options\n    });\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    const mapping = activeCtx.mappings.get(value);\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(_isObject(mapping) && '@id' in mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  const colon = value.indexOf(':');\n  if(colon > 0) {\n    const prefix = value.substr(0, colon);\n    const suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && localCtx.hasOwnProperty(prefix)) {\n      api.createTermDefinition({\n        activeCtx, localCtx, term: prefix, defined, options\n      });\n    }\n\n    // use mapping if prefix is defined\n    const mapping = activeCtx.mappings.get(prefix);\n    if(mapping && mapping._prefix) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    if(_isAbsoluteIri(value)) {\n      return value;\n    }\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  if(relativeTo.base && '@base' in activeCtx) {\n    if(activeCtx['@base']) {\n      // The null case preserves value as potentially relative\n      return prependBase(prependBase(options.base, activeCtx['@base']), value);\n    }\n  } else if(relativeTo.base) {\n    return prependBase(options.base, value);\n  }\n\n  return value;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\napi.getInitialContext = options => {\n  const key = JSON.stringify({processingMode: options.processingMode});\n  const cached = INITIAL_CONTEXT_CACHE.get(key);\n  if(cached) {\n    return cached;\n  }\n\n  const initialContext = {\n    processingMode: options.processingMode,\n    mappings: new Map(),\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext,\n    revertToPreviousContext: _revertToPreviousContext,\n    protected: {}\n  };\n  // TODO: consider using LRU cache instead\n  if(INITIAL_CONTEXT_CACHE.size === INITIAL_CONTEXT_CACHE_MAX_SIZE) {\n    // clear whole cache -- assumes scenario where the cache fills means\n    // the cache isn't being used very efficiently anyway\n    INITIAL_CONTEXT_CACHE.clear();\n  }\n  INITIAL_CONTEXT_CACHE.set(key, initialContext);\n  return initialContext;\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    const activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    const inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    const fastCurieMap = activeCtx.fastCurieMap = {};\n    const irisToTerms = {};\n\n    // handle default language\n    const defaultLanguage = (activeCtx['@language'] || '@none').toLowerCase();\n\n    // handle default direction\n    const defaultDirection = activeCtx['@direction'];\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    const mappings = activeCtx.mappings;\n    const terms = [...mappings.keys()].sort(_compareShortestLeast);\n    for(const term of terms) {\n      const mapping = mappings.get(term);\n      if(mapping === null) {\n        continue;\n      }\n\n      let container = mapping['@container'] || '@none';\n      container = [].concat(container).sort().join('');\n\n      if(mapping['@id'] === null) {\n        continue;\n      }\n      // iterate over every IRI in the mapping\n      const ids = _asArray(mapping['@id']);\n      for(const iri of ids) {\n        let entry = inverse[iri];\n        const isKeyword = api.isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            const fastCurieEntry = {iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {},\n            '@any': {}\n          };\n        }\n        entry = entry[container];\n        _addPreferredTerm(term, entry['@any'], '@none');\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(term, entry['@type'], '@reverse');\n        } else if(mapping['@type'] === '@none') {\n          _addPreferredTerm(term, entry['@any'], '@none');\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping && '@direction' in mapping) {\n          // term is preferred for values using specific language and direction\n          const language = mapping['@language'];\n          const direction = mapping['@direction'];\n          if(language && direction) {\n            _addPreferredTerm(term, entry['@language'],\n              `${language}_${direction}`.toLowerCase());\n          } else if(language) {\n            _addPreferredTerm(term, entry['@language'], language.toLowerCase());\n          } else if(direction) {\n            _addPreferredTerm(term, entry['@language'], `_${direction}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@null');\n          }\n        } else if('@language' in mapping) {\n          _addPreferredTerm(term, entry['@language'],\n            (mapping['@language'] || '@null').toLowerCase());\n        } else if('@direction' in mapping) {\n          if(mapping['@direction']) {\n            _addPreferredTerm(term, entry['@language'],\n              `_${mapping['@direction']}`);\n          } else {\n            _addPreferredTerm(term, entry['@language'], '@none');\n          }\n        } else if(defaultDirection) {\n          _addPreferredTerm(term, entry['@language'], `_${defaultDirection}`);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        } else {\n          // add entries for no type and no language\n          _addPreferredTerm(term, entry['@language'], defaultLanguage);\n          _addPreferredTerm(term, entry['@language'], '@none');\n          _addPreferredTerm(term, entry['@type'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(const key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    const entries = iriMap[key];\n    const next = iriMap[key] = {};\n\n    let iri;\n    let letter;\n    for(const entry of entries) {\n      iri = entry.iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entry);\n      } else {\n        next[letter] = [entry];\n      }\n    }\n\n    for(const key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(term, entry, typeOrLanguageValue) {\n    if(!entry.hasOwnProperty(typeOrLanguageValue)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    const child = {};\n    child.mappings = util.clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    child.protected = util.clone(this.protected);\n    if(this.previousContext) {\n      child.previousContext = this.previousContext.clone();\n    }\n    child.revertToPreviousContext = this.revertToPreviousContext;\n    if('@base' in this) {\n      child['@base'] = this['@base'];\n    }\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n\n  /**\n   * Reverts any type-scoped context in this active context to the previous\n   * context.\n   */\n  function _revertToPreviousContext() {\n    if(!this.previousContext) {\n      return this;\n    }\n    return this.previousContext.clone();\n  }\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set or undefined if none is set and type is '@context'.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value, null, or undefined.\n */\napi.getContextValue = (ctx, key, type) => {\n  // invalid key\n  if(key === null) {\n    if(type === '@context') {\n      return undefined;\n    }\n    return null;\n  }\n\n  // get specific entry information\n  if(ctx.mappings.has(key)) {\n    const entry = ctx.mappings.get(key);\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      return entry;\n    }\n    if(entry.hasOwnProperty(type)) {\n      // return entry value for type\n      return entry[type];\n    }\n  }\n\n  // get default language\n  if(type === '@language' && type in ctx) {\n    return ctx[type];\n  }\n\n  // get default direction\n  if(type === '@direction' && type in ctx) {\n    return ctx[type];\n  }\n\n  if(type === '@context') {\n    return undefined;\n  }\n  return null;\n};\n\n/**\n * Processing Mode check.\n *\n * @param activeCtx the current active context.\n * @param version the string or numeric version to check.\n *\n * @return boolean.\n */\napi.processingMode = (activeCtx, version) => {\n  if(version.toString() >= '1.1') {\n    return !activeCtx.processingMode ||\n      activeCtx.processingMode >= 'json-ld-' + version.toString();\n  } else {\n    return activeCtx.processingMode === 'json-ld-1.0';\n  }\n};\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\napi.isKeyword = v => {\n  if(!_isString(v) || v[0] !== '@') {\n    return false;\n  }\n  switch(v) {\n    case '@base':\n    case '@container':\n    case '@context':\n    case '@default':\n    case '@direction':\n    case '@embed':\n    case '@explicit':\n    case '@graph':\n    case '@id':\n    case '@included':\n    case '@index':\n    case '@json':\n    case '@language':\n    case '@list':\n    case '@nest':\n    case '@none':\n    case '@omitDefault':\n    case '@prefix':\n    case '@preserve':\n    case '@protected':\n    case '@requireAll':\n    case '@reverse':\n    case '@set':\n    case '@type':\n    case '@value':\n    case '@version':\n    case '@vocab':\n      return true;\n  }\n  return false;\n};\n\nfunction _deepCompare(x1, x2) {\n  // compare `null` or primitive types directly\n  if((!(x1 && typeof x1 === 'object')) ||\n     (!(x2 && typeof x2 === 'object'))) {\n    return x1 === x2;\n  }\n  // x1 and x2 are objects (also potentially arrays)\n  const x1Array = Array.isArray(x1);\n  if(x1Array !== Array.isArray(x2)) {\n    return false;\n  }\n  if(x1Array) {\n    if(x1.length !== x2.length) {\n      return false;\n    }\n    for(let i = 0; i < x1.length; ++i) {\n      if(!_deepCompare(x1[i], x2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // x1 and x2 are non-array objects\n  const k1s = Object.keys(x1);\n  const k2s = Object.keys(x2);\n  if(k1s.length !== k2s.length) {\n    return false;\n  }\n  for(const k1 in x1) {\n    let v1 = x1[k1];\n    let v2 = x2[k1];\n    // special case: `@container` can be in any order\n    if(k1 === '@container') {\n      if(Array.isArray(v1) && Array.isArray(v2)) {\n        v1 = v1.slice().sort();\n        v2 = v2.slice().sort();\n      }\n    }\n    if(!_deepCompare(v1, v2)) {\n      return false;\n    }\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isEmptyObject: _isEmptyObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSubject: _isSubject\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  getValues: _getValues,\n  validateTypeValue: _validateTypeValue\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param insideIndex true if the element is inside an index container,\n *          false if not.\n * @param typeScopedContext an optional type-scoped active context for\n *          expanding values of nodes that were expressed according to\n *          a type-scoped context.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n *\n * @return a Promise that resolves to the expanded value.\n */\napi.expand = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  insideList = false,\n  insideIndex = false,\n  typeScopedContext = null,\n  expansionMap = () => undefined\n}) => {\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  // disable framing if activeProperty is @default\n  if(activeProperty === '@default') {\n    options = Object.assign({}, options, {isFrame: false});\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists unless custom mapped\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true},\n        options) === '@graph')) {\n      const mapped = await expansionMap({\n        unmappedValue: element,\n        activeCtx,\n        activeProperty,\n        options,\n        insideList\n      });\n      if(mapped === undefined) {\n        return null;\n      }\n      return mapped;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue({activeCtx, activeProperty, value: element, options});\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    let rval = [];\n    const container = _getContextValue(\n      activeCtx, activeProperty, '@container') || [];\n    insideList = insideList || container.includes('@list');\n    for(let i = 0; i < element.length; ++i) {\n      // expand element\n      let e = await api.expand({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        expansionMap,\n        insideIndex,\n        typeScopedContext\n      });\n      if(insideList && _isArray(e)) {\n        e = {'@list': e};\n      }\n\n      if(e === null) {\n        e = await expansionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options,\n          expandedParent: rval,\n          insideList\n        });\n        if(e === undefined) {\n          continue;\n        }\n      }\n\n      if(_isArray(e)) {\n        rval = rval.concat(e);\n      } else {\n        rval.push(e);\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // first, expand the active property\n  const expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n\n  // Get any property-scoped context for activeProperty\n  const propertyScopedCtx =\n    _getContextValue(activeCtx, activeProperty, '@context');\n\n  // second, determine if any type-scoped context should be reverted; it\n  // should only be reverted when the following are all true:\n  // 1. `element` is not a value or subject reference\n  // 2. `insideIndex` is false\n  typeScopedContext = typeScopedContext ||\n    (activeCtx.previousContext ? activeCtx : null);\n  let keys = Object.keys(element).sort();\n  let mustRevert = !insideIndex;\n  if(mustRevert && typeScopedContext && keys.length <= 2 &&\n    !keys.includes('@context')) {\n    for(const key of keys) {\n      const expandedProperty = _expandIri(\n        typeScopedContext, key, {vocab: true}, options);\n      if(expandedProperty === '@value') {\n        // value found, ensure type-scoped context is used to expand it\n        mustRevert = false;\n        activeCtx = typeScopedContext;\n        break;\n      }\n      if(expandedProperty === '@id' && keys.length === 1) {\n        // subject reference found, do not revert\n        mustRevert = false;\n        break;\n      }\n    }\n  }\n\n  if(mustRevert) {\n    // revert type scoped context\n    activeCtx = activeCtx.revertToPreviousContext();\n  }\n\n  // apply property-scoped context after reverting term-scoped context\n  if(!_isUndefined(propertyScopedCtx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: propertyScopedCtx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = await _processContext(\n      {activeCtx, localCtx: element['@context'], options});\n  }\n\n  // set the type-scoped context to the context on input, for use later\n  typeScopedContext = activeCtx;\n\n  // Remember the first key found expanding to @type\n  let typeKey = null;\n\n  // look for scoped contexts on `@type`\n  for(const key of keys) {\n    const expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n    if(expandedProperty === '@type') {\n      // set scoped contexts from @type\n      // avoid sorting if possible\n      typeKey = typeKey || key;\n      const value = element[key];\n      const types =\n        Array.isArray(value) ?\n          (value.length > 1 ? value.slice().sort() : value) : [value];\n      for(const type of types) {\n        const ctx = _getContextValue(typeScopedContext, type, '@context');\n        if(!_isUndefined(ctx)) {\n          activeCtx = await _processContext({\n            activeCtx,\n            localCtx: ctx,\n            options,\n            propagate: false\n          });\n        }\n      }\n    }\n  }\n\n  // process each key and value in element, ignoring @nest content\n  let rval = {};\n  await _expandObject({\n    activeCtx,\n    activeProperty,\n    expandedActiveProperty,\n    element,\n    expandedParent: rval,\n    options,\n    insideList,\n    typeKey,\n    typeScopedContext,\n    expansionMap});\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  let count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && ('@language' in rval || '@direction' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and either \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    let validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if('@direction' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and either \"@type\" ' +\n        'or either or both \"@language\" or \"@direction\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    const values = rval['@value'] === null ? [] : _asArray(rval['@value']);\n    const types = _getValues(rval, '@type');\n\n    // drop null @values unless custom mapped\n    if(_processingMode(activeCtx, 1.1) && types.includes('@json') &&\n      types.length === 1) {\n      // Any value of @value is okay if @type: @json\n    } else if(values.length === 0) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    } else if(!values.every(v => (_isString(v) || _isEmptyObject(v))) &&\n      '@language' in rval) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if(!types.every(t =>\n      (_isAbsoluteIri(t) && !(_isString(t) && t.indexOf('_:') === 0) ||\n      _isEmptyObject(t)))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language unless custom mapped\n    const mapped = await expansionMap(rval, {\n      unmappedValue: rval,\n      activeCtx,\n      activeProperty,\n      element,\n      options,\n      insideList\n    });\n    if(mapped !== undefined) {\n      rval = mapped;\n    } else {\n      rval = null;\n    }\n  }\n\n  // drop certain top-level objects that do not occur in lists, unless custom\n  // mapped\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      const mapped = await expansionMap({\n        unmappedValue: rval,\n        activeCtx,\n        activeProperty,\n        element,\n        options,\n        insideList\n      });\n      if(mapped !== undefined) {\n        rval = mapped;\n      } else {\n        rval = null;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expand each key and value of element adding to result\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element.\n * @param expandedActiveProperty the expansion of activeProperty\n * @param element the element to expand.\n * @param expandedParent the expanded result into which to add values.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n * @param typeKey first key found expanding to @type.\n * @param typeScopedContext the context before reverting.\n * @param expansionMap(info) a function that can be used to custom map\n *          unmappable values (or to throw an error when they are detected);\n *          if this function returns `undefined` then the default behavior\n *          will be used.\n */\nasync function _expandObject({\n  activeCtx,\n  activeProperty,\n  expandedActiveProperty,\n  element,\n  expandedParent,\n  options = {},\n  insideList,\n  typeKey,\n  typeScopedContext,\n  expansionMap\n}) {\n  const keys = Object.keys(element).sort();\n  const nests = [];\n  let unexpandedValue;\n\n  // Figure out if this is the type for a JSON literal\n  const isJsonType = element[typeKey] &&\n    _expandIri(activeCtx,\n      (_isArray(element[typeKey]) ? element[typeKey][0] : element[typeKey]),\n      {vocab: true}, options) === '@json';\n\n  for(const key of keys) {\n    let value = element[key];\n    let expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    let expandedProperty = _expandIri(activeCtx, key, {vocab: true}, options);\n\n    // drop non-absolute IRI keys that aren't keywords unless custom mapped\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      // TODO: use `await` to support async\n      expandedProperty = expansionMap({\n        unmappedProperty: key,\n        activeCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        value,\n        expandedParent\n      });\n      if(expandedProperty === undefined) {\n        continue;\n      }\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value});\n      }\n      if(expandedProperty in expandedParent &&\n         expandedProperty !== '@included' &&\n         expandedProperty !== '@type') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id') {\n      if(!_isString(value)) {\n        if(!options.isFrame) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value must a string.',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n        if(_isObject(value)) {\n          // empty object is a wildcard\n          if(!_isEmptyObject(value)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else if(_isArray(value)) {\n          if(!value.every(v => _isString(v))) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n              'of strings, if framing',\n              'jsonld.SyntaxError', {code: 'invalid @id value', value});\n          }\n        } else {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@id\" value an empty object or array ' +\n            'of strings, if framing',\n            'jsonld.SyntaxError', {code: 'invalid @id value', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@id',\n        _asArray(value).map(v =>\n          _isString(v) ? _expandIri(activeCtx, v, {base: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    if(expandedProperty === '@type') {\n      // if framing, can be a default object, but need to expand\n      // key to determine that\n      if(_isObject(value)) {\n        value = Object.fromEntries(Object.entries(value).map(([k, v]) => [\n          _expandIri(typeScopedContext, k, {vocab: true}),\n          _asArray(v).map(vv =>\n            _expandIri(typeScopedContext, vv, {base: true, vocab: true})\n          )\n        ]));\n      }\n      _validateTypeValue(value, options.isFrame);\n      _addValue(\n        expandedParent, '@type',\n        _asArray(value).map(v =>\n          _isString(v) ?\n            _expandIri(typeScopedContext, v,\n              {base: true, vocab: true}, options) : v),\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // Included blocks are treated as an array of separate object nodes sharing\n    // the same referencing active_property.\n    // For 1.0, it is skipped as are other unknown keywords\n    if(expandedProperty === '@included' && _processingMode(activeCtx, 1.1)) {\n      const includedResult = _asArray(await api.expand({\n        activeCtx,\n        activeProperty,\n        element: value,\n        options,\n        expansionMap\n      }));\n\n      // Expanded values must be node objects\n      if(!includedResult.every(v => _isSubject(v))) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; ' +\n          'values of @included must expand to node objects.',\n          'jsonld.SyntaxError', {code: 'invalid @included value', value});\n      }\n\n      _addValue(\n        expandedParent, '@included', includedResult, {propertyIsArray: true});\n      continue;\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value});\n    }\n\n    if(expandedProperty === '@value') {\n      // capture value for later\n      // \"colliding keywords\" check prevents this from being set twice\n      unexpandedValue = value;\n      if(isJsonType && _processingMode(activeCtx, 1.1)) {\n        // no coercion to array, and retain all values\n        expandedParent['@value'] = value;\n      } else {\n        _addValue(\n          expandedParent, '@value', value, {propertyIsArray: options.isFrame});\n      }\n      continue;\n    }\n\n    // @language must be a string\n    // it should match BCP47\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value});\n      }\n      // ensure language value is lowercase\n      value = _asArray(value).map(v => _isString(v) ? v.toLowerCase() : v);\n\n      // ensure language tag matches BCP47\n      for(const lang of value) {\n        if(_isString(lang) && !lang.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${lang}`);\n        }\n      }\n\n      _addValue(\n        expandedParent, '@language', value, {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @direction must be \"ltr\" or \"rtl\"\n    if(expandedProperty === '@direction') {\n      if(!_isString(value) && !options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@direction\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid base direction', value});\n      }\n\n      value = _asArray(value);\n\n      // ensure direction is \"ltr\" or \"rtl\"\n      for(const dir of value) {\n        if(_isString(dir) && dir !== 'ltr' && dir !== 'rtl') {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@direction\" must be \"ltr\" or \"rtl\".',\n            'jsonld.SyntaxError',\n            {code: 'invalid base direction', value});\n        }\n      }\n\n      _addValue(\n        expandedParent, '@direction', value,\n        {propertyIsArray: options.isFrame});\n      continue;\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value});\n      }\n      _addValue(expandedParent, '@index', value);\n      continue;\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value});\n      }\n\n      expandedValue = await api.expand({\n        activeCtx,\n        activeProperty:\n        '@reverse',\n        element: value,\n        options,\n        expansionMap\n      });\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(const property in expandedValue['@reverse']) {\n          _addValue(\n            expandedParent, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      let reverseMap = expandedParent['@reverse'] || null;\n      for(const property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = expandedParent['@reverse'] = {};\n        }\n        _addValue(reverseMap, property, [], {propertyIsArray: true});\n        const items = expandedValue[property];\n        for(let ii = 0; ii < items.length; ++ii) {\n          const item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          _addValue(reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    // nested keys\n    if(expandedProperty === '@nest') {\n      nests.push(key);\n      continue;\n    }\n\n    // use potential scoped context for key\n    let termCtx = activeCtx;\n    const ctx = _getContextValue(activeCtx, key, '@context');\n    if(!_isUndefined(ctx)) {\n      termCtx = await _processContext({\n        activeCtx,\n        localCtx: ctx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    const container = _getContextValue(termCtx, key, '@container') || [];\n\n    if(container.includes('@language') && _isObject(value)) {\n      const direction = _getContextValue(termCtx, key, '@direction');\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(termCtx, value, direction, options);\n    } else if(container.includes('@index') && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      const indexKey = _getContextValue(termCtx, key, '@index') || '@index';\n      const propertyIndex = indexKey !== '@index' &&\n        _expandIri(activeCtx, indexKey, {vocab: true}, options);\n\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey,\n        propertyIndex\n      });\n    } else if(container.includes('@id') && _isObject(value)) {\n      // handle id container (skip if value is not an object)\n      const asGraph = container.includes('@graph');\n      expandedValue = await _expandIndexMap({\n        activeCtx: termCtx,\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph,\n        indexKey: '@id'\n      });\n    } else if(container.includes('@type') && _isObject(value)) {\n      // handle type container (skip if value is not an object)\n      expandedValue = await _expandIndexMap({\n        // since container is `@type`, revert type scoped context when expanding\n        activeCtx: termCtx.revertToPreviousContext(),\n        options,\n        activeProperty: key,\n        value,\n        expansionMap,\n        asGraph: false,\n        indexKey: '@type'\n      });\n    } else {\n      // recurse into @list or @set\n      const isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        let nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: nextActiveProperty,\n          element: value,\n          options,\n          insideList: isList,\n          expansionMap\n        });\n      } else if(\n        _getContextValue(activeCtx, key, '@type') === '@json') {\n        expandedValue = {\n          '@type': '@json',\n          '@value': value\n        };\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = await api.expand({\n          activeCtx: termCtx,\n          activeProperty: key,\n          element: value,\n          options,\n          insideList: false,\n          expansionMap\n        });\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      // TODO: use `await` to support async\n      expandedValue = expansionMap({\n        unmappedValue: value,\n        expandedProperty,\n        activeCtx: termCtx,\n        activeProperty,\n        parent: element,\n        options,\n        insideList,\n        key,\n        expandedParent\n      });\n      if(expandedValue === undefined) {\n        continue;\n      }\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container.includes('@list')) {\n      // ensure expanded value in @list is an array\n      expandedValue = {'@list': _asArray(expandedValue)};\n    }\n\n    // convert expanded value to @graph if container specifies it\n    // and value is not, itself, a graph\n    // index cases handled above\n    if(container.includes('@graph') &&\n      !container.some(key => key === '@id' || key === '@index')) {\n      // ensure expanded values are arrays\n      expandedValue = _asArray(expandedValue)\n        .map(v => ({'@graph': _asArray(v)}));\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(termCtx.mappings.has(key) && termCtx.mappings.get(key).reverse) {\n      const reverseMap =\n        expandedParent['@reverse'] = expandedParent['@reverse'] || {};\n      expandedValue = _asArray(expandedValue);\n      for(let ii = 0; ii < expandedValue.length; ++ii) {\n        const item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        _addValue(reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // special keywords handled above\n    _addValue(expandedParent, expandedProperty, expandedValue, {\n      propertyIsArray: true\n    });\n  }\n\n  // @value must not be an object or an array (unless framing) or if @type is\n  // @json\n  if('@value' in expandedParent) {\n    if(expandedParent['@type'] === '@json' && _processingMode(activeCtx, 1.1)) {\n      // allow any value, to be verified when the object is fully expanded and\n      // the @type is @json.\n    } else if((_isObject(unexpandedValue) || _isArray(unexpandedValue)) &&\n      !options.isFrame) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: unexpandedValue});\n    }\n  }\n\n  // expand each nested key\n  for(const key of nests) {\n    const nestedValues = _isArray(element[key]) ? element[key] : [element[key]];\n    for(const nv of nestedValues) {\n      if(!_isObject(nv) || Object.keys(nv).some(k =>\n        _expandIri(activeCtx, k, {vocab: true}, options) === '@value')) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; nested value must be a node object.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @nest value', value: nv});\n      }\n      await _expandObject({\n        activeCtx,\n        activeProperty,\n        expandedActiveProperty,\n        element: nv,\n        expandedParent,\n        options,\n        insideList,\n        typeScopedContext,\n        typeKey,\n        expansionMap});\n    }\n  }\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded value.\n */\nfunction _expandValue({activeCtx, activeProperty, value, options}) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  const expandedProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true}, options);\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true}, options);\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true}, options);\n  }\n\n  // get type definition from context\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if((type === '@id' || expandedProperty === '@graph') && _isString(value)) {\n    return {'@id': _expandIri(activeCtx, value, {base: true}, options)};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab' && _isString(value)) {\n    return {\n      '@id': _expandIri(activeCtx, value, {vocab: true, base: true}, options)\n    };\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  const rval = {};\n\n  if(type && !['@id', '@vocab', '@none'].includes(type)) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    if(direction !== null) {\n      rval['@direction'] = direction;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(!['boolean', 'number', 'string'].includes(typeof value)) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Expands a language map.\n *\n * @param activeCtx the active context to use.\n * @param languageMap the language map to expand.\n * @param direction the direction to apply to values.\n * @param {Object} [options] - processing options.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(activeCtx, languageMap, direction, options) {\n  const rval = [];\n  const keys = Object.keys(languageMap).sort();\n  for(const key of keys) {\n    const expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    let val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(const item of val) {\n      if(item === null) {\n        // null values are allowed (8.5) but ignored (3.1)\n        continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap});\n      }\n      const val = {'@value': item};\n      if(expandedKey !== '@none') {\n        val['@language'] = key.toLowerCase();\n      }\n      if(direction) {\n        val['@direction'] = direction;\n      }\n      rval.push(val);\n    }\n  }\n  return rval;\n}\n\nasync function _expandIndexMap(\n  {activeCtx, options, activeProperty, value, expansionMap, asGraph,\n    indexKey, propertyIndex}) {\n  const rval = [];\n  const keys = Object.keys(value).sort();\n  const isTypeIndex = indexKey === '@type';\n  for(let key of keys) {\n    // if indexKey is @type, there may be a context defined for it\n    if(isTypeIndex) {\n      const ctx = _getContextValue(activeCtx, key, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          propagate: false,\n          options\n        });\n      }\n    }\n\n    let val = value[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n\n    val = await api.expand({\n      activeCtx,\n      activeProperty,\n      element: val,\n      options,\n      insideList: false,\n      insideIndex: true,\n      expansionMap\n    });\n\n    // expand for @type, but also for @none\n    let expandedKey;\n    if(propertyIndex) {\n      if(key === '@none') {\n        expandedKey = '@none';\n      } else {\n        expandedKey = _expandValue(\n          {activeCtx, activeProperty: indexKey, value: key, options});\n      }\n    } else {\n      expandedKey = _expandIri(activeCtx, key, {vocab: true}, options);\n    }\n\n    if(indexKey === '@id') {\n      // expand document relative\n      key = _expandIri(activeCtx, key, {base: true}, options);\n    } else if(isTypeIndex) {\n      key = expandedKey;\n    }\n\n    for(let item of val) {\n      // If this is also a @graph container, turn items into graphs\n      if(asGraph && !_isGraph(item)) {\n        item = {'@graph': [item]};\n      }\n      if(indexKey === '@type') {\n        if(expandedKey === '@none') {\n          // ignore @none\n        } else if(item['@type']) {\n          item['@type'] = [key].concat(item['@type']);\n        } else {\n          item['@type'] = [key];\n        }\n      } else if(_isValue(item) &&\n        !['@language', '@type', '@index'].includes(indexKey)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; Attempt to add illegal key to value ' +\n          `object: \"${indexKey}\".`,\n          'jsonld.SyntaxError',\n          {code: 'invalid value object', value: item});\n      } else if(propertyIndex) {\n        // index is a property to be expanded, and values interpreted for that\n        // property\n        if(expandedKey !== '@none') {\n          // expand key as a value\n          _addValue(item, propertyIndex, expandedKey, {\n            propertyIsArray: true,\n            prependValue: true\n          });\n        }\n      } else if(expandedKey !== '@none' && !(indexKey in item)) {\n        item[indexKey] = key;\n      }\n      rval.push(item);\n    }\n  }\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst JsonLdError = require('./JsonLdError');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Creates a merged JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *\n * @return the node map.\n */\napi.createMergedNodeMap = (input, options) => {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  const issuer = options.issuer || new util.IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n  api.createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return api.mergeNodeMaps(graphs);\n};\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\napi.createNodeMap = (input, graphs, graph, issuer, name, list) => {\n  // recurse through array\n  if(types.isArray(input)) {\n    for(const node of input) {\n      api.createNodeMap(node, graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!types.isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(graphTypes.isValue(input)) {\n    if('@type' in input) {\n      let type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  } else if(list && graphTypes.isList(input)) {\n    const _list = [];\n    api.createNodeMap(input['@list'], graphs, graph, issuer, name, _list);\n    list.push({'@list': _list});\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    const types = input['@type'];\n    for(const type of types) {\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(types.isUndefined(name)) {\n    name = graphTypes.isBlankNode(input) ?\n      issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  const subjects = graphs[graph];\n  const subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  const properties = Object.keys(input).sort();\n  for(let property of properties) {\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      const referencedNode = {'@id': name};\n      const reverseMap = input['@reverse'];\n      for(const reverseProperty in reverseMap) {\n        const items = reverseMap[reverseProperty];\n        for(const item of items) {\n          let itemName = item['@id'];\n          if(graphTypes.isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          api.createNodeMap(item, graphs, graph, issuer, itemName);\n          util.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      api.createNodeMap(input[property], graphs, name, issuer);\n      continue;\n    }\n\n    // recurse into included\n    if(property === '@included') {\n      api.createNodeMap(input[property], graphs, graph, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    const objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      util.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(let o of objects) {\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(graphTypes.isSubject(o) || graphTypes.isSubjectReference(o)) {\n        // skip null @id\n        if('@id' in o && !o['@id']) {\n          continue;\n        }\n\n        // relabel blank node @id\n        const id = graphTypes.isBlankNode(o) ?\n          issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        util.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        api.createNodeMap(o, graphs, graph, issuer, id);\n      } else if(graphTypes.isValue(o)) {\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else if(graphTypes.isList(o)) {\n        // handle @list\n        const _list = [];\n        api.createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        util.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        api.createNodeMap(o, graphs, graph, issuer, name);\n        util.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n};\n\n/**\n * Merge separate named graphs into a single merged graph including\n * all nodes from the default graph and named graphs.\n *\n * @param graphs a map of graph name to subject map.\n *\n * @return the merged graph map.\n */\napi.mergeNodeMapGraphs = graphs => {\n  const merged = {};\n  for(const name of Object.keys(graphs).sort()) {\n    for(const id of Object.keys(graphs[name]).sort()) {\n      const node = graphs[name][id];\n      if(!(id in merged)) {\n        merged[id] = {'@id': id};\n      }\n      const mergedNode = merged[id];\n\n      for(const property of Object.keys(node).sort()) {\n        if(isKeyword(property) && property !== '@type') {\n          // copy keywords\n          mergedNode[property] = util.clone(node[property]);\n        } else {\n          // merge objects\n          for(const value of node[property]) {\n            util.addValue(\n              mergedNode, property, util.clone(value),\n              {propertyIsArray: true, allowDuplicate: false});\n          }\n        }\n      }\n    }\n  }\n\n  return merged;\n};\n\napi.mergeNodeMaps = graphs => {\n  // add all non-default graphs to default graph\n  const defaultGraph = graphs['@default'];\n  const graphNames = Object.keys(graphs).sort();\n  for(const graphName of graphNames) {\n    if(graphName === '@default') {\n      continue;\n    }\n    const nodeMap = graphs[graphName];\n    let subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    const graph = subject['@graph'];\n    for(const id of Object.keys(nodeMap).sort()) {\n      const node = nodeMap[id];\n      // only add full subjects\n      if(!graphTypes.isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  createMergedNodeMap: _createMergedNodeMap\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\napi.flatten = input => {\n  const defaultGraph = _createMergedNodeMap(input);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\n\n// constants\nconst {\n  // RDF,\n  RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  // RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst REGEX_BCP47 = /^[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*$/;\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n *\n * @return a Promise that resolves to the JSON-LD output.\n */\napi.fromRDF = async (\n  dataset,\n  {\n    useRdfType = false,\n    useNativeTypes = false,\n    rdfDirection = null\n  }\n) => {\n  const defaultGraph = {};\n  const graphMap = {'@default': defaultGraph};\n  const referencedOnce = {};\n\n  for(const quad of dataset) {\n    // TODO: change 'name' to 'graph'\n    const name = (quad.graph.termType === 'DefaultGraph') ?\n      '@default' : quad.graph.value;\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n\n    const nodeMap = graphMap[name];\n\n    // get subject, predicate, object\n    const s = quad.subject.value;\n    const p = quad.predicate.value;\n    const o = quad.object;\n\n    if(!(s in nodeMap)) {\n      nodeMap[s] = {'@id': s};\n    }\n    const node = nodeMap[s];\n\n    const objectIsNode = o.termType.endsWith('Node');\n    if(objectIsNode && !(o.value in nodeMap)) {\n      nodeMap[o.value] = {'@id': o.value};\n    }\n\n    if(p === RDF_TYPE && !useRdfType && objectIsNode) {\n      util.addValue(node, '@type', o.value, {propertyIsArray: true});\n      continue;\n    }\n\n    const value = _RDFToObject(o, useNativeTypes, rdfDirection);\n    util.addValue(node, p, value, {propertyIsArray: true});\n\n    // object may be an RDF list/partial list node but we can't know easily\n    // until all triples are read\n    if(objectIsNode) {\n      if(o.value === RDF_NIL) {\n        // track rdf:nil uniquely per graph\n        const object = nodeMap[o.value];\n        if(!('usages' in object)) {\n          object.usages = [];\n        }\n        object.usages.push({\n          node,\n          property: p,\n          value\n        });\n      } else if(o.value in referencedOnce) {\n        // object referenced more than once\n        referencedOnce[o.value] = false;\n      } else {\n        // keep track of single reference\n        referencedOnce[o.value] = {\n          node,\n          property: p,\n          value\n        };\n      }\n    }\n  }\n\n  /*\n  for(let name in dataset) {\n    const graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    const nodeMap = graphMap[name];\n    for(let ti = 0; ti < graph.length; ++ti) {\n      const triple = graph[ti];\n\n      // get subject, predicate, object\n      const s = triple.subject.value;\n      const p = triple.predicate.value;\n      const o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      const node = nodeMap[s];\n\n      const objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !useRdfType && objectIsId) {\n        util.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      const value = _RDFToObject(o, useNativeTypes);\n      util.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          const object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }*/\n\n  // convert linked lists to @list arrays\n  for(const name in graphMap) {\n    const graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    const nil = graphObject[RDF_NIL];\n    if(!nil.usages) {\n      continue;\n    }\n    for(let usage of nil.usages) {\n      let node = usage.node;\n      let property = usage.property;\n      let head = usage.value;\n      const list = [];\n      const listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      let nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        types.isObject(referencedOnce[node['@id']]) &&\n        types.isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        types.isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 ||\n          (nodeKeyCount === 4 && types.isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(!graphTypes.isBlankNode(node)) {\n          break;\n        }\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(const listNode of listNodes) {\n        delete graphObject[listNode];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  const result = [];\n  const subjects = Object.keys(defaultGraph).sort();\n  for(const subject of subjects) {\n    const node = defaultGraph[subject];\n    if(subject in graphMap) {\n      const graph = node['@graph'] = [];\n      const graphObject = graphMap[subject];\n      const graphSubjects = Object.keys(graphObject).sort();\n      for(const graphSubject of graphSubjects) {\n        const node = graphObject[graphSubject];\n        // only add full subjects to top-level\n        if(!graphTypes.isSubjectReference(node)) {\n          graph.push(node);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!graphTypes.isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes, rdfDirection) {\n  // convert NamedNode/BlankNode object to JSON-LD\n  if(o.termType.endsWith('Node')) {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  const rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    let type = o.datatype.value;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    if(type === RDF_JSON_LITERAL) {\n      type = '@json';\n      try {\n        rval['@value'] = JSON.parse(rval['@value']);\n      } catch(e) {\n        throw new JsonLdError(\n          'JSON literal could not be parsed.',\n          'jsonld.InvalidJsonLiteral',\n          {code: 'invalid JSON literal', value: rval['@value'], cause: e});\n      }\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(types.isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          const i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if(![XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING].includes(type)) {\n        rval['@type'] = type;\n      }\n    } else if(rdfDirection === 'i18n-datatype' &&\n      type.startsWith('https://www.w3.org/ns/i18n#')) {\n      const [, language, direction] = type.split(/[#_]/);\n      if(language.length > 0) {\n        rval['@language'] = language;\n        if(!language.match(REGEX_BCP47)) {\n          console.warn(`@language must be valid BCP47: ${language}`);\n        }\n      }\n      rval['@direction'] = direction;\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {createNodeMap} = require('./nodeMap');\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst jsonCanonicalize = require('canonicalize');\nconst types = require('./types');\nconst util = require('./util');\n\nconst {\n  // RDF,\n  // RDF_LIST,\n  RDF_FIRST,\n  RDF_REST,\n  RDF_NIL,\n  RDF_TYPE,\n  // RDF_PLAIN_LITERAL,\n  // RDF_XML_LITERAL,\n  RDF_JSON_LITERAL,\n  // RDF_OBJECT,\n  RDF_LANGSTRING,\n\n  // XSD,\n  XSD_BOOLEAN,\n  XSD_DOUBLE,\n  XSD_INTEGER,\n  XSD_STRING,\n} = require('./constants');\n\nconst {\n  isAbsolute: _isAbsoluteIri\n} = require('./url');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\napi.toRDF = (input, options) => {\n  // create node map for default graph (and any named graphs)\n  const issuer = new util.IdentifierIssuer('_:b');\n  const nodeMap = {'@default': {}};\n  createNodeMap(input, nodeMap, '@default', issuer);\n\n  const dataset = [];\n  const graphNames = Object.keys(nodeMap).sort();\n  for(const graphName of graphNames) {\n    let graphTerm;\n    if(graphName === '@default') {\n      graphTerm = {termType: 'DefaultGraph', value: ''};\n    } else if(_isAbsoluteIri(graphName)) {\n      if(graphName.startsWith('_:')) {\n        graphTerm = {termType: 'BlankNode'};\n      } else {\n        graphTerm = {termType: 'NamedNode'};\n      }\n      graphTerm.value = graphName;\n    } else {\n      // skip relative IRIs (not valid RDF)\n      continue;\n    }\n    _graphToRDF(dataset, nodeMap[graphName], graphTerm, issuer, options);\n  }\n\n  return dataset;\n};\n\n/**\n * Adds RDF quads for a particular graph to the given dataset.\n *\n * @param dataset the dataset to append RDF quads to.\n * @param graph the graph to create RDF quads for.\n * @param graphTerm the graph term for each quad.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(dataset, graph, graphTerm, issuer, options) {\n  const ids = Object.keys(graph).sort();\n  for(const id of ids) {\n    const node = graph[id];\n    const properties = Object.keys(node).sort();\n    for(let property of properties) {\n      const items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(isKeyword(property)) {\n        continue;\n      }\n\n      for(const item of items) {\n        // RDF subject\n        const subject = {\n          termType: id.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: id\n        };\n\n        // skip relative IRI subjects (not valid RDF)\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        const predicate = {\n          termType: property.startsWith('_:') ? 'BlankNode' : 'NamedNode',\n          value: property\n        };\n\n        // skip relative IRI predicates (not valid RDF)\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.termType === 'BlankNode' &&\n          !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert list, value or node object to triple\n        const object =\n          _objectToRDF(item, issuer, dataset, graphTerm, options.rdfDirection);\n        // skip null objects (they are relative IRIs)\n        if(object) {\n          dataset.push({\n            subject,\n            predicate,\n            object,\n            graph: graphTerm\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF quads\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the array of quads to append to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the head of the list.\n */\nfunction _listToRDF(list, issuer, dataset, graphTerm, rdfDirection) {\n  const first = {termType: 'NamedNode', value: RDF_FIRST};\n  const rest = {termType: 'NamedNode', value: RDF_REST};\n  const nil = {termType: 'NamedNode', value: RDF_NIL};\n\n  const last = list.pop();\n  // Result is the head of the list\n  const result = last ? {termType: 'BlankNode', value: issuer.getId()} : nil;\n  let subject = result;\n\n  for(const item of list) {\n    const object = _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection);\n    const next = {termType: 'BlankNode', value: issuer.getId()};\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: next,\n      graph: graphTerm\n    });\n    subject = next;\n  }\n\n  // Tail of list\n  if(last) {\n    const object = _objectToRDF(last, issuer, dataset, graphTerm, rdfDirection);\n    dataset.push({\n      subject,\n      predicate: first,\n      object,\n      graph: graphTerm\n    });\n    dataset.push({\n      subject,\n      predicate: rest,\n      object: nil,\n      graph: graphTerm\n    });\n  }\n\n  return result;\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string,\n * node object to an RDF resource, or adds a list.\n *\n * @param item the JSON-LD value or node object.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param dataset the dataset to append RDF quads to.\n * @param graphTerm the graph term for each quad.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item, issuer, dataset, graphTerm, rdfDirection) {\n  const object = {};\n\n  // convert value object to RDF\n  if(graphTypes.isValue(item)) {\n    object.termType = 'Literal';\n    object.value = undefined;\n    object.datatype = {\n      termType: 'NamedNode'\n    };\n    let value = item['@value'];\n    const datatype = item['@type'] || null;\n\n    // convert to XSD/JSON datatypes as appropriate\n    if(datatype === '@json') {\n      object.value = jsonCanonicalize(value);\n      object.datatype.value = RDF_JSON_LITERAL;\n    } else if(types.isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype.value = datatype || XSD_BOOLEAN;\n    } else if(types.isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!types.isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype.value = datatype || XSD_DOUBLE;\n    } else if(types.isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype.value = datatype || XSD_INTEGER;\n    } else if(rdfDirection === 'i18n-datatype' &&\n      '@direction' in item) {\n      const datatype = 'https://www.w3.org/ns/i18n#' +\n        (item['@language'] || '') +\n        `_${item['@direction']}`;\n      object.datatype.value = datatype;\n      object.value = value;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype.value = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype.value = datatype || XSD_STRING;\n    }\n  } else if(graphTypes.isList(item)) {\n    const _list =\n      _listToRDF(item['@list'], issuer, dataset, graphTerm, rdfDirection);\n    object.termType = _list.termType;\n    object.value = _list.value;\n  } else {\n    // convert string/node object to RDF\n    const id = types.isObject(item) ? item['@id'] : item;\n    object.termType = id.startsWith('_:') ? 'BlankNode' : 'NamedNode';\n    object.value = id;\n  }\n\n  // skip relative IRIs, not valid RDF\n  if(object.termType === 'NamedNode' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n","/* jshint esversion: 6 */\n/* jslint node: true */\n'use strict';\n\nmodule.exports = function serialize (object) {\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    return JSON.stringify(object);\n  }\n\n  if (Array.isArray(object)) {\n    return '[' + object.reduce((t, cv, ci) => {\n      const comma = ci === 0 ? '' : ',';\n      const value = cv === undefined || typeof cv === 'symbol' ? null : cv;\n      return t + comma + serialize(value);\n    }, '') + ']';\n  }\n\n  return '{' + Object.keys(object).sort().reduce((t, cv, ci) => {\n    if (object[cv] === undefined ||\n        typeof object[cv] === 'symbol') {\n      return t;\n    }\n    const comma = t.length === 0 ? '' : ',';\n    return t + comma + serialize(cv) + ':' + serialize(object[cv]);\n  }, '') + '}';\n};\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst {isKeyword} = require('./context');\nconst graphTypes = require('./graphTypes');\nconst types = require('./types');\nconst util = require('./util');\nconst url = require('./url');\nconst JsonLdError = require('./JsonLdError');\nconst {\n  createNodeMap: _createNodeMap,\n  mergeNodeMapGraphs: _mergeNodeMapGraphs\n} = require('./nodeMap');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Performs JSON-LD `merged` framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\napi.frameMergedOrDefault = (input, frame, options) => {\n  // create framing state\n  const state = {\n    options,\n    embedded: false,\n    graph: '@default',\n    graphMap: {'@default': {}},\n    subjectStack: [],\n    link: {},\n    bnodeMap: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  const issuer = new util.IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphMap, '@default', issuer);\n  if(options.merged) {\n    state.graphMap['@merged'] = _mergeNodeMapGraphs(state.graphMap);\n    state.graph = '@merged';\n  }\n  state.subjects = state.graphMap[state.graph];\n\n  // frame the subjects\n  const framed = [];\n  api.frame(state, Object.keys(state.subjects).sort(), frame, framed);\n\n  // If pruning blank nodes, find those to prune\n  if(options.pruneBlankNodeIdentifiers) {\n    // remove all blank nodes appearing only once, done in compaction\n    options.bnodesToClear =\n      Object.keys(state.bnodeMap).filter(id => state.bnodeMap[id].length === 1);\n  }\n\n  // remove @preserve from results\n  options.link = {};\n  return _cleanupPreserve(framed, options);\n};\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\napi.frame = (state, subjects, frame, parent, property = null) => {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  const options = state.options;\n  const flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // get link for current graph\n  if(!state.link.hasOwnProperty(state.graph)) {\n    state.link[state.graph] = {};\n  }\n  const link = state.link[state.graph];\n\n  // filter out subjects that match the frame\n  const matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  const ids = Object.keys(matches).sort();\n  for(const id of ids) {\n    const subject = matches[id];\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {[state.graph]: {}};\n    } else {\n      state.uniqueEmbeds[state.graph] = state.uniqueEmbeds[state.graph] || {};\n    }\n\n    if(flags.embed === '@link' && id in link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, link[id]);\n      continue;\n    }\n\n    // start output for subject\n    const output = {'@id': id};\n    if(id.indexOf('_:') === 0) {\n      util.addValue(state.bnodeMap, id, output, {propertyIsArray: true});\n    }\n    link[id] = output;\n\n    // validate @embed\n    if((flags.embed === '@first' || flags.embed === '@last') && state.is11) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n\n    if(!state.embedded && state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      // skip adding this node object to the top level, as it was\n      // already included in another node object\n      continue;\n    }\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(state.embedded &&\n      (flags.embed === '@never' ||\n      _createsCircularReference(subject, state.graph, state.subjectStack))) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the first (or once) should be embedded\n    if(state.embedded &&\n       (flags.embed == '@first' || flags.embed == '@once') &&\n       state.uniqueEmbeds[state.graph].hasOwnProperty(id)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds[state.graph]) {\n        _removeEmbed(state, id);\n      }\n    }\n\n    state.uniqueEmbeds[state.graph][id] = {parent, property};\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push({subject, graph: state.graph});\n\n    // subject is also the name of a graph\n    if(id in state.graphMap) {\n      let recurse = false;\n      let subframe = null;\n      if(!('@graph' in frame)) {\n        recurse = state.graph !== '@merged';\n        subframe = {};\n      } else {\n        subframe = frame['@graph'][0];\n        recurse = !(id === '@merged' || id === '@default');\n        if(!types.isObject(subframe)) {\n          subframe = {};\n        }\n      }\n\n      if(recurse) {\n        // recurse into graph\n        api.frame(\n          {...state, graph: id, embedded: false},\n          Object.keys(state.graphMap[id]).sort(), [subframe], output, '@graph');\n      }\n    }\n\n    // if frame has @included, recurse over its sub-frame\n    if('@included' in frame) {\n      api.frame(\n        {...state, embedded: false},\n        subjects, frame['@included'], output, '@included');\n    }\n\n    // iterate over subject properties\n    for(const prop of Object.keys(subject).sort()) {\n      // copy keywords to output\n      if(isKeyword(prop)) {\n        output[prop] = util.clone(subject[prop]);\n\n        if(prop === '@type') {\n          // count bnode values of @type\n          for(const type of subject['@type']) {\n            if(type.indexOf('_:') === 0) {\n              util.addValue(\n                state.bnodeMap, type, output, {propertyIsArray: true});\n            }\n          }\n        }\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      for(const o of subject[prop]) {\n        const subframe = (prop in frame ?\n          frame[prop] : _createImplicitFrame(flags));\n\n        // recurse into list\n        if(graphTypes.isList(o)) {\n          const subframe =\n            (frame[prop] && frame[prop][0] && frame[prop][0]['@list']) ?\n              frame[prop][0]['@list'] :\n              _createImplicitFrame(flags);\n\n          // add empty list\n          const list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          const src = o['@list'];\n          for(const oo of src) {\n            if(graphTypes.isSubjectReference(oo)) {\n              // recurse into subject reference\n              api.frame(\n                {...state, embedded: true},\n                [oo['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', util.clone(oo));\n            }\n          }\n        } else if(graphTypes.isSubjectReference(o)) {\n          // recurse into subject reference\n          api.frame(\n            {...state, embedded: true},\n            [o['@id']], subframe, output, prop);\n        } else if(_valueMatch(subframe[0], o)) {\n          // include other values, if they match\n          _addFrameOutput(output, prop, util.clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    for(const prop of Object.keys(frame).sort()) {\n      // skip keywords\n      if(prop === '@type') {\n        if(!types.isObject(frame[prop][0]) ||\n           !('@default' in frame[prop][0])) {\n          continue;\n        }\n        // allow through default types\n      } else if(isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      const next = frame[prop][0] || {};\n      const omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        let preserve = '@null';\n        if('@default' in next) {\n          preserve = util.clone(next['@default']);\n        }\n        if(!types.isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // if embed reverse values by finding nodes having this subject as a value\n    // of the associated property\n    for(const reverseProp of Object.keys(frame['@reverse'] || {}).sort()) {\n      const subframe = frame['@reverse'][reverseProp];\n      for(const subject of Object.keys(state.subjects)) {\n        const nodeValues =\n          util.getValues(state.subjects[subject], reverseProp);\n        if(nodeValues.some(v => v['@id'] === id)) {\n          // node has property referencing this subject, recurse\n          output['@reverse'] = output['@reverse'] || {};\n          util.addValue(\n            output['@reverse'], reverseProp, [], {propertyIsArray: true});\n          api.frame(\n            {...state, embedded: true},\n            [subject], subframe, output['@reverse'][reverseProp],\n            property);\n        }\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n};\n\n/**\n * Replace `@null` with `null`, removing it from arrays.\n *\n * @param input the framed, compacted output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\napi.cleanupNull = (input, options) => {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    const noNulls = input.map(v => api.cleanupNull(v, options));\n    return noNulls.filter(v => v); // removes nulls from array\n  }\n\n  if(input === '@null') {\n    return null;\n  }\n\n  if(types.isObject(input)) {\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    for(const key in input) {\n      input[key] = api.cleanupNull(input[key], options);\n    }\n  }\n  return input;\n};\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  const frame = {};\n  for(const key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param graph the graph the subject to embed is in.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, graph, subjectStack) {\n  for(let i = subjectStack.length - 1; i >= 0; --i) {\n    const subject = subjectStack[i];\n    if(subject.graph === graph &&\n      subject.subject['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  const flag = '@' + name;\n  let rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@once';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link' &&\n      rval !== '@first' && rval !== '@last' && rval !== '@once') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; invalid value of @embed.',\n        'jsonld.SyntaxError', {code: 'invalid @embed value', frame});\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!types.isArray(frame) || frame.length !== 1 || !types.isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame});\n  }\n\n  if('@id' in frame[0]) {\n    for(const id of util.asArray(frame[0]['@id'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(id) || url.isAbsolute(id)) ||\n        (types.isString(id) && id.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @id in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n\n  if('@type' in frame[0]) {\n    for(const type of util.asArray(frame[0]['@type'])) {\n      // @id must be wildcard or an IRI\n      if(!(types.isObject(type) || url.isAbsolute(type)) ||\n        (types.isString(type) && type.indexOf('_:') === 0)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; invalid @type in frame.',\n          'jsonld.SyntaxError', {code: 'invalid frame', frame});\n      }\n    }\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  const rval = {};\n  for(const id of subjects) {\n    const subject = state.graphMap[state.graph][id];\n    if(_filterSubject(state, subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * Matches either based on explicit type inclusion where the node has any\n * type listed in the frame. If the frame has empty types defined matches\n * nodes not having a @type. If the frame has a type of {} defined matches\n * nodes having any type defined.\n *\n * Otherwise, does duck typing, where the node must have all of the\n * properties defined in the frame.\n *\n * @param state the current framing state.\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(state, subject, frame, flags) {\n  // check ducktype\n  let wildcard = true;\n  let matchesSome = false;\n\n  for(const key in frame) {\n    let matchThis = false;\n    const nodeValues = util.getValues(subject, key);\n    const isEmpty = util.getValues(frame, key).length === 0;\n\n    if(key === '@id') {\n      // match on no @id or any matching @id, including wildcard\n      if(types.isEmptyObject(frame['@id'][0] || {})) {\n        matchThis = true;\n      } else if(frame['@id'].length >= 0) {\n        matchThis = frame['@id'].includes(nodeValues[0]);\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(key === '@type') {\n      // check @type (object value means 'any' type,\n      // fall through to ducktyping)\n      wildcard = false;\n      if(isEmpty) {\n        if(nodeValues.length > 0) {\n          // don't match on no @type\n          return false;\n        }\n        matchThis = true;\n      } else if(frame['@type'].length === 1 &&\n        types.isEmptyObject(frame['@type'][0])) {\n        // match on wildcard @type if there is a type\n        matchThis = nodeValues.length > 0;\n      } else {\n        // match on a specific @type\n        for(const type of frame['@type']) {\n          if(types.isObject(type) && '@default' in type) {\n            // match on default object\n            matchThis = true;\n          } else {\n            matchThis = matchThis || nodeValues.some(tt => tt === type);\n          }\n        }\n      }\n      if(!flags.requireAll) {\n        return matchThis;\n      }\n    } else if(isKeyword(key)) {\n      continue;\n    } else {\n      // Force a copy of this frame entry so it can be manipulated\n      const thisFrame = util.getValues(frame, key)[0];\n      let hasDefault = false;\n      if(thisFrame) {\n        _validateFrame([thisFrame]);\n        hasDefault = '@default' in thisFrame;\n      }\n\n      // no longer a wildcard pattern if frame has any non-keyword properties\n      wildcard = false;\n\n      // skip, but allow match if node has no value for property, and frame has\n      // a default value\n      if(nodeValues.length === 0 && hasDefault) {\n        continue;\n      }\n\n      // if frame value is empty, don't match if subject has any value\n      if(nodeValues.length > 0 && isEmpty) {\n        return false;\n      }\n\n      if(thisFrame === undefined) {\n        // node does not match if values is not empty and the value of property\n        // in frame is match none.\n        if(nodeValues.length > 0) {\n          return false;\n        }\n        matchThis = true;\n      } else {\n        if(graphTypes.isList(thisFrame)) {\n          const listValue = thisFrame['@list'][0];\n          if(graphTypes.isList(nodeValues[0])) {\n            const nodeListValues = nodeValues[0]['@list'];\n\n            if(graphTypes.isValue(listValue)) {\n              // match on any matching value\n              matchThis = nodeListValues.some(lv => _valueMatch(listValue, lv));\n            } else if(graphTypes.isSubject(listValue) ||\n              graphTypes.isSubjectReference(listValue)) {\n              matchThis = nodeListValues.some(lv => _nodeMatch(\n                state, listValue, lv, flags));\n            }\n          }\n        } else if(graphTypes.isValue(thisFrame)) {\n          matchThis = nodeValues.some(nv => _valueMatch(thisFrame, nv));\n        } else if(graphTypes.isSubjectReference(thisFrame)) {\n          matchThis =\n            nodeValues.some(nv => _nodeMatch(state, thisFrame, nv, flags));\n        } else if(types.isObject(thisFrame)) {\n          matchThis = nodeValues.length > 0;\n        } else {\n          matchThis = false;\n        }\n      }\n    }\n\n    // all non-defaulted values must match if requireAll is set\n    if(!matchThis && flags.requireAll) {\n      return false;\n    }\n\n    matchesSome = matchesSome || matchThis;\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  const embeds = state.uniqueEmbeds[state.graph];\n  const embed = embeds[id];\n  const parent = embed.parent;\n  const property = embed.property;\n\n  // create reference to replace embed\n  const subject = {'@id': id};\n\n  // remove existing embed\n  if(types.isArray(parent)) {\n    // replace subject with reference\n    for(let i = 0; i < parent.length; ++i) {\n      if(util.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    const useArray = types.isArray(parent[property]);\n    util.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    util.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  const removeDependents = id => {\n    // get embed keys as a separate array to enable deleting keys in map\n    const ids = Object.keys(embeds);\n    for(const next of ids) {\n      if(next in embeds && types.isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Removes the @preserve keywords from expanded result of framing.\n *\n * @param input the framed, framed output.\n * @param options the framing options used.\n *\n * @return the resulting output.\n */\nfunction _cleanupPreserve(input, options) {\n  // recurse through arrays\n  if(types.isArray(input)) {\n    return input.map(value => _cleanupPreserve(value, options));\n  }\n\n  if(types.isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      return input['@preserve'][0];\n    }\n\n    // skip @values\n    if(graphTypes.isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(graphTypes.isList(input)) {\n      input['@list'] = _cleanupPreserve(input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    if('@id' in input) {\n      const id = input['@id'];\n      if(options.link.hasOwnProperty(id)) {\n        const idx = options.link[id].indexOf(input);\n        if(idx !== -1) {\n          // already visited\n          return options.link[id][idx];\n        }\n        // prevent circular visitation\n        options.link[id].push(input);\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(const prop in input) {\n      // potentially remove the id, if it is an unreference bnode\n      if(prop === '@id' && options.bnodesToClear.includes(input[prop])) {\n        delete input['@id'];\n        continue;\n      }\n\n      input[prop] = _cleanupPreserve(input[prop], options);\n    }\n  }\n  return input;\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(types.isObject(parent)) {\n    util.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Node matches if it is a node, and matches the pattern as a frame.\n *\n * @param state the current framing state.\n * @param pattern used to match value\n * @param value to check\n * @param flags the frame flags.\n */\nfunction _nodeMatch(state, pattern, value, flags) {\n  if(!('@id' in value)) {\n    return false;\n  }\n  const nodeObject = state.subjects[value['@id']];\n  return nodeObject && _filterSubject(state, nodeObject, pattern, flags);\n}\n\n/**\n * Value matches if it is a value and matches the value pattern\n *\n * * `pattern` is empty\n * * @values are the same, or `pattern[@value]` is a wildcard, and\n * * @types are the same or `value[@type]` is not null\n *   and `pattern[@type]` is `{}`, or `value[@type]` is null\n *   and `pattern[@type]` is null or `[]`, and\n * * @languages are the same or `value[@language]` is not null\n *   and `pattern[@language]` is `{}`, or `value[@language]` is null\n *   and `pattern[@language]` is null or `[]`.\n *\n * @param pattern used to match value\n * @param value to check\n */\nfunction _valueMatch(pattern, value) {\n  const v1 = value['@value'];\n  const t1 = value['@type'];\n  const l1 = value['@language'];\n  const v2 = pattern['@value'] ?\n    (types.isArray(pattern['@value']) ?\n      pattern['@value'] : [pattern['@value']]) :\n    [];\n  const t2 = pattern['@type'] ?\n    (types.isArray(pattern['@type']) ?\n      pattern['@type'] : [pattern['@type']]) :\n    [];\n  const l2 = pattern['@language'] ?\n    (types.isArray(pattern['@language']) ?\n      pattern['@language'] : [pattern['@language']]) :\n    [];\n\n  if(v2.length === 0 && t2.length === 0 && l2.length === 0) {\n    return true;\n  }\n  if(!(v2.includes(v1) || types.isEmptyObject(v2[0]))) {\n    return false;\n  }\n  if(!(!t1 && t2.length === 0 || t2.includes(t1) || t1 &&\n    types.isEmptyObject(t2[0]))) {\n    return false;\n  }\n  if(!(!l1 && l2.length === 0 || l2.includes(l1) || l1 &&\n    types.isEmptyObject(l2[0]))) {\n    return false;\n  }\n  return true;\n}\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nconst JsonLdError = require('./JsonLdError');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString,\n  isUndefined: _isUndefined\n} = require('./types');\n\nconst {\n  isList: _isList,\n  isValue: _isValue,\n  isGraph: _isGraph,\n  isSimpleGraph: _isSimpleGraph,\n  isSubjectReference: _isSubjectReference\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getContextValue: _getContextValue,\n  isKeyword: _isKeyword,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  removeBase: _removeBase,\n  prependBase: _prependBase\n} = require('./url');\n\nconst {\n  addValue: _addValue,\n  asArray: _asArray,\n  compareShortestLeast: _compareShortestLeast\n} = require('./util');\n\nconst api = {};\nmodule.exports = api;\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n * @param compactionMap the compaction map to use.\n *\n * @return a promise that resolves to the compacted value.\n */\napi.compact = async ({\n  activeCtx,\n  activeProperty = null,\n  element,\n  options = {},\n  compactionMap = () => undefined\n}) => {\n  // recursively compact array\n  if(_isArray(element)) {\n    let rval = [];\n    for(let i = 0; i < element.length; ++i) {\n      // compact, dropping any null values unless custom mapped\n      let compacted = await api.compact({\n        activeCtx,\n        activeProperty,\n        element: element[i],\n        options,\n        compactionMap\n      });\n      if(compacted === null) {\n        compacted = await compactionMap({\n          unmappedValue: element[i],\n          activeCtx,\n          activeProperty,\n          parent: element,\n          index: i,\n          options\n        });\n        if(compacted === undefined) {\n          continue;\n        }\n      }\n      rval.push(compacted);\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.length === 0) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // use any scoped context on activeProperty\n  const ctx = _getContextValue(activeCtx, activeProperty, '@context');\n  if(!_isUndefined(ctx)) {\n    activeCtx = await _processContext({\n      activeCtx,\n      localCtx: ctx,\n      propagate: true,\n      overrideProtected: true,\n      options\n    });\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element &&\n      options.link.hasOwnProperty(element['@id'])) {\n      // check for a linked element to reuse\n      const linked = options.link[element['@id']];\n      for(let i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      const rval =\n        api.compactValue({activeCtx, activeProperty, value: element, options});\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(options.link.hasOwnProperty(element['@id']))) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // if expanded property is @list and we're contained within a list\n    // container, recursively compact this item to an array\n    if(_isList(element)) {\n      const container = _getContextValue(\n        activeCtx, activeProperty, '@container') || [];\n      if(container.includes('@list')) {\n        return api.compact({\n          activeCtx,\n          activeProperty,\n          element: element['@list'],\n          options,\n          compactionMap\n        });\n      }\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    const insideReverse = (activeProperty === '@reverse');\n\n    const rval = {};\n\n    // original context before applying property-scoped and local contexts\n    const inputCtx = activeCtx;\n\n    // revert to previous context, if there is one,\n    // and element is not a value object or a node reference\n    if(!_isValue(element) && !_isSubjectReference(element)) {\n      activeCtx = activeCtx.revertToPreviousContext();\n    }\n\n    // apply property-scoped context after reverting term-scoped context\n    const propertyScopedCtx =\n      _getContextValue(inputCtx, activeProperty, '@context');\n    if(!_isUndefined(propertyScopedCtx)) {\n      activeCtx = await _processContext({\n        activeCtx,\n        localCtx: propertyScopedCtx,\n        propagate: true,\n        overrideProtected: true,\n        options\n      });\n    }\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!options.link.hasOwnProperty(element['@id'])) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // apply any context defined on an alias of @type\n    // if key is @type and any compacted value is a term having a local\n    // context, overlay that context\n    let types = element['@type'] || [];\n    if(types.length > 1) {\n      types = Array.from(types).sort();\n    }\n    // find all type-scoped contexts based on current context, prior to\n    // updating it\n    const typeContext = activeCtx;\n    for(const type of types) {\n      const compactedType = api.compactIri(\n        {activeCtx: typeContext, iri: type, relativeTo: {vocab: true}});\n\n      // Use any type-scoped context defined on this value\n      const ctx = _getContextValue(inputCtx, compactedType, '@context');\n      if(!_isUndefined(ctx)) {\n        activeCtx = await _processContext({\n          activeCtx,\n          localCtx: ctx,\n          options,\n          propagate: false\n        });\n      }\n    }\n\n    // process element keys in order\n    const keys = Object.keys(element).sort();\n    for(const expandedProperty of keys) {\n      const expandedValue = element[expandedProperty];\n\n      // compact @id\n      if(expandedProperty === '@id') {\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: false},\n            base: options.base\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@id', relativeTo: {vocab: true}});\n\n        rval[alias] = compactedValue;\n        continue;\n      }\n\n      // compact @type(s)\n      if(expandedProperty === '@type') {\n        // resolve type values against previous context\n        let compactedValue = _asArray(expandedValue).map(\n          expandedIri => api.compactIri({\n            activeCtx: inputCtx,\n            iri: expandedIri,\n            relativeTo: {vocab: true}\n          }));\n        if(compactedValue.length === 1) {\n          compactedValue = compactedValue[0];\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri(\n          {activeCtx, iri: '@type', relativeTo: {vocab: true}});\n        const container = _getContextValue(\n          activeCtx, alias, '@container') || [];\n\n        // treat as array for @type if @container includes @set\n        const typeAsSet =\n          container.includes('@set') &&\n          _processingMode(activeCtx, 1.1);\n        const isArray =\n          typeAsSet || (_isArray(compactedValue) && expandedValue.length === 0);\n        _addValue(rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty: '@reverse',\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        // handle double-reversed properties\n        for(const compactedProperty in compactedValue) {\n          if(activeCtx.mappings.has(compactedProperty) &&\n            activeCtx.mappings.get(compactedProperty).reverse) {\n            const value = compactedValue[compactedProperty];\n            const container = _getContextValue(\n              activeCtx, compactedProperty, '@container') || [];\n            const useArray = (\n              container.includes('@set') || !options.compactArrays);\n            _addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          const alias = api.compactIri({\n            activeCtx,\n            iri: expandedProperty,\n            relativeTo: {vocab: true}\n          });\n          _addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      if(expandedProperty === '@preserve') {\n        // compact using activeProperty\n        const compactedValue = await api.compact({\n          activeCtx,\n          activeProperty,\n          element: expandedValue,\n          options,\n          compactionMap\n        });\n\n        if(!(_isArray(compactedValue) && compactedValue.length === 0)) {\n          _addValue(rval, expandedProperty, compactedValue);\n        }\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        const container = _getContextValue(\n          activeCtx, activeProperty, '@container') || [];\n        if(container.includes('@index')) {\n          continue;\n        }\n\n        // use keyword alias and add value\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't\n      // @graph, @list, or @included\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        expandedProperty !== '@included' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        const alias = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          relativeTo: {vocab: true}\n        });\n        _addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n      if(!_isArray(expandedValue)) {\n        throw new JsonLdError(\n          'JSON-LD expansion error; expanded value must be an array.',\n          'jsonld.SyntaxError');\n      }\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedValue,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n        _addValue(\n          nestResult, itemActiveProperty, expandedValue, {\n            propertyIsArray: true\n          });\n      }\n\n      // recusively process array values\n      for(const expandedItem of expandedValue) {\n        // compact property and get container type\n        const itemActiveProperty = api.compactIri({\n          activeCtx,\n          iri: expandedProperty,\n          value: expandedItem,\n          relativeTo: {vocab: true},\n          reverse: insideReverse\n        });\n\n        // if itemActiveProperty is a @nest property, add values to nestResult,\n        // otherwise rval\n        const nestProperty = activeCtx.mappings.has(itemActiveProperty) ?\n          activeCtx.mappings.get(itemActiveProperty)['@nest'] : null;\n        let nestResult = rval;\n        if(nestProperty) {\n          _checkNestProperty(activeCtx, nestProperty, options);\n          if(!_isObject(rval[nestProperty])) {\n            rval[nestProperty] = {};\n          }\n          nestResult = rval[nestProperty];\n        }\n\n        const container = _getContextValue(\n          activeCtx, itemActiveProperty, '@container') || [];\n\n        // get simple @graph or @list value if appropriate\n        const isGraph = _isGraph(expandedItem);\n        const isList = _isList(expandedItem);\n        let inner;\n        if(isList) {\n          inner = expandedItem['@list'];\n        } else if(isGraph) {\n          inner = expandedItem['@graph'];\n        }\n\n        // recursively compact expanded item\n        let compactedItem = await api.compact({\n          activeCtx,\n          activeProperty: itemActiveProperty,\n          element: (isList || isGraph) ? inner : expandedItem,\n          options,\n          compactionMap\n        });\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(!container.includes('@list')) {\n            // wrap using @list alias\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@list',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n          } else {\n            _addValue(nestResult, itemActiveProperty, compactedItem, {\n              valueIsArray: true,\n              allowDuplicate: true\n            });\n            continue;\n          }\n        }\n\n        // Graph object compaction cases\n        if(isGraph) {\n          if(container.includes('@graph') && (container.includes('@id') ||\n            container.includes('@index') && _isSimpleGraph(expandedItem))) {\n            // get or create the map object\n            let mapObject;\n            if(nestResult.hasOwnProperty(itemActiveProperty)) {\n              mapObject = nestResult[itemActiveProperty];\n            } else {\n              nestResult[itemActiveProperty] = mapObject = {};\n            }\n\n            // index on @id or @index or alias of @none\n            const key = (container.includes('@id') ?\n              expandedItem['@id'] : expandedItem['@index']) ||\n              api.compactIri({activeCtx, iri: '@none',\n                relativeTo: {vocab: true}});\n            // add compactedItem to map, using value of `@id` or a new blank\n            // node identifier\n\n            _addValue(\n              mapObject, key, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else if(container.includes('@graph') &&\n            _isSimpleGraph(expandedItem)) {\n            // container includes @graph but not @id or @index and value is a\n            // simple graph object add compact value\n            // if compactedItem contains multiple values, it is wrapped in\n            // `@included`\n            if(_isArray(compactedItem) && compactedItem.length > 1) {\n              compactedItem = {'@included': compactedItem};\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          } else {\n            // wrap using @graph alias, remove array if only one item and\n            // compactArrays not set\n            if(_isArray(compactedItem) && compactedItem.length === 1 &&\n              options.compactArrays) {\n              compactedItem = compactedItem[0];\n            }\n            compactedItem = {\n              [api.compactIri({\n                activeCtx,\n                iri: '@graph',\n                relativeTo: {vocab: true}\n              })]: compactedItem\n            };\n\n            // include @id from expanded graph, if any\n            if('@id' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@id',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@id'];\n            }\n\n            // include @index from expanded graph, if any\n            if('@index' in expandedItem) {\n              compactedItem[api.compactIri({\n                activeCtx,\n                iri: '@index',\n                relativeTo: {vocab: true}\n              })] = expandedItem['@index'];\n            }\n            _addValue(\n              nestResult, itemActiveProperty, compactedItem, {\n                propertyIsArray:\n                  (!options.compactArrays || container.includes('@set'))\n              });\n          }\n        } else if(container.includes('@language') ||\n          container.includes('@index') || container.includes('@id') ||\n          container.includes('@type')) {\n          // handle language and index maps\n          // get or create the map object\n          let mapObject;\n          if(nestResult.hasOwnProperty(itemActiveProperty)) {\n            mapObject = nestResult[itemActiveProperty];\n          } else {\n            nestResult[itemActiveProperty] = mapObject = {};\n          }\n\n          let key;\n          if(container.includes('@language')) {\n          // if container is a language map, simplify compacted value to\n          // a simple string\n            if(_isValue(compactedItem)) {\n              compactedItem = compactedItem['@value'];\n            }\n            key = expandedItem['@language'];\n          } else if(container.includes('@index')) {\n            const indexKey = _getContextValue(\n              activeCtx, itemActiveProperty, '@index') || '@index';\n            const containerKey = api.compactIri(\n              {activeCtx, iri: indexKey, relativeTo: {vocab: true}});\n            if(indexKey === '@index') {\n              key = expandedItem['@index'];\n              delete compactedItem[containerKey];\n            } else {\n              let others;\n              [key, ...others] = _asArray(compactedItem[indexKey] || []);\n              if(!_isString(key)) {\n                // Will use @none if it isn't a string.\n                key = null;\n              } else {\n                switch(others.length) {\n                  case 0:\n                    delete compactedItem[indexKey];\n                    break;\n                  case 1:\n                    compactedItem[indexKey] = others[0];\n                    break;\n                  default:\n                    compactedItem[indexKey] = others;\n                    break;\n                }\n              }\n            }\n          } else if(container.includes('@id')) {\n            const idKey = api.compactIri({activeCtx, iri: '@id',\n              relativeTo: {vocab: true}});\n            key = compactedItem[idKey];\n            delete compactedItem[idKey];\n          } else if(container.includes('@type')) {\n            const typeKey = api.compactIri({\n              activeCtx,\n              iri: '@type',\n              relativeTo: {vocab: true}\n            });\n            let types;\n            [key, ...types] = _asArray(compactedItem[typeKey] || []);\n            switch(types.length) {\n              case 0:\n                delete compactedItem[typeKey];\n                break;\n              case 1:\n                compactedItem[typeKey] = types[0];\n                break;\n              default:\n                compactedItem[typeKey] = types;\n                break;\n            }\n\n            // If compactedItem contains a single entry\n            // whose key maps to @id, recompact without @type\n            if(Object.keys(compactedItem).length === 1 &&\n              '@id' in expandedItem) {\n              compactedItem = await api.compact({\n                activeCtx,\n                activeProperty: itemActiveProperty,\n                element: {'@id': expandedItem['@id']},\n                options,\n                compactionMap\n              });\n            }\n          }\n\n          // if compacting this value which has no key, index on @none\n          if(!key) {\n            key = api.compactIri({activeCtx, iri: '@none',\n              relativeTo: {vocab: true}});\n          }\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          _addValue(\n            mapObject, key, compactedItem, {\n              propertyIsArray: container.includes('@set')\n            });\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          const isArray = (!options.compactArrays ||\n            container.includes('@set') || container.includes('@list') ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          _addValue(\n            nestResult, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n * @param base the absolute URL to use for compacting document-relative IRIs.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\napi.compactIri = ({\n  activeCtx,\n  iri,\n  value = null,\n  relativeTo = {vocab: false},\n  reverse = false,\n  base = null\n}) => {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // if context is from a property term scoped context composed with a\n  // type-scoped context, then use the previous context instead\n  if(activeCtx.isPropertyTermScoped && activeCtx.previousContext) {\n    activeCtx = activeCtx.previousContext;\n  }\n\n  const inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it may be compacted to a simple alias\n  if(_isKeyword(iri) &&\n    iri in inverseCtx &&\n    '@none' in inverseCtx[iri] &&\n    '@type' in inverseCtx[iri]['@none'] &&\n    '@none' in inverseCtx[iri]['@none']['@type']) {\n    return inverseCtx[iri]['@none']['@type']['@none'];\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    const defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    const containers = [];\n    if(_isObject(value) && '@index' in value && !('@graph' in value)) {\n      containers.push('@index', '@index@set');\n    }\n\n    // if value is a preserve object, use its value\n    if(_isObject(value) && '@preserve' in value) {\n      value = value['@preserve'][0];\n    }\n\n    // prefer most specific container including @graph, prefering @set\n    // variations\n    if(_isGraph(value)) {\n      // favor indexmap if the graph is indexed\n      if('@index' in value) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // favor idmap if the graph is has an @id\n      if('@id' in value) {\n        containers.push(\n          '@graph@id', '@graph@id@set');\n      }\n      containers.push('@graph', '@graph@set', '@set');\n      // allow indexmap if the graph is not indexed\n      if(!('@index' in value)) {\n        containers.push(\n          '@graph@index', '@graph@index@set', '@index', '@index@set');\n      }\n      // allow idmap if the graph does not have an @id\n      if(!('@id' in value)) {\n        containers.push('@graph@id', '@graph@id@set');\n      }\n    } else if(_isObject(value) && !_isValue(value)) {\n      containers.push('@id', '@id@set', '@type', '@set@type');\n    }\n\n    // defaults for term selection based on type/language\n    let typeOrLanguage = '@language';\n    let typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      const list = value['@list'];\n      if(list.length === 0) {\n        // any empty list can be matched against any term that uses the\n        // @list container regardless of @type or @language\n        typeOrLanguage = '@any';\n        typeOrLanguageValue = '@none';\n      } else {\n        let commonLanguage = (list.length === 0) ? defaultLanguage : null;\n        let commonType = null;\n        for(let i = 0; i < list.length; ++i) {\n          const item = list[i];\n          let itemLanguage = '@none';\n          let itemType = '@none';\n          if(_isValue(item)) {\n            if('@direction' in item) {\n              const lang = (item['@language'] || '').toLowerCase();\n              const dir = item['@direction'];\n              itemLanguage = `${lang}_${dir}`;\n            } else if('@language' in item) {\n              itemLanguage = item['@language'].toLowerCase();\n            } else if('@type' in item) {\n              itemType = item['@type'];\n            } else {\n              // plain literal\n              itemLanguage = '@null';\n            }\n          } else {\n            itemType = '@id';\n          }\n          if(commonLanguage === null) {\n            commonLanguage = itemLanguage;\n          } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n            commonLanguage = '@none';\n          }\n          if(commonType === null) {\n            commonType = itemType;\n          } else if(itemType !== commonType) {\n            commonType = '@none';\n          }\n          // there are different languages and types in the list, so choose\n          // the most generic term, no need to keep iterating the list\n          if(commonLanguage === '@none' && commonType === '@none') {\n            break;\n          }\n        }\n        commonLanguage = commonLanguage || '@none';\n        commonType = commonType || '@none';\n        if(commonType !== '@none') {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = commonType;\n        } else {\n          typeOrLanguageValue = commonLanguage;\n        }\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language', '@language@set');\n          typeOrLanguageValue = value['@language'];\n          const dir = value['@direction'];\n          if(dir) {\n            typeOrLanguageValue = `${typeOrLanguageValue}_${dir}`;\n          }\n        } else if('@direction' in value && !('@index' in value)) {\n          typeOrLanguageValue = `_${value['@direction']}`;\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n\n    // an index map can be used to index values using @none, so add as a low\n    // priority\n    if(_isObject(value) && !('@index' in value)) {\n      // allow indexing even if no @index present\n      containers.push('@index', '@index@set');\n    }\n\n    // values without type or language can use @language map\n    if(_isValue(value) && Object.keys(value).length === 1) {\n      // allow indexing even if no @index present\n      containers.push('@language', '@language@set');\n    }\n\n    const term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      const vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        const suffix = iri.substr(vocab.length);\n        if(!activeCtx.mappings.has(suffix)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  let choice = null;\n  // TODO: make FastCurieMap a class with a method to do this lookup\n  const partialMatches = [];\n  let iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  const maxPartialLength = iri.length - 1;\n  for(let i = 0; i < maxPartialLength && iri[i] in iriMap; ++i) {\n    iriMap = iriMap[iri[i]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(let i = partialMatches.length - 1; i >= 0; --i) {\n    const entry = partialMatches[i];\n    const terms = entry.terms;\n    for(const term of terms) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      const curie = term + ':' + iri.substr(entry.iri.length);\n      const isUsableCurie = (activeCtx.mappings.get(term)._prefix &&\n        (!activeCtx.mappings.has(curie) ||\n        (value === null && activeCtx.mappings.get(curie)['@id'] === iri)));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // If iri could be confused with a compact IRI using a term in this context,\n  // signal an error\n  for(const [term, td] of activeCtx.mappings) {\n    if(td && td._prefix && iri.startsWith(term + ':')) {\n      throw new JsonLdError(\n        `Absolute IRI \"${iri}\" confused with prefix \"${term}\".`,\n        'jsonld.SyntaxError',\n        {code: 'IRI confused with prefix', context: activeCtx});\n    }\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    if('@base' in activeCtx) {\n      if(!activeCtx['@base']) {\n        // The None case preserves rval as potentially relative\n        return iri;\n      } else {\n        return _removeBase(_prependBase(base, activeCtx['@base']), iri);\n      }\n    } else {\n      return _removeBase(base, iri);\n    }\n  }\n\n  // return IRI as is\n  return iri;\n};\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n * @param {Object} [options] - processing options.\n *\n * @return the compaction result.\n */\napi.compactValue = ({activeCtx, activeProperty, value, options}) => {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    const type = _getContextValue(activeCtx, activeProperty, '@type');\n    const language = _getContextValue(activeCtx, activeProperty, '@language');\n    const direction = _getContextValue(activeCtx, activeProperty, '@direction');\n    const container =\n      _getContextValue(activeCtx, activeProperty, '@container') || [];\n\n    // whether or not the value has an @index that must be preserved\n    const preserveIndex = '@index' in value && !container.includes('@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex && type !== '@none') {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language &&\n         '@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n      if('@language' in value && value['@language'] === language) {\n        return value['@value'];\n      }\n      if('@direction' in value && value['@direction'] === direction) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    const keyCount = Object.keys(value).length;\n    const isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && '@index' in value && !preserveIndex));\n    const hasDefaultLanguage = ('@language' in activeCtx);\n    const isValueString = _isString(value['@value']);\n    const hasNullMapping = (activeCtx.mappings.has(activeProperty) &&\n      activeCtx.mappings.get(activeProperty)['@language'] === null);\n    if(isValueOnlyKey &&\n      type !== '@none' &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    const rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@index',\n        relativeTo: {vocab: true}\n      })] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@type',\n        relativeTo: {vocab: true}\n      })] = api.compactIri(\n        {activeCtx, iri: value['@type'], relativeTo: {vocab: true}});\n    } else if('@language' in value) {\n      // alias @language\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@language',\n        relativeTo: {vocab: true}\n      })] = value['@language'];\n    }\n\n    if('@direction' in value) {\n      // alias @direction\n      rval[api.compactIri({\n        activeCtx,\n        iri: '@direction',\n        relativeTo: {vocab: true}\n      })] = value['@direction'];\n    }\n\n    // alias @value\n    rval[api.compactIri({\n      activeCtx,\n      iri: '@value',\n      relativeTo: {vocab: true}\n    })] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  const expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true},\n    options);\n  const type = _getContextValue(activeCtx, activeProperty, '@type');\n  const compacted = api.compactIri({\n    activeCtx,\n    iri: value['@id'],\n    relativeTo: {vocab: type === '@vocab'},\n    base: options.base});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  return {\n    [api.compactIri({\n      activeCtx,\n      iri: '@id',\n      relativeTo: {vocab: true}\n    })]: compacted\n  };\n};\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  const prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isObject(value) && '@id' in value) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    const term = api.compactIri(\n      {activeCtx, iri: value['@id'], relativeTo: {vocab: true}});\n    if(activeCtx.mappings.has(term) &&\n      activeCtx.mappings.get(term) &&\n      activeCtx.mappings.get(term)['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n\n    // consider direction only\n    const langDir = prefs.find(el => el.includes('_'));\n    if(langDir) {\n      // consider _dir portion\n      prefs.push(langDir.replace(/^[^_]+_/, '_'));\n    }\n  }\n  prefs.push('@none');\n\n  const containerMap = activeCtx.inverse[iri];\n  for(const container of containers) {\n    // if container not available in the map, continue\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    const typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(const pref of prefs) {\n      // if type/language option not available in the map, continue\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * The value of `@nest` in the term definition must either be `@nest`, or a term\n * which resolves to `@nest`.\n *\n * @param activeCtx the active context.\n * @param nestProperty a term in the active context or `@nest`.\n * @param {Object} [options] - processing options.\n */\nfunction _checkNestProperty(activeCtx, nestProperty, options) {\n  if(_expandIri(activeCtx, nestProperty, {vocab: true}, options) !== '@nest') {\n    throw new JsonLdError(\n      'JSON-LD compact error; nested property must have an @nest value ' +\n      'resolving to @nest.',\n      'jsonld.SyntaxError', {code: 'invalid @nest value'});\n  }\n}\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2019 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nconst canonize = require('rdf-canonize');\nconst platform = require('./platform');\nconst util = require('./util');\nconst ContextResolver = require('./ContextResolver');\nconst IdentifierIssuer = util.IdentifierIssuer;\nconst JsonLdError = require('./JsonLdError');\nconst LRU = require('lru-cache');\nconst NQuads = require('./NQuads');\n\nconst {expand: _expand} = require('./expand');\nconst {flatten: _flatten} = require('./flatten');\nconst {fromRDF: _fromRDF} = require('./fromRdf');\nconst {toRDF: _toRDF} = require('./toRdf');\n\nconst {\n  frameMergedOrDefault: _frameMergedOrDefault,\n  cleanupNull: _cleanupNull\n} = require('./frame');\n\nconst {\n  isArray: _isArray,\n  isObject: _isObject,\n  isString: _isString\n} = require('./types');\n\nconst {\n  isSubjectReference: _isSubjectReference,\n} = require('./graphTypes');\n\nconst {\n  expandIri: _expandIri,\n  getInitialContext: _getInitialContext,\n  process: _processContext,\n  processingMode: _processingMode\n} = require('./context');\n\nconst {\n  compact: _compact,\n  compactIri: _compactIri\n} = require('./compact');\n\nconst {\n  createNodeMap: _createNodeMap,\n  createMergedNodeMap: _createMergedNodeMap,\n  mergeNodeMaps: _mergeNodeMaps\n} = require('./nodeMap');\n\n/* eslint-disable indent */\n// attaches jsonld API to the given object\nconst wrapper = function(jsonld) {\n\n/** Registered RDF dataset parsers hashed by content-type. */\nconst _rdfParsers = {};\n\n// resolved context cache\n// TODO: consider basing max on context size rather than number\nconst RESOLVED_CONTEXT_CACHE_MAX_SIZE = 100;\nconst _resolvedContextCache = new LRU({max: RESOLVED_CONTEXT_CACHE_MAX_SIZE});\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [compactToRelative] true to compact IRIs to be relative to document\n *            base, false to keep absolute (default: true)\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [framing] true if compaction is occuring during a framing operation.\n *          [compactionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the compacted output.\n */\njsonld.compact = async function(input, ctx, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not compact, too few arguments.');\n  }\n\n  if(ctx === null) {\n    throw new JsonLdError(\n      'The compaction context must not be null.',\n      'jsonld.CompactError', {code: 'invalid local context'});\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    compactArrays: true,\n    compactToRelative: true,\n    graph: false,\n    skipExpansion: false,\n    link: false,\n    issuer: new IdentifierIssuer('_:b'),\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n  if(!options.compactToRelative) {\n    delete options.base;\n  }\n\n  // expand input\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), ctx, options);\n\n  // do compaction\n  let compacted = await _compact({\n    activeCtx,\n    element: expanded,\n    options,\n    compactionMap: options.compactionMap\n  });\n\n  // perform clean up\n  if(options.compactArrays && !options.graph && _isArray(compacted)) {\n    if(compacted.length === 1) {\n      // simplify to a single item\n      compacted = compacted[0];\n    } else if(compacted.length === 0) {\n      // simplify to an empty object\n      compacted = {};\n    }\n  } else if(options.graph && _isObject(compacted)) {\n    // always use array if graph option is on\n    compacted = [compacted];\n  }\n\n  // follow @context key\n  if(_isObject(ctx) && '@context' in ctx) {\n    ctx = ctx['@context'];\n  }\n\n  // build output context\n  ctx = util.clone(ctx);\n  if(!_isArray(ctx)) {\n    ctx = [ctx];\n  }\n  // remove empty contexts\n  const tmp = ctx;\n  ctx = [];\n  for(let i = 0; i < tmp.length; ++i) {\n    if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n      ctx.push(tmp[i]);\n    }\n  }\n\n  // remove array if only one context\n  const hasContext = (ctx.length > 0);\n  if(ctx.length === 1) {\n    ctx = ctx[0];\n  }\n\n  // add context and/or @graph\n  if(_isArray(compacted)) {\n    // use '@graph' keyword\n    const graphAlias = _compactIri({\n      activeCtx, iri: '@graph', relativeTo: {vocab: true}\n    });\n    const graph = compacted;\n    compacted = {};\n    if(hasContext) {\n      compacted['@context'] = ctx;\n    }\n    compacted[graphAlias] = graph;\n  } else if(_isObject(compacted) && hasContext) {\n    // reorder keys so @context is first\n    const graph = compacted;\n    compacted = {'@context': ctx};\n    for(const key in graph) {\n      compacted[key] = graph[key];\n    }\n  }\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, options)] the document loader.\n *          [expansionMap(info)] a function that can be used to custom map\n *            unmappable values (or to throw an error when they are detected);\n *            if this function returns `undefined` then the default behavior\n *            will be used.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the expanded output.\n */\njsonld.expand = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not expand, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    keepFreeFloatingNodes: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if(options.expansionMap === false) {\n    options.expansionMap = undefined;\n  }\n\n  // build set of objects that may have @contexts to resolve\n  const toResolve = {};\n\n  // build set of contexts to process prior to expansion\n  const contextsToProcess = [];\n\n  // if an `expandContext` has been given ensure it gets resolved\n  if('expandContext' in options) {\n    const expandContext = util.clone(options.expandContext);\n    if(_isObject(expandContext) && '@context' in expandContext) {\n      toResolve.expandContext = expandContext;\n    } else {\n      toResolve.expandContext = {'@context': expandContext};\n    }\n    contextsToProcess.push(toResolve.expandContext);\n  }\n\n  // if input is a string, attempt to dereference remote document\n  let defaultBase;\n  if(!_isString(input)) {\n    // input is not a URL, do not need to retrieve it first\n    toResolve.input = util.clone(input);\n  } else {\n    // load remote doc\n    const remoteDoc = await jsonld.get(input, options);\n    defaultBase = remoteDoc.documentUrl;\n    toResolve.input = remoteDoc.document;\n    if(remoteDoc.contextUrl) {\n      // context included in HTTP link header and must be resolved\n      toResolve.remoteContext = {'@context': remoteDoc.contextUrl};\n      contextsToProcess.push(toResolve.remoteContext);\n    }\n  }\n\n  // set default base\n  if(!('base' in options)) {\n    options.base = defaultBase || '';\n  }\n\n  // process any additional contexts\n  let activeCtx = _getInitialContext(options);\n  for(const localCtx of contextsToProcess) {\n    activeCtx = await _processContext({activeCtx, localCtx, options});\n  }\n\n  // expand resolved input\n  let expanded = await _expand({\n    activeCtx,\n    element: toResolve.input,\n    options,\n    expansionMap: options.expansionMap\n  });\n\n  // optimize away @graph with no other properties\n  if(_isObject(expanded) && ('@graph' in expanded) &&\n    Object.keys(expanded).length === 1) {\n    expanded = expanded['@graph'];\n  } else if(expanded === null) {\n    expanded = [];\n  }\n\n  // normalize to an array\n  if(!_isArray(expanded)) {\n    expanded = [expanded];\n  }\n\n  return expanded;\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the flattened output.\n */\njsonld.flatten = async function(input, ctx, options) {\n  if(arguments.length < 1) {\n    return new TypeError('Could not flatten, too few arguments.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // do flattening\n  const flattened = _flatten(expanded);\n\n  if(ctx === null) {\n    // no compaction required\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the framed output.\n */\njsonld.frame = async function(input, frame, options) {\n  if(arguments.length < 2) {\n    throw new TypeError('Could not frame, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    embed: '@once',\n    explicit: false,\n    requireAll: false,\n    omitDefault: false,\n    bnodesToClear: [],\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // if frame is a string, attempt to dereference remote document\n  if(_isString(frame)) {\n    // load remote doc\n    const remoteDoc = await jsonld.get(frame, options);\n    frame = remoteDoc.document;\n\n    if(remoteDoc.contextUrl) {\n      // inject link header @context into frame\n      let ctx = frame['@context'];\n      if(!ctx) {\n        ctx = remoteDoc.contextUrl;\n      } else if(_isArray(ctx)) {\n        ctx.push(remoteDoc.contextUrl);\n      } else {\n        ctx = [ctx, remoteDoc.contextUrl];\n      }\n      frame['@context'] = ctx;\n    }\n  }\n\n  const frameContext = frame ? frame['@context'] || {} : {};\n\n  // process context\n  const activeCtx = await jsonld.processContext(\n    _getInitialContext(options), frameContext, options);\n\n  // mode specific defaults\n  if(!options.hasOwnProperty('omitGraph')) {\n    options.omitGraph = _processingMode(activeCtx, 1.1);\n  }\n  if(!options.hasOwnProperty('pruneBlankNodeIdentifiers')) {\n    options.pruneBlankNodeIdentifiers = _processingMode(activeCtx, 1.1);\n  }\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  // expand frame\n  const opts = {...options};\n  opts.isFrame = true;\n  opts.keepFreeFloatingNodes = true;\n  const expandedFrame = await jsonld.expand(frame, opts);\n\n  // if the unexpanded frame includes a key expanding to @graph, frame the\n  // default graph, otherwise, the merged graph\n  const frameKeys = Object.keys(frame)\n    .map(key => _expandIri(activeCtx, key, {vocab: true}));\n  opts.merged = !frameKeys.includes('@graph');\n  opts.is11 = _processingMode(activeCtx, 1.1);\n\n  // do framing\n  const framed = _frameMergedOrDefault(expanded, expandedFrame, opts);\n\n  opts.graph = !options.omitGraph;\n  opts.skipExpansion = true;\n  opts.link = {};\n  opts.framing = true;\n  let compacted = await jsonld.compact(framed, frameContext, opts);\n\n  // replace @null with null, compacting arrays\n  opts.link = {};\n  compacted = _cleanupNull(compacted, opts);\n\n  return compacted;\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param [ctx] the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the linked output.\n */\njsonld.link = async function(input, ctx, options) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  const frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  return jsonld.frame(input, frame, options);\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URDNA2015`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/n-quads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/n-quads' for N-Quads.\n *          [documentLoader(url, options)] the document loader.\n *          [useNative] true to use a native canonize algorithm\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the normalized output.\n */\njsonld.normalize = jsonld.canonize = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not canonize, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    algorithm: 'URDNA2015',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/n-quads' &&\n      options.inputFormat !== 'application/nquads') {\n      throw new JsonLdError(\n        'Unknown canonicalization input format.',\n        'jsonld.CanonizeError');\n    }\n    // TODO: `await` for async parsers\n    const parsedInput = NQuads.parse(input);\n\n    // do canonicalization\n    return canonize.canonize(parsedInput, options);\n  }\n\n  // convert to RDF dataset then do normalization\n  const opts = {...options};\n  delete opts.format;\n  opts.produceGeneralizedRdf = false;\n  const dataset = await jsonld.toRDF(input, opts);\n\n  // do canonicalization\n  return canonize.canonize(dataset, options);\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/n-quads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n *\n * @return a Promise that resolves to the JSON-LD document.\n */\njsonld.fromRDF = async function(dataset, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert from RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    format: _isString(dataset) ? 'application/n-quads' : undefined\n  });\n\n  const {format} = options;\n  let {rdfParser} = options;\n\n  // handle special format\n  if(format) {\n    // check supported formats\n    rdfParser = rdfParser || _rdfParsers[format];\n    if(!rdfParser) {\n      throw new JsonLdError(\n        'Unknown input format.',\n        'jsonld.UnknownFormat', {format});\n    }\n  } else {\n    // no-op parser, assume dataset already parsed\n    rdfParser = () => dataset;\n  }\n\n  // rdfParser must be synchronous or return a promise, no callback support\n  const parsedDataset = await rdfParser(dataset);\n  return _fromRDF(parsedDataset, options);\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [format] the format to use to output a string:\n *            'application/n-quads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the RDF dataset.\n */\njsonld.toRDF = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not convert to RDF, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    skipExpansion: false,\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // TODO: support toRDF custom map?\n  let expanded;\n  if(options.skipExpansion) {\n    expanded = input;\n  } else {\n    // expand input\n    expanded = await jsonld.expand(input, options);\n  }\n\n  // output RDF dataset\n  const dataset = _toRDF(expanded, options);\n  if(options.format) {\n    if(options.format === 'application/n-quads' ||\n      options.format === 'application/nquads') {\n      return NQuads.serialize(dataset);\n    }\n    throw new JsonLdError(\n      'Unknown output format.',\n      'jsonld.UnknownFormat', {format: options.format});\n  }\n\n  return dataset;\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a merged\n * map of node ID => node. All graphs will be merged into the default graph.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged node map.\n */\njsonld.createNodeMap = async function(input, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not create node map, too few arguments.');\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    base: _isString(input) ? input : '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand input\n  const expanded = await jsonld.expand(input, options);\n\n  return _createMergedNodeMap(expanded, options);\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the merged output.\n */\njsonld.merge = async function(docs, ctx, options) {\n  if(arguments.length < 1) {\n    throw new TypeError('Could not merge, too few arguments.');\n  }\n  if(!_isArray(docs)) {\n    throw new TypeError('Could not merge, \"docs\" must be an array.');\n  }\n\n  if(typeof ctx === 'function') {\n    ctx = null;\n  } else {\n    ctx = ctx || null;\n  }\n\n  // set default options\n  options = _setDefaults(options, {\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // expand all documents\n  const expanded = await Promise.all(docs.map(doc => {\n    const opts = {...options};\n    return jsonld.expand(doc, opts);\n  }));\n\n  let mergeNodes = true;\n  if('mergeNodes' in options) {\n    mergeNodes = options.mergeNodes;\n  }\n\n  const issuer = options.issuer || new IdentifierIssuer('_:b');\n  const graphs = {'@default': {}};\n\n  for(let i = 0; i < expanded.length; ++i) {\n    // uniquely relabel blank nodes\n    const doc = util.relabelBlankNodes(expanded[i], {\n      issuer: new IdentifierIssuer('_:b' + i + '-')\n    });\n\n    // add nodes to the shared node map graphs if merging nodes, to a\n    // separate graph set if not\n    const _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n    _createNodeMap(doc, _graphs, '@default', issuer);\n\n    if(_graphs !== graphs) {\n      // merge document graphs but don't merge existing nodes\n      for(const graphName in _graphs) {\n        const _nodeMap = _graphs[graphName];\n        if(!(graphName in graphs)) {\n          graphs[graphName] = _nodeMap;\n          continue;\n        }\n        const nodeMap = graphs[graphName];\n        for(const key in _nodeMap) {\n          if(!(key in nodeMap)) {\n            nodeMap[key] = _nodeMap[key];\n          }\n        }\n      }\n    }\n  }\n\n  // add all non-default graphs to default graph\n  const defaultGraph = _mergeNodeMaps(graphs);\n\n  // produce flattened output\n  const flattened = [];\n  const keys = Object.keys(defaultGraph).sort();\n  for(let ki = 0; ki < keys.length; ++ki) {\n    const node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n\n  if(ctx === null) {\n    return flattened;\n  }\n\n  // compact result (force @graph option to true, skip expansion)\n  options.graph = true;\n  options.skipExpansion = true;\n  const compacted = await jsonld.compact(flattened, ctx, options);\n\n  return compacted;\n};\n\n/**\n * The default document loader for external documents.\n *\n * @param url the URL to load.\n *\n * @return a promise that resolves to the remote document.\n */\nObject.defineProperty(jsonld, 'documentLoader', {\n  get: () => jsonld._documentLoader,\n  set: v => jsonld._documentLoader = v\n});\n// default document loader not implemented\njsonld.documentLoader = async url => {\n  throw new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed', url});\n};\n\n/**\n * Gets a remote JSON-LD document using the default document loader or\n * one given in the passed options.\n *\n * @param url the URL to fetch.\n * @param [options] the options to use:\n *          [documentLoader] the document loader to use.\n *\n * @return a Promise that resolves to the retrieved remote document.\n */\njsonld.get = async function(url, options) {\n  let load;\n  if(typeof options.documentLoader === 'function') {\n    load = options.documentLoader;\n  } else {\n    load = jsonld.documentLoader;\n  }\n\n  const remoteDoc = await load(url);\n\n  try {\n    if(!remoteDoc.document) {\n      throw new JsonLdError(\n        'No remote document found at the given URL.',\n        'jsonld.NullRemoteDocument');\n    }\n    if(_isString(remoteDoc.document)) {\n      remoteDoc.document = JSON.parse(remoteDoc.document);\n    }\n  } catch(e) {\n    throw new JsonLdError(\n      'Could not retrieve a JSON-LD document from the URL.',\n      'jsonld.LoadDocumentError', {\n        code: 'loading document failed',\n        cause: e,\n        remoteDoc\n      });\n  }\n\n  return remoteDoc;\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, options)] the document loader.\n *          [contextResolver] internal use only.\n *\n * @return a Promise that resolves to the new active context.\n */\njsonld.processContext = async function(\n  activeCtx, localCtx, options) {\n  // set default options\n  options = _setDefaults(options, {\n    base: '',\n    contextResolver: new ContextResolver(\n      {sharedCache: _resolvedContextCache})\n  });\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return _getInitialContext(options);\n  }\n\n  // get URLs in localCtx\n  localCtx = util.clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n\n  return _processContext({activeCtx, localCtx, options});\n};\n\n// backwards compatibility\njsonld.getContextValue = require('./context').getContextValue;\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'xhr' and 'node'.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given one parameter,\n * a string of input. An RDF dataset parser can be synchronous or\n * asynchronous (by returning a promise).\n *\n * @param contentType the content-type for the parser.\n * @param parser(input) the parser function (takes a string as a parameter\n *          and either returns an RDF dataset or a Promise that resolves to one.\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/n-quads', NQuads.parse);\njsonld.registerRDFParser('application/nquads', NQuads.parse);\n\n/* URL API */\njsonld.url = require('./url');\n\n/* Utility API */\njsonld.util = util;\n// backwards compatibility\nObject.assign(jsonld, util);\n\n// reexpose API as jsonld.promises for backwards compatability\njsonld.promises = jsonld;\n\n// backwards compatibility\njsonld.RequestQueue = require('./RequestQueue');\n\n/* WebIDL API */\njsonld.JsonLdProcessor = require('./JsonLdProcessor')(jsonld);\n\nplatform.setupGlobals(jsonld);\nplatform.setupDocumentLoaders(jsonld);\n\nfunction _setDefaults(options, {\n  documentLoader = jsonld.documentLoader,\n  ...defaults\n}) {\n  return Object.assign({}, {documentLoader}, defaults, options);\n}\n\n// end of jsonld API `wrapper` factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nconst factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\n// wrap the main jsonld API instance\nwrapper(factory);\n// export API\nmodule.exports = factory;\n","/*\n * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.\n */\n'use strict';\n\nmodule.exports = jsonld => {\n  class JsonLdProcessor {\n    toString() {\n      return '[object JsonLdProcessor]';\n    }\n  }\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  JsonLdProcessor.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      return Promise.reject(\n        new TypeError('Could not compact, too few arguments.'));\n    }\n    return jsonld.compact(input, ctx);\n  };\n  JsonLdProcessor.expand = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not expand, too few arguments.'));\n    }\n    return jsonld.expand(input);\n  };\n  JsonLdProcessor.flatten = function(input) {\n    if(arguments.length < 1) {\n      return Promise.reject(\n        new TypeError('Could not flatten, too few arguments.'));\n    }\n    return jsonld.flatten(input);\n  };\n\n  return JsonLdProcessor;\n};\n","/**\n * jsonld.js library.\n *\n * @author Dave Longley\n *\n * Copyright 2010-2021 Digital Bazaar, Inc.\n */\nmodule.exports = require('./jsonld');\n","import { JSONLD, SerializationFormat } from \"../helpers/BaseDefinitions\";\nimport * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { toRDF } from \"jsonld\";\n\nexport class Parser{\n\n    public jsonLDObject: JSONLD = {\"@context\": {\n        \"bot\": \"https://w3id.org/bot#\",\n        \"fso\": \"https://w3id.org/fso#\",\n        \"omg\": \"https://w3id.org/omg#\",\n        \"fog\": \"https://w3id.org/fog#\",\n        \"ex\": \"https://example.com/\",\n        \"ifc\": \"http://ifcowl.openbimstandards.org/IFC2X3_Final#\",\n        \"inst\": \"https://example.com/\"\n    }, \"@graph\": []};\n\n    public modelID: number;\n    public ifcAPI: WebIFC.IfcAPI;\n    public verbose: boolean;\n    public format: SerializationFormat;\n\n    constructor(ifcAPI: WebIFC.IfcAPI, modelID: number, format: SerializationFormat = SerializationFormat.JSONLD, verbose: boolean = false){\n        this.modelID = modelID;\n        this.ifcAPI = ifcAPI;\n        this.verbose = verbose;\n        this.format = format;\n    }\n\n    public async getTriples(): Promise<JSONLD|string>{\n        if(this.format == SerializationFormat.JSONLD) return this.getJSONLD();\n        if(this.format == SerializationFormat.NQuads) return this.getNQuads();\n        return \"\";\n    }\n\n    public async getTripleCount(): Promise<number>{\n        const rdf: any = await toRDF(this.jsonLDObject);\n        const tripleCount = rdf.length;\n        return tripleCount;\n    }\n\n    private getJSONLD(): JSONLD{\n        return this.jsonLDObject;\n    }\n\n    private async getNQuads(): Promise<any>{\n        return await toRDF(this.jsonLDObject, {format: 'application/n-quads'});\n    }\n\n}","import { buildRelOneToMany, buildRelOneToOne } from \"../helpers/path-search\";\n\nimport {\n    IFCRELSPACEBOUNDARY,\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    IFCRELVOIDSELEMENT,\n    IFCRELAGGREGATES,\n    IFCBUILDING,\n    IFCSITE,\n    IFCBUILDINGSTOREY,\n    IFCSPACE,\n    IFCELEMENT\n} from 'web-ifc';\nimport { buildClassInstances } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\n\nexport class BOTParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started BOT parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished BOT parsing\");\n\n        // Class assignment\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/12: Finding sites\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSites()));\n        this.verbose && console.timeEnd(\"1/12: Finding sites\");\n        this.verbose && console.time(\"2/12: Finding buildings\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildBuildings()));\n        this.verbose && console.timeEnd(\"2/12: Finding buildings\");\n        this.verbose && console.time(\"3/12: Finding storeys\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreys()));\n        this.verbose && console.timeEnd(\"3/12: Finding storeys\");\n        this.verbose && console.time(\"4/12: Finding spaces\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaces()));\n        this.verbose && console.timeEnd(\"4/12: Finding spaces\");\n        this.verbose && console.time(\"5/12: Finding elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildElements()));\n        this.verbose && console.timeEnd(\"5/12: Finding elements\");\n        this.verbose && console.log(\"\");\n\n        // Space-Element relationships\n        this.verbose && console.log(\"## STEP 2: SPACE-ELEMENT RELATIONSHIPS ##\");\n        this.verbose && console.time(\"6/12: Finding spaces' adjacent elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaceAdjacentElementRelationships()));\n        this.verbose && console.timeEnd(\"6/12: Finding spaces' adjacent elements\");\n        this.verbose && console.time(\"7/12: Finding spaces' contained elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaceContainedElementRelationships()));\n        this.verbose && console.timeEnd(\"7/12: Finding spaces' contained elements\");\n        this.verbose && console.time(\"8/12: Finding storeys' elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreyElementRelationships()));\n        this.verbose && console.timeEnd(\"8/12: Finding storeys' elements\");\n        this.verbose && console.log(\"\");\n\n        // Element-element relationships\n        this.verbose && console.log(\"## STEP 3: ELEMENT-ELEMENT RELATIONSHIPS ##\");\n        this.verbose && console.time(\"9/12: Finding elements' hosted elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildHostedElementRelationships()));\n        this.verbose && console.timeEnd(\"9/12: Finding elements' hosted elements\");\n        this.verbose && console.log(\"\");\n\n        // Zone containment\n        this.verbose && console.log(\"## STEP 4: ZONE-ZONE RELATIONSHIPS ##\");\n        this.verbose && console.time(\"10/12: Finding storeys' spaces\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreySpaceRelationships()));\n        this.verbose && console.timeEnd(\"10/12: Finding storeys' spaces\");\n        this.verbose && console.time(\"11/12: Finding buildings' storeys\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildBuildingStoreyRelationships()));\n        this.verbose && console.timeEnd(\"11/12: Finding buildings' storeys\");\n        this.verbose && console.time(\"12/12: Finding sties' buildings\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSiteBuildingRelationships()));\n        this.verbose && console.timeEnd(\"12/12: Finding sties' buildings\");\n        this.verbose && console.log(\"\");\n\n        console.timeEnd(\"Finished BOT parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    /**\n     * CLASS ASSIGNMENT\n     */\n     private async buildSites(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCSITE, [\"bot:Site\"]);\n    }\n    private async buildBuildings(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCBUILDING, [\"bot:Building\"]);\n    }\n    private async buildStoreys(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCBUILDINGSTOREY, [\"bot:Storey\"]);\n    }\n    private async buildSpaces(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCSPACE, [\"bot:Space\"]);\n    }\n    private async buildElements(): Promise<any[]>{\n        const includeSubTypes: boolean = true;\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCELEMENT, [\"bot:Element\"], includeSubTypes);\n    }\n\n    /**\n     * ZONE-ELEMENT-RELATIONSHIPS\n     */\n    private async buildSpaceAdjacentElementRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingSpace\";\n        const targetRef = \"RelatedBuildingElement\";\n        const rdfRelationship = \"bot:adjacentElement\";\n        return await buildRelOneToOne(this.ifcAPI, this.modelID, IFCRELSPACEBOUNDARY, subjectRef, targetRef, rdfRelationship, true);\n    }\n\n    private async buildSpaceContainedElementRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingStructure\";\n        const targetRef = \"RelatedElements\";\n        const rdfRelationship = \"bot:containsElement\";\n        const subjectClass = IFCSPACE;\n        return await buildRelOneToMany(this.ifcAPI, this.modelID, IFCRELCONTAINEDINSPATIALSTRUCTURE, subjectRef, targetRef, rdfRelationship, subjectClass);\n    }\n\n    private async buildStoreyElementRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingStructure\";\n        const targetRef = \"RelatedElements\";\n        const rdfRelationship = \"bot:hasElement\";\n        const subjectClass = IFCBUILDINGSTOREY;\n        return await buildRelOneToMany(this.ifcAPI, this.modelID, IFCRELCONTAINEDINSPATIALSTRUCTURE, subjectRef, targetRef, rdfRelationship, subjectClass);\n    }\n\n    /**\n     * ELEMENT-ELEMENT-RELATIONSHIPS\n     */\n     private async buildHostedElementRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingBuildingElement\";\n        const targetRef = \"RelatedOpeningElement\";\n        const rdfRelationship = \"bot:hasSubElement\";\n        return await buildRelOneToOne(this.ifcAPI, this.modelID, IFCRELVOIDSELEMENT, subjectRef, targetRef, rdfRelationship);\n    }\n\n    /**\n     * ZONE-CONTAINMENT\n     */\n    private async buildStoreySpaceRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingObject\";\n        const targetRef = \"RelatedObjects\";\n        const rdfRelationship = \"bot:hasSpace\";\n        const subjectClass = IFCBUILDINGSTOREY;\n        const targetClass = IFCSPACE;\n        return await buildRelOneToMany(this.ifcAPI, this.modelID, IFCRELAGGREGATES, subjectRef, targetRef, rdfRelationship, subjectClass, targetClass);\n    }\n\n    private async buildBuildingStoreyRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingObject\";\n        const targetRef = \"RelatedObjects\";\n        const rdfRelationship = \"bot:hasStorey\";\n        const subjectClass = IFCBUILDING;\n        const targetClass = IFCBUILDINGSTOREY;\n        return await buildRelOneToMany(this.ifcAPI, this.modelID, IFCRELAGGREGATES, subjectRef, targetRef, rdfRelationship, subjectClass, targetClass);\n    }\n\n    private async buildSiteBuildingRelationships(): Promise<any[]>{\n        const subjectRef = \"RelatingObject\";\n        const targetRef = \"RelatedObjects\";\n        const rdfRelationship = \"bot:hasBuilding\";\n        const subjectClass = IFCSITE;\n        const targetClass = IFCBUILDING;\n        return await buildRelOneToMany(this.ifcAPI, this.modelID, IFCRELAGGREGATES, subjectRef, targetRef, rdfRelationship, subjectClass, targetClass);\n    }\n\n}","export const IfcElements: {[key: number]: string} = {\n    103090709: 'IfcProject',\n    4097777520: 'IfcSite',\n    4031249490: 'IfcBuilding',\n    3124254112: 'IfcBuildingStorey',\n    3856911033: 'IfcSpace',\n    1674181508: 'IfcAnnotation',\n    25142252: 'IfcController',\n    32344328: 'IfcBoiler',\n    76236018: 'IfcLamp',\n    90941305: 'IfcPump',\n    177149247: 'IfcAirTerminalBox',\n    182646315: 'IfcFlowInstrument',\n    263784265: 'IfcFurnishingElement',\n    264262732: 'IfcElectricGenerator',\n    277319702: 'IfcAudioVisualAppliance',\n    310824031: 'IfcPipeFitting',\n    331165859: 'IfcStair',\n    342316401: 'IfcDuctFitting',\n    377706215: 'IfcMechanicalFastener',\n    395920057: 'IfcDoor',\n    402227799: 'IfcElectricMotor',\n    413509423: 'IfcSystemFurnitureElement',\n    484807127: 'IfcEvaporator',\n    486154966: 'IfcWindowStandardCase',\n    629592764: 'IfcLightFixture',\n    630975310: 'IfcUnitaryControlElement',\n    635142910: 'IfcCableCarrierFitting',\n    639361253: 'IfcCoil',\n    647756555: 'IfcFastener',\n    707683696: 'IfcFlowStorageDevice',\n    738039164: 'IfcProtectiveDevice',\n    753842376: 'IfcBeam',\n    812556717: 'IfcTank',\n    819412036: 'IfcFilter',\n    843113511: 'IfcColumn',\n    862014818: 'IfcElectricDistributionBoard',\n    900683007: 'IfcFooting',\n    905975707: 'IfcColumnStandardCase',\n    926996030: 'IfcVoidingFeature',\n    979691226: 'IfcReinforcingBar',\n    987401354: 'IfcFlowSegment',\n    1003880860: 'IfcElectricTimeControl',\n    1051757585: 'IfcCableFitting',\n    1052013943: 'IfcDistributionChamberElement',\n    1062813311: 'IfcDistributionControlElement',\n    1073191201: 'IfcMember',\n    1095909175: 'IfcBuildingElementProxy',\n    1156407060: 'IfcPlateStandardCase',\n    1162798199: 'IfcSwitchingDevice',\n    1329646415: 'IfcShadingDevice',\n    1335981549: 'IfcDiscreteAccessory',\n    1360408905: 'IfcDuctSilencer',\n    1404847402: 'IfcStackTerminal',\n    1426591983: 'IfcFireSuppressionTerminal',\n    1437502449: 'IfcMedicalDevice',\n    1509553395: 'IfcFurniture',\n    1529196076: 'IfcSlab',\n    1620046519: 'IfcTransportElement',\n    1634111441: 'IfcAirTerminal',\n    1658829314: 'IfcEnergyConversionDevice',\n    1677625105: 'IfcCivilElement',\n    1687234759: 'IfcPile',\n    1904799276: 'IfcElectricAppliance',\n    1911478936: 'IfcMemberStandardCase',\n    1945004755: 'IfcDistributionElement',\n    1973544240: 'IfcCovering',\n    1999602285: 'IfcSpaceHeater',\n    2016517767: 'IfcRoof',\n    2056796094: 'IfcAirToAirHeatRecovery',\n    2058353004: 'IfcFlowController',\n    2068733104: 'IfcHumidifier',\n    2176052936: 'IfcJunctionBox',\n    2188021234: 'IfcFlowMeter',\n    2223149337: 'IfcFlowTerminal',\n    2262370178: 'IfcRailing',\n    2272882330: 'IfcCondenser',\n    2295281155: 'IfcProtectiveDeviceTrippingUnit',\n    2320036040: 'IfcReinforcingMesh',\n    2347447852: 'IfcTendonAnchor',\n    2391383451: 'IfcVibrationIsolator',\n    2391406946: 'IfcWall',\n    2474470126: 'IfcMotorConnection',\n    2769231204: 'IfcVirtualElement',\n    2814081492: 'IfcEngine',\n    2906023776: 'IfcBeamStandardCase',\n    2938176219: 'IfcBurner',\n    2979338954: 'IfcBuildingElementPart',\n    3024970846: 'IfcRamp',\n    3026737570: 'IfcTubeBundle',\n    3027962421: 'IfcSlabStandardCase',\n    3040386961: 'IfcDistributionFlowElement',\n    3053780830: 'IfcSanitaryTerminal',\n    3079942009: 'IfcOpeningStandardCase',\n    3087945054: 'IfcAlarm',\n    3101698114: 'IfcSurfaceFeature',\n    3127900445: 'IfcSlabElementedCase',\n    3132237377: 'IfcFlowMovingDevice',\n    3171933400: 'IfcPlate',\n    3221913625: 'IfcCommunicationsAppliance',\n    3242481149: 'IfcDoorStandardCase',\n    3283111854: 'IfcRampFlight',\n    3296154744: 'IfcChimney',\n    3304561284: 'IfcWindow',\n    3310460725: 'IfcElectricFlowStorageDevice',\n    3319311131: 'IfcHeatExchanger',\n    3415622556: 'IfcFan',\n    3420628829: 'IfcSolarDevice',\n    3493046030: 'IfcGeographicElement',\n    3495092785: 'IfcCurtainWall',\n    3508470533: 'IfcFlowTreatmentDevice',\n    3512223829: 'IfcWallStandardCase',\n    3518393246: 'IfcDuctSegment',\n    3571504051: 'IfcCompressor',\n    3588315303: 'IfcOpeningElement',\n    3612865200: 'IfcPipeSegment',\n    3640358203: 'IfcCoolingTower',\n    3651124850: 'IfcProjectionElement',\n    3694346114: 'IfcOutlet',\n    3747195512: 'IfcEvaporativeCooler',\n    3758799889: 'IfcCableCarrierSegment',\n    3824725483: 'IfcTendon',\n    3825984169: 'IfcTransformer',\n    3902619387: 'IfcChiller',\n    4074379575: 'IfcDamper',\n    4086658281: 'IfcSensor',\n    4123344466: 'IfcElementAssembly',\n    4136498852: 'IfcCooledBeam',\n    4156078855: 'IfcWallElementedCase',\n    4175244083: 'IfcInterceptor',\n    4207607924: 'IfcValve',\n    4217484030: 'IfcCableSegment',\n    4237592921: 'IfcWasteTerminal',\n    4252922144: 'IfcStairFlight',\n    4278956645: 'IfcFlowFitting',\n    4288193352: 'IfcActuator',\n    4292641817: 'IfcUnitaryEquipment',\n    3009204131: 'IfcGrid'\n};","import {\n    IFCELEMENT,\n    IFCOPENINGELEMENT\n} from 'web-ifc';\n\nimport { getElementSubtypes } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { defaultURIBuilder } from \"../helpers/uri-builder\";\nimport { IfcElements } from \"../helpers/IfcElementsMap\";\n\nexport class ProductParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started PRODUCTS parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished products parsing\");\n\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/1: Finding products\");\n        this.jsonLDObject[\"@graph\"] = await this.buildProducts();\n        this.verbose && console.timeEnd(\"1/1: Finding products\");\n        this.verbose && console.log(\"\");\n\n        console.timeEnd(\"Finished products parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    private async buildProducts(): Promise<any[]>{\n\n        const graph = [];\n\n        const skippedTypes = [IFCOPENINGELEMENT];\n\n        // Get all subTypes of IfcElement\n        const subTypes: number[] = getElementSubtypes(IFCELEMENT)\n            .filter(typeID => skippedTypes.indexOf(typeID) == -1);  // Filter out skipped types\n    \n\n        // Get all items in model that belong to any of these types\n        let expressIDArray: number[] = [];\n        for(let typeId of subTypes){\n            expressIDArray.push(...await this.ifcAPI.properties.getAllItemsOfType(this.modelID, typeId, false));\n        }\n\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            \n            const {type, GlobalId} = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n            const URI = defaultURIBuilder(GlobalId.value);\n\n            // Push product\n            graph.push({\n                \"@id\": URI,\n                \"@type\": `ifc:${IfcElements[type]}`\n            });\n            \n        }\n\n        return graph;\n\n    }\n\n}","import { IfcAxis2Placement3D, IfcLocalPlacement } from \"web-ifc\";\n\nexport function getGlobalRotation(objectPlacement: IfcLocalPlacement){\n\n    // Get relative placement\n    console.log(\"Relative placement\");\n    console.log(objectPlacement.RelativePlacement);\n    // console.log(Object.keys(objectPlacement));\n    // console.log(objectPlacement);\n}\n\n/**\n * Return the global position (coordinate) from the local one\n * @param objectPlacement is the object placement in the local coordinate system\n * @param globalPlacement is the global placement (being calculated as the tree is traversed)\n * @returns global coordinate\n */\nexport function getGlobalPosition(objectPlacement: any, globalPlacement: number[] = [0,0,0]): number[]{\n    \n    // Get relative placement\n    const relativeCoordinates = objectPlacement?.RelativePlacement?.Location?.Coordinates;\n    let relativePlacement: number[] = [];\n    if(relativeCoordinates != undefined && relativeCoordinates.length == 3){\n        const x = round(relativeCoordinates[0].value);\n        const y = round(relativeCoordinates[1].value);\n        const z = round(relativeCoordinates[2].value);\n        relativePlacement = [x,y,z];\n    }\n\n    // Update global placement\n    globalPlacement = getAbsolutePlacement(relativePlacement, globalPlacement);\n\n    // If related to something else, continue the journey\n    if(objectPlacement.PlacementRelTo){\n        return getGlobalPosition(objectPlacement.PlacementRelTo, globalPlacement);\n    }\n\n    return globalPlacement;\n}\n\nfunction getAbsolutePlacement(relativePlacement: number[], globalPlacement: number[]){\n    const x = relativePlacement[0]+globalPlacement[0];\n    const y = relativePlacement[1]+globalPlacement[1];\n    const z = relativePlacement[2]+globalPlacement[2];\n    return [x,y,z];\n}\n\nfunction round(num: number){\n    return Math.round(num * 100000) / 100000;\n}","import {\n    IFCELEMENT,\n    IFCOPENINGELEMENT\n} from 'web-ifc';\n\nimport { buildClassInstances, getElementSubtypes } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { defaultURIBuilder } from \"../helpers/uri-builder\";\nimport { IfcElements } from \"../helpers/IfcElementsMap\";\nimport { buildRelOneToOne } from '../helpers/path-search';\nimport { getGlobalPosition, getGlobalRotation } from '../helpers/object-placement';\n\nconst typeMappings: {[key: number]: string[]}  = {\n    3205830791: [\"fso:DistributionSystem\"],\n    3740093272: [\"fso:Port\"],\n    987401354: [\"fso:Segment\", \"fso:Component\"],\n    4278956645: [\"fso:Fitting\", \"fso:Component\"],\n    2058353004: [\"fso:FlowController\", \"fso:Component\"],\n    1658829314: [\"fso:EnergyConversionDevice\", \"fso:Component\"],\n    3132237377: [\"fso:FlowMovingDevice\", \"fso:Component\"],\n    707683696: [\"fso:StorageDevice\", \"fso:Component\"],\n    2223149337: [\"fso:Terminal\", \"fso:Component\"],\n    3508470533: [\"fso:TreatmentDevice\", \"fso:Component\"],\n}\n\nexport class FSOParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started FSO parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished FSO parsing\");\n\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/5: Classifying FSO items\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.classify()));\n        this.verbose && console.timeEnd(\"1/5: Classifying FSO items\");\n        this.verbose && console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 2: PORTS ##\");\n        const portIDs = await this.getPortIDs();\n        this.verbose && console.time(\"2/5: Finding port-port connections\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portPort()));\n        this.verbose && console.timeEnd(\"2/5: Finding port-port connections\");\n        this.verbose && console.time(\"3/5: Finding port-component connections\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portComponent()));\n        this.verbose && console.timeEnd(\"3/5: Finding port-component connections\");\n        this.verbose && console.time(\"4/5: Finding port flow directions\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portFlowDirection(portIDs)));\n        this.verbose && console.timeEnd(\"4/5: Finding port flow directions\");\n        this.verbose && console.time(\"5/5: Finding port placements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portPlacements(portIDs)));\n        this.verbose && console.timeEnd(\"5/5: Finding port placements\");\n        this.verbose && console.log(\"\");\n\n        console.timeEnd(\"Finished FSO parsing\");\n\n        // POST PROCESSING\n        \n        // CONSTRUCT{\n        //     ?e1 fso:connectedWith ?e2 .\n        //     ?e2 fso:connectedWith ?e1 .\n        //     ?e1 fso:feedsFluidTo ?e2 .\n        //     ?e2 fso:hasFluidFedBy ?e1\n        // }\n        // WHERE{\n        //     ?e1 fso:connectedPort ?p1 .\n        //     ?p1 fso:connectedPort ?p2 .\n        //     ?p2 fso:connectedComponent ?e2 .\n        //     ?p1 a fso:OutPort .\n        //     ?p2 a fso:InPort .\n        // }\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    /**\n     * CLASS ASSIGNMENT\n     */\n    private async classify(): Promise<any[]>{\n\n        const graph = [];\n\n        const typeIDs = Object.keys(typeMappings);\n        for (let i = 0; i < typeIDs.length; i++) {\n            const typeID: any = typeIDs[i];\n            const fsoClass = typeMappings[typeID];\n            graph.push(...(await buildClassInstances(this.ifcAPI, this.modelID, typeID, fsoClass, true)));\n        }\n\n        return graph;\n\n    }\n\n    /**\n     * RELATIONSHIP ASSIGNMENT\n     */\n\n    // <port1> fso:connectedPort <port2>\n    // <port2> fso:connectedPort <port1>\n    private async portPort(): Promise<any[]>{\n\n        const IFCRELCONNECTSPORTS = 3190031847;\n        const subjectRef = \"RelatedPort\";\n        const targetRef = \"RelatingPort\";\n        const rdfRelationship = \"fso:connectedPort\";\n        return await buildRelOneToOne(this.ifcAPI, this.modelID, IFCRELCONNECTSPORTS, subjectRef, targetRef, rdfRelationship, false, true);\n\n    }\n\n    // <element> fso:connectedPort <port>\n    // <port> fso:connectedElement <element>\n    private async portComponent(): Promise<any[]>{\n\n        const IFCRELCONNECTSPORTTOELEMENT = 4201705270;\n        let subjectRef = \"RelatedElement\";\n        let targetRef = \"RelatingPort\";\n        let rdfRelationship = \"fso:connectedPort\";\n        const r1 = await buildRelOneToOne(this.ifcAPI, this.modelID, IFCRELCONNECTSPORTTOELEMENT, subjectRef, targetRef, rdfRelationship);\n\n        subjectRef = \"RelatingPort\";\n        targetRef = \"RelatedElement\";\n        rdfRelationship = \"fso:connectedComponent\";\n        const r2 = await buildRelOneToOne(this.ifcAPI, this.modelID, IFCRELCONNECTSPORTTOELEMENT, subjectRef, targetRef, rdfRelationship);\n\n        return r1.concat(r2);\n    }\n\n    /**\n     * PROPERTIES\n     */\n\n    // <port> a fso:InPort .\n    // <port> a fso:OutPort .\n    // <port> a fso:BidirectionalPort .\n    private async portFlowDirection(expressIDArray: number[]): Promise<any[]>{\n        \n        // Port property example\n        // Description: {type: 1, value: 'Flow'}\n        // FlowDirection: {type: 3, value: 'SINK'}\n        // GlobalId: {type: 1, value: '1noFI6neD67vh$xlz57Jcc'}\n        // Name: {type: 1, value: 'InPort_1614379'}\n        // ObjectPlacement: IfcLocalPlacement {expressID: 27954, type: 2624227202, PlacementRelTo: IfcLocalPlacement, RelativePlacement: IfcAxis2Placement3D}\n        // ObjectType: null\n        // OwnerHistory: IfcOwnerHistory {expressID: 42, type: 1207048766, OwningUser: IfcPersonAndOrganization, OwningApplication: IfcApplication, State: null, …}\n        // PredefinedType: undefined\n        // Representation: null\n        // SystemType: undefined\n        // expressID: 27956\n        // type: 3041715199\n        const graph = [];\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            const props = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n\n            const flowDirection = props.FlowDirection.value;\n            let portType = \"\";\n            if(flowDirection == \"SINK\") portType = \"fso:InPort\";\n            if(flowDirection == \"SOURCE\") portType = \"fso:OutPort\";\n            if(flowDirection == \"SOURCEANDSINK\") portType = \"fso:BidirectionalPort\";\n\n            if(portType != \"\"){\n                graph.push({\n                    \"@id\": defaultURIBuilder(props.GlobalId.value),\n                    \"@type\": portType\n                });\n            }\n\n        }\n\n        return graph;\n\n    }\n\n    private async portPlacements(expressIDArray: number[]): Promise<any[]>{\n        \n        const graph: any[] = [];\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            const props = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID, true);\n\n            const coordinates = await getGlobalPosition(props.ObjectPlacement);\n            const point = `POINT Z(${coordinates[0]} ${coordinates[1]} ${coordinates[2]})`;\n\n            const portURI = defaultURIBuilder(props.GlobalId.value);\n            const cpURI = portURI + \"_cp\";\n\n            graph.push({\n                \"@id\": portURI,\n                \"omg:hasGeometry\": {\n                    \"@id\": cpURI,\n                    \"@type\": [\"omg:Geometry\", \"ex:CenterPoint\"],\n                    \"fog::asSfa_v2-wkt\": point\n                }\n            });\n\n        }\n\n        return graph;\n\n    }\n\n    private async getPortIDs(): Promise<number[]>{\n\n        // Get all subTypes of IfcPort\n        const IFCPORT = 3740093272;\n        const subTypes = getElementSubtypes(IFCPORT);\n\n        // Get all items in model that belong to any of these types\n        let expressIDArray: number[] = [];\n        for(let typeId of subTypes){\n            expressIDArray.push(...await this.ifcAPI.properties.getAllItemsOfType(this.modelID, typeId, false));\n        }\n        return expressIDArray;\n    }\n\n}","import * as WebIFC from \"web-ifc/web-ifc-api\";\nimport { BOTParser } from \"./parsers/bot-parser\";\nimport { ProductParser } from \"./parsers/product-parser\";\nimport { CLITool } from \"./cli-tool\";\nimport { JSONLD, SerializationFormat } from \"./helpers/BaseDefinitions\";\nimport { FSOParser } from \"./parsers/fso-parser\";\n\nexport class LBDParser{\n\n    // initialize the API\n    public ifcApi: WebIFC.IfcAPI = new WebIFC.IfcAPI();\n    \n    public format: SerializationFormat;\n\n    constructor(format: SerializationFormat = SerializationFormat.JSONLD){\n        this.format = format;\n    }\n\n    public setWasmPath(path: string){\n        this.ifcApi.SetWasmPath(path);\n    }\n\n    public async parseBOTTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const botParser = new BOTParser(ifcApi, modelID, this.format, verbose);\n        return await botParser.doParse();\n    }\n\n    public async parseProductTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const productParser = new ProductParser(ifcApi, modelID, this.format, verbose);\n        return await productParser.doParse();\n    }\n\n    public async parseFSOTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const fsoParser = new FSOParser(ifcApi, modelID, this.format, verbose);\n        return await fsoParser.doParse();\n    }\n\n}"],"names":["WebIFCWasm","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__require","x","require","Error","__commonJS","cb","mod","keys","exports","__async","__this","__arguments","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","throw","done","then","apply","require_crypto","require_web_ifc_mt","module","_scriptDir","WebIFCWasm2","document","currentScript","src","__filename","WebIFCWasm3","GROWABLE_HEAP_I8","wasmMemory","buffer","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","HEAPU8","GROWABLE_HEAP_I16","HEAP16","GROWABLE_HEAP_U16","HEAPU16","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","thisProgram","quit_","status","toThrow","window","importScripts","process","versions","node","ENVIRONMENT_IS_PTHREAD","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","nodeWorkerThreads","dirname","__dirname","filename","binary","ret","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","console","error","global","Worker","read","f","data","readbuffer","scriptArgs","quit","print","log","warn","printErr","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","performance","wasmBinary","noExitRuntime","wasmModule","out","bind","err","warnOnce","text","shown","WebAssembly","HEAPF32","threadInfoStruct","ABORT","condition","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF16ToString","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","endPtr","lengthBytesUTF32","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","SharedArrayBuffer","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","stack","RuntimeError","hasPrefix","prefix","startsWith","isDataURI","isFileURI","tempDouble","tempI64","wasmBinaryFile","getBinary","err2","ASM_CONSTS","$0","$1","setTimeout","_do_emscripten_dispatch_to_thread","callRuntimeCallbacks","callbacks","shift","func","arg","get","dynCall","sig","args","concat","dynCallLegacy","__pthread_ptr","__pthread_is_main_runtime_thread","__pthread_is_main_browser_thread","registerPthreadPtr","pthreadPtr","isMainBrowserThread","isMainRuntimeThread","ERRNO_CODES","_emscripten_futex_wake","addr","count","Infinity","mainThreadWaitAddress","Atomics","load","PThread","mainThreadFutex","mainThreadWoken","compareExchange","notify","_emscripten_get_now","MAIN_THREAD_ID","mainThreadInfo","schedPolicy","schedPrio","unusedWorkers","runningWorkers","initMainThreadBlock","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","initRuntime","mainThreadBlock","_malloc","headPtr","tlsMemory","store","initShared","_emscripten_register_main_browser_thread_id","initWorker","_main_thread_futex","pthreads","threadExitHandlers","setThreadStatus","runExitHandlers","pop","___pthread_tsd_run_dtors","threadExit","exitCode","tb","_pthread_self","postMessage","cmd","threadCancel","terminateAllThreads","t","pthread","worker","returnWorkerToPool","terminate","freeThreadData","_free","allocatedOwnStack","stackBase","thread","push","splice","receiveObjectTransfer","loadWasmModuleToWorker","onFinishedLoading","onmessage","d","currentProxiedOperationCallerThread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","pthread_ptr","cleanupThread","killThread","cancelThread","loaded","runPthread","alert","target","onerror","lineno","message","on","urlOrBlob","pthreadMainJs","getNewWorker","busySpinWait","msecs","now","stackTop","stackMax","_emscripten_stack_set_limits","stackRestore","dateNow","ExceptionInfoAttrs","ExceptionInfo","excPtr","this","set_type","type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","add","release_ref","sub","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","result","root","dir","basename","lastSlash","extname","paths","Array","arguments","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","TTY","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","buffer2","offset","pos","get_char","bytesRead","timestamp","Date","write","put_char","default_tty_ops","Buffer","alloc","readSync","stdin","fd","toString","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","size","alignedSize","factor","ceil","alignMemory","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","subarray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","name","entries","key2","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","errored","forEach","pseudo","mountRoot","unmount","create","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","readFile","encoding","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","crypto_module","getRandomDevice","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","errno2","constructor","code","staticInit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray2","xhr2","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","lazyArray","defineProperties","fn","createPreloadedFile","onload","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","byteArray2","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","dirstream","doStat","abs","floor","getTime","doMsync","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","___sys_ioctl","op","_emscripten_proxy_to_main_thread_js","argp","___sys_open","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","handle2","iter","unregister","ClassHandle_clone","preservePointerOnDelete","o","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","array","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","enumReadValueFromPointer","signed","requireRegisteredType","impl","v","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","symbol","emval_get_global","globalThis","index","sync","numCallArgs","stackSave","stackAlloc","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","readAsmConstArgsArray","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","arraysHaveEqualContent","arrA","arrB","i2","sort","y","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","jsString","cString","targetCanvasPtr","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","offscreenCanvases","timerQueriesEXT","programInfos","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","string","source","createContext","webGLContextAttributes","ctx","getContext","registerContext","context","attributes","version","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","GLctx2","ext","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","n","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","automaticallyEnabledExtensions","getSupportedExtensions","populateUniformTable","program","ptable","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","utable","numUniforms","getProgramParameter","getActiveUniform","loc","getUniformLocation","j","__emscripten_webgl_power_preferences","ENV","getEnvStrings","strings","env","USER","LOGNAME","PWD","HOME","LANG","languages","_","_environ_get","__environ","environ_buf","bufSize","dontAddNull","writeAsciiToMemory","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","num","_fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","_fd_write","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","start_routine","startRoutine","selfThreadId","parentThreadId","parent_pthread_ptr","time","transferList","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","s","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","readMode","writeMode","codes","embind_init_charCodes","proxiedFunctionTable","stringy","u8array","numBytesWritten","___wasm_call_ctors","asmLibraryArg","line","H","G","ha","ia","na","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","elementTypes2","getterContext","setter","setterContext","fromWireType","toWireType","argPackAdvance","readValueFromPointer","structType","fieldRecords","fields","field","fieldTypes2","fieldName","ka","trueValue","falseValue","wt","z","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","isPureVirtual","unboundTypesHandler","method","className","memberFunction","ja","isSigned","ctor","values","E","rawEnumType","enumValue","enumType","Enum","Value2","N","argTypes2","invokerArgsArray","primitiveType","minRange","maxRange","bitshift","isUnsignedType","q","dataTypeIndex","TA","decodeMemoryView","O","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","F","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","oa","constructorSignature","getterSignature","setterSignature","la","isVoid","$","targetThreadId","mainThreadId","returnType","destructorsRef","rd","P","argv","__emval_lookupTypes","Z","ba","Q","I","A","g","K","fa","clk_id","tp","___errno_location","B","sigPtr","argbuf","double","readAsmConstArgs","aa","J","expectedStatus","newStatus","timeout","tNow","tEnd","exchange","wait","D","C","U","dest","copyWithin","W","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","X","Y","a0","a1","powerPreference","contextAttributes","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","da","ea","M","ga","R","L","T","V","routine","_emscripten_sync_run_in_main_thread_4","prevSchedPolicy","prevSchedPrio","policy","schedparam","_pthread_getschedparam","_memalign","threadInfoStruct2","S","$i","ca","info","receiveInstance","instance","module2","exports3","numWorkersToLoad","receiveInstantiatedSource","instantiateArrayBuffer","receiver","fetch","credentials","catch","instantiate","reason","instantiateStreaming","createWasm","calledRun","callMain","entryFunction","toLog","run","doRun","shouldRunNow","postRun","preRun","runCaller","ready","define","require_web_ifc","UTF8Decoder","TextDecoder","decode","UTF16Decoder","maxIdx","prev","IfcElements","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","static","tape","ToTape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties2","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","Item","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","IfcElements2","PropsNames","aggregates","relating","related","spatial","psets","materials","api","getItemProperties","modelID","recursive","GetLine","getPropertySets","elementID","getProperty","getTypeProperties","getMaterialsProperties","getSpatialStructure","includeProperties","getAllTypesOfModel","getSpatialTreeChunks","projectID","GetLineIDsWithType","project","newIfcProject","getSpatialNode","cleanupTypes","getAllItemsOfType","verbose","items","lines","propName","propSetIds","getAllRelatedItemsOfType","getChunks","propNames","relation","rel","saveChunk","relatedItems","isArray","item","includes","children","treeChunks","getChildren","nodes","child","node2","newNode","getNodeType","typeID","getRelated","IDs","element","ele","isRelated","parseInt","crossOriginIsolated","IfcAPI2","fs","wasmPath","ifcGuidMap","Map","Init","customLocateFileHandler","locateFileHandler","endsWith","noInitialRun","OpenModel","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","BOOL_ABORT_THRESHOLD","offsetInSrc","destPtr","destSize","srcSize","CreateModel","ExportFileAsIFC","GetGeometry","geometryExpressID","flatten","rawLineData","GetRawLineData","lineData","FlattenLine","GetAndClearErrors","WriteLine","lineObject","propertyName","property","WriteRawLineData","GetAllLines","SetGeometryTransformation","transformationMatrix","GetCoordinationMatrix","GetVertexArray","getSubArray","GetIndexArray","sizeBytes","CloseModel","delete","StreamAllMeshes","meshCallback","StreamAllMeshesWithTypes","IsModelOpen","LoadAllGeometry","GetFlatMesh","CreateIfcGuidToExpressIdMapping","globalID","SetWasmPath","defaultURIBuilder","globalId","encodeURIComponent","buildRelOneToOne","ifcAPI","relationshipType","subjectRef","targetRef","rdfRelationship","includeInterface","biderectional","graph","rels","relID","relProps","all","subject","subjectURI","targetURI","interfaceURI","buildRelOneToMany","subjectClassConstraint","targetClassConstraint","targetPromises","targets","targetObjects","SerializationFormat","Mimetype","IfcTypesTree","buildClassInstances","ifcType","rdfClasses","includeSubTypes","subTypes","getElementSubtypes","buildClassInstancesFromExpressIDs","expressIDs","URI","treeNode","searchProductTree","collectAllIds","ids","IdentifierIssuer_1","IdentifierIssuer","existing","_existing","getId","old","identifier","hasId","has","getOldIds","require$$0","MessageDigest_1","algorithm","md","createHash","update","digest","Permuter_1","list","hasNext","rval","swap","RDF_LANGSTRING","RDF","XSD_STRING","REGEX","empty","quad","NQuads_1","NQuads","dataset","graphs","eoln","lineNumber","test","match","predicate","undefined","termType","datatype","language","_unescapeRegex","unique","quads","_compareTriples","legacyDatasetToQuads","serializeQuad","nquad","_escapeRegex","_escape","termTypeMap","IRI","literal","graphName","triple","componentName","oldComponent","newComponent","t1","t2","MessageDigest","require$$1","Permuter","require$$2","require$$3","URDNA2015_1","blankNodeInfo","canonicalIssuer","hashAlgorithm","async","_addBlankNodeQuadInfo","component","hashToBlankNodes","nonNormalized","_yield","_hashAndTrackBlankNode","hashes","nonUnique","idList","hashPathList","issuer","hashNDegreeQuads","_stringHashCompare","oldIds","normalized","_useCanonicalId","nquads","copy","modifyFirstDegreeComponent","getRelatedPredicate","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permuter","permutation","issuerCopy","recursionList","nextPermutation","_addRelatedBlankNodeHash","hashFirstDegreeQuads","Set","hashRelatedBlankNode","setImmediate","URDNA2015","URDNA2015Sync_1","main","URDNA2015Sync","URGNA2012","super","URGNA2012Sync","rdfCanonizeNative","lib","require$$4","require$$5","_rdfCanonizeNative","canonize","useNative","canonical","_canonizeSync","canonizeSync","rdfCanonize","isBoolean","isDouble","isNumber","isEmptyObject","isObject","isNumeric","isNaN","parseFloat","isFinite","isString","isUndefined","graphTypes","isSubject","isSubjectReference","isValue","isList","isGraph","isSimpleGraph","isBlankNode","JsonLdError_1","details","JsonLdError","REGEX_LINK_HEADERS","REGEX_LINK_HEADER","REGEX_LINK_HEADER_PARAMS","DEFAULTS","accept","util","_labelBlankNodes","ki","asArray","buildHeaders","headers","some","toLowerCase","RangeError","assign","Accept","parseLinkHeader","params","validateTypeValue","isFrame","every","vv","hasProperty","hasValue","compareValues","addValue","propertyIsArray","valueIsArray","allowDuplicate","prependValue","getValues","removeProperty","removeValue","relabelBlankNodes","v1","v2","compareShortestLeast","XSD","constants","LINK_HEADER_REL","LINK_HEADER_CONTEXT","RDF_LIST","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_JSON_LITERAL","RDF_OBJECT","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","RequestQueue_1","_requests","wrapLoader","loader","_loader","promise","parsers","simple","regex","full","parse","parser","parsed","scheme","port","authority","normalizedPath","removeDotSegments","prependBase","iri","transform","protocol","query","fragment","removeBase","baseSegments","iriSegments","isAbsoluteRegex","isRelative","uri","firstComma","meta","charset","base64","typeFull","unescape","Readable","wm","WeakMap","Blob","blobParts","arrayBuffer","chunk","relativeStart","relativeEnd","span","added","blob","toStringTag","Symbol","hasInstance","fetchBlob","http","https","zlib","Stream","dataUriToBuffer","require$$6","require$$7","require$$8","FetchBaseError","captureStackTrace","FetchError","systemError","erroredSysCall","syscall","NAME","isURLSearchParameters","append","getAll","isBlob","isFormData","carriage","dashes","repeat","carriageLength","getFooter","boundary","getHeader","INTERNALS","Body","isBuffer","isAnyArrayBuffer","randomBytes","form","formDataIterator","disturbed","bodyUsed","consumeBody","ct","JSON","accum","accumBytes","destroy","readableEnded","_readableState","ended","json","highWaterMark","p1","p2","getBoundary","PassThrough","pipe","extractContentType","request","getTotalBytes","getLengthSync","hasKnownLength","getFormDataLength","validateHeaderName","validateHeaderValue","Headers","URLSearchParams","raw","isBoxedPrimitive","iterator","pair","Proxy","Reflect","reduce","for","redirectStatus","isRedirect","INTERNALS$1","Response","contentType","statusText","redirected","URL","INTERNALS$2","isRequest","Request","parsedURL","toUpperCase","inputBody","signal","redirect","compress","agent","insecureHTTPParser","AbortError","supportedSchemas","options_","contentLengthValue","totalBytes","search","lastOffset","getSearch","hostname","getNodeRequestOptions","emit","aborted","abortAndFinalize","finalize","request_","response_","fromRawHeaders","rawHeaders","statusCode","locationURL","requestOptions","once","pipeline","responseOptions","statusMessage","codings","zlibOptions","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","writeToStream","privateData","wrappers","pd","retv","setCancelFlag","passiveListener","cancelable","canceled","preventDefault","Event","eventTarget","eventPhase","currentTarget","stopped","immediateStopped","timeStamp","defineRedirectDescriptor","defineCallDescriptor","getWrapper","wrapper","BaseEvent","CustomEvent","isFunc","getOwnPropertyDescriptor","defineWrapper","isStopped","setPassiveListener","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","bubbles","Boolean","defaultPrevented","composed","srcElement","cancelBubble","returnValue","initEvent","setPrototypeOf","listenersMap","getListeners","listeners","defineEventAttribute","eventTargetPrototype","eventName","listenerType","listener","passive","defineEventAttributeDescriptor","defineCustomEventTarget","eventNames","CustomEventTarget","EventTarget","optionsIsObj","capture","dispatchEvent","wrappedEvent","wrapEvent","handleEvent","setEventPhase","setCurrentTarget","eventTargetShim","AbortSignal","abortedFlags","AbortController","signals","createAbortSignal","getSignal","controller","globals","getGlobal","globalProperties","globalObject","supportsAbortController","supportsStreams","ReadableStream","supportsFormData","FormData","mergeHeaders","source1","source2","isHeadersInstance","deepMerge","sources","requestMethods","responseTypes","formData","retryMethods","retryStatusCodes","retryAfterStatusCodes","stop","HTTPError","TimeoutError","delay","ms","abortController","timeoutID","clearTimeout","normalizeRequestMethod","defaultRetryOptions","limit","methods","statusCodes","afterStatusCodes","normalizeRetryOptions","retry","maxSafeTimeout","Ky","_retryCount","_input","_options","hooks","beforeRequest","beforeRetry","afterResponse","prefixUrl","throwHttpErrors","searchParams","stringify","_fetch","hook","modifiedResponse","_decorateResponse","onDownloadProgress","_stream","_retry","mimeType","parseJson","_calculateRetryDelay","retryAfter","after","maxRetryAfter","retryCount","transferredBytes","reader","getReader","percent","enqueue","validateAndMerge","createInstance","ky","newDefaults","extend","factory","kyUniversal","DEFAULT_HEADERS","kyOriginal","proxyMethods","httpClient","_handleResponse","propKey","propValue","thisArg","errorBody","_handleError","parseBody","RequestQueue","nodeLoader","secure","strictSSL","maxRedirects","httpAgent","httpsAgent","loadDocument","redirects","isHttp","isHttps","doc","alternate","res","Agent","rejectUnauthorized","cause","contextUrl","documentUrl","STATUS_CODES","httpStatusCode","linkHeaders","linkedContext","platform","setupDocumentLoaders","jsonld","documentLoaders","useDocumentLoader","setupGlobals","yallist","Yallist","tail","head","insert","inserted","Node","removeNode","unshiftNode","pushNode","thisp","walker","forEachReverse","getReverse","mapReverse","acc","reduceReverse","toArray","toArrayReverse","sliceReverse","deleteCount","er","MAX","LENGTH","LENGTH_CALCULATOR","ALLOW_STALE","MAX_AGE","DISPOSE","NO_DISPOSE_ON_SET","LRU_LIST","CACHE","UPDATE_AGE_ON_GET","naiveLength","doUse","hit","isStale","maxAge","diff","Entry","forEachStep","lruCache","lc","stale","dispose","noDisposeOnSet","updateAgeOnGet","reset","mL","allowStale","mA","lengthCalculator","lC","itemCount","rforEach","dump","dumpLru","peek","expiresAt","prune","LRU","_isArray","_isObject","_isString","_asArray","ResolvedContext","cache","getProcessed","activeCtx","setProcessed","processedCtx","_throwInvalidLocalContext","_resolveContextUrls","term","_isUndefined","_isAbsoluteIri","_isRelativeIri","_compareShortestLeast","INITIAL_CONTEXT_CACHE","KEYWORD_PATTERN","_expandIri","relativeTo","localCtx","defined","isKeyword","createTermDefinition","vocab","mapping","colon","suffix","_prefix","_deepCompare","x1","x2","x1Array","k1s","k2s","k1","propagate","overrideProtected","cycles","resolved","contextResolver","documentLoader","previousContext","resolvedContext","protected","protectedMode","processed","oldActiveCtx","getInitialContext","_protected","processingMode","resolvedImport","processedImport","importCtx","keyCtx","validKeys","previousMapping","simpleTerm","kw","_termHasColon","container","validContainers","isValid","hasSet","direction","nest","expandIri","cached","initialContext","inverse","getInverse","fastCurieMap","irisToTerms","defaultLanguage","defaultDirection","terms","entry","fastCurieEntry","_addPreferredTerm","_buildIriMap","revertToPreviousContext","clear","iriMap","letter","typeOrLanguageValue","getContextValue","_isEmptyObject","_isList","_isValue","_isGraph","_isSubject","_getContextValue","_isKeyword","_processContext","_processingMode","_addValue","_getValues","_validateTypeValue","expand","REGEX_BCP47","_expandObject","activeProperty","expandedActiveProperty","expandedParent","insideList","typeKey","typeScopedContext","expansionMap","nests","unexpandedValue","isJsonType","expandedValue","expandedProperty","unmappedProperty","keyword","fromEntries","includedResult","lang","reverseMap","ii","termCtx","_expandLanguageMap","asGraph","indexKey","propertyIndex","_expandIndexMap","nextActiveProperty","unmappedValue","nestedValues","nv","_expandValue","languageMap","expandedKey","isTypeIndex","insideIndex","mapped","propertyScopedCtx","mustRevert","validCount","keepFreeFloatingNodes","nodeMap","createMergedNodeMap","createNodeMap","mergeNodeMaps","_list","subjects","referencedNode","reverseProperty","itemName","objects","mergeNodeMapGraphs","merged","mergedNode","defaultGraph","graphNames","_isSubjectReference","_createMergedNodeMap","flattened","fromRdf","_RDFToObject","useNativeTypes","rdfDirection","toFixed","fromRDF","useRdfType","graphMap","referencedOnce","objectIsNode","usages","graphObject","nil","usage","listNodes","nodeKeyCount","listNode","graphSubjects","graphSubject","jsonCanonicalize","serialize","toJSON","cv","ci","toRdf","_graphToRDF","graphTerm","produceGeneralizedRdf","_objectToRDF","toExponential","rest","_listToRDF","toRDF","_createNodeMap","_mergeNodeMapGraphs","frame","_createImplicitFrame","_createsCircularReference","subjectToEmbed","subjectStack","_getFrameFlag","_validateFrame","_filterSubject","state","wildcard","matchesSome","matchThis","nodeValues","isEmpty","requireAll","tt","thisFrame","hasDefault","listValue","nodeListValues","lv","_valueMatch","_nodeMatch","_removeEmbed","embeds","uniqueEmbeds","embed","useArray","removeDependents","_cleanupPreserve","bnodesToClear","_addFrameOutput","nodeObject","l1","l2","frameMergedOrDefault","embedded","bnodeMap","framed","pruneBlankNodeIdentifiers","explicit","matches","_filterSubjects","is11","recurse","subframe","oo","preserve","reverseProp","cleanupNull","_isSimpleGraph","_removeBase","_prependBase","compact","_checkNestProperty","nestProperty","compactionMap","compacted","compactArrays","linked","expanded","compactValue","insideReverse","inputCtx","typeContext","compactedType","compactIri","alias","itemActiveProperty","nestResult","expandedItem","inner","compactedItem","mapObject","containerKey","others","idKey","compactedValue","compactedProperty","expandedIri","isPropertyTermScoped","inverseCtx","containers","typeOrLanguage","commonLanguage","commonType","itemLanguage","itemType","prefs","langDir","find","el","containerMap","typeOrLanguageValueMap","pref","_selectTerm","choice","partialMatches","maxPartialLength","curie","td","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","ContextResolver","sharedCache","perOpCache","allResolved","_get","_resolveRemoteContext","_cacheResolvedContext","tag","tagMap","remoteDoc","_fetchContext","_expand","_flatten","_fromRDF","require$$9","_toRDF","require$$10","_frameMergedOrDefault","_cleanupNull","require$$11","require$$12","require$$13","_getInitialContext","require$$14","_compact","_compactIri","require$$15","_mergeNodeMaps","require$$16","_rdfParsers","_resolvedContextCache","_setDefaults","compactToRelative","skipExpansion","processContext","tmp","hasContext","graphAlias","toResolve","contextsToProcess","expandContext","defaultBase","remoteContext","omitDefault","frameContext","omitGraph","expandedFrame","frameKeys","framing","inputFormat","parsedInput","rdfParser","parsedDataset","merge","docs","mergeNodes","_graphs","_nodeMap","_documentLoader","registerRDFParser","unregisterRDFParser","require$$17","promises","require$$18","JsonLdProcessor","require$$19","Parser","JSONLD","getJSONLD","getNQuads","jsonLDObject","rdf","tripleCount","BOTParser","buildSites","timeEnd","buildBuildings","buildStoreys","buildSpaces","buildElements","buildSpaceAdjacentElementRelationships","buildSpaceContainedElementRelationships","buildStoreyElementRelationships","buildHostedElementRelationships","buildStoreySpaceRelationships","buildBuildingStoreyRelationships","buildSiteBuildingRelationships","getTripleCount","getTriples","ProductParser","buildProducts","skippedTypes","expressIDArray","typeId","getGlobalPosition","objectPlacement","globalPlacement","relativeCoordinates","_objectPlacement$Rela","_objectPlacement$Rela2","relativePlacement","round","getAbsolutePlacement","typeMappings","FSOParser","classify","getPortIDs","portIDs","portPort","portComponent","portFlowDirection","portPlacements","typeIDs","fsoClass","IFCRELCONNECTSPORTTOELEMENT","r1","r2","props","flowDirection","portType","coordinates","point","portURI","cpURI","LBDParser","WebIFC","ifcApi","botParser","doParse","productParser","fsoParser"],"mappings":"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09E,kBAAkBC,EAASwH,EAASR,GAAYrvG,kBAAlF+vG,UAGHK,GAA0BL,EAAQ56F,MAAQi7F,8DAEvCE,EAAsB,GACnBrmG,EAAI,EAAGA,EAAI4lG,EAASP,GAAWxpG,OAAQmE,IAC5CqmG,EAAe19F,KAAKu8F,EAAOzkF,WAAW09E,kBAAkBC,EAASwH,EAASP,GAAWrlG,GAAGjK,yBAEtEsB,QAAQwuG,IAAIQ,cAA5BC,UAEAC,EAAgBD,EACjBp5F,QAAO,SAACjF,UAEFm+F,GAAyBn+F,EAAEiD,MAAQk7F,KAGzCt1E,KAAI,SAAC7oB,SAEK,OADW68F,GAAkB78F,EAAE29D,SAAS7vE,YAKrC8F,+DAEZkqG,EAAajB,GAAkBgB,EAAQlgC,SAAS7vE,OAGtD0vG,EAAM98F,cACKo9F,GACNT,EAAkBiB,YAvCMvmG,qDA4C1BylG,wEC7GJ,ICSKe,GAKAC,GDdCC,GAAyB,UACzB,CACX,UACa,CACX,UACa,CACX,MACS,gBACF,WAEP,MACS,uBACF,iBAGA,gBACF,YAEP,UACa,CACX,UACa,CACX,MACS,iBACF,kBAGA,cACF,YAEP,UACa,CACX,MACS,sBACF,YAEP,MACS,iBACF,YAEP,MACS,qBACF,YAEP,MACS,2BACF,YAEP,MACS,eACF,YAEP,MACS,qBACF,YAEP,MACS,qBACF,YAEP,UACa,CACX,MACS,iBACF,YAEP,MACS,qBACF,kBAGA,oBACF,kBAGA,gBACF,YAEP,UACa,CACX,MACS,cACF,YAEP,MACS,kBACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,4BACF,YAEP,MACS,8BACF,YAEP,UACa,CACX,MACS,uBACF,YAEP,UACa,CACX,MACS,4BACF,iBAGA,2BACF,YAEP,MACS,gCACF,YAEP,MACS,aACF,kBAGA,eACF,kBAGA,cACF,YAEP,UACa,CACX,MACS,cACF,YAEP,MACS,kBACF,YAEP,MACS,aACF,kBAGA,gBACF,YAEP,UACa,CACX,MACS,mBACF,YAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,yBACF,kBAGA,aACF,WAEP,MACS,6BACF,YAEP,MACS,gBACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,eACF,WAEP,MACS,iBACF,YAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,yBACF,kBAGA,aACF,WAEP,MACS,gBACF,WAEP,UACa,CACX,MACS,2BACF,kBAGA,eACF,YAEP,MACS,aACF,YAEP,UACa,CACX,MACS,0BACF,kBAGA,cACF,YAEP,MACS,gBACF,YAEP,MACS,aACF,YAEP,MACS,mBACF,YAEP,MACS,aACF,YAEP,MACS,sBACF,YAEP,UACa,CACX,MACS,0BACF,YAEP,MACS,yBACF,kBAGA,aACF,YAEP,MACS,cACF,WAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,0BACF,YAEP,MACS,yBACF,kBAGA,aACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,eACF,kBAGA,wBACF,YAEP,MACS,qBACF,YAEP,UACa,CACX,UACa,CACX,MACS,iBACF,YAEP,MACS,cACF,YAEP,MACS,mBACF,UAEP,MACS,uBACF,WAEP,MACS,qCACF,YAEP,MACS,eACF,YAEP,MACS,8BACF,iBAGA,mCACF,YAEP,UACa,CACX,MACS,mCACF,YAEP,UACa,CACX,MACS,6BACF,YAEP,MACS,eACF,UAEP,MACS,eACF,YAEP,MACS,gBACF,YAEP,MACS,aACF,WAEP,MACS,kBACF,YAEP,MACS,mBACF,YAEP,MACS,qBACF,YAEP,MACS,0BACF,WAEP,MACS,sBACF,WAEP,MACS,eACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,WAEP,MACS,sBACF,YAEP,MACS,mBACF,YAEP,MACS,wBACF,YAEP,MACS,oBACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,YAEP,MACS,yBACF,kBAGA,+BACF,YAEP,UACa,CACX,MACS,uBACF,WAEP,MACS,eACF,YAEP,MACS,kCACF,WAEP,MACS,4BACF,YAEP,MACS,kBACF,YAEP,MACS,yBACF,WAEP,MACS,wBACF,YAEP,MACS,cACF,kBAGA,uBACF,YAEP,UACa,CACX,MACS,4BACF,WAEP,MACS,qBACF,YAEP,MACS,oBACF,WAEP,MACS,oBACF,YAEP,MACS,oBACF,iBAGA,oBACF,YAEP,UACa,CACX,MACS,mBACF,YAEP,MACS,YACF,YAEP,MACS,aACF,gBAGA,yBACF,YAEP,UACa,CACX,MACS,4BACF,YAEP,MACS,qBACF,YAEP,MACS,oBACF,YAEP,MACS,oBACF,kBAGA,oBACF,WAEP,UACa,CACX,MACS,kCACF,YAEP,MACS,aACF,iBAGA,0BACF,WAEP,UACa,CACX,MACS,oBACF,YAEP,MACS,6BACF,WAEP,MACS,gCACF,YAEP,MACS,0BACF,YAEP,MACS,gCACF,YAEP,MACS,aACF,UAEP,MACS,qBACF,WAEP,MACS,sBACF,YAEP,MACS,eACF,YAEP,MACS,yBACF,YAEP,MACS,oBACF,YAEP,MACS,sBACF,YAEP,MACS,sBACF,kBAGA,qBACF,YAEP,UACa,CACX,MACS,qBACF,YAEP,MACS,eACF,WAEP,MACS,oBACF,kBAGA,4BACF,kBAGA,gCACF,kBAGA,4BACF,YAEP,MACS,wBACF,YAEP,UACa,CACX,MACS,4BACF,YAEP,MACS,0BACF,YAEP,MACS,iBACF,WAEP,MACS,2BACF,WAEP,UACa,CACX,MACS,uBACF,WAEP,MACS,wBACF,YAEP,MACS,eACF,YAEP,MACS,qBACF,kBAGA,2BACF,YAEP,MACS,0BACF,kBAGA,yBACF,YAEP,UACa,CACX,UACa,CACX,MACS,0BACF,kBAGA,+BACF,YAEP,UACa,CACX,UACa,CACX,MACS,4BACF,kBAGA,uBACF,YAEP,MACS,uBACF,iBAGA,kCACF,YAEP,MACS,uBACF,kBAGA,uBACF,YAEP,UACa,CACX,MACS,kBACF,YAEP,MACS,+BACF,iBAGA,0BACF,WAEP,MACS,0BACF,YAEP,MACS,yBACF,YAEP,MACS,uBACF,kBAGA,gBACF,YAEP,MACS,aACF,YAEP,UACa,CACX,MACS,yBACF,kBAGA,aACF,YAEP,MACS,cACF,YAEP,UACa,CACX,UACa,CACX,MACS,+BACF,kBAGA,wCACF,YAEP,UACa,CACX,MACS,iBACF,YAEP,MACS,uBACF,YAEP,MACS,aACF,YAEP,MACS,cACF,kBAGA,gCACF,YAEP,MACS,oBACF,iBAGA,uBACF,YAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,+BACF,kBAGA,8BACF,YAEP,MACS,8BACF,YAEP,UACa,CACX,MACS,+BACF,kBAGA,gCACF,kBAGA,yBACF,WAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,gCACF,YAEP,MACS,kCACF,iBAGA,2BACF,kBAGA,2BACF,YAEP,UACa,CACX,UACa,CACX,MACS,kCACF,YAEP,MACS,kCACF,WAEP,MACS,oCACF,kBAGA,6BACF,YAEP,UACa,CACX,UACa,CACX,MACS,qCACF,kBAGA,8BACF,WAEP,UACa,CACX,MACS,uCACF,kBAGA,gCACF,kBAGA,yBACF,iBAGA,uBACF,kBAGA,gBACF,YAEP,UACa,CACX,UACa,CACX,MACS,sCACF,YAEP,MACS,qCACF,YAEP,MACS,oCACF,WAEP,MACS,qBACF,YAEP,MACS,sBACF,YAEP,MACS,4BACF,iBAGA,6BACF,kBAGA,iBACF,kBAGA,eACF,YAEP,UACa,CACX,UACa,CACX,MACS,kBACF,YAEP,MACS,sBACF,WAEP,MACS,iBACF,kBAGA,oBACF,YAEP,UACa,CACX,MACS,kBACF,WAEP,UACa,CACX,UACa,CACX,MACS,iBACF,WAEP,MACS,iCACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,WAEP,MACS,qBACF,YAEP,MACS,wBACF,YAEP,MACS,iBACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,YAEP,MACS,iBACF,YAEP,MACS,kBACF,YAEP,MACS,oBACF,YAEP,MACS,uBACF,YAEP,MACS,iBACF,YAEP,MACS,iBACF,YAEP,MACS,0BACF,YAEP,MACS,iBACF,YAEP,MACS,wBACF,YAEP,MACS,kBACF,WAEP,MACS,iBACF,YAEP,MACS,mBACF,kBAGA,4BACF,YAEP,MACS,yBACF,YAEP,UACa,CACX,UACa,CACX,MACS,qBACF,YAEP,MACS,kBACF,YAEP,MACS,uBACF,WAEP,MACS,2BACF,YAEP,MACS,yCACF,WAEP,MACS,mBACF,YAEP,MACS,kCACF,kBAGA,uCACF,YAEP,UACa,CACX,MACS,uCACF,YAEP,UACa,CACX,MACS,iCACF,YAEP,MACS,mBACF,WAEP,MACS,mBACF,YAEP,MACS,oBACF,YAEP,MACS,iBACF,YAEP,MACS,sBACF,YAEP,MACS,uBACF,WAEP,MACS,yBACF,YAEP,MACS,8BACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,WAEP,MACS,8BACF,YAEP,MACS,uBACF,YAEP,MACS,0BACF,YAEP,MACS,uBACF,YAEP,MACS,4BACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,YAEP,MACS,uBACF,YAEP,MACS,6BACF,kBAGA,mCACF,YAEP,UACa,CACX,MACS,2BACF,YAEP,MACS,mBACF,YAEP,MACS,sCACF,YAEP,MACS,gCACF,WAEP,MACS,sBACF,YAEP,MACS,6BACF,YAEP,MACS,4BACF,YAEP,MACS,kBACF,iBAGA,2BACF,YAEP,UACa,CACX,MACS,gCACF,WAEP,MACS,yBACF,YAEP,MACS,wBACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,iBAGA,wBACF,YAEP,UACa,CACX,MACS,uBACF,YAEP,MACS,gBACF,WAEP,MACS,iBACF,kBAGA,6BACF,YAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,yBACF,YAEP,MACS,wBACF,YAEP,MACS,wBACF,kBAGA,wBACF,YAEP,UACa,CACX,MACS,sCACF,YAEP,MACS,iBACF,eAGA,8BACF,YAEP,UACa,CACX,MACS,wBACF,YAEP,MACS,iCACF,YAEP,MACS,oCACF,WAEP,MACS,8BACF,WAEP,MACS,oCACF,YAEP,MACS,iBACF,YAEP,MACS,yBACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,YAEP,MACS,6BACF,YAEP,MACS,wBACF,YAEP,MACS,0BACF,YAEP,MACS,0BACF,kBAGA,yBACF,YAEP,UACa,CACX,MACS,yBACF,YAEP,MACS,mBACF,YAEP,MACS,wBACF,kBAGA,gCACF,kBAGA,oCACF,kBAGA,gCACF,YAEP,MACS,4BACF,YAEP,UACa,CACX,MACS,gCACF,UAEP,MACS,8BACF,YAEP,MACS,qBACF,YAEP,MACS,+BACF,YAEP,UACa,CACX,MACS,2BACF,YAEP,MACS,4BACF,YAEP,MACS,yBACF,YAEP,MACS,mBACF,kBAGA,+BACF,WAEP,MACS,8BACF,kBAGA,6BACF,YAEP,UACa,CACX,MACS,sBACF,YAEP,MACS,mCACF,kBAGA,8BACF,YAEP,MACS,8BACF,YAEP,MACS,6BACF,kBAGA,oBACF,WAEP,UACa,CACX,UACa,CACX,MACS,kBACF,kBAGA,oCACF,YAEP,MACS,wBACF,kBAGA,2BACF,WAEP,MACS,oBACF,kBAGA,oBACF,YAEP,UACa,CACX,UACa,CACX,MACS,0CACF,YAEP,MACS,yCACF,YAEP,MACS,wCACF,YAEP,MACS,yBACF,YAEP,MACS,0BACF,WAEP,MACS,gCACF,kBAGA,iCACF,kBAGA,qBACF,kBAGA,mBACF,kBAGA,yBACF,WAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,6BACF,YAEP,MACS,4BACF,YAEP,MACS,oCACF,YAEP,MACS,0CACF,YAEP,MACS,+BACF,WAEP,MACS,8BACF,iBAGA,8BACF,YAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,wBACF,kBAGA,oBACF,kBAGA,8BACF,YAEP,UACa,CACX,MACS,4BACF,WAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,+BACF,kBAGA,yBACF,kBAGA,mCACF,kBAGA,2BACF,YAEP,UACa,CACX,UACa,CACX,MACS,0BACF,YAEP,MACS,4BACF,YAEP,UACa,CACX,MACS,kCACF,kBAGA,0BACF,YAEP,MACS,4BACF,YAEP,MACS,4BACF,YAEP,MACS,6BACF,iBAGA,mBACF,YAEP,UACa,CACX,MACS,8BACF,YAEP,MACS,oCACF,WAEP,MACS,gCACF,YAEP,MACS,8BACF,WAEP,MACS,6BACF,YAEP,MACS,8BACF,kBAGA,sBACF,YAEP,UACa,CACX,UACa,CACX,MACS,gCACF,YAEP,MACS,yCACF,kBAGA,4BACF,YAEP,MACS,iCACF,YAEP,MACS,yBACF,YAEP,MACS,sCACF,YAEP,UACa,CACX,MACS,oCACF,iBAGA,oCACF,YAEP,MACS,uCACF,YAEP,MACS,8BACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,YAEP,MACS,+BACF,WAEP,MACS,8BACF,WAEP,MACS,wCACF,YAEP,MACS,oBACF,YAEP,MACS,6BACF,WAEP,UACa,CACX,UACa,CACX,MACS,iCACF,kBAGA,iCACF,kBAGA,yBACF,kBAGA,oBACF,WAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,sBACF,WAEP,MACS,iBACF,YAEP,MACS,2BACF,WAEP,MACS,wBACF,kBAGA,sBACF,YAEP,UACa,CACX,MACS,2BACF,YAEP,MACS,+BACF,YAEP,MACS,6BACF,WAEP,MACS,yBACF,iBAGA,mBACF,iBAGA,qBACF,iBAGA,aACF,qBEz0DeC,+FAAf,WAAmCzB,EAAuB9G,EAAiBwI,EAAiBC,gHAAsBC,kCAEjHtH,EAAe,IAGhBsH,mBAEOC,EAAqBC,GAAmBJ,GAErC5mG,EAAI,cAAGA,EAAI+mG,EAASlrG,wCACzB2jG,GAAM72F,6BAAcu8F,EAAOzkF,WAAW6+E,kBAAkBlB,EAAS2I,EAAS/mG,IAAI,mFAD7CA,oEAKvBklG,EAAOzkF,WAAW6+E,kBAAkBlB,EAASwI,GAAS,WAApEpH,0CAGGyH,GAAkC/B,EAAQ9G,EAASoB,EAAOqH,kFAI/CI,+FAAf,WAAiD/B,EAAuB9G,EAAiB8I,EAAsBL,mGAE5GpB,EAAQ,GAELzlG,EAAI,cAAGA,EAAIknG,EAAWrrG,gCACrB8pE,EAAYuhC,EAAWlnG,YACFklG,EAAOzkF,WAAW09E,kBAAkBC,EAASz4B,mBAAhEC,IAAAA,SACFuhC,EAAMrC,GAAkBl/B,EAAS7vE,OAGvC0vG,EAAM98F,KAAK,OACAw+F,UACEN,YARsB7mG,oDAYhCylG,sEAIJ,SAASuB,GAAmB97F,OAE3B67F,EAAqB,GAGnBK,WAUGC,EAAkBzsG,EAAgBkmG,MACpClmG,EAAK6H,IAAMq+F,SACFlmG,EACN,GAAqB,MAAjBA,EAAK0lG,SAAiB,KACvBtgG,EACAqN,EAAwB,SACxBrN,EAAE,EAAa,MAAVqN,GAAkBrN,EAAIpF,EAAK0lG,SAASzkG,OAAQmE,IAChDqN,EAASg6F,EAAkBzsG,EAAK0lG,SAAStgG,GAAI8gG,UAE3CzzF,SAEL,KArBMg6F,CAAkBX,GAAcx7F,UAE9Ck8F,YAuBME,EAAc1sG,OAAgB2sG,yDAAgB,MACnDA,EAAI5+F,KAAK/N,EAAK6H,IACX7H,EAAK0lG,aACC,IAAItgG,EAAI,EAAGA,EAAIpF,EAAK0lG,SAASzkG,OAAQmE,IACtCsnG,EAAc1sG,EAAK0lG,SAAStgG,GAAIunG,GAzBxCD,CAAcF,EAAUL,GAGrBA,YD/CCP,GAAAA,kBAAAA,mBAAAA,KAAAA,iBAKAC,GAAAA,mCAAAA,uBAAAA,+BAAAA,0BAAAA,+CAAAA,+BAAAA,gCAAAA,KAAAA,4aEXZe,GAAiB,MAAMC,EASrBloF,YAAYvc,EAAQ0kG,EAAW,IAAIhG,IAAOnpE,EAAU,GAClDvtB,KAAKhI,OAASA,EACdgI,KAAK28F,UAAYD,EACjB18F,KAAKutB,QAAUA,EAQjB7M,QACE,MAAM1oB,OAACA,EAAM2kG,UAAEA,EAASpvE,QAAEA,GAAWvtB,KACrC,OAAO,IAAIy8F,EAAiBzkG,EAAQ,IAAI0+F,IAAIiG,GAAYpvE,GAW1DqvE,MAAMC,GAEJ,MAAMH,EAAWG,GAAO78F,KAAK28F,UAAUxjG,IAAI0jG,GAC3C,GAAGH,EACD,OAAOA,EAIT,MAAMI,EAAa98F,KAAKhI,OAASgI,KAAKutB,QAQtC,OAPAvtB,KAAKutB,UAGFsvE,GACD78F,KAAK28F,UAAUjzF,IAAImzF,EAAKC,GAGnBA,EAYTC,MAAMF,GACJ,OAAO78F,KAAK28F,UAAUK,IAAIH,GAS5BI,YACE,MAAO,IAAIj9F,KAAK28F,UAAU5wG,UCxE9B,MAAM6nB,GAASspF,MAEfC,GAAiB,MAMf5oF,YAAY6oF,GACVp9F,KAAKq9F,GAAKzpF,GAAO0pF,WAAWF,GAG9BG,OAAOppE,GACLn0B,KAAKq9F,GAAGE,OAAOppE,EAAK,QAGtBqpE,SACE,OAAOx9F,KAAKq9F,GAAGG,OAAO,SCf1BC,GAAiB,MAOflpF,YAAYmpF,GAEV19F,KAAK+M,QAAU2wF,EAAK3zE,OAEpB/pB,KAAKlT,MAAO,EAEZkT,KAAKuC,IAAM,IAAIm0F,IACf,IAAI,IAAI1hG,EAAI,EAAGA,EAAI0oG,EAAK7sG,SAAUmE,EAChCgL,KAAKuC,IAAImH,IAAIg0F,EAAK1oG,IAAI,GAS1B2oG,UACE,OAAQ39F,KAAKlT,KASfJ,OAEE,MAAMqgB,QAACA,EAAOxK,IAAEA,GAAOvC,KACjB49F,EAAO7wF,EAAQhc,QAOrB,IAAI4yB,EAAI,KACJpe,EAAM,EACV,MAAM1U,EAASkc,EAAQlc,OACvB,IAAI,IAAImE,EAAI,EAAGA,EAAInE,IAAUmE,EAAG,CAC9B,MAAMihG,EAAUlpF,EAAQ/X,GAClBoqB,EAAO7c,EAAIpJ,IAAI88F,IACX,OAANtyE,GAAcsyE,EAAUtyE,KACxBvE,GAAQpqB,EAAI,GAAKihG,EAAUlpF,EAAQ/X,EAAI,KACvCoqB,GAAQpqB,EAAKnE,EAAS,GAAMolG,EAAUlpF,EAAQ/X,EAAI,MACpD2uB,EAAIsyE,EACJ1wF,EAAMvQ,GAKV,GAAS,OAAN2uB,EACD3jB,KAAKlT,MAAO,MACP,CAEL,MAAM+wG,EAAOt7F,EAAIpJ,IAAIwqB,GAAKpe,EAAM,EAAIA,EAAM,EAC1CwH,EAAQxH,GAAOwH,EAAQ8wF,GACvB9wF,EAAQ8wF,GAAQl6E,EAGhB,IAAI,MAAMsyE,KAAWlpF,EAChBkpF,EAAUtyE,GACXphB,EAAImH,IAAIusF,GAAU1zF,EAAIpJ,IAAI88F,IAKhC,OAAO2H,IC3EX,MACME,GAAiBC,wDACjBC,GAAa,0CAQbC,GAAQ,CAiDZA,KAAa,2BACbA,GAAMC,MAAQ,IAAIjnE,OAAO,aAGzBgnE,GAAME,KAAO,IAAIlnE,OACf,kxBAGJmnE,GAAiB,MAAMC,EAQrBhjC,aAAa32D,GAEX,MAAM45F,EAAU,GAEVC,EAAS,GAGT9J,EAAQ/vF,EAAMzC,MAAMg8F,GAAMO,MAChC,IAAIC,EAAa,EACjB,IAAI,MAAM7kE,KAAQ66D,EAAO,CAIvB,GAHAgK,IAGGR,GAAMC,MAAMQ,KAAK9kE,GAClB,SAIF,MAAM+kE,EAAQ/kE,EAAK+kE,MAAMV,GAAME,MAC/B,GAAa,OAAVQ,EACD,MAAM,IAAIhzG,MAAM,+BAAiC8yG,EAAa,KAIhE,MAAMN,EAAO,CAACrD,QAAS,KAAM8D,UAAW,KAAMrvF,OAAQ,KAAMkrF,MAAO,MAuDnE,QApDgBoE,IAAbF,EAAM,GACPR,EAAKrD,QAAU,CAACgE,SAnGA,YAmG2B/zG,MAAO4zG,EAAM,IAExDR,EAAKrD,QAAU,CAACgE,SApGA,YAoG2B/zG,MAAO4zG,EAAM,IAI1DR,EAAKS,UAAY,CAACE,SAzGA,YAyG2B/zG,MAAO4zG,EAAM,SAG1CE,IAAbF,EAAM,GACPR,EAAK5uF,OAAS,CAACuvF,SA7GC,YA6G0B/zG,MAAO4zG,EAAM,SAClCE,IAAbF,EAAM,GACdR,EAAK5uF,OAAS,CAACuvF,SA9GC,YA8G0B/zG,MAAO4zG,EAAM,KAEvDR,EAAK5uF,OAAS,CACZuvF,SAhHW,UAiHX/zG,WAAO8zG,EACPE,SAAU,CACRD,SArHY,mBAwHAD,IAAbF,EAAM,GACPR,EAAK5uF,OAAOwvF,SAASh0G,MAAQ4zG,EAAM,QACdE,IAAbF,EAAM,IACdR,EAAK5uF,OAAOwvF,SAASh0G,MAAQ+yG,GAC7BK,EAAK5uF,OAAOyvF,SAAWL,EAAM,IAE7BR,EAAK5uF,OAAOwvF,SAASh0G,MAAQizG,GAE/BG,EAAK5uF,OAAOxkB,MAAkB4zG,EAAM,GAwOjC7tG,QAAQmuG,IAAgB,SAASN,EAAOnqF,EAAMvf,EAAGotC,GACxD,GAAG7tB,EACD,OAAOA,GACL,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,KACjB,IAAK,IAAK,MAAO,IACjB,IAAK,IAAM,MAAO,IAClB,IAAK,KAAM,MAAO,KAGtB,GAAGvf,EACD,OAAOV,OAAOC,aAAa4hG,SAASnhG,EAAG,KAEzC,GAAGotC,EAED,MAAM,IAAI12C,MAAM,iCAtPAkzG,IAAbF,EAAM,GACPR,EAAK1D,MAAQ,CACXqE,SAtIc,YAuId/zG,MAAO4zG,EAAM,SAEOE,IAAdF,EAAM,IACdR,EAAK1D,MAAQ,CACXqE,SA1Ic,YA2Id/zG,MAAO4zG,EAAM,KAGfR,EAAK1D,MAAQ,CACXqE,SA7IiB,eA8IjB/zG,MAAO,IAKNozG,EAAK1D,MAAM1vG,SAASwzG,EAGlB,CACL,IAAIW,GAAS,EACb,MAAMC,EAAQZ,EAAOJ,EAAK1D,MAAM1vG,OAChC,IAAI,MAAMyzC,KAAK2gE,EACb,GAAGC,GAAgB5gE,EAAG2/D,GAAO,CAC3Be,GAAS,EACT,MAGDA,IACDC,EAAMxhG,KAAKwgG,GACXG,EAAQ3gG,KAAKwgG,SAbfI,EAAOJ,EAAK1D,MAAM1vG,OAAS,CAACozG,GAC5BG,EAAQ3gG,KAAKwgG,GAiBjB,OAAOG,EAUTjjC,iBAAiBijC,GACX17F,MAAMuyF,QAAQmJ,KAChBA,EAAUD,EAAOgB,qBAAqBf,IAExC,MAAMa,EAAQ,GACd,IAAI,MAAMhB,KAAQG,EAChBa,EAAMxhG,KAAK0gG,EAAOiB,cAAcnB,IAElC,OAAOgB,EAAMp1E,OAAO3nB,KAAK,IAU3Bi5D,qBAAqB8iC,GACnB,MAAMpoE,EAAIooE,EAAKrD,QACT34F,EAAIg8F,EAAKS,UACTn+E,EAAI09E,EAAK5uF,OACTwxB,EAAIo9D,EAAK1D,MAEf,IAAI8E,EAAQ,GAqCZ,MAhPoB,cA8MjBxpE,EAAE+oE,SACHS,GAAS,IAAIxpE,EAAEhrC,SAEfw0G,GAAS,GAAGxpE,EAAEhrC,QAIhBw0G,GAAS,KAAKp9F,EAAEpX,UArNI,cAwNjB01B,EAAEq+E,SACHS,GAAS,IAAI9+E,EAAE11B,SAxNG,cAyNV01B,EAAEq+E,SACVS,GAAS9+E,EAAE11B,OAEXw0G,GAAS,IA0Hf,SAAiBxpE,GACf,OAAOA,EAAEjlC,QAAQ0uG,IAAc,SAASb,GACtC,OAAOA,GACL,IAAK,IAAK,MAAO,MACjB,IAAK,KAAM,MAAO,OAClB,IAAK,KAAM,MAAO,MAClB,IAAK,KAAM,MAAO,UAhILc,CAAQh/E,EAAE11B,UACpB01B,EAAEs+E,SAASh0G,QAAU+yG,GACnBr9E,EAAEu+E,WACHO,GAAS,IAAI9+E,EAAEu+E,YAETv+E,EAAEs+E,SAASh0G,QAAUizG,KAC7BuB,GAAS,MAAM9+E,EAAEs+E,SAASh0G,WAnOV,cAyOjBg2C,EAAE+9D,SACHS,GAAS,KAAKx+D,EAAEh2C,SAzOE,cA0OVg2C,EAAE+9D,WACVS,GAAS,IAAIx+D,EAAEh2C,SAGjBw0G,GAAS,OACFA,EAWTlkC,4BAA4BijC,GAC1B,MAAMa,EAAQ,GAERO,EAAc,CAClB,aA9PkB,YA+PlBC,IAhQkB,YAiQlBC,QA/Pe,WAkQjB,IAAI,MAAMC,KAAavB,EAAS,CACdA,EAAQuB,GAChBjvF,SAAQkvF,IACd,MAAM3B,EAAO,GACb,IAAI,MAAM4B,KAAiBD,EAAQ,CACjC,MAAME,EAAeF,EAAOC,GACtBE,EAAe,CACnBnB,SAAUY,EAAYM,EAAa9/F,MACnCnV,MAAOi1G,EAAaj1G,OA1QX,YA4QRk1G,EAAanB,WACdmB,EAAalB,SAAW,CACtBD,SAhRU,aAkRT,aAAckB,IACfC,EAAalB,SAASh0G,MAAQi1G,EAAajB,UAE1C,aAAciB,GACV,aAAcA,IACjBC,EAAalB,SAASh0G,MAAQ+yG,IAEhCmC,EAAajB,SAAWgB,EAAahB,UAC3B,aAAcgB,IACxBC,EAAalB,SAASh0G,MAAQizG,KAGlCG,EAAK4B,GAAiBE,EAGtB9B,EAAK1D,MADU,aAAdoF,EACY,CACXf,SA/Re,eAgSf/zG,MAAO,IAGI,CACX+zG,SAAUe,EAAU5nG,WAAW,MAtSnB,YADA,YAySZlN,MAAO80G,GAGXV,EAAMxhG,KAAKwgG,MAIf,OAAOgB,IAYX,SAASC,GAAgBc,EAAIC,GAE3B,OAAKD,EAAGpF,QAAQgE,WAAaqB,EAAGrF,QAAQgE,UACtCoB,EAAG3wF,OAAOuvF,WAAaqB,EAAG5wF,OAAOuvF,WAI9BoB,EAAGpF,QAAQ/vG,QAAUo1G,EAAGrF,QAAQ/vG,OACnCm1G,EAAGtB,UAAU7zG,QAAUo1G,EAAGvB,UAAU7zG,OACpCm1G,EAAG3wF,OAAOxkB,QAAUo1G,EAAG5wF,OAAOxkB,QAnUb,YAsUhBm1G,EAAG3wF,OAAOuvF,UAKVoB,EAAG3wF,OAAOwvF,SAASD,WAAaqB,EAAG5wF,OAAOwvF,SAASD,UACnDoB,EAAG3wF,OAAOyvF,WAAamB,EAAG5wF,OAAOyvF,UACjCkB,EAAG3wF,OAAOwvF,SAASh0G,QAAUo1G,EAAG5wF,OAAOwvF,SAASh0G,QAIrD,MAAMy0G,GAAe,aAerB,MAAMP,GACJ,uECzWF,MAAMxC,GAAmBS,GACnBkD,GAAgBC,GAChBC,GAAWC,GACXlC,GAASmC,OAEfC,GAAiB,MACflsF,cACEvU,KAAK6K,KAAO,YACZ7K,KAAK0gG,cAAgB,IAAIhK,IACzB12F,KAAK2gG,gBAAkB,IAAIlE,GAAiB,UAC5Cz8F,KAAK4gG,cAAgB,SACrB5gG,KAAKm/F,MAAQ,KAIf0B,WAAWvC,GACTt+F,KAAKm/F,MAAQb,EAIb,IAAI,MAAMH,KAAQG,EAIhBt+F,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAKrD,UAClD96F,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAK5uF,SAClDvP,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAK1D,QAkBpD,MAAMuG,EAAmB,IAAItK,IACvBuK,EAAgB,IAAIjhG,KAAK0gG,cAAc30G,QAC7C,IAAIiJ,EAAI,EACR,IAAI,MAAMyC,KAAMwpG,IAETjsG,EAAI,KAAQ,SACTgL,KAAKkhG,eAGPlhG,KAAKmhG,uBAAuB,CAAC1pG,GAAAA,EAAIupG,iBAAAA,IAKzC,MAAMI,EAAS,IAAIJ,EAAiBj1G,QAAQg+B,OAEtCs3E,EAAY,GAClB,IAAI,MAAM3zF,KAAQ0zF,EAAQ,CAGxB,MAAME,EAASN,EAAiB7nG,IAAIuU,GACpC,GAAG4zF,EAAOzwG,OAAS,EAAG,CACpBwwG,EAAU1jG,KAAK2jG,GACf,SAOF,MAAM7pG,EAAK6pG,EAAO,GAClBthG,KAAK2gG,gBAAgB/D,MAAMnlG,GAY7B,IAAI,MAAM6pG,KAAUD,EAAW,CAG7B,MAAME,EAAe,GAGrB,IAAI,MAAM9pG,KAAM6pG,EAAQ,CAGtB,GAAGthG,KAAK2gG,gBAAgB5D,MAAMtlG,GAC5B,SAKF,MAAM+pG,EAAS,IAAI/E,GAAiB,OAKpC+E,EAAO5E,MAAMnlG,GAIb,MAAM4K,QAAerC,KAAKyhG,iBAAiBhqG,EAAI+pG,GAC/CD,EAAa5jG,KAAK0E,GAKpBk/F,EAAax3E,KAAK23E,IAClB,IAAI,MAAMr/F,KAAUk/F,EAAc,CAMhC,MAAMI,EAASt/F,EAAOm/F,OAAOvE,YAC7B,IAAI,MAAMxlG,KAAMkqG,EACd3hG,KAAK2gG,gBAAgB/D,MAAMnlG,IAWjC,MAAMmqG,EAAa,GACnB,IAAI,MAAMzD,KAAQn+F,KAAKm/F,MAAO,CAK5B,MAAM3gE,EAAI,IAAI2/D,GACd3/D,EAAEs8D,QAAU96F,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEs8D,UAC/Ct8D,EAAEjvB,OAASvP,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEjvB,SAC9CivB,EAAEi8D,MAAQz6F,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEi8D,QAE7CmH,EAAWjkG,KAAK0gG,GAAOiB,cAAc9gE,IAOvC,OAHAojE,EAAW73E,OAGJ63E,EAAWx/F,KAAK,IAIzBy+F,2BAA2BppG,GAGzB,MAAMqqG,EAAS,GAIT18D,EAAOplC,KAAK0gG,cAAcvnG,IAAI1B,GAC9B0nG,EAAQ/5D,EAAK+5D,MAGnB,IAAI,MAAMhB,KAAQgB,EAAO,CAMvB,MAAM4C,EAAO,CACXjH,QAAS,KAAM8D,UAAWT,EAAKS,UAAWrvF,OAAQ,KAAMkrF,MAAO,MAKjEsH,EAAKjH,QAAU96F,KAAKgiG,2BAClBvqG,EAAI0mG,EAAKrD,QAAS,WACpBiH,EAAKxyF,OAASvP,KAAKgiG,2BACjBvqG,EAAI0mG,EAAK5uF,OAAQ,UACnBwyF,EAAKtH,MAAQz6F,KAAKgiG,2BAChBvqG,EAAI0mG,EAAK1D,MAAO,SAClBqH,EAAOnkG,KAAK0gG,GAAOiB,cAAcyC,IAInCD,EAAO/3E,OAIP,MAAMszE,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAClC,IAAI,MAAMrB,KAASuC,EACjBzE,EAAGE,OAAOgC,GAGZ,OADAn6D,EAAK13B,WAAa2vF,EAAGG,SACdp4D,EAAK13B,KAIdmzF,2BAA2B/N,EAASqL,EAAMqD,EAAQt2F,GAKhD,IAAIzT,EAEFA,EADCuI,KAAK2gG,gBAAgB5D,MAAMjK,GACvB9yF,KAAK2gG,gBAAgB/D,MAAM9J,GACxB0O,EAAOzE,MAAMjK,GAChB0O,EAAO5E,MAAM9J,GAEb9yF,KAAK0gG,cAAcvnG,IAAI25F,GAASplF,KAKvC,MAAM2vF,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAclC,OAbAvD,EAAGE,OAAOryF,GAIM,MAAbA,GACDmyF,EAAGE,OAAOv9F,KAAKiiG,oBAAoB9D,IAIrCd,EAAGE,OAAO9lG,GAIH4lG,EAAGG,SAIZqD,uBAAuBppG,EAAI+pG,GAIzB,MAAMnE,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAC5BsB,QAAsBliG,KAAKmiG,oBAAoB1qG,EAAI+pG,GAOnDJ,EAAS,IAAIc,EAAcn2G,QAAQg+B,OACzC,IAAI,MAAMrc,KAAQ0zF,EAAQ,CAExB/D,EAAGE,OAAO7vF,GAGV,IAGI00F,EAHAC,EAAa,GAMjB,MAAMC,EAAW,IAAIhC,GAAS4B,EAAc/oG,IAAIuU,IAChD,IAAI1Y,EAAI,EACR,KAAMstG,EAAS3E,WAAW,CACxB,MAAM4E,EAAcD,EAAS51G,SAExBsI,EAAI,GAAM,SACPgL,KAAKkhG,SAIb,IAAIsB,EAAahB,EAAO9gF,QAGpBtwB,EAAO,GAIX,MAAMqyG,EAAgB,GAGtB,IAAIC,GAAkB,EACtB,IAAI,MAAM5P,KAAWyP,EAuBnB,GApBGviG,KAAK2gG,gBAAgB5D,MAAMjK,GAC5B1iG,GAAQ4P,KAAK2gG,gBAAgB/D,MAAM9J,IAK/B0P,EAAWzF,MAAMjK,IACnB2P,EAAc9kG,KAAKm1F,GAIrB1iG,GAAQoyG,EAAW5F,MAAM9J,IASF,IAAtBuP,EAAWxxG,QAAgBT,EAAOiyG,EAAY,CAC/CK,GAAkB,EAClB,MAIJ,IAAGA,EAAH,CAKA,IAAI,MAAM5P,KAAW2P,EAAe,CAIlC,MAAMpgG,QAAerC,KAAKyhG,iBAAiB3O,EAAS0P,GAmBpD,GAfApyG,GAAQoyG,EAAW5F,MAAM9J,GAGzB1iG,GAAQ,IAAIiS,EAAOqL,QAInB80F,EAAangG,EAAOm/F,OAQK,IAAtBa,EAAWxxG,QAAgBT,EAAOiyG,EAAY,CAC/CK,GAAkB,EAClB,OAIDA,IAOsB,IAAtBL,EAAWxxG,QAAgBT,EAAOiyG,KACnCA,EAAajyG,EACbgyG,EAAeI,IAKnBnF,EAAGE,OAAO8E,GAGVb,EAASY,EAKX,MAAO,CAAC10F,WAAY2vF,EAAGG,SAAUgE,OAAAA,GAInCQ,2BAA2BvqG,EAAIspG,GAC7B,MAA0B,cAAvBA,EAAUjC,SACJiC,EAOF,CACLjC,SAAU,YACV/zG,MAAOg2G,EAAUh2G,QAAU0M,EAAK,MAAQ,OAK5CwqG,oBAAoB9D,GAClB,MAAO,IAAIA,EAAKS,UAAU7zG,SAI5B81G,0BAA0BppG,EAAI+pG,GAG5B,MAAMU,EAAgB,IAAIxL,IAIpByI,EAAQn/F,KAAK0gG,cAAcvnG,IAAI1B,GAAI0nG,MAGzC,IAAInqG,EAAI,EACR,IAAI,MAAMmpG,KAAQgB,IAEXnqG,EAAI,KAAQ,SACTgL,KAAKkhG,eAMP70G,QAAQwuG,IAAI,CAChB76F,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAKrD,QAAS5vF,SAAU,IACzCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,IAEdliG,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAK5uF,OAAQrE,SAAU,IACxCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,IAEdliG,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAK1D,MAAOvvF,SAAU,IACvCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,MAKlB,OAAOA,EAGTrB,8BAA6BppG,GAACA,EAAEupG,iBAAEA,IAGhC,MAAMtzF,QAAa1N,KAAK4iG,qBAAqBnrG,GAIvC6pG,EAASN,EAAiB7nG,IAAIuU,GAChC4zF,EAGFA,EAAO3jG,KAAKlG,GAFZupG,EAAiBt3F,IAAIgE,EAAM,CAACjW,IAMhCqpG,uBAAsB3C,KAACA,EAAI4C,UAAEA,IAC3B,GAA0B,cAAvBA,EAAUjC,SACX,OAEF,MAAMrnG,EAAKspG,EAAUh2G,MACfq6C,EAAOplC,KAAK0gG,cAAcvnG,IAAI1B,GACjC2tC,EACDA,EAAK+5D,MAAMl+F,IAAIk9F,GAEfn+F,KAAK0gG,cAAch3F,IAAIjS,EAAI,CAAC0nG,MAAO,IAAI0D,IAAI,CAAC1E,IAAQzwF,KAAM,OAI9DmzF,gCACE1C,KAACA,EAAI4C,UAAEA,EAAS71F,SAAEA,EAAQzT,GAAEA,EAAE+pG,OAAEA,EAAMU,cAAEA,IACxC,GAA4B,cAAvBnB,EAAUjC,UAA4BiC,EAAUh2G,QAAU0M,EAC7D,OAOF,MAAMq7F,EAAUiO,EAAUh2G,MACpB2iB,QAAa1N,KAAK8iG,qBACtBhQ,EAASqL,EAAMqD,EAAQt2F,GAKnBJ,EAAUo3F,EAAc/oG,IAAIuU,GAC/B5C,EACDA,EAAQnN,KAAKm1F,GAEboP,EAAcx4F,IAAIgE,EAAM,CAAColF,IAI7B+O,iBAAgBd,UAACA,IACf,MAA0B,cAAvBA,EAAUjC,UACViC,EAAUh2G,MAAMkN,WAAW+H,KAAK2gG,gBAAgB3oG,QAM5C+oG,EALE,CACLjC,SAAU,YACV/zG,MAAOiV,KAAK2gG,gBAAgB/D,MAAMmE,EAAUh2G,QAMlD81G,eACE,OAAO,IAAIx0G,SAAQC,GAAWy2G,aAAaz2G,OAI/C,SAASo1G,GAAmBt2G,EAAGC,GAC7B,OAAOD,EAAEsiB,KAAOriB,EAAEqiB,MAAQ,EAAItiB,EAAEsiB,KAAOriB,EAAEqiB,KAAO,EAAI,ECvftD,MAAMs1F,GAAY9F,GCAlB,MAAMT,GAAmBS,GACnBkD,GAAgBC,GAChBC,GAAWC,GACXlC,GAASmC,OAEfyC,GAAiB,MACf1uF,cACEvU,KAAK6K,KAAO,YACZ7K,KAAK0gG,cAAgB,IAAIhK,IACzB12F,KAAK2gG,gBAAkB,IAAIlE,GAAiB,UAC5Cz8F,KAAK4gG,cAAgB,SACrB5gG,KAAKm/F,MAAQ,KAIf+D,KAAK5E,GACHt+F,KAAKm/F,MAAQb,EAIb,IAAI,MAAMH,KAAQG,EAIhBt+F,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAKrD,UAClD96F,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAK5uF,SAClDvP,KAAK8gG,sBAAsB,CAAC3C,KAAAA,EAAM4C,UAAW5C,EAAK1D,QAkBpD,MAAMuG,EAAmB,IAAItK,IACvBuK,EAAgB,IAAIjhG,KAAK0gG,cAAc30G,QAC7C,IAAI,MAAM0L,KAAMwpG,EAEdjhG,KAAKmhG,uBAAuB,CAAC1pG,GAAAA,EAAIupG,iBAAAA,IAKnC,MAAMI,EAAS,IAAIJ,EAAiBj1G,QAAQg+B,OAEtCs3E,EAAY,GAClB,IAAI,MAAM3zF,KAAQ0zF,EAAQ,CAGxB,MAAME,EAASN,EAAiB7nG,IAAIuU,GACpC,GAAG4zF,EAAOzwG,OAAS,EAAG,CACpBwwG,EAAU1jG,KAAK2jG,GACf,SAOF,MAAM7pG,EAAK6pG,EAAO,GAClBthG,KAAK2gG,gBAAgB/D,MAAMnlG,GAY7B,IAAI,MAAM6pG,KAAUD,EAAW,CAG7B,MAAME,EAAe,GAGrB,IAAI,MAAM9pG,KAAM6pG,EAAQ,CAGtB,GAAGthG,KAAK2gG,gBAAgB5D,MAAMtlG,GAC5B,SAKF,MAAM+pG,EAAS,IAAI/E,GAAiB,OAKpC+E,EAAO5E,MAAMnlG,GAIb,MAAM4K,EAASrC,KAAKyhG,iBAAiBhqG,EAAI+pG,GACzCD,EAAa5jG,KAAK0E,GAKpBk/F,EAAax3E,KAAK23E,IAClB,IAAI,MAAMr/F,KAAUk/F,EAAc,CAMhC,MAAMI,EAASt/F,EAAOm/F,OAAOvE,YAC7B,IAAI,MAAMxlG,KAAMkqG,EACd3hG,KAAK2gG,gBAAgB/D,MAAMnlG,IAWjC,MAAMmqG,EAAa,GACnB,IAAI,MAAMzD,KAAQn+F,KAAKm/F,MAAO,CAK5B,MAAM3gE,EAAI,IAAI2/D,GACd3/D,EAAEs8D,QAAU96F,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEs8D,UAC/Ct8D,EAAEjvB,OAASvP,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEjvB,SAC9CivB,EAAEi8D,MAAQz6F,KAAK6hG,gBAAgB,CAACd,UAAWviE,EAAEi8D,QAE7CmH,EAAWjkG,KAAK0gG,GAAOiB,cAAc9gE,IAOvC,OAHAojE,EAAW73E,OAGJ63E,EAAWx/F,KAAK,IAIzBwgG,qBAAqBnrG,GAGnB,MAAMqqG,EAAS,GAIT18D,EAAOplC,KAAK0gG,cAAcvnG,IAAI1B,GAC9B0nG,EAAQ/5D,EAAK+5D,MAGnB,IAAI,MAAMhB,KAAQgB,EAAO,CAMvB,MAAM4C,EAAO,CACXjH,QAAS,KAAM8D,UAAWT,EAAKS,UAAWrvF,OAAQ,KAAMkrF,MAAO,MAKjEsH,EAAKjH,QAAU96F,KAAKgiG,2BAClBvqG,EAAI0mG,EAAKrD,QAAS,WACpBiH,EAAKxyF,OAASvP,KAAKgiG,2BACjBvqG,EAAI0mG,EAAK5uF,OAAQ,UACnBwyF,EAAKtH,MAAQz6F,KAAKgiG,2BAChBvqG,EAAI0mG,EAAK1D,MAAO,SAClBqH,EAAOnkG,KAAK0gG,GAAOiB,cAAcyC,IAInCD,EAAO/3E,OAIP,MAAMszE,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAClC,IAAI,MAAMrB,KAASuC,EACjBzE,EAAGE,OAAOgC,GAGZ,OADAn6D,EAAK13B,KAAO2vF,EAAGG,SACRp4D,EAAK13B,KAIdo1F,qBAAqBhQ,EAASqL,EAAMqD,EAAQt2F,GAK1C,IAAIzT,EAEFA,EADCuI,KAAK2gG,gBAAgB5D,MAAMjK,GACvB9yF,KAAK2gG,gBAAgB/D,MAAM9J,GACxB0O,EAAOzE,MAAMjK,GAChB0O,EAAO5E,MAAM9J,GAEb9yF,KAAK0gG,cAAcvnG,IAAI25F,GAASplF,KAKvC,MAAM2vF,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAclC,OAbAvD,EAAGE,OAAOryF,GAIM,MAAbA,GACDmyF,EAAGE,OAAOv9F,KAAKiiG,oBAAoB9D,IAIrCd,EAAGE,OAAO9lG,GAIH4lG,EAAGG,SAIZiE,iBAAiBhqG,EAAI+pG,GAInB,MAAMnE,EAAK,IAAI+C,GAAcpgG,KAAK4gG,eAC5BsB,EAAgBliG,KAAKmiG,oBAAoB1qG,EAAI+pG,GAO7CJ,EAAS,IAAIc,EAAcn2G,QAAQg+B,OACzC,IAAI,MAAMrc,KAAQ0zF,EAAQ,CAExB/D,EAAGE,OAAO7vF,GAGV,IAGI00F,EAHAC,EAAa,GAMjB,MAAMC,EAAW,IAAIhC,GAAS4B,EAAc/oG,IAAIuU,IAChD,KAAM40F,EAAS3E,WAAW,CACxB,MAAM4E,EAAcD,EAAS51G,OAG7B,IAAI81G,EAAahB,EAAO9gF,QAGpBtwB,EAAO,GAIX,MAAMqyG,EAAgB,GAGtB,IAAIC,GAAkB,EACtB,IAAI,MAAM5P,KAAWyP,EAuBnB,GApBGviG,KAAK2gG,gBAAgB5D,MAAMjK,GAC5B1iG,GAAQ4P,KAAK2gG,gBAAgB/D,MAAM9J,IAK/B0P,EAAWzF,MAAMjK,IACnB2P,EAAc9kG,KAAKm1F,GAIrB1iG,GAAQoyG,EAAW5F,MAAM9J,IASF,IAAtBuP,EAAWxxG,QAAgBT,EAAOiyG,EAAY,CAC/CK,GAAkB,EAClB,MAIJ,IAAGA,EAAH,CAKA,IAAI,MAAM5P,KAAW2P,EAAe,CAIlC,MAAMpgG,EAASrC,KAAKyhG,iBAAiB3O,EAAS0P,GAmB9C,GAfApyG,GAAQoyG,EAAW5F,MAAM9J,GAGzB1iG,GAAQ,IAAIiS,EAAOqL,QAInB80F,EAAangG,EAAOm/F,OAQK,IAAtBa,EAAWxxG,QAAgBT,EAAOiyG,EAAY,CAC/CK,GAAkB,EAClB,OAIDA,IAOsB,IAAtBL,EAAWxxG,QAAgBT,EAAOiyG,KACnCA,EAAajyG,EACbgyG,EAAeI,IAKnBnF,EAAGE,OAAO8E,GAGVb,EAASY,EAKX,MAAO,CAAC10F,KAAM2vF,EAAGG,SAAUgE,OAAAA,GAI7BQ,2BAA2BvqG,EAAIspG,GAC7B,MAA0B,cAAvBA,EAAUjC,SACJiC,EAOF,CACLjC,SAAU,YACV/zG,MAAOg2G,EAAUh2G,QAAU0M,EAAK,MAAQ,OAK5CwqG,oBAAoB9D,GAClB,MAAO,IAAIA,EAAKS,UAAU7zG,SAI5Bo3G,oBAAoB1qG,EAAI+pG,GAGtB,MAAMU,EAAgB,IAAIxL,IAIpByI,EAAQn/F,KAAK0gG,cAAcvnG,IAAI1B,GAAI0nG,MAGzC,IAAI,MAAMhB,KAAQgB,EAKhBn/F,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAKrD,QAAS5vF,SAAU,IACzCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,IAEdliG,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAK5uF,OAAQrE,SAAU,IACxCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,IAEdliG,KAAK2iG,yBAAyB,CAC5BxE,KAAAA,EAAM4C,UAAW5C,EAAK1D,MAAOvvF,SAAU,IACvCzT,GAAAA,EAAI+pG,OAAAA,EAAQU,cAAAA,IAIhB,OAAOA,EAGTf,wBAAuB1pG,GAACA,EAAEupG,iBAAEA,IAG1B,MAAMtzF,EAAO1N,KAAK4iG,qBAAqBnrG,GAIjC6pG,EAASN,EAAiB7nG,IAAIuU,GAChC4zF,EAGFA,EAAO3jG,KAAKlG,GAFZupG,EAAiBt3F,IAAIgE,EAAM,CAACjW,IAMhCqpG,uBAAsB3C,KAACA,EAAI4C,UAAEA,IAC3B,GAA0B,cAAvBA,EAAUjC,SACX,OAEF,MAAMrnG,EAAKspG,EAAUh2G,MACfq6C,EAAOplC,KAAK0gG,cAAcvnG,IAAI1B,GACjC2tC,EACDA,EAAK+5D,MAAMl+F,IAAIk9F,GAEfn+F,KAAK0gG,cAAch3F,IAAIjS,EAAI,CAAC0nG,MAAO,IAAI0D,IAAI,CAAC1E,IAAQzwF,KAAM,OAI9Di1F,0BACExE,KAACA,EAAI4C,UAAEA,EAAS71F,SAAEA,EAAQzT,GAAEA,EAAE+pG,OAAEA,EAAMU,cAAEA,IACxC,GAA4B,cAAvBnB,EAAUjC,UAA4BiC,EAAUh2G,QAAU0M,EAC7D,OAOF,MAAMq7F,EAAUiO,EAAUh2G,MACpB2iB,EAAO1N,KAAK8iG,qBAAqBhQ,EAASqL,EAAMqD,EAAQt2F,GAKxDJ,EAAUo3F,EAAc/oG,IAAIuU,GAC/B5C,EACDA,EAAQnN,KAAKm1F,GAEboP,EAAcx4F,IAAIgE,EAAM,CAAColF,IAI7B+O,iBAAgBd,UAACA,IACf,MAA0B,cAAvBA,EAAUjC,UACViC,EAAUh2G,MAAMkN,WAAW+H,KAAK2gG,gBAAgB3oG,QAM5C+oG,EALE,CACLjC,SAAU,YACV/zG,MAAOiV,KAAK2gG,gBAAgB/D,MAAMmE,EAAUh2G,UAOpD,SAAS22G,GAAmBt2G,EAAGC,GAC7B,OAAOD,EAAEsiB,KAAOriB,EAAEqiB,MAAQ,EAAItiB,EAAEsiB,KAAOriB,EAAEqiB,KAAO,EAAI,ECjetD,MAAMy1F,GAAgBjG,GC+BtB,MAAM8F,GAAY9F,GACZkG,GH9BW,cAAwBJ,GACvCzuF,cACE8uF,QACArjG,KAAK6K,KAAO,YACZ7K,KAAK4gG,cAAgB,OAIvBoB,2BAA2BvqG,EAAIspG,EAAWj2G,GACxC,MAA0B,cAAvBi2G,EAAUjC,SACJiC,EAEE,UAARj2G,EACM,CACLg0G,SAAU,YACV/zG,MAAO,OAGJ,CACL+zG,SAAU,YACV/zG,MAAQg2G,EAAUh2G,QAAU0M,EAAK,MAAQ,OAK7CwqG,oBAAoB9D,GAClB,OAAOA,EAAKS,UAAU7zG,MAIxB81G,0BAA0BppG,EAAI+pG,GAG5B,MAAMU,EAAgB,IAAIxL,IAIpByI,EAAQn/F,KAAK0gG,cAAcvnG,IAAI1B,GAAI0nG,MAGzC,IAAInqG,EAAI,EACR,IAAI,MAAMmpG,KAAQgB,EAAO,CAKvB,IAAIj0F,EACA4nF,EACJ,GAA6B,cAA1BqL,EAAKrD,QAAQgE,UAA4BX,EAAKrD,QAAQ/vG,QAAU0M,EACjEq7F,EAAUqL,EAAKrD,QAAQ/vG,MACvBmgB,EAAW,QACN,CAAA,GACoB,cAAzBizF,EAAK5uF,OAAOuvF,UAA4BX,EAAK5uF,OAAOxkB,QAAU0M,EAS9D,SAJAq7F,EAAUqL,EAAK5uF,OAAOxkB,MACtBmgB,EAAW,MAMRlW,EAAI,KAAQ,SACTgL,KAAKkhG,SAKb,MAAMxzF,QAAa1N,KAAK8iG,qBACtBhQ,EAASqL,EAAMqD,EAAQt2F,GACnBJ,EAAUo3F,EAAc/oG,IAAIuU,GAC/B5C,EACDA,EAAQnN,KAAKm1F,GAEboP,EAAcx4F,IAAIgE,EAAM,CAAColF,IAI7B,OAAOoP,IGjDLiB,GAAgB5C,GAChB+C,GDhCW,cAA4BH,GAC3C5uF,cACE8uF,QACArjG,KAAK6K,KAAO,YACZ7K,KAAK4gG,cAAgB,OAIvBoB,2BAA2BvqG,EAAIspG,EAAWj2G,GACxC,MAA0B,cAAvBi2G,EAAUjC,SACJiC,EAEE,UAARj2G,EACM,CACLg0G,SAAU,YACV/zG,MAAO,OAGJ,CACL+zG,SAAU,YACV/zG,MAAQg2G,EAAUh2G,QAAU0M,EAAK,MAAQ,OAK7CwqG,oBAAoB9D,GAClB,OAAOA,EAAKS,UAAU7zG,MAIxBo3G,oBAAoB1qG,EAAI+pG,GAGtB,MAAMU,EAAgB,IAAIxL,IAIpByI,EAAQn/F,KAAK0gG,cAAcvnG,IAAI1B,GAAI0nG,MAGzC,IAAI,MAAMhB,KAAQgB,EAAO,CAKvB,IAAIj0F,EACA4nF,EACJ,GAA6B,cAA1BqL,EAAKrD,QAAQgE,UAA4BX,EAAKrD,QAAQ/vG,QAAU0M,EACjEq7F,EAAUqL,EAAKrD,QAAQ/vG,MACvBmgB,EAAW,QACN,CAAA,GACoB,cAAzBizF,EAAK5uF,OAAOuvF,UAA4BX,EAAK5uF,OAAOxkB,QAAU0M,EAS9D,SAJAq7F,EAAUqL,EAAK5uF,OAAOxkB,MACtBmgB,EAAW,IAQb,MAAMwC,EAAO1N,KAAK8iG,qBAAqBhQ,EAASqL,EAAMqD,EAAQt2F,GACxDJ,EAAUo3F,EAAc/oG,IAAIuU,GAC/B5C,EACDA,EAAQnN,KAAKm1F,GAEboP,EAAcx4F,IAAIgE,EAAM,CAAColF,IAI7B,OAAOoP,ICvCX,IAAIqB,GACJ,IACEA,GAAoB73G,QAAQ,uBAC5B,MAAMiB,IAER,MAAMumG,GAAM,OACZsQ,GAAiBtQ,GAGjBA,GAAImL,OAASoF,GACbvQ,GAAIuJ,iBAAmBiH,GASvBxQ,GAAIyQ,mBAAqB,SAASzQ,GAIhC,OAHGA,IACDqQ,GAAoBrQ,GAEfqQ,IAcTrQ,GAAI0Q,SAAW/C,eAAevC,EAAS3/E,GAMrC,GAJI/b,MAAMuyF,QAAQmJ,KAChBA,EAAUpL,GAAImL,OAAOgB,qBAAqBf,IAGzC3/E,EAAQklF,UAAW,CACpB,IAAIN,GACF,MAAM,IAAI53G,MAAM,qCAGlB,OAAO,IAAIU,SAAQ,CAACC,EAASC,IAC3Bg3G,GAAkBK,SAAStF,EAAS3/E,GAAS,CAACtrB,EAAKywG,IACjDzwG,EAAM9G,EAAO8G,GAAO/G,EAAQw3G,OAGlC,GAAyB,cAAtBnlF,EAAQy+E,UACT,OAAO,IAAI4F,GAAUrkF,GAASukF,KAAK5E,GAErC,GAAyB,cAAtB3/E,EAAQy+E,UACT,OAAO,IAAIgG,GAAUzkF,GAASukF,KAAK5E,GAErC,KAAK,cAAe3/E,GAClB,MAAM,IAAIhzB,MAAM,wDAElB,MAAM,IAAIA,MACR,mDAAqDgzB,EAAQy+E,YAgBjElK,GAAI6Q,cAAgB,SAASzF,EAAS3/E,GAMpC,GAJI/b,MAAMuyF,QAAQmJ,KAChBA,EAAUpL,GAAImL,OAAOgB,qBAAqBf,IAGzC3/E,EAAQklF,UAAW,CACpB,GAAGN,GACD,OAAOA,GAAkBS,aAAa1F,EAAS3/E,GAEjD,MAAM,IAAIhzB,MAAM,qCAElB,GAAyB,cAAtBgzB,EAAQy+E,UACT,OAAO,IAAI+F,GAAcxkF,GAASukF,KAAK5E,GAEzC,GAAyB,cAAtB3/E,EAAQy+E,UACT,OAAO,IAAIkG,GAAc3kF,GAASukF,KAAK5E,GAEzC,KAAK,cAAe3/E,GAClB,MAAM,IAAIhzB,MAAM,wDAElB,MAAM,IAAIA,MACR,mDAAqDgzB,EAAQy+E,gBCxIjE6G,GAAiB/G,GCFjB,MAAMhK,GAAM,OACZxtE,GAAiBwtE,GASjBA,GAAIiC,QAAUvyF,MAAMuyF,QASpBjC,GAAIgR,UAAYr8E,GAAmB,kBAANA,GACW,qBAAtC19B,OAAOK,UAAU4b,SAAS7a,KAAKs8B,GASjCqrE,GAAIiR,SAAWt8E,GAAKqrE,GAAIkR,SAASv8E,MACF,IAA5BtzB,OAAOszB,GAAGz1B,QAAQ,MAAe4R,KAAKqW,IAAIwN,IAAM,MASnDqrE,GAAImR,cAAgBx8E,GAAKqrE,GAAIoR,SAASz8E,IAAgC,IAA1B19B,OAAO4B,KAAK87B,GAAGh3B,OAS3DqiG,GAAIkR,SAAWv8E,GAAmB,iBAANA,GACY,oBAAtC19B,OAAOK,UAAU4b,SAAS7a,KAAKs8B,GASjCqrE,GAAIqR,UAAY18E,IAAM28E,MAAMC,WAAW58E,KAAO68E,SAAS78E,GASvDqrE,GAAIoR,SAAWz8E,GAA2C,oBAAtC19B,OAAOK,UAAU4b,SAAS7a,KAAKs8B,GASnDqrE,GAAIyR,SAAW98E,GAAmB,iBAANA,GACY,oBAAtC19B,OAAOK,UAAU4b,SAAS7a,KAAKs8B,GASjCqrE,GAAI0R,YAAc/8E,QAAkB,IAANA,ECtF9B,MAAMnC,GAAQw3E,GAERhK,GAAM,OACZ2R,GAAiB3R,GASjBA,GAAI4R,UAAYj9E,IAKd,GAAGnC,GAAM4+E,SAASz8E,MACb,WAAYA,GAAO,SAAUA,GAAO,UAAWA,GAAK,CAEvD,OADiB19B,OAAO4B,KAAK87B,GAAGh3B,OACb,KAAO,QAASg3B,GAErC,OAAO,GAUTqrE,GAAI6R,mBAAqBl9E,GAItBnC,GAAM4+E,SAASz8E,IAAgC,IAA1B19B,OAAO4B,KAAK87B,GAAGh3B,QAAiB,QAASg3B,EASjEqrE,GAAI8R,QAAUn9E,GAIZnC,GAAM4+E,SAASz8E,IAAO,WAAYA,EASpCqrE,GAAI+R,OAASp9E,GAIXnC,GAAM4+E,SAASz8E,IAAO,UAAWA,EAOnCqrE,GAAIgS,QAAUr9E,GAKLnC,GAAM4+E,SAASz8E,IACpB,WAAYA,GAEmD,IAD/D19B,OAAO4B,KAAK87B,GACT3lB,QAAOpX,GAAe,QAARA,GAAyB,WAARA,IAAkB+F,OAQxDqiG,GAAIiS,cAAgBt9E,GAKXqrE,GAAIgS,QAAQr9E,MAAQ,QAASA,GAUtCqrE,GAAIkS,YAAcv9E,KAKbnC,GAAM4+E,SAASz8E,KACb,QAASA,EACyB,IAA3BA,EAAE,OAAOz1B,QAAQ,MAEO,IAA1BjI,OAAO4B,KAAK87B,GAAGh3B,UAClB,WAAYg3B,GAAO,SAAUA,GAAO,UAAWA,QC9GxDw9E,GAAiB,cAA0B15G,MAQzC4oB,YACEvV,EAAU,yCACV6L,EAAO,eACPy6F,EAAU,IACVjC,MAAMrkG,GACNgB,KAAK6K,KAAOA,EACZ7K,KAAKhB,QAAUA,EACfgB,KAAKslG,QAAUA,ICfnB,MAAMT,GAAa3H,GACbx3E,GAAQ26E,GAER5D,GAAmB8D,GAAwB9D,iBAC3C8I,GAAc/E,GAGdgF,GAAqB,+BACrBC,GAAoB,gCACpBC,GACJ,sDAEIC,GACK,CACPC,OAAQ,yCAIN1S,GAAM,OACZ2S,GAAiB3S,GAkZjB,SAAS4S,GAAiBtE,EAAQvL,GAChC,GAAGvwE,GAAMyvE,QAAQc,GACf,IAAI,IAAIjhG,EAAI,EAAGA,EAAIihG,EAAQplG,SAAUmE,EACnCihG,EAAQjhG,GAAK8wG,GAAiBtE,EAAQvL,EAAQjhG,SAE3C,GAAG6vG,GAAWI,OAAOhP,GAC1BA,EAAQ,SAAW6P,GAAiBtE,EAAQvL,EAAQ,eAC/C,GAAGvwE,GAAM4+E,SAASrO,GAAU,CAE9B4O,GAAWO,YAAYnP,KACxBA,EAAQ,OAASuL,EAAO5E,MAAM3G,EAAQ,SAIxC,MAAMlqG,EAAO5B,OAAO4B,KAAKkqG,GAASlsE,OAClC,IAAI,IAAIg8E,EAAK,EAAGA,EAAKh6G,EAAK8E,SAAUk1G,EAAI,CACtC,MAAMj7G,EAAMiB,EAAKg6G,GACN,QAARj7G,IACDmrG,EAAQnrG,GAAOg7G,GAAiBtE,EAAQvL,EAAQnrG,MAKtD,OAAOmrG,EAxaT/C,GAAIuJ,iBAAmBA,GAUvBvJ,GAAIxyE,MAAQ,SAAS31B,GACnB,GAAGA,GAA0B,iBAAVA,EAAoB,CACrC,IAAI6yG,EACJ,GAAGl4E,GAAMyvE,QAAQpqG,GAAQ,CACvB6yG,EAAO,GACP,IAAI,IAAI5oG,EAAI,EAAGA,EAAIjK,EAAM8F,SAAUmE,EACjC4oG,EAAK5oG,GAAKk+F,GAAIxyE,MAAM31B,EAAMiK,SAEvB,GAAGjK,aAAiB2rG,IAAK,CAC9BkH,EAAO,IAAIlH,IACX,IAAI,MAAO/yE,EAAGkE,KAAM98B,EAClB6yG,EAAKl0F,IAAIia,EAAGuvE,GAAIxyE,MAAMmH,SAEnB,GAAG98B,aAAiB83G,IAAK,CAC9BjF,EAAO,IAAIiF,IACX,IAAI,MAAMh7E,KAAK98B,EACb6yG,EAAK38F,IAAIiyF,GAAIxyE,MAAMmH,SAEhB,GAAGnC,GAAM4+E,SAASv5G,GAAQ,CAC/B6yG,EAAO,GACP,IAAI,MAAM9yG,KAAOC,EACf6yG,EAAK9yG,GAAOooG,GAAIxyE,MAAM31B,EAAMD,SAG9B8yG,EAAO7yG,EAAMqb,WAEf,OAAOw3F,EAET,OAAO7yG,GAWTmoG,GAAI8S,QAAU,SAASj7G,GACrB,OAAO6X,MAAMuyF,QAAQpqG,GAASA,EAAQ,CAACA,IAYzCmoG,GAAI+S,aAAe,CAACC,EAAU,MAI5B,GAHkB/7G,OAAO4B,KAAKm6G,GAASC,MACrC37E,GAAyB,WAApBA,EAAE47E,gBAGP,MAAM,IAAIC,WACR,6CACAV,GAAiBC,OAAS,mBAG9B,OAAOz7G,OAAOm8G,OAAO,CAACC,OAAQZ,GAAiBC,QAASM,IAqB1DhT,GAAIsT,gBAAkBhwF,IACpB,MAAMonF,EAAO,GAEP9yF,EAAU0L,EAAOmoF,MAAM6G,IAC7B,IAAI,IAAIxwG,EAAI,EAAGA,EAAI8V,EAAQja,SAAUmE,EAAG,CACtC,IAAI2pG,EAAQ7zF,EAAQ9V,GAAG2pG,MAAM8G,IAC7B,IAAI9G,EACF,SAEF,MAAMt8F,EAAS,CAACxD,OAAQ8/F,EAAM,IACxB8H,EAAS9H,EAAM,GACrB,KAAOA,EAAQ+G,GAAyBpkG,KAAKmlG,IAC3CpkG,EAAOs8F,EAAM,SAAoBE,IAAbF,EAAM,GAAoBA,EAAM,GAAKA,EAAM,GAEjE,MAAM3J,EAAM3yF,EAAY,KAAK,GAC1BO,MAAMuyF,QAAQyI,EAAK5I,IACpB4I,EAAK5I,GAAKr3F,KAAK0E,GACPu7F,EAAKnzG,eAAeuqG,GAC5B4I,EAAK5I,GAAO,CAAC4I,EAAK5I,GAAM3yF,GAExBu7F,EAAK5I,GAAO3yF,EAGhB,OAAOu7F,GAQT1K,GAAIwT,kBAAoB,CAAC7+E,EAAG8+E,KAC1B,KAAGjhF,GAAMi/E,SAAS98E,IAIfnC,GAAMyvE,QAAQttE,IAAMA,EAAE++E,OAAMC,GAAMnhF,GAAMi/E,SAASkC,MAApD,CAGA,GAAGF,GAAWjhF,GAAM4+E,SAASz8E,GAC3B,OAAO19B,OAAO4B,KAAK87B,GAAGh3B,QACpB,KAAK,EAEH,OACF,KAAK,EAEH,GAAG,aAAcg3B,GACfqrE,GAAI8S,QAAQn+E,EAAE,aAAa++E,OAAMC,GAAMnhF,GAAMi/E,SAASkC,KACtD,OAKR,MAAM,IAAItB,GACR,kHAEwB,qBACxB,CAAC/wF,KAAM,qBAAsBzpB,MAAO88B,MAWxCqrE,GAAI4T,YAAc,CAAChM,EAASrC,KAC1B,GAAGqC,EAAQrwG,eAAeguG,GAAW,CACnC,MAAM1tG,EAAQ+vG,EAAQrC,GACtB,OAAS/yE,GAAMyvE,QAAQpqG,IAAUA,EAAM8F,OAAS,EAElD,OAAO,GAYTqiG,GAAI6T,SAAW,CAACjM,EAASrC,EAAU1tG,KACjC,GAAGmoG,GAAI4T,YAAYhM,EAASrC,GAAW,CACrC,IAAIjyF,EAAMs0F,EAAQrC,GAClB,MAAMwM,EAASJ,GAAWI,OAAOz+F,GACjC,GAAGkf,GAAMyvE,QAAQ3uF,IAAQy+F,EAAQ,CAC5BA,IACDz+F,EAAMA,EAAI,UAEZ,IAAI,IAAIxR,EAAI,EAAGA,EAAIwR,EAAI3V,SAAUmE,EAC/B,GAAGk+F,GAAI8T,cAAcj8G,EAAOyb,EAAIxR,IAC9B,OAAO,OAGN,IAAI0wB,GAAMyvE,QAAQpqG,GAEvB,OAAOmoG,GAAI8T,cAAcj8G,EAAOyb,GAGpC,OAAO,GAoBT0sF,GAAI+T,SAAW,CAACnM,EAASrC,EAAU1tG,EAAO4zB,KAexC,GAbK,oBADLA,EAAUA,GAAW,MAEnBA,EAAQuoF,iBAAkB,GAEvB,iBAAkBvoF,IACrBA,EAAQwoF,cAAe,GAEpB,mBAAoBxoF,IACvBA,EAAQyoF,gBAAiB,GAEtB,iBAAkBzoF,IACrBA,EAAQ0oF,cAAe,GAGtB1oF,EAAQwoF,aACTrM,EAAQrC,GAAY1tG,OACf,GAAG26B,GAAMyvE,QAAQpqG,GAAQ,CACV,IAAjBA,EAAM8F,QAAgB8tB,EAAQuoF,kBAC9BpM,EAAQrwG,eAAeguG,KACxBqC,EAAQrC,GAAY,IAEnB95E,EAAQ0oF,eACTt8G,EAAQA,EAAMwO,OAAOuhG,EAAQrC,IAC7BqC,EAAQrC,GAAY,IAEtB,IAAI,IAAIzjG,EAAI,EAAGA,EAAIjK,EAAM8F,SAAUmE,EACjCk+F,GAAI+T,SAASnM,EAASrC,EAAU1tG,EAAMiK,GAAI2pB,QAEvC,GAAGm8E,EAAQrwG,eAAeguG,GAAW,CAE1C,MAAMsO,GAAapoF,EAAQyoF,gBACzBlU,GAAI6T,SAASjM,EAASrC,EAAU1tG,GAG9B26B,GAAMyvE,QAAQ2F,EAAQrC,KACtBsO,IAAYpoF,EAAQuoF,kBACtBpM,EAAQrC,GAAY,CAACqC,EAAQrC,KAI3BsO,IACCpoF,EAAQ0oF,aACTvM,EAAQrC,GAAU72F,QAAQ7W,GAE1B+vG,EAAQrC,GAAU96F,KAAK5S,SAK3B+vG,EAAQrC,GAAY95E,EAAQuoF,gBAAkB,CAACn8G,GAASA,GAY5DmoG,GAAIoU,UAAY,CAACxM,EAASrC,IAAa,GAAGl/F,OAAOuhG,EAAQrC,IAAa,IAQtEvF,GAAIqU,eAAiB,CAACzM,EAASrC,YACtBqC,EAAQrC,IAajBvF,GAAIsU,YAAc,CAAC1M,EAASrC,EAAU1tG,EAAO4zB,KAEtC,oBADLA,EAAUA,GAAW,MAEnBA,EAAQuoF,iBAAkB,GAI5B,MAAMzpE,EAASy1D,GAAIoU,UAAUxM,EAASrC,GAAUv2F,QAC9CvV,IAAMumG,GAAI8T,cAAcr6G,EAAG5B,KAER,IAAlB0yC,EAAO5sC,OACRqiG,GAAIqU,eAAezM,EAASrC,GACF,IAAlBh7D,EAAO5sC,QAAiB8tB,EAAQuoF,gBAGxCpM,EAAQrC,GAAYh7D,EAFpBq9D,EAAQrC,GAAYh7D,EAAO,IAa/By1D,GAAIuU,kBAAoB,CAAC/iG,EAAOia,IAGvBmnF,IAFPnnF,EAAUA,GAAW,IACE6iF,QAAU,IAAI/E,GAAiB,OACtB/3F,GAiBlCwuF,GAAI8T,cAAgB,CAACU,EAAIC,IAEpBD,IAAOC,OAKP9C,GAAWG,QAAQ0C,KAAO7C,GAAWG,QAAQ2C,IAC9CD,EAAG,YAAcC,EAAG,WACpBD,EAAG,WAAaC,EAAG,UACnBD,EAAG,eAAiBC,EAAG,cACvBD,EAAG,YAAcC,EAAG,eAKnBjiF,GAAM4+E,SAASoD,IACf,QAASA,GACVhiF,GAAM4+E,SAASqD,IACd,QAASA,IACHD,EAAG,SAAWC,EAAG,QAc5BzU,GAAI0U,qBAAuB,CAACx8G,EAAGC,IAC1BD,EAAEyF,OAASxF,EAAEwF,QACN,EAEPxF,EAAEwF,OAASzF,EAAEyF,OACP,EAENzF,IAAMC,EACA,EAEDD,EAAIC,GAAM,EAAI,EC1ZxB,MAAM0yG,GAAM,8CACN8J,GAAM,wCAEZC,GAAiB,CAEfC,gBAAiB,uCAEjBC,oBAAqB,uCAErBjK,IAAAA,GACAkK,SAAUlK,GAAM,OAChBmK,UAAWnK,GAAM,QACjBoK,SAAUpK,GAAM,OAChBqK,QAASrK,GAAM,MACfsK,SAAUtK,GAAM,OAChBuK,kBAAmBvK,GAAM,eACzBwK,gBAAiBxK,GAAM,aACvByK,iBAAkBzK,GAAM,OACxB0K,WAAY1K,GAAM,SAClBD,eAAgBC,GAAM,aAEtB8J,IAAAA,GACAa,YAAab,GAAM,UACnBc,WAAYd,GAAM,SAClBe,YAAaf,GAAM,UACnB7J,WAAY6J,GAAM,UCzBpBgB,GAAiB,MAIft0F,cACEvU,KAAK8oG,UAAY,GAGnBC,WAAWC,GACT,MAAM/2G,EAAO+N,KAEb,OADA/N,EAAKg3G,QAAUD,EACR,WACL,OAAO/2G,EAAKgP,IAAIjU,MAAMiF,EAAM4Q,YAIhCg+F,UAAUtuG,GACR,IAAI22G,EAAUlpG,KAAK8oG,UAAUv2G,GAC7B,GAAG22G,EAED,OAAO78G,QAAQC,QAAQ48G,GAIzBA,EAAUlpG,KAAK8oG,UAAUv2G,GAAOyN,KAAKipG,QAAQ12G,GAE7C,IACE,aAAa22G,iBAENlpG,KAAK8oG,UAAUv2G,MC7B5B,MAAMmzB,GAAQw3E,GAERhK,GAAM,OACZ3gG,GAAiB2gG,GAOjBA,GAAIiW,QAAU,CACZC,OAAQ,CAENr9G,KAAM,CACJ,OAAQ,SAAU,YAAa,OAAQ,QAAS,YAGlDs9G,MAAO,yEAETC,KAAM,CACJv9G,KAAM,CACJ,OAAQ,WAAY,SAAU,YAAa,OAAQ,OAAQ,WAC3D,WAAY,OAAQ,OAAQ,YAAa,OAAQ,QAAS,YAG5Ds9G,MAAO,4IAGXnW,GAAIqW,MAAQ,CAACp1G,EAAKq1G,KAChB,MAAMC,EAAS,GACThpF,EAAIyyE,GAAIiW,QAAQK,GAAU,QAC1Bl5F,EAAImQ,EAAE4oF,MAAM/nG,KAAKnN,GACvB,IAAIa,EAAIyrB,EAAE10B,KAAK8E,OACf,KAAMmE,KACJy0G,EAAOhpF,EAAE10B,KAAKiJ,SAAgB6pG,IAATvuF,EAAEtb,GAAoB,KAAOsb,EAAEtb,GAYtD,OARsB,UAAlBy0G,EAAOC,QAAsC,QAAhBD,EAAOE,MACnB,SAAlBF,EAAOC,QAAqC,OAAhBD,EAAOE,QACpCF,EAAOt3G,KAAOs3G,EAAOt3G,KAAKrB,QAAQ,IAAM24G,EAAOE,KAAM,IACrDF,EAAOG,UAAYH,EAAOG,UAAU94G,QAAQ,IAAM24G,EAAOE,KAAM,IAC/DF,EAAOE,KAAO,MAGhBF,EAAOI,eAAiB3W,GAAI4W,kBAAkBL,EAAOr5G,MAC9Cq5G,GAWTvW,GAAI6W,YAAc,CAAC1tE,EAAM2tE,KAEvB,GAAY,OAAT3tE,EACD,OAAO2tE,EAGT,GAAG9W,GAAIpxF,WAAWkoG,GAChB,OAAOA,EAIL3tE,IAAQ3W,GAAMi/E,SAAStoE,KACzBA,EAAO62D,GAAIqW,MAAMltE,GAAQ,KAI3B,MAAM24D,EAAM9B,GAAIqW,MAAMS,GAGhBC,EAAY,CAChBC,SAAU7tE,EAAK6tE,UAAY,IAG7B,GAAqB,OAAlBlV,EAAI4U,UACLK,EAAUL,UAAY5U,EAAI4U,UAC1BK,EAAU75G,KAAO4kG,EAAI5kG,KACrB65G,EAAUE,MAAQnV,EAAImV,WAItB,GAFAF,EAAUL,UAAYvtE,EAAKutE,UAEX,KAAb5U,EAAI5kG,KACL65G,EAAU75G,KAAOisC,EAAKjsC,KACL,OAAd4kG,EAAImV,MACLF,EAAUE,MAAQnV,EAAImV,MAEtBF,EAAUE,MAAQ9tE,EAAK8tE,UAEpB,CACL,GAA6B,IAA1BnV,EAAI5kG,KAAKgC,QAAQ,KAElB63G,EAAU75G,KAAO4kG,EAAI5kG,SAChB,CAEL,IAAIA,EAAOisC,EAAKjsC,KAGhBA,EAAOA,EAAKiC,OAAO,EAAGjC,EAAKkC,YAAY,KAAO,IAC1ClC,EAAKS,OAAS,GAAKwrC,EAAKutE,YAAkC,MAApBx5G,EAAKiC,QAAQ,KACrDjC,GAAQ,KAEVA,GAAQ4kG,EAAI5kG,KAEZ65G,EAAU75G,KAAOA,EAEnB65G,EAAUE,MAAQnV,EAAImV,MAIV,KAAbnV,EAAI5kG,OAEL65G,EAAU75G,KAAO8iG,GAAI4W,kBAAkBG,EAAU75G,OAInD,IAAIwtG,EAAOqM,EAAUC,SAiBrB,OAhB2B,OAAxBD,EAAUL,YACXhM,GAAQ,KAAOqM,EAAUL,WAE3BhM,GAAQqM,EAAU75G,KACK,OAApB65G,EAAUE,QACXvM,GAAQ,IAAMqM,EAAUE,OAEN,OAAjBnV,EAAIoV,WACLxM,GAAQ,IAAM5I,EAAIoV,UAIR,KAATxM,IACDA,EAAO,MAGFA,GAWT1K,GAAImX,WAAa,CAAChuE,EAAM2tE,KAEtB,GAAY,OAAT3tE,EACD,OAAO2tE,EAGL3tE,IAAQ3W,GAAMi/E,SAAStoE,KACzBA,EAAO62D,GAAIqW,MAAMltE,GAAQ,KAI3B,IAAI/5B,EAAO,GASX,GARiB,KAAd+5B,EAAKlqC,KACNmQ,IAAS+5B,EAAK6tE,UAAY,IAAM,MAAQ7tE,EAAKutE,WAAa,IAClDI,EAAI53G,QAAQ,QAEpBkQ,GAAQ,MAIe,IAAtB0nG,EAAI53G,QAAQkQ,GACb,OAAO0nG,EAIT,MAAMhV,EAAM9B,GAAIqW,MAAMS,EAAI33G,OAAOiQ,EAAKzR,SAIhCy5G,EAAejuE,EAAKwtE,eAAe5nG,MAAM,KACzCsoG,EAAcvV,EAAI6U,eAAe5nG,MAAM,KACvCN,EAAQqzF,EAAIoV,UAAYpV,EAAImV,MAAS,EAAI,EAC/C,KAAMG,EAAaz5G,OAAS,GAAK05G,EAAY15G,OAAS8Q,GACjD2oG,EAAa,KAAOC,EAAY,IAGnCD,EAAatxG,QACbuxG,EAAYvxG,QAId,IAAI4kG,EAAO,GACX,GAAG0M,EAAaz5G,OAAS,EAAG,CAG1By5G,EAAa/tG,MACb,IAAI,IAAIvH,EAAI,EAAGA,EAAIs1G,EAAaz5G,SAAUmE,EACxC4oG,GAAQ,MAoBZ,OAfAA,GAAQ2M,EAAYnoG,KAAK,KAGR,OAAd4yF,EAAImV,QACLvM,GAAQ,IAAM5I,EAAImV,OAEA,OAAjBnV,EAAIoV,WACLxM,GAAQ,IAAM5I,EAAIoV,UAIR,KAATxM,IACDA,EAAO,MAGFA,GAQT1K,GAAI4W,kBAAoB15G,IAItB,GAAmB,IAAhBA,EAAKS,OACN,MAAO,GAGT,MAAM6T,EAAQtU,EAAK6R,MAAM,KACnB0C,EAAS,GAEf,KAAMD,EAAM7T,OAAS,GAAG,CACtB,MAAMnE,EAAOgY,EAAM1L,QACblM,EAAwB,IAAjB4X,EAAM7T,OAEP,MAATnE,EAQS,OAATA,EASHiY,EAAOhH,KAAKjR,IARViY,EAAOpI,MACJzP,GAED6X,EAAOhH,KAAK,KAXX7Q,GAED6X,EAAOhH,KAAK,IAqBlB,MAHe,MAAZvN,EAAK,IAAcuU,EAAO9T,OAAS,GAAmB,KAAd8T,EAAO,IAChDA,EAAO/C,QAAQ,IAEI,IAAlB+C,EAAO9T,QAA8B,KAAd8T,EAAO,GACxB,IAGFA,EAAOvC,KAAK,MAOrB,MAAMooG,GAAkB,uCAWxBtX,GAAIpxF,WAAa+lB,GAAKnC,GAAMi/E,SAAS98E,IAAM2iF,GAAgB9L,KAAK72E,GAUhEqrE,GAAIuX,WAAa5iF,GAAKnC,GAAMi/E,SAAS98E,2BCxPrCr6B,GA5CA,SAAyBk9G,GACrB,IAAK,UAAUhM,KAAKgM,GAChB,MAAM,IAAIpnG,UAAU,oEAKxB,MAAMqnG,GAFND,EAAMA,EAAI55G,QAAQ,SAAU,KAELsB,QAAQ,KAC/B,IAAoB,IAAhBu4G,GAAqBA,GAAc,EACnC,MAAM,IAAIrnG,UAAU,uBAGxB,MAAMsnG,EAAOF,EAAInyE,UAAU,EAAGoyE,GAAY1oG,MAAM,KAChD,IAAI4oG,EAAU,GACVC,GAAS,EACb,MAAM5qG,EAAO0qG,EAAK,IAAM,aACxB,IAAIG,EAAW7qG,EACf,IAAK,IAAIlL,EAAI,EAAGA,EAAI41G,EAAK/5G,OAAQmE,IACb,WAAZ41G,EAAK51G,GACL81G,GAAS,GAGTC,GAAY,IAAIH,EAAK51G,KACe,IAAhC41G,EAAK51G,GAAG5C,QAAQ,cAChBy4G,EAAUD,EAAK51G,GAAGujC,UAAU,KAKnCqyE,EAAK,IAAOC,EAAQh6G,SACrBk6G,GAAY,oBACZF,EAAU,YAGd,MAAM13F,EAAW23F,EAAS,SAAW,QAC/Br5G,EAAOu5G,SAASN,EAAInyE,UAAUoyE,EAAa,IAC3C98G,EAASkY,OAAOvC,KAAK/R,EAAM0hB,GAMjC,OAJAtlB,EAAOqS,KAAOA,EACdrS,EAAOk9G,SAAWA,EAElBl9G,EAAOg9G,QAAUA,EACVh9G,GClDX,MAAMo9G,SAACA,IAAY/N,EAKbgO,GAAK,IAAIC,QAYf,MAAMC,GASL72F,YAAY82F,EAAY,GAAI1sF,EAAU,IACrC,IAAIhY,EAAO,EAEX,MAAMnF,EAAQ6pG,EAAUvlF,KAAImwE,IAC3B,IAAIpoG,EAeJ,OAbCA,EADGooG,aAAmBlwF,OACbkwF,EACC3iF,YAAYC,OAAO0iF,GACpBlwF,OAAOvC,KAAKyyF,EAAQpoG,OAAQooG,EAAQxqF,WAAYwqF,EAAQh/F,YACvDg/F,aAAmB3iF,YACpBvN,OAAOvC,KAAKyyF,GACXA,aAAmBmV,GACpBnV,EAEAlwF,OAAOvC,KAAwB,iBAAZyyF,EAAuBA,EAAU1hG,OAAO0hG,IAIrEtvF,GAAQ9Y,EAAOgD,QAAUhD,EAAO8Y,MAAQ,EACjC9Y,KAGFqS,OAAwB2+F,IAAjBlgF,EAAQze,KAAqB,GAAK3L,OAAOoqB,EAAQze,MAAMkmG,cAEpE8E,GAAGxhG,IAAI1J,KAAM,CACZE,KAAM,mBAAmBw+F,KAAKx+F,GAAQ,GAAKA,EAC3CyG,KAAAA,EACAnF,MAAAA,IAQEmF,WACH,OAAOukG,GAAG/xG,IAAI6G,MAAM2G,KAMjBzG,WACH,OAAOgrG,GAAG/xG,IAAI6G,MAAME,KAUrB2gG,aACC,OAAO96F,OAAOvC,WAAWxD,KAAKsrG,eAAellG,WAU9Cy6F,oBACC,MAAMpvG,EAAO,IAAId,WAAWqP,KAAK2G,MACjC,IAAIrB,EAAS,EACb,UAAW,MAAMimG,KAASvrG,KAAK8E,SAC9BrT,EAAKiY,IAAI6hG,EAAOjmG,GAChBA,GAAUimG,EAAM16G,OAGjB,OAAOY,EAAK5D,OASbiX,SACC,OAAOmmG,GAASznG,KArGlBq9F,gBAAsBr/F,GACrB,IAAK,MAAM+T,KAAQ/T,EACd,WAAY+T,QACPA,EAAKzQ,eAEPyQ,EAgGchkB,CAAK25G,GAAG/xG,IAAI6G,MAAMwB,QAYxCzQ,MAAM6S,EAAQ,EAAGC,EAAM7D,KAAK2G,KAAMzG,EAAO,IACxC,MAAMyG,KAACA,GAAQ3G,KAEf,IAAIwrG,EAAgB5nG,EAAQ,EAAII,KAAKwF,IAAI7C,EAAO/C,EAAO,GAAKI,KAAKC,IAAIL,EAAO+C,GACxE8kG,EAAc5nG,EAAM,EAAIG,KAAKwF,IAAI7C,EAAO9C,EAAK,GAAKG,KAAKC,IAAIJ,EAAK8C,GAEpE,MAAM+kG,EAAO1nG,KAAKwF,IAAIiiG,EAAcD,EAAe,GAC7ChqG,EAAQ0pG,GAAG/xG,IAAI6G,MAAMwB,MAAMi8B,SAC3B4tE,EAAY,GAClB,IAAIM,EAAQ,EAEZ,IAAK,MAAMp2F,KAAQ/T,EAAO,CACzB,MAAMmF,EAAO2M,YAAYC,OAAOgC,GAAQA,EAAKte,WAAase,EAAK5O,KAC/D,GAAI6kG,GAAiB7kG,GAAQ6kG,EAG5BA,GAAiB7kG,EACjB8kG,GAAe9kG,MACT,CACN,MAAM4kG,EAAQh2F,EAAKxkB,MAAMy6G,EAAexnG,KAAKC,IAAI0C,EAAM8kG,IAMvD,GALAJ,EAAU1tG,KAAK4tG,GACfI,GAASr4F,YAAYC,OAAOg4F,GAASA,EAAMt0G,WAAas0G,EAAM5kG,KAC9D6kG,EAAgB,EAGZG,GAASD,EACZ,OAKH,MAAME,EAAO,IAAIR,GAAK,GAAI,CAAClrG,KAAM3L,OAAO2L,GAAMkmG,gBAG9C,OAFAj8G,OAAOm8G,OAAO4E,GAAG/xG,IAAIyyG,GAAO,CAACjlG,KAAM+kG,EAAMlqG,MAAO6pG,IAEzCO,EAGIC,IAAPC,OAAOD,eACX,MAAO,OAGRxwC,OAAQywC,OAAOC,aAAax8F,GAC3B,OACCA,GACkB,iBAAXA,GACkB,mBAAlBA,EAAOzK,QACW,IAAzByK,EAAOzK,OAAOjU,QACgB,mBAAvB0e,EAAOgF,aACd,gBAAgBmqF,KAAKnvF,EAAOu8F,OAAOD,eAKtC1hH,OAAOmtB,iBAAiB8zF,GAAK5gH,UAAW,CACvCmc,KAAM,CAAC3b,YAAY,GACnBkV,KAAM,CAAClV,YAAY,GACnB+F,MAAO,CAAC/F,YAAY,SAGrBghH,GAAiBZ,kBCjLjBp/G,aAA2B65C,EAE3B,MAAMomE,EAAO/O,EACPgP,EAAQ7L,EACR8L,EAAO5L,EACP6L,EAAS5L,EACT6L,EAAkB5I,GAClBoC,EAAOnC,EACP0H,EAAOkB,GACP14F,EAAS24F,EACTh6G,EAAMi6G,EAEZ,MAAMC,UAAuB9gH,MAC5B4oB,YAAYvV,EAASkB,GACpBmjG,MAAMrkG,GAENrT,MAAM+gH,kBAAkB1sG,KAAMA,KAAKuU,aAEnCvU,KAAKE,KAAOA,EAGT2K,WACH,OAAO7K,KAAKuU,YAAY1J,KAGbghG,IAAPC,OAAOD,eACX,OAAO7rG,KAAKuU,YAAY1J,MAW1B,MAAM8hG,UAAmBF,EAMxBl4F,YAAYvV,EAASkB,EAAM0sG,GAC1BvJ,MAAMrkG,EAASkB,GAEX0sG,IAEH5sG,KAAKwU,KAAOxU,KAAK8O,MAAQ89F,EAAYp4F,KACrCxU,KAAK6sG,eAAiBD,EAAYE,UAWrC,MAAMC,EAAOjB,OAAOD,YASdmB,EAAwBz9F,GAEV,iBAAXA,GACkB,mBAAlBA,EAAO09F,QACW,mBAAlB19F,EAAO6pF,QACQ,mBAAf7pF,EAAOpW,KACW,mBAAlBoW,EAAO29F,QACQ,mBAAf39F,EAAOytF,KACQ,mBAAfztF,EAAO7F,KACS,mBAAhB6F,EAAOwa,MACG,oBAAjBxa,EAAOw9F,GAUHI,EAAS59F,GAEK,iBAAXA,GACuB,mBAAvBA,EAAO+7F,aACS,iBAAhB/7F,EAAOrP,MACW,mBAAlBqP,EAAOzK,QACgB,mBAAvByK,EAAOgF,aACd,gBAAgBmqF,KAAKnvF,EAAOw9F,IAU9B,SAASK,EAAW79F,GACnB,MACmB,iBAAXA,GACkB,mBAAlBA,EAAO09F,QACQ,mBAAf19F,EAAO7F,KACQ,mBAAf6F,EAAOpW,KACW,mBAAlBoW,EAAO29F,QACW,mBAAlB39F,EAAO6pF,QACS,mBAAhB7pF,EAAOxjB,MACW,mBAAlBwjB,EAAOkuB,QACY,mBAAnBluB,EAAOzE,SACgB,mBAAvByE,EAAOgF,aACG,aAAjBhF,EAAOw9F,GAUT,MAOMM,EAAW,OACXC,EAAS,IAAIC,OAAO,GACpBC,EAAiBznG,OAAO9O,WAAWo2G,GAKnCI,EAAYC,GAAY,GAAGJ,IAASI,IAAWJ,IAASD,EAASE,OAAO,KAS9E,SAASI,EAAUD,EAAU7iG,EAAMwwB,GAClC,IAAI7kB,EAAS,GAUb,OARAA,GAAU,GAAG82F,IAASI,QACtBl3F,GAAU,yCAAyC3L,KAE/CsiG,EAAO9xE,KACV7kB,GAAU,eAAe6kB,EAAMxwB,YAC/B2L,GAAU,iBAAiB6kB,EAAMn7B,MAAQ,8BAGnC,GAAGsW,IAAS62F,EAASE,OAAO,KAoDpC,MAAMK,EAAY9B,OAAO,kBAWzB,MAAM+B,EACLt5F,YAAYuI,GAAMnW,KACjBA,EAAO,GACJ,IACH,IAAI+mG,EAAW,KAEF,OAAT5wF,EAEHA,EAAO,KACGkwF,EAAsBlwF,GAEhCA,EAAO/W,OAAOvC,KAAKsZ,EAAK1W,YACd+mG,EAAOrwF,IAAkB/W,OAAO+nG,SAAShxF,KAAkB+oF,EAAKngF,MAAMqoF,iBAAiBjxF,GAEjGA,EAAO/W,OAAOvC,KAAKsZ,GACTxJ,YAAYC,OAAOuJ,GAE7BA,EAAO/W,OAAOvC,KAAKsZ,EAAKjvB,OAAQivB,EAAKrR,WAAYqR,EAAK7lB,YAC5C6lB,aAAgBsvF,IAAmBgB,EAAWtwF,IAExD4wF,EAAW,4BA7EY95F,EAAOo6F,YAAY,GAAG5nG,SAAS,SA8EtD0W,EAAOsvF,EAAOnB,SAASznG,KAxE1Bq9F,gBAAkCoN,EAAMP,GACvC,IAAK,MAAO7iG,EAAM9f,KAAUkjH,QACrBN,EAAUD,EAAU7iG,EAAM9f,GAE5BoiH,EAAOpiH,SACFA,EAAM+Z,eAER/Z,QAGDsiH,QAGDI,EAAUC,GA2DcQ,CAAiBpxF,EAAM4wF,KAInD5wF,EAAO/W,OAAOvC,KAAKjP,OAAOuoB,MAG3B9c,KAAK4tG,GAAa,CACjB9wF,KAAAA,EACA4wF,SAAAA,EACAS,WAAW,EACX/8G,MAAO,MAER4O,KAAK2G,KAAOA,EAERmW,aAAgBsvF,GACnBtvF,EAAK7d,GAAG,SAAS5L,IAChB,MAAMjC,EAAQiC,aAAeo5G,EAC5Bp5G,EACA,IAAIs5G,EAAW,+CAA+C3sG,KAAKzN,QAAQc,EAAI2L,UAAW,SAAU3L,GACrG2M,KAAK4tG,GAAWx8G,MAAQA,KAKvB0rB,WACH,OAAO9c,KAAK4tG,GAAW9wF,KAGpBsxF,eACH,OAAOpuG,KAAK4tG,GAAWO,UAQxBtN,oBACC,MAAMhzG,OAACA,EAAM4d,WAAEA,EAAUxU,WAAEA,SAAoBo3G,EAAYruG,MAC3D,OAAOnS,EAAOkD,MAAM0a,EAAYA,EAAaxU,GAQ9C4pG,aACC,MAAMyN,EAAMtuG,KAAKkmG,SAAWlmG,KAAKkmG,QAAQ/sG,IAAI,iBAAqB6G,KAAK4tG,GAAW9wF,MAAQ9c,KAAK4tG,GAAW9wF,KAAK5c,MAAS,GAClHhK,QAAY8J,KAAKnS,SAEvB,OAAO,IAAIu9G,EAAK,CAACl1G,GAAM,CACtBgK,KAAMouG,IASRzN,aACC,MAAMhzG,QAAewgH,EAAYruG,MACjC,OAAOuuG,KAAKhF,MAAM17G,EAAOuY,YAQ1By6F,aAEC,aADqBwN,EAAYruG,OACnBoG,WAQfvY,SACC,OAAOwgH,EAAYruG,OAqBrB6gG,eAAewN,EAAY58G,GAC1B,GAAIA,EAAKm8G,GAAWO,UACnB,MAAM,IAAI7qG,UAAU,0BAA0B7R,EAAKc,OAKpD,GAFAd,EAAKm8G,GAAWO,WAAY,EAExB18G,EAAKm8G,GAAWx8G,MACnB,MAAMK,EAAKm8G,GAAWx8G,MAGvB,IAAI0rB,KAACA,GAAQrrB,EAGb,GAAa,OAATqrB,EACH,OAAO/W,OAAOC,MAAM,GASrB,GALImnG,EAAOrwF,KACVA,EAAOA,EAAKhY,UAITiB,OAAO+nG,SAAShxF,GACnB,OAAOA,EAIR,KAAMA,aAAgBsvF,GACrB,OAAOrmG,OAAOC,MAAM,GAKrB,MAAMwoG,EAAQ,GACd,IAAIC,EAAa,EAEjB,IACC,UAAW,MAAMlD,KAASzuF,EAAM,CAC/B,GAAIrrB,EAAKkV,KAAO,GAAK8nG,EAAalD,EAAM16G,OAASY,EAAKkV,KAAM,CAC3D,MAAMtT,EAAM,IAAIs5G,EAAW,mBAAmBl7G,EAAKc,mBAAmBd,EAAKkV,OAAQ,YAEnF,MADAmW,EAAK4xF,QAAQr7G,GACPA,EAGPo7G,GAAclD,EAAM16G,OACpB29G,EAAM7wG,KAAK4tG,IAEX,MAAOn6G,GACR,MAAIA,aAAiBq7G,EACdr7G,EAGA,IAAIu7G,EAAW,+CAA+Cl7G,EAAKc,QAAQnB,EAAM4N,UAAW,SAAU5N,GAI9G,IAA2B,IAAvB0rB,EAAK6xF,gBAAwD,IAA9B7xF,EAAK8xF,eAAeC,MAWtD,MAAM,IAAIlC,EAAW,4DAA4Dl7G,EAAKc,OAVtF,IACC,OAAIi8G,EAAM5H,OAAMtoF,GAAkB,iBAANA,IACpBvY,OAAOvC,KAAKgrG,EAAMpsG,KAAK,KAGxB2D,OAAOxM,OAAOi1G,EAAOC,GAC3B,MAAOr9G,GACR,MAAM,IAAIu7G,EAAW,kDAAkDl7G,EAAKc,QAAQnB,EAAM4N,UAAW,SAAU5N,IAlFlHjH,OAAOmtB,iBAAiBu2F,EAAKrjH,UAAW,CACvCsyB,KAAM,CAAC9xB,YAAY,GACnBojH,SAAU,CAACpjH,YAAY,GACvBsgH,YAAa,CAACtgH,YAAY,GAC1B4gH,KAAM,CAAC5gH,YAAY,GACnB8jH,KAAM,CAAC9jH,YAAY,GACnBuI,KAAM,CAACvI,YAAY,KA0FpB,MAAM01B,EAAQ,CAAC4kB,EAAUypE,KACxB,IAAIC,EACAC,GACAnyF,KAACA,GAAQwoB,EAGb,GAAIA,EAAS8oE,SACZ,MAAM,IAAIziH,MAAM,sCAgBjB,OAXKmxB,aAAgBsvF,GAAwC,mBAArBtvF,EAAKoyF,cAE5CF,EAAK,IAAI5C,EAAO+C,YAAY,CAACJ,cAAAA,IAC7BE,EAAK,IAAI7C,EAAO+C,YAAY,CAACJ,cAAAA,IAC7BjyF,EAAKsyF,KAAKJ,GACVlyF,EAAKsyF,KAAKH,GAEV3pE,EAASsoE,GAAW9wF,KAAOkyF,EAC3BlyF,EAAOmyF,GAGDnyF,GAaFuyF,EAAqB,CAACvyF,EAAMwyF,IAEpB,OAATxyF,EACI,KAIY,iBAATA,EACH,2BAIJkwF,EAAsBlwF,GAClB,kDAIJqwF,EAAOrwF,GACHA,EAAK5c,MAAQ,KAIjB6F,OAAO+nG,SAAShxF,IAAS+oF,EAAKngF,MAAMqoF,iBAAiBjxF,IAASxJ,YAAYC,OAAOuJ,GAC7E,KAIJA,GAAoC,mBAArBA,EAAKoyF,YAChB,gCAAgCpyF,EAAKoyF,gBAGzC9B,EAAWtwF,GACP,iCAAiCwyF,EAAQ1B,GAAWF,WAIxD5wF,aAAgBsvF,EACZ,KAID,2BAYFmD,EAAgBD,IACrB,MAAMxyF,KAACA,GAAQwyF,EAGf,OAAa,OAATxyF,EACI,EAIJqwF,EAAOrwF,GACHA,EAAKnW,KAITZ,OAAO+nG,SAAShxF,GACZA,EAAKjsB,OAITisB,GAAsC,mBAAvBA,EAAK0yF,cAChB1yF,EAAK2yF,gBAAkB3yF,EAAK2yF,iBAAmB3yF,EAAK0yF,gBAAkB,KAI1EpC,EAAWtwF,GA7VhB,SAA2BmxF,EAAMP,GAChC,IAAI78G,EAAS,EAEb,IAAK,MAAOga,EAAM9f,KAAUkjH,EAC3Bp9G,GAAUkV,OAAO9O,WAAW02G,EAAUD,EAAU7iG,EAAM9f,IAElDoiH,EAAOpiH,GACV8F,GAAU9F,EAAM4b,KAEhB9V,GAAUkV,OAAO9O,WAAW1C,OAAOxJ,IAGpC8F,GAAU28G,EAKX,OAFA38G,GAAUkV,OAAO9O,WAAWw2G,EAAUC,IAE/B78G,EA6UC6+G,CAAkBJ,EAAQ1B,GAAWF,UAItC,MAiCFiC,EAAwD,mBAA5B1D,EAAK0D,mBACtC1D,EAAK0D,mBACL9kG,IACC,IAAK,0BAA0B6zF,KAAK7zF,GAAO,CAC1C,MAAMxX,EAAM,IAAIiQ,UAAU,2CAA2CuH,MAErE,MADA1gB,OAAOC,eAAeiJ,EAAK,OAAQ,CAACtI,MAAO,2BACrCsI,IAIHu8G,EAA0D,mBAA7B3D,EAAK2D,oBACvC3D,EAAK2D,oBACL,CAAC/kG,EAAM9f,KACN,GAAI,kCAAkC2zG,KAAK3zG,GAAQ,CAClD,MAAMsI,EAAM,IAAIiQ,UAAU,yCAAyCuH,OAEnE,MADA1gB,OAAOC,eAAeiJ,EAAK,OAAQ,CAACtI,MAAO,qBACrCsI,IAgBT,MAAMw8G,UAAgBC,gBAOrBv7F,YAAYxT,GAGX,IAAIsB,EAAS,GACb,GAAItB,aAAgB8uG,EAAS,CAC5B,MAAME,EAAMhvG,EAAKgvG,MACjB,IAAK,MAAOllG,EAAM4yB,KAAWtzC,OAAO2gB,QAAQilG,GAC3C1tG,EAAO1E,QAAQ8/B,EAAO3X,KAAI/6B,GAAS,CAAC8f,EAAM9f,WAErC,GAAY,MAARgW,OAAqB,CAAA,GAAoB,iBAATA,GAAsB8kG,EAAKngF,MAAMsqF,iBAAiBjvG,GA+B5F,MAAM,IAAIuC,UAAU,wIA/B+E,CACnG,MAAM65B,EAASp8B,EAAK+qG,OAAOmE,UAE3B,GAAc,MAAV9yE,EAEH96B,EAAO1E,QAAQxT,OAAO2gB,QAAQ/J,QACxB,CACN,GAAsB,mBAAXo8B,EACV,MAAM,IAAI75B,UAAU,iCAKrBjB,EAAS,IAAItB,GACX+kB,KAAIoqF,IACJ,GACiB,iBAATA,GAAqBrK,EAAKngF,MAAMsqF,iBAAiBE,GAExD,MAAM,IAAI5sG,UAAU,+CAGrB,MAAO,IAAI4sG,MACTpqF,KAAIoqF,IACN,GAAoB,IAAhBA,EAAKr/G,OACR,MAAM,IAAIyS,UAAU,+CAGrB,MAAO,IAAI4sG,QAqBf,OAbA7tG,EACCA,EAAOxR,OAAS,EACfwR,EAAOyjB,KAAI,EAAEjb,EAAM9f,MAClB4kH,EAAmB9kG,GACnB+kG,EAAoB/kG,EAAMtW,OAAOxJ,IAC1B,CAACwJ,OAAOsW,GAAMu7F,cAAe7xG,OAAOxJ,YAE5C8zG,EAEFwE,MAAMhhG,GAIC,IAAI8tG,MAAMnwG,KAAM,CACtB7G,IAAI0F,EAAQsD,EAAGyjC,GACd,OAAQzjC,GACP,IAAK,SACL,IAAK,MACJ,MAAO,CAAC0I,EAAM9f,KACb4kH,EAAmB9kG,GACnB+kG,EAAoB/kG,EAAMtW,OAAOxJ,IAC1B+kH,gBAAgBtlH,UAAU2X,GAAG5W,KACnCq6C,EACArxC,OAAOsW,GAAMu7F,cACb7xG,OAAOxJ,KAIV,IAAK,SACL,IAAK,MACL,IAAK,SACJ,OAAO8f,IACN8kG,EAAmB9kG,GACZilG,gBAAgBtlH,UAAU2X,GAAG5W,KACnCq6C,EACArxC,OAAOsW,GAAMu7F,gBAIhB,IAAK,OACJ,MAAO,KACNvnG,EAAOkrB,OACA,IAAI84E,IAAIiN,gBAAgBtlH,UAAUuB,KAAKR,KAAKsT,IAAS9S,QAG9D,QACC,OAAOqkH,QAAQj3G,IAAI0F,EAAQsD,EAAGyjC,OAOvBimE,IAAPC,OAAOD,eACX,OAAO7rG,KAAKuU,YAAY1J,KAGzBzE,WACC,OAAOjc,OAAOK,UAAU4b,SAAS7a,KAAKyU,MAGvC7G,IAAI0R,GACH,MAAM4yB,EAASz9B,KAAKktG,OAAOriG,GAC3B,GAAsB,IAAlB4yB,EAAO5sC,OACV,OAAO,KAGR,IAAI9F,EAAQ0yC,EAAOr7B,KAAK,MAKxB,MAJI,sBAAsBs8F,KAAK7zF,KAC9B9f,EAAQA,EAAMq7G,eAGRr7G,EAGR6lB,QAAQjZ,GACP,IAAK,MAAMkT,KAAQ7K,KAAKjU,OACvB4L,EAASqI,KAAK7G,IAAI0R,GAAOA,GAI3B4yB,UACC,IAAK,MAAM5yB,KAAQ7K,KAAKjU,aACjBiU,KAAK7G,IAAI0R,GAOjBC,WACC,IAAK,MAAMD,KAAQ7K,KAAKjU,YACjB,CAAC8e,EAAM7K,KAAK7G,IAAI0R,IAIxB,CAACihG,OAAOmE,YACP,OAAOjwG,KAAK8K,UAQbilG,MACC,MAAO,IAAI/vG,KAAKjU,QAAQskH,QAAO,CAAChuG,EAAQvX,KACvCuX,EAAOvX,GAAOkV,KAAKktG,OAAOpiH,GACnBuX,IACL,IAMJ,CAACypG,OAAOwE,IAAI,iCACX,MAAO,IAAItwG,KAAKjU,QAAQskH,QAAO,CAAChuG,EAAQvX,KACvC,MAAM2yC,EAASz9B,KAAKktG,OAAOpiH,GAS3B,OALCuX,EAAOvX,GADI,SAARA,EACW2yC,EAAO,GAEPA,EAAO5sC,OAAS,EAAI4sC,EAASA,EAAO,GAG5Cp7B,IACL,KAQLlY,OAAOmtB,iBACNu4F,EAAQrlH,UACR,CAAC,MAAO,UAAW,UAAW,UAAU6lH,QAAO,CAAChuG,EAAQo2F,KACvDp2F,EAAOo2F,GAAY,CAACztG,YAAY,GACzBqX,IACL,KAgCJ,MAAMkuG,EAAiB,IAAI1N,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAQ9C2N,EAAah8F,GACX+7F,EAAevT,IAAIxoF,GASrBi8F,EAAc3E,OAAO,sBAS3B,MAAM4E,UAAiB7C,EACtBt5F,YAAYuI,EAAO,KAAM6B,EAAU,IAClC0kF,MAAMvmF,EAAM6B,GAEZ,MAAMrvB,EAASqvB,EAAQrvB,QAAU,IAC3B42G,EAAU,IAAI2J,EAAQlxF,EAAQunF,SAEpC,GAAa,OAATppF,IAAkBopF,EAAQlJ,IAAI,gBAAiB,CAClD,MAAM2T,EAActB,EAAmBvyF,GACnC6zF,GACHzK,EAAQ+G,OAAO,eAAgB0D,GAIjC3wG,KAAKywG,GAAe,CACnBl+G,IAAKosB,EAAQpsB,IACbjD,OAAAA,EACAshH,WAAYjyF,EAAQiyF,YAAc,GAClC1K,QAAAA,EACA34E,QAAS5O,EAAQ4O,QACjBwhF,cAAepwF,EAAQowF,eAIrBx8G,UACH,OAAOyN,KAAKywG,GAAal+G,KAAO,GAG7BjD,aACH,OAAO0Q,KAAKywG,GAAanhH,OAMtB+pB,SACH,OAAOrZ,KAAKywG,GAAanhH,QAAU,KAAO0Q,KAAKywG,GAAanhH,OAAS,IAGlEuhH,iBACH,OAAO7wG,KAAKywG,GAAaljF,QAAU,EAGhCqjF,iBACH,OAAO5wG,KAAKywG,GAAaG,WAGtB1K,cACH,OAAOlmG,KAAKywG,GAAavK,QAGtB6I,oBACH,OAAO/uG,KAAKywG,GAAa1B,cAQ1BruF,QACC,OAAO,IAAIgwF,EAAShwF,EAAM1gB,KAAMA,KAAK+uG,eAAgB,CACpDx8G,IAAKyN,KAAKzN,IACVjD,OAAQ0Q,KAAK1Q,OACbshH,WAAY5wG,KAAK4wG,WACjB1K,QAASlmG,KAAKkmG,QACd7sF,GAAIrZ,KAAKqZ,GACTw3F,WAAY7wG,KAAK6wG,WACjBlqG,KAAM3G,KAAK2G,OASb00D,gBAAgB9oE,EAAKjD,EAAS,KAC7B,IAAKkhH,EAAWlhH,GACf,MAAM,IAAI+2G,WAAW,mEAGtB,OAAO,IAAIqK,EAAS,KAAM,CACzBxK,QAAS,CACRh0G,SAAU,IAAI4+G,IAAIv+G,GAAK6T,YAExB9W,OAAAA,IAIUu8G,IAAPC,OAAOD,eACX,MAAO,YAIT1hH,OAAOmtB,iBAAiBo5F,EAASlmH,UAAW,CAC3C+H,IAAK,CAACvH,YAAY,GAClBsE,OAAQ,CAACtE,YAAY,GACrBquB,GAAI,CAACruB,YAAY,GACjB6lH,WAAY,CAAC7lH,YAAY,GACzB4lH,WAAY,CAAC5lH,YAAY,GACzBk7G,QAAS,CAACl7G,YAAY,GACtB01B,MAAO,CAAC11B,YAAY,KAGrB,MAUM+lH,EAAcjF,OAAO,qBAQrBkF,EAAYzhG,GAEE,iBAAXA,GACwB,iBAAxBA,EAAOwhG,GAWhB,MAAME,UAAgBpD,EACrBt5F,YAAY7P,EAAO3D,EAAO,IACzB,IAAImwG,EAGAF,EAAUtsG,GACbwsG,EAAY,IAAIJ,IAAIpsG,EAAMnS,MAE1B2+G,EAAY,IAAIJ,IAAIpsG,GACpBA,EAAQ,IAGT,IAAIy4B,EAASp8B,EAAKo8B,QAAUz4B,EAAMy4B,QAAU,MAI5C,GAHAA,EAASA,EAAOg0E,eAGG,MAAbpwG,EAAK+b,MAAgBk0F,EAAUtsG,KAA0B,OAAfA,EAAMoY,OACzC,QAAXqgB,GAA+B,SAAXA,GACrB,MAAM,IAAI75B,UAAU,iDAGrB,MAAM8tG,EAAYrwG,EAAK+b,KACtB/b,EAAK+b,KACJk0F,EAAUtsG,IAAyB,OAAfA,EAAMoY,KAC1B4D,EAAMhc,GACN,KAEF2+F,MAAM+N,EAAW,CAChBzqG,KAAM5F,EAAK4F,MAAQjC,EAAMiC,MAAQ,IAGlC,MAAMu/F,EAAU,IAAI2J,EAAQ9uG,EAAKmlG,SAAWxhG,EAAMwhG,SAAW,IAE7D,GAAkB,OAAdkL,IAAuBlL,EAAQlJ,IAAI,gBAAiB,CACvD,MAAM2T,EAActB,EAAmB+B,EAAWpxG,MAC9C2wG,GACHzK,EAAQ+G,OAAO,eAAgB0D,GAIjC,IAAIU,EAASL,EAAUtsG,GACtBA,EAAM2sG,OACN,KAKD,GAJI,WAAYtwG,IACfswG,EAAStwG,EAAKswG,QAGA,OAAXA,IAr5Bc,iBAFE9hG,EAu5BkB8hG,IAp5BrB,gBAAjB9hG,EAAOw9F,IAq5BN,MAAM,IAAIzpG,UAAU,mDAx5BDiM,IAAAA,EA25BpBvP,KAAK+wG,GAAe,CACnB5zE,OAAAA,EACAm0E,SAAUvwG,EAAKuwG,UAAY5sG,EAAM4sG,UAAY,SAC7CpL,QAAAA,EACAgL,UAAAA,EACAG,OAAAA,GAIDrxG,KAAKoN,YAAyByxF,IAAhB99F,EAAKqM,YAAyCyxF,IAAjBn6F,EAAM0I,OAAuB,GAAK1I,EAAM0I,OAAUrM,EAAKqM,OAClGpN,KAAKuxG,cAA6B1S,IAAlB99F,EAAKwwG,cAA6C1S,IAAnBn6F,EAAM6sG,UAAgC7sG,EAAM6sG,SAAYxwG,EAAKwwG,SAC5GvxG,KAAKutB,QAAUxsB,EAAKwsB,SAAW7oB,EAAM6oB,SAAW,EAChDvtB,KAAKwxG,MAAQzwG,EAAKywG,OAAS9sG,EAAM8sG,MACjCxxG,KAAK+uG,cAAgBhuG,EAAKguG,eAAiBrqG,EAAMqqG,eAAiB,MAClE/uG,KAAKyxG,mBAAqB1wG,EAAK0wG,oBAAsB/sG,EAAM+sG,qBAAsB,EAG9Et0E,aACH,OAAOn9B,KAAK+wG,GAAa5zE,OAGtB5qC,UACH,OAAOA,EAAI0jC,OAAOj2B,KAAK+wG,GAAaG,WAGjChL,cACH,OAAOlmG,KAAK+wG,GAAa7K,QAGtBoL,eACH,OAAOtxG,KAAK+wG,GAAaO,SAGtBD,aACH,OAAOrxG,KAAK+wG,GAAaM,OAQ1B3wF,QACC,OAAO,IAAIuwF,EAAQjxG,MAGR6rG,IAAPC,OAAOD,eACX,MAAO,WAIT1hH,OAAOmtB,iBAAiB25F,EAAQzmH,UAAW,CAC1C2yC,OAAQ,CAACnyC,YAAY,GACrBuH,IAAK,CAACvH,YAAY,GAClBk7G,QAAS,CAACl7G,YAAY,GACtBsmH,SAAU,CAACtmH,YAAY,GACvB01B,MAAO,CAAC11B,YAAY,GACpBqmH,OAAQ,CAACrmH,YAAY,KAmFtB,MAAM0mH,UAAmBjF,EACxBl4F,YAAYvV,EAASkB,EAAO,WAC3BmjG,MAAMrkG,EAASkB,IAYjB,MAAMyxG,EAAmB,IAAI9O,IAAI,CAAC,QAAS,QAAS,WASpDhC,eAAeh7D,EAAMtzC,EAAKq/G,GACzB,OAAO,IAAIvlH,SAAQ,CAACC,EAASC,KAE5B,MAAM+iH,EAAU,IAAI2B,EAAQ1+G,EAAKq/G,GAC3BjzF,EArGsB2wF,CAAAA,IAC7B,MAAM4B,UAACA,GAAa5B,EAAQyB,GACtB7K,EAAU,IAAI2J,EAAQP,EAAQyB,GAAa7K,SAG5CA,EAAQlJ,IAAI,WAChBkJ,EAAQx8F,IAAI,SAAU,OAIvB,IAAImoG,EAAqB,KAKzB,GAJqB,OAAjBvC,EAAQxyF,MAAiB,gBAAgB4hF,KAAK4Q,EAAQnyE,UACzD00E,EAAqB,KAGD,OAAjBvC,EAAQxyF,KAAe,CAC1B,MAAMg1F,EAAavC,EAAcD,GAEP,iBAAfwC,GAA4Bp7F,OAAO8tF,MAAMsN,KACnDD,EAAqBt9G,OAAOu9G,IAI1BD,GACH3L,EAAQx8F,IAAI,iBAAkBmoG,GAI1B3L,EAAQlJ,IAAI,eAChBkJ,EAAQx8F,IAAI,aAAc,cAIvB4lG,EAAQiC,WAAarL,EAAQlJ,IAAI,oBACpCkJ,EAAQx8F,IAAI,kBAAmB,mBAGhC,IAAI8nG,MAACA,GAASlC,EACO,mBAAVkC,IACVA,EAAQA,EAAMN,IAGVhL,EAAQlJ,IAAI,eAAkBwU,GAClCtL,EAAQx8F,IAAI,aAAc,SAM3B,MAAMqoG,EAtMWb,CAAAA,IACjB,GAAIA,EAAUa,OACb,OAAOb,EAAUa,OAGlB,MAAMC,EAAad,EAAU/+G,KAAKtB,OAAS,EACrC6c,EAAOwjG,EAAUxjG,OAAwC,MAA/BwjG,EAAU/+G,KAAK6/G,GAAsB,IAAM,IAC3E,MAAoD,MAA7Cd,EAAU/+G,KAAK6/G,EAAatkG,EAAK7c,QAAkB,IAAM,IA+LjDohH,CAAUf,GAmBzB,MAhBuB,CACtB9gH,KAAM8gH,EAAUx4F,SAAWq5F,EAC3Br5F,SAAUw4F,EAAUx4F,SACpBw5F,SAAUhB,EAAUgB,SACpBhI,SAAUgH,EAAUhH,SACpBP,KAAMuH,EAAUvH,KAChBj8F,KAAMwjG,EAAUxjG,KAChBqkG,OAAQb,EAAUa,OAClB5H,MAAO+G,EAAU/G,MACjBh4G,KAAM++G,EAAU/+G,KAChBgrC,OAAQmyE,EAAQnyE,OAChB+oE,QAASA,EAAQ4F,OAAOwE,IAAI,iCAC5BmB,mBAAoBnC,EAAQmC,mBAC5BD,MAAAA,IAoCgBW,CAAsB7C,GACtC,IAAKqC,EAAiB3U,IAAIr+E,EAAQurF,UACjC,MAAM,IAAI5mG,UAAU,0BAA0B/Q,kBAAoBosB,EAAQurF,SAASp5G,QAAQ,KAAM,0BAGlG,GAAyB,UAArB6tB,EAAQurF,SAAsB,CACjC,MAAMz4G,EAAO46G,EAAgBiD,EAAQ/8G,KAC/BO,EAAW,IAAI49G,EAASj/G,EAAM,CAACy0G,QAAS,CAAC,eAAgBz0G,EAAKs5G,YAEpE,YADAz+G,EAAQwG,GAKT,MAAMH,GAA6B,WAArBgsB,EAAQurF,SAAwBgC,EAAQD,GAAMqD,SACtD+B,OAACA,GAAU/B,EACjB,IAAIx8G,EAAW,KAEf,MAAM5B,EAAQ,KACb,MAAME,EAAQ,IAAIsgH,EAAW,8BAC7BnlH,EAAO6E,GACHk+G,EAAQxyF,MAAQwyF,EAAQxyF,gBAAgBsvF,EAAOnB,UAClDqE,EAAQxyF,KAAK4xF,QAAQt9G,GAGjB0B,GAAaA,EAASgqB,MAI3BhqB,EAASgqB,KAAKs1F,KAAK,QAAShhH,IAG7B,GAAIigH,GAAUA,EAAOgB,QAEpB,YADAnhH,IAID,MAAMohH,EAAmB,KACxBphH,IACAqhH,KAIKC,EAAW7/G,EAAKgsB,GAElB0yF,GACHA,EAAOnmF,iBAAiB,QAASonF,GAGlC,MAAMC,EAAW,KAChBC,EAASthH,QACLmgH,GACHA,EAAO5mF,oBAAoB,QAAS6nF,IAItCE,EAASvzG,GAAG,SAAS5L,IACpB9G,EAAO,IAAIogH,EAAW,cAAc2C,EAAQ/8G,uBAAuBc,EAAI2L,UAAW,SAAU3L,IAC5Fk/G,OAGDC,EAASvzG,GAAG,YAAYwzG,IACvBD,EAAS55G,WAAW,GACpB,MAAMstG,EApdT,SAAwBA,EAAU,IACjC,OAAO,IAAI2J,EACV3J,EAEEmK,QAAO,CAAChuG,EAAQtX,EAAOu9B,EAAOrC,KAC1BqC,EAAQ,GAAM,GACjBjmB,EAAO1E,KAAKsoB,EAAMl1B,MAAMu3B,EAAOA,EAAQ,IAGjCjmB,IACL,IACFH,QAAO,EAAE2I,EAAM9f,MACf,IAGC,OAFA4kH,EAAmB9kG,GACnB+kG,EAAoB/kG,EAAMtW,OAAOxJ,KAC1B,EACN,MACD,OAAO,OAmcO2nH,CAAeD,EAAUE,YAGzC,GAAInC,EAAWiC,EAAUG,YAAa,CAErC,MAAM1gH,EAAWg0G,EAAQ/sG,IAAI,YAGvB05G,EAA2B,OAAb3gH,EAAoB,KAAO,IAAI4+G,IAAI5+G,EAAUo9G,EAAQ/8G,KAGzE,OAAQ+8G,EAAQgC,UACf,IAAK,QAGJ,OAFA/kH,EAAO,IAAIogH,EAAW,0EAA0E2C,EAAQ/8G,MAAO,qBAC/GggH,IAED,IAAK,SAEJ,GAAoB,OAAhBM,EAEH,IACC3M,EAAQx8F,IAAI,WAAYmpG,GAEvB,MAAOzhH,GACR7E,EAAO6E,GAIT,MACD,IAAK,SAAU,CAEd,GAAoB,OAAhByhH,EACH,MAID,GAAIvD,EAAQ/hF,SAAW+hF,EAAQliG,OAG9B,OAFA7gB,EAAO,IAAIogH,EAAW,gCAAgC2C,EAAQ/8G,MAAO,sBACrEggH,IAMD,MAAMO,EAAiB,CACtB5M,QAAS,IAAI2J,EAAQP,EAAQpJ,SAC7B94F,OAAQkiG,EAAQliG,OAChBmgB,QAAS+hF,EAAQ/hF,QAAU,EAC3BikF,MAAOlC,EAAQkC,MACfD,SAAUjC,EAAQiC,SAClBp0E,OAAQmyE,EAAQnyE,OAChBrgB,KAAMwyF,EAAQxyF,KACdu0F,OAAQ/B,EAAQ+B,OAChB1qG,KAAM2oG,EAAQ3oG,MAIf,OAA6B,MAAzB8rG,EAAUG,YAAsBtD,EAAQxyF,MAAQ80F,EAAS90F,gBAAgBsvF,EAAOnB,UACnF1+G,EAAO,IAAIogH,EAAW,2DAA4D,8BAClF4F,MAK4B,MAAzBE,EAAUG,aAAiD,MAAzBH,EAAUG,YAA+C,MAAzBH,EAAUG,YAA0C,SAAnBtD,EAAQnyE,UAC9G21E,EAAe31E,OAAS,MACxB21E,EAAeh2F,UAAO+hF,EACtBiU,EAAe5M,QAAQ9M,OAAO,mBAI/B9sG,EAAQu5C,EAAM,IAAIorE,EAAQ4B,EAAaC,UACvCP,OAQHE,EAAUM,KAAK,OAAO,KACjB1B,GACHA,EAAO5mF,oBAAoB,QAAS6nF,MAItC,IAAIx1F,EAAOsvF,EAAO4G,SAASP,EAAW,IAAIrG,EAAO+C,aAAe/9G,IAC/D7E,EAAO6E,MAGJ1B,QAAQ4/B,QAAU,UACrBmjF,EAAUxzG,GAAG,UAAWqzG,GAGzB,MAAMW,EAAkB,CACvB1gH,IAAK+8G,EAAQ/8G,IACbjD,OAAQmjH,EAAUG,WAClBhC,WAAY6B,EAAUS,cACtBhN,QAAAA,EACAv/F,KAAM2oG,EAAQ3oG,KACd4mB,QAAS+hF,EAAQ/hF,QACjBwhF,cAAeO,EAAQP,eAIlBoE,EAAUjN,EAAQ/sG,IAAI,oBAU5B,IAAKm2G,EAAQiC,UAA+B,SAAnBjC,EAAQnyE,QAAiC,OAAZg2E,GAA6C,MAAzBV,EAAUG,YAA+C,MAAzBH,EAAUG,WAGnH,OAFA9/G,EAAW,IAAI49G,EAAS5zF,EAAMm2F,QAC9B3mH,EAAQwG,GAST,MAAMsgH,EAAc,CACnBhuG,MAAO+mG,EAAKkH,aACZC,YAAanH,EAAKkH,cAInB,GAAgB,SAAZF,GAAkC,WAAZA,EAMzB,OALAr2F,EAAOsvF,EAAO4G,SAASl2F,EAAMqvF,EAAKoH,aAAaH,IAAchiH,IAC5D7E,EAAO6E,MAER0B,EAAW,IAAI49G,EAAS5zF,EAAMm2F,QAC9B3mH,EAAQwG,GAKT,GAAgB,YAAZqgH,GAAqC,cAAZA,EAA7B,CAyBA,GAAgB,OAAZA,EAMH,OALAr2F,EAAOsvF,EAAO4G,SAASl2F,EAAMqvF,EAAKqH,0BAA0BpiH,IAC3D7E,EAAO6E,MAER0B,EAAW,IAAI49G,EAAS5zF,EAAMm2F,QAC9B3mH,EAAQwG,GAKTA,EAAW,IAAI49G,EAAS5zF,EAAMm2F,GAC9B3mH,EAAQwG,OApCR,CAGas5G,EAAO4G,SAASP,EAAW,IAAIrG,EAAO+C,aAAe/9G,IAChE7E,EAAO6E,MAEJ2hH,KAAK,QAAQxH,IAGfzuF,EADyB,IAAV,GAAXyuF,EAAM,IACHa,EAAO4G,SAASl2F,EAAMqvF,EAAKsH,iBAAiBriH,IAClD7E,EAAO6E,MAGDg7G,EAAO4G,SAASl2F,EAAMqvF,EAAKuH,oBAAoBtiH,IACrD7E,EAAO6E,MAIT0B,EAAW,IAAI49G,EAAS5zF,EAAMm2F,GAC9B3mH,EAAQwG,UAn3BS,EAACwvC,GAAOxlB,KAAAA,MAChB,OAATA,EAEHwlB,EAAKz+B,MACKspG,EAAOrwF,GAEjBA,EAAKhY,SAASsqG,KAAK9sE,GACTv8B,OAAO+nG,SAAShxF,IAE1BwlB,EAAK18B,MAAMkX,GACXwlB,EAAKz+B,OAGLiZ,EAAKsyF,KAAK9sE,IA03BVqxE,CAAcnB,EAAUlD,MAI1BtjH,aAAqB0lH,EACrB1lH,aAAqB2gH,EACrB3gH,UAAkB6jH,EAClB7jH,UAAkBilH,EAClBjlH,WAAmB0kH,EACnB1kH,UAAkB65C,EAClB75C,aAAqBwkH,oEC17CrBrmH,OAAOC,iBAAwB,aAAc,CAAEW,OAAO,IAqBtD,MAAM6oH,EAAc,IAAIzI,QAOlB0I,EAAW,IAAI1I,QAQrB,SAAS2I,EAAG/oF,GACR,MAAMgpF,EAAOH,EAAYz6G,IAAI4xB,GAM7B,OALA55B,QAAQP,OACI,MAARmjH,EACA,8CACAhpF,GAEGgpF,EAOX,SAASC,EAAcviH,GACS,MAAxBA,EAAKwiH,gBAYJxiH,EAAKs5B,MAAMmpF,aAIhBziH,EAAK0iH,UAAW,EACyB,mBAA9B1iH,EAAKs5B,MAAMqpF,gBAClB3iH,EAAKs5B,MAAMqpF,kBAhBY,oBAAZjjH,SACkB,mBAAlBA,QAAQC,OAEfD,QAAQC,MACJ,qEACAK,EAAKwiH,iBAyBrB,SAASI,EAAMC,EAAavpF,GACxB6oF,EAAYlqG,IAAI1J,KAAM,CAClBs0G,YAAAA,EACAvpF,MAAAA,EACAwpF,WAAY,EACZC,cAAeF,EACfH,UAAU,EACVM,SAAS,EACTC,kBAAkB,EAClBT,gBAAiB,KACjBU,UAAW5pF,EAAM4pF,WAAahvG,KAAKpG,QAIvCpV,OAAOC,eAAe4V,KAAM,YAAa,CAAEjV,OAAO,EAAOC,YAAY,IAGrE,MAAMe,EAAO5B,OAAO4B,KAAKg/B,GACzB,IAAK,IAAI/1B,EAAI,EAAGA,EAAIjJ,EAAK8E,SAAUmE,EAAG,CAClC,MAAMlK,EAAMiB,EAAKiJ,GACXlK,KAAOkV,MACT7V,OAAOC,eAAe4V,KAAMlV,EAAK8pH,EAAyB9pH,KAyOtE,SAAS8pH,EAAyB9pH,GAC9B,MAAO,CACHqO,MACI,OAAO26G,EAAG9zG,MAAM+qB,MAAMjgC,IAE1B4e,IAAI3e,GACA+oH,EAAG9zG,MAAM+qB,MAAMjgC,GAAOC,GAE1BE,cAAc,EACdD,YAAY,GAUpB,SAAS6pH,EAAqB/pH,GAC1B,MAAO,CACHC,QACI,MAAMggC,EAAQ+oF,EAAG9zG,MAAM+qB,MACvB,OAAOA,EAAMjgC,GAAKkC,MAAM+9B,EAAOloB,YAEnC5X,cAAc,EACdD,YAAY,GAmDpB,SAAS8pH,EAAWzzF,GAChB,GAAa,MAATA,GAAiBA,IAAUl3B,OAAOK,UAClC,OAAO6pH,EAGX,IAAIU,EAAUlB,EAAS16G,IAAIkoB,GAK3B,OAJe,MAAX0zF,IACAA,EA/CR,SAAuBC,EAAW3zF,GAC9B,MAAMt1B,EAAO5B,OAAO4B,KAAKs1B,GACzB,GAAoB,IAAhBt1B,EAAK8E,OACL,OAAOmkH,EAIX,SAASC,EAAYX,EAAavpF,GAC9BiqF,EAAUzpH,KAAKyU,KAAMs0G,EAAavpF,GAGtCkqF,EAAYzqH,UAAYL,OAAO6mB,OAAOgkG,EAAUxqH,UAAW,CACvD+pB,YAAa,CAAExpB,MAAOkqH,EAAahqH,cAAc,EAAMC,UAAU,KAIrE,IAAK,IAAI8J,EAAI,EAAGA,EAAIjJ,EAAK8E,SAAUmE,EAAG,CAClC,MAAMlK,EAAMiB,EAAKiJ,GACjB,KAAMlK,KAAOkqH,EAAUxqH,WAAY,CAC/B,MACM0qH,EAAqC,mBADxB/qH,OAAOgrH,yBAAyB9zF,EAAOv2B,GACzBC,MACjCZ,OAAOC,eACH6qH,EAAYzqH,UACZM,EACAoqH,EACML,EAAqB/pH,GACrB8pH,EAAyB9pH,KAK3C,OAAOmqH,EAgBOG,CAAcN,EAAW3qH,OAAOw2B,eAAeU,IAASA,GAClEwyF,EAASnqG,IAAI2X,EAAO0zF,IAEjBA,EAqBX,SAASM,EAAUtqF,GACf,OAAO+oF,EAAG/oF,GAAO2pF,iBAgCrB,SAASY,EAAmBvqF,EAAOkpF,GAC/BH,EAAG/oF,GAAOkpF,gBAAkBA,EAjXhCI,EAAM7pH,UAAY,CAKV0V,WACA,OAAO4zG,EAAG9zG,MAAM+qB,MAAM7qB,MAOtBrB,aACA,OAAOi1G,EAAG9zG,MAAMs0G,aAOhBE,oBACA,OAAOV,EAAG9zG,MAAMw0G,eAMpBe,eACI,MAAMf,EAAgBV,EAAG9zG,MAAMw0G,cAC/B,OAAqB,MAAjBA,EACO,GAEJ,CAACA,IAORgB,WACA,OAAO,GAOPC,sBACA,OAAO,GAOPC,gBACA,OAAO,GAOPC,qBACA,OAAO,GAOPpB,iBACA,OAAOT,EAAG9zG,MAAMu0G,YAOpBqB,kBACI,MAAMnkH,EAAOqiH,EAAG9zG,MAEhBvO,EAAKgjH,SAAU,EAC2B,mBAA/BhjH,EAAKs5B,MAAM6qF,iBAClBnkH,EAAKs5B,MAAM6qF,mBAQnBC,2BACI,MAAMpkH,EAAOqiH,EAAG9zG,MAEhBvO,EAAKgjH,SAAU,EACfhjH,EAAKijH,kBAAmB,EAC2B,mBAAxCjjH,EAAKs5B,MAAM8qF,0BAClBpkH,EAAKs5B,MAAM8qF,4BAQfC,cACA,OAAOC,QAAQjC,EAAG9zG,MAAM+qB,MAAM+qF,UAO9B5B,iBACA,OAAO6B,QAAQjC,EAAG9zG,MAAM+qB,MAAMmpF,aAOlCE,iBACIJ,EAAcF,EAAG9zG,QAOjBg2G,uBACA,OAAOlC,EAAG9zG,MAAMm0G,UAOhB8B,eACA,OAAOF,QAAQjC,EAAG9zG,MAAM+qB,MAAMkrF,WAO9BtB,gBACA,OAAOb,EAAG9zG,MAAM20G,WAQhBuB,iBACA,OAAOpC,EAAG9zG,MAAMs0G,aAQhB6B,mBACA,OAAOrC,EAAG9zG,MAAMy0G,SAEhB0B,iBAAaprH,GACb,IAAKA,EACD,OAEJ,MAAM0G,EAAOqiH,EAAG9zG,MAEhBvO,EAAKgjH,SAAU,EACwB,kBAA5BhjH,EAAKs5B,MAAMorF,eAClB1kH,EAAKs5B,MAAMorF,cAAe,IAS9BC,kBACA,OAAQtC,EAAG9zG,MAAMm0G,UAEjBiC,gBAAYrrH,GACPA,GACDipH,EAAcF,EAAG9zG,QAWzBq2G,eAMJlsH,OAAOC,eAAeiqH,EAAM7pH,UAAW,cAAe,CAClDO,MAAOspH,EACPppH,cAAc,EACdC,UAAU,IAIQ,oBAAXsE,aAAkD,IAAjBA,OAAO6kH,QAC/ClqH,OAAOmsH,eAAejC,EAAM7pH,UAAWgF,OAAO6kH,MAAM7pH,WAGpDqpH,EAASnqG,IAAIla,OAAO6kH,MAAM7pH,UAAW6pH,IAwKzC,MAAMkC,EAAe,IAAIpL,QAYzB,SAAS7G,EAAS74G,GACd,OAAa,OAANA,GAA2B,iBAANA,EAShC,SAAS+qH,EAAalC,GAClB,MAAMmC,EAAYF,EAAap9G,IAAIm7G,GACnC,GAAiB,MAAbmC,EACA,MAAM,IAAInzG,UACN,oEAGR,OAAOmzG,EA4EX,SAASC,EAAqBC,EAAsBC,GAChDzsH,OAAOC,eACHusH,EACA,KAAKC,IAtEb,SAAwCA,GACpC,MAAO,CACHz9G,MAEI,IAAIvJ,EADc4mH,EAAax2G,MACV7G,IAAIy9G,GACzB,KAAe,MAARhnH,GAAc,CACjB,GAvCE,IAuCEA,EAAKinH,aACL,OAAOjnH,EAAKknH,SAEhBlnH,EAAOA,EAAKlD,KAEhB,OAAO,MAGXgd,IAAIotG,GACwB,mBAAbA,GAA4BxS,EAASwS,KAC5CA,EAAW,MAEf,MAAML,EAAYD,EAAax2G,MAG/B,IAAIsnC,EAAO,KACP13C,EAAO6mH,EAAUt9G,IAAIy9G,GACzB,KAAe,MAARhnH,GAxDD,IAyDEA,EAAKinH,aAEQ,OAATvvE,EACAA,EAAK56C,KAAOkD,EAAKlD,KACI,OAAdkD,EAAKlD,KACZ+pH,EAAU/sG,IAAIktG,EAAWhnH,EAAKlD,MAE9B+pH,EAAUrd,OAAOwd,GAGrBtvE,EAAO13C,EAGXA,EAAOA,EAAKlD,KAIhB,GAAiB,OAAboqH,EAAmB,CACnB,MAAMlhB,EAAU,CACZkhB,SAAAA,EACAD,aA7EF,EA8EEE,SAAS,EACThE,MAAM,EACNrmH,KAAM,MAEG,OAAT46C,EACAmvE,EAAU/sG,IAAIktG,EAAWhhB,GAEzBtuD,EAAK56C,KAAOkpG,IAIxB3qG,cAAc,EACdD,YAAY,GAcZgsH,CAA+BJ,IAUvC,SAASK,EAAwBC,GAE7B,SAASC,IACLC,EAAY7rH,KAAKyU,MAGrBm3G,EAAkB3sH,UAAYL,OAAO6mB,OAAOomG,EAAY5sH,UAAW,CAC/D+pB,YAAa,CACTxpB,MAAOosH,EACPlsH,cAAc,EACdC,UAAU,KAIlB,IAAK,IAAI8J,EAAI,EAAGA,EAAIkiH,EAAWrmH,SAAUmE,EACrC0hH,EAAqBS,EAAkB3sH,UAAW0sH,EAAWliH,IAGjE,OAAOmiH,EAgBX,SAASC,IAEL,KAAIp3G,gBAAgBo3G,GAApB,CAIA,GAAyB,IAArBv0G,UAAUhS,QAAgB+R,MAAMuyF,QAAQtyF,UAAU,IAClD,OAAOo0G,EAAwBp0G,UAAU,IAE7C,GAAIA,UAAUhS,OAAS,EAAG,CACtB,MAAM60B,EAAQ,IAAI9iB,MAAMC,UAAUhS,QAClC,IAAK,IAAImE,EAAI,EAAGA,EAAI6N,UAAUhS,SAAUmE,EACpC0wB,EAAM1wB,GAAK6N,UAAU7N,GAEzB,OAAOiiH,EAAwBvxF,GAEnC,MAAM,IAAIpiB,UAAU,qCAbhBizG,EAAa7sG,IAAI1J,KAAM,IAAI02F,KAkBnC0gB,EAAY5sH,UAAY,CAQpB0gC,iBAAiB0rF,EAAWE,EAAUn4F,GAClC,GAAgB,MAAZm4F,EACA,OAEJ,GAAwB,mBAAbA,IAA4BxS,EAASwS,GAC5C,MAAM,IAAIxzG,UAAU,iDAGxB,MAAMmzG,EAAYD,EAAax2G,MACzBq3G,EAAe/S,EAAS3lF,GAIxBk4F,GAHUQ,EACVtB,QAAQp3F,EAAQ24F,SAChBvB,QAAQp3F,IA/LN,EACD,EAgMDi3E,EAAU,CACZkhB,SAAAA,EACAD,aAAAA,EACAE,QAASM,GAAgBtB,QAAQp3F,EAAQo4F,SACzChE,KAAMsE,GAAgBtB,QAAQp3F,EAAQo0F,MACtCrmH,KAAM,MAIV,IAAIkD,EAAO6mH,EAAUt9G,IAAIy9G,GACzB,QAAa/X,IAATjvG,EAEA,YADA6mH,EAAU/sG,IAAIktG,EAAWhhB,GAK7B,IAAItuD,EAAO,KACX,KAAe,MAAR13C,GAAc,CACjB,GACIA,EAAKknH,WAAaA,GAClBlnH,EAAKinH,eAAiBA,EAGtB,OAEJvvE,EAAO13C,EACPA,EAAOA,EAAKlD,KAIhB46C,EAAK56C,KAAOkpG,GAUhBnrE,oBAAoBmsF,EAAWE,EAAUn4F,GACrC,GAAgB,MAAZm4F,EACA,OAGJ,MAAML,EAAYD,EAAax2G,MAIzB62G,GAHUvS,EAAS3lF,GACnBo3F,QAAQp3F,EAAQ24F,SAChBvB,QAAQp3F,IAjPN,EACD,EAmPP,IAAI2oB,EAAO,KACP13C,EAAO6mH,EAAUt9G,IAAIy9G,GACzB,KAAe,MAARhnH,GAAc,CACjB,GACIA,EAAKknH,WAAaA,GAClBlnH,EAAKinH,eAAiBA,EAStB,YAPa,OAATvvE,EACAA,EAAK56C,KAAOkD,EAAKlD,KACI,OAAdkD,EAAKlD,KACZ+pH,EAAU/sG,IAAIktG,EAAWhnH,EAAKlD,MAE9B+pH,EAAUrd,OAAOwd,IAKzBtvE,EAAO13C,EACPA,EAAOA,EAAKlD,OASpB6qH,cAAcxsF,GACV,GAAa,MAATA,GAAuC,iBAAfA,EAAM7qB,KAC9B,MAAM,IAAIoD,UAAU,oCAIxB,MAAMmzG,EAAYD,EAAax2G,MACzB42G,EAAY7rF,EAAM7qB,KACxB,IAAItQ,EAAO6mH,EAAUt9G,IAAIy9G,GACzB,GAAY,MAARhnH,EACA,OAAO,EAIX,MAAM4nH,EA9Vd,SAAmBlD,EAAavpF,GAE5B,OAAO,IADS+pF,EAAW3qH,OAAOw2B,eAAeoK,IAC1C,CAAYupF,EAAavpF,GA4VP0sF,CAAUz3G,KAAM+qB,GAIrC,IAAIuc,EAAO,KACX,KAAe,MAAR13C,GAAc,CAmBjB,GAjBIA,EAAKmjH,KACQ,OAATzrE,EACAA,EAAK56C,KAAOkD,EAAKlD,KACI,OAAdkD,EAAKlD,KACZ+pH,EAAU/sG,IAAIktG,EAAWhnH,EAAKlD,MAE9B+pH,EAAUrd,OAAOwd,GAGrBtvE,EAAO13C,EAIX0lH,EACIkC,EACA5nH,EAAKmnH,QAAUnnH,EAAKknH,SAAW,MAEN,mBAAlBlnH,EAAKknH,SACZ,IACIlnH,EAAKknH,SAASvrH,KAAKyU,KAAMw3G,GAC3B,MAAOnkH,GAEkB,oBAAZlC,SACkB,mBAAlBA,QAAQC,OAEfD,QAAQC,MAAMiC,QA3TpB,IA+TFzD,EAAKinH,cACgC,mBAA9BjnH,EAAKknH,SAASY,aAErB9nH,EAAKknH,SAASY,YAAYF,GAI9B,GAAInC,EAAUmC,GACV,MAGJ5nH,EAAOA,EAAKlD,KAMhB,OAJA4oH,EAAmBkC,EAAc,MAzXzC,SAAuBzsF,EAAOwpF,GAC1BT,EAAG/oF,GAAOwpF,WAAaA,EAyXnBoD,CAAcH,EAAc,GA/WpC,SAA0BzsF,EAAOypF,GAC7BV,EAAG/oF,GAAOypF,cAAgBA,EA+WtBoD,CAAiBJ,EAAc,OAEvBA,EAAaxB,mBAK7B7rH,OAAOC,eAAegtH,EAAY5sH,UAAW,cAAe,CACxDO,MAAOqsH,EACPnsH,cAAc,EACdC,UAAU,IAKQ,oBAAXsE,aACuB,IAAvBA,OAAO4nH,aAEdjtH,OAAOmsH,eAAec,EAAY5sH,UAAWgF,OAAO4nH,YAAY5sH,WAGpEwB,uBAA+B0qH,EAC/B1qH,cAAsBorH,EACtBprH,UAAkBorH,EAElBjqH,UAAiBiqH,EACjBjqH,sBAA6BA,EAAOnB,QAAiB,QAAIorH,EACzDjqH,+BAAsCupH,gCC/1BtCvsH,OAAOC,iBAAwB,aAAc,CAAEW,OAAO,IAEtD,IAAI8sH,EAAkB3a,WAMtB,MAAM4a,UAAoBD,EAAgBT,YAItC7iG,cAEI,MADA8uF,QACM,IAAI//F,UAAU,8CAKpB+uG,cACA,MAAMA,EAAU0F,EAAa5+G,IAAI6G,MACjC,GAAuB,kBAAZqyG,EACP,MAAM,IAAI/uG,UAAU,2DAAmE,OAATtD,KAAgB,cAAgBA,OAElH,OAAOqyG,GAGfwF,EAAgBnB,qBAAqBoB,EAAYttH,UAAW,SAuB5D,MAAMutH,EAAe,IAAI5M,QAEzBhhH,OAAOmtB,iBAAiBwgG,EAAYttH,UAAW,CAC3C6nH,QAAS,CAAErnH,YAAY,KAGL,mBAAX8gH,QAAuD,iBAAvBA,OAAOD,aAC9C1hH,OAAOC,eAAe0tH,EAAYttH,UAAWshH,OAAOD,YAAa,CAC7D5gH,cAAc,EACdF,MAAO,gBAQf,MAAMitH,EAIFzjG,cACI0jG,EAAQvuG,IAAI1J,KAzCpB,WACI,MAAMqxG,EAASlnH,OAAO6mB,OAAO8mG,EAAYttH,WAGzC,OAFAqtH,EAAgBT,YAAY7rH,KAAK8lH,GACjC0G,EAAaruG,IAAI2nG,GAAQ,GAClBA,EAqCe6G,IAKlB7G,aACA,OAAO8G,EAAUn4G,MAKrB9O,QA3CJ,IAAqBmgH,EAAAA,EA4CD8G,EAAUn4G,OA3CO,IAA7B+3G,EAAa5+G,IAAIk4G,KAGrB0G,EAAaruG,IAAI2nG,GAAQ,GACzBA,EAAOkG,cAAc,CAAEr3G,KAAM,YA6CjC,MAAM+3G,EAAU,IAAI9M,QAIpB,SAASgN,EAAUC,GACf,MAAM/G,EAAS4G,EAAQ9+G,IAAIi/G,GAC3B,GAAc,MAAV/G,EACA,MAAM,IAAI/tG,UAAU,+DAA6E,OAAf80G,EAAsB,cAAgBA,IAE5H,OAAO/G,EAGXlnH,OAAOmtB,iBAAiB0gG,EAAgBxtH,UAAW,CAC/C6mH,OAAQ,CAAErmH,YAAY,GACtBkG,MAAO,CAAElG,YAAY,KAEH,mBAAX8gH,QAAuD,iBAAvBA,OAAOD,aAC9C1hH,OAAOC,eAAe4tH,EAAgBxtH,UAAWshH,OAAOD,YAAa,CACjE5gH,cAAc,EACdF,MAAO,oBAIfiB,kBAA0BgsH,EAC1BhsH,cAAsB8rH,EACtB9rH,UAAkBgsH,EAElB7qH,UAAiB6qH,EACjB7qH,0BAAiCA,EAAOnB,QAAiB,QAAIgsH,EAC7D7qH,sBAA6B2qH;;ACrH5B,MAAMO,EAAU,GAEVC,EAAY7f,GAEG,oBAATxmG,MAAwBA,MAAQwmG,KAAYxmG,KAC/CA,KAIc,oBAAXzC,QAA0BA,QAAUipG,KAAYjpG,OACnDA,YAGc,IAAX6B,IAA0BA,IAAUonG,KAAYpnG,GACnDA,GAIkB,oBAAfg3B,YAA8BA,WACjCA,gBADR,EAKKkwF,EAAmB,CACxB,UACA,UACA,WACA,iBACA,QACA,kBACA,YAGD,IAAK,MAAM9f,KAAY8f,EACtBpuH,OAAOC,eAAeiuH,EAAS5f,EAAU,CACxCt/F,MACC,MAAMq/G,EAAeF,EAAU7f,GACzB1tG,EAAQytH,GAAgBA,EAAa/f,GAC3C,MAAwB,mBAAV1tG,EAAuBA,EAAMqI,KAAKolH,GAAgBztH,KAKnE,MAAMu5G,EAAWv5G,GAAmB,OAAVA,GAAmC,iBAAVA,EAC7C0tH,EAA6D,mBAA5BJ,EAAQL,gBACzCU,EAAoD,mBAA3BL,EAAQM,eACjCC,EAA+C,mBAArBP,EAAQQ,SAElCC,EAAe,CAACC,EAASC,KAC9B,MAAM32G,EAAS,IAAIg2G,EAAQxI,QAAQkJ,GAAW,IACxCE,EAAoBD,aAAmBX,EAAQxI,QAC/C/gF,EAAS,IAAIupF,EAAQxI,QAAQmJ,GAAW,IAE9C,IAAK,MAAOluH,EAAKC,KAAU+jC,EACrBmqF,GAA+B,cAAVluH,QAAoC8zG,IAAV9zG,EACnDsX,EAAO+2F,OAAOtuG,GAEduX,EAAOqH,IAAI5e,EAAKC,GAIlB,OAAOsX,GAGF62G,EAAY,IAAIC,KACrB,IAAI/C,EAAc,GACdlQ,EAAU,GAEd,IAAK,MAAMp3E,KAAUqqF,EAAS,CAC7B,GAAIv2G,MAAMuyF,QAAQrmE,GACXlsB,MAAMuyF,QAAQihB,KACnBA,EAAc,IAGfA,EAAc,IAAIA,KAAgBtnF,QAC5B,GAAIw1E,EAASx1E,GAAS,CAC5B,IAAK,IAAKhkC,EAAKC,KAAUZ,OAAO2gB,QAAQgkB,GACnCw1E,EAASv5G,IAAWD,KAAOsrH,IAC9BrrH,EAAQmuH,EAAU9C,EAAYtrH,GAAMC,IAGrCqrH,EAAc,IAAIA,EAAatrH,CAACA,GAAMC,GAGnCu5G,EAASx1E,EAAOo3E,WACnBA,EAAU4S,EAAa5S,EAASp3E,EAAOo3E,UAIzCkQ,EAAYlQ,QAAUA,EAGvB,OAAOkQ,GAGFgD,EAAiB,CACtB,MACA,OACA,MACA,QACA,OACA,UAGKC,EAAgB,CACrBvK,KAAM,mBACNv7G,KAAM,SACN+lH,SAAU,sBACVhO,YAAa,MACbM,KAAM,OAGD2N,EAAe,CACpB,MACA,MACA,OACA,SACA,UACA,SAGKC,EAAmB,CACxB,IACA,IACA,IACA,IACA,IACA,IACA,KAGKC,EAAwB,CAC7B,IACA,IACA,KAGKC,EAAO5N,OAAO,QAEpB,MAAM6N,UAAkBhuH,MACvB4oB,YAAYzhB,GAGXuwG,MACCvwG,EAAS89G,YACTr8G,OACsB,IAApBzB,EAASxD,QAAgBwD,EAASxD,OAClCwD,EAASxD,OAAS,2BAGrB0Q,KAAK6K,KAAO,YACZ7K,KAAKlN,SAAWA,GAIlB,MAAM8mH,UAAqBjuH,MAC1B4oB,YAAY+6F,GACXjM,MAAM,qBACNrjG,KAAK6K,KAAO,eACZ7K,KAAKsvG,QAAUA,GAIjB,MAAMuK,EAAQC,GAAM,IAAIztH,SAAQC,GAAWsM,WAAWtM,EAASwtH,KAGzDh4E,EAAU,CAACwtE,EAASyK,EAAiBp7F,IAC1C,IAAItyB,SAAQ,CAACC,EAASC,KACrB,MAAMytH,EAAYphH,YAAW,KACxBmhH,GACHA,EAAgB7oH,QAGjB3E,EAAO,IAAIqtH,EAAatK,MACtB3wF,EAAQmjB,SAGXnjB,EAAQknB,MAAMypE,GACZviH,KAAKT,GACLy5C,MAAMx5C,GACNQ,MAAK,KACLktH,aAAaD,SAKXE,EAAyBx1G,GAAS00G,EAAe/jB,SAAS3wF,GAASA,EAAMysG,cAAgBzsG,EAEzFy1G,EAAsB,CAC3BC,MAAO,EACPC,QAASd,EACTe,YAAad,EACbe,iBAAkBd,GAGbe,EAAwB,CAACC,EAAQ,MACtC,GAAqB,iBAAVA,EACV,MAAO,IACHN,EACHC,MAAOK,GAIT,GAAIA,EAAMJ,UAAYz3G,MAAMuyF,QAAQslB,EAAMJ,SACzC,MAAM,IAAI1uH,MAAM,kCAGjB,GAAI8uH,EAAMH,cAAgB13G,MAAMuyF,QAAQslB,EAAMH,aAC7C,MAAM,IAAI3uH,MAAM,sCAGjB,MAAO,IACHwuH,KACAM,EACHF,iBAAkBd,IAKdiB,EAAiB,WAEvB,MAAMC,EACLpmG,YAAY7P,EAAOia,EAAU,IAqB5B,GApBA3e,KAAK46G,YAAc,EACnB56G,KAAK66G,OAASn2G,EACd1E,KAAK86G,SAAW,CAEfh1E,YAAa9lC,KAAK66G,OAAO/0E,aAAe,iBACrCnnB,EACHunF,QAAS4S,EAAa94G,KAAK66G,OAAO3U,QAASvnF,EAAQunF,SACnD6U,MAAO7B,EAAU,CAChB8B,cAAe,GACfC,YAAa,GACbC,cAAe,IACbv8F,EAAQo8F,OACX59E,OAAQ+8E,EAAuBv7F,EAAQwe,QAAUn9B,KAAK66G,OAAO19E,QAC7Dg+E,UAAW5mH,OAAOoqB,EAAQw8F,WAAa,IACvCV,MAAOD,EAAsB77F,EAAQ87F,OACrCW,iBAA6C,IAA5Bz8F,EAAQy8F,gBACzBt5E,aAAoC,IAApBnjB,EAAQmjB,QAA0B,IAAQnjB,EAAQmjB,QAClE+D,MAAOlnB,EAAQknB,OAASwyE,EAAQxyE,OAGN,iBAAhB7lC,KAAK66G,UAAyB76G,KAAK66G,kBAAkB/J,KAAO9wG,KAAK66G,kBAAkBxC,EAAQpH,SACrG,MAAM,IAAI3tG,UAAU,6CAGrB,GAAItD,KAAK86G,SAASK,WAAoC,iBAAhBn7G,KAAK66G,OAAqB,CAC/D,GAAI76G,KAAK66G,OAAO5iH,WAAW,KAC1B,MAAM,IAAItM,MAAM,8DAGZqU,KAAK86G,SAASK,UAAUrkB,SAAS,OACrC92F,KAAK86G,SAASK,WAAa,KAG5Bn7G,KAAK66G,OAAS76G,KAAK86G,SAASK,UAAYn7G,KAAK66G,OAgB9C,GAbIpC,IACHz4G,KAAK+5G,gBAAkB,IAAI1B,EAAQL,gBAC/Bh4G,KAAK86G,SAASzJ,QACjBrxG,KAAK86G,SAASzJ,OAAOnmF,iBAAiB,SAAS,KAC9ClrB,KAAK+5G,gBAAgB7oH,WAIvB8O,KAAK86G,SAASzJ,OAASrxG,KAAK+5G,gBAAgB1I,QAG7CrxG,KAAKsvG,QAAU,IAAI+I,EAAQpH,QAAQjxG,KAAK66G,OAAQ76G,KAAK86G,UAEjD96G,KAAK86G,SAASO,aAAc,CAC/B,MAAMA,EAAe,IAAM,IAAIvL,gBAAgB9vG,KAAK86G,SAASO,cAAcj1G,WACrE7T,EAAMyN,KAAKsvG,QAAQ/8G,IAAIzB,QAAQ,oBAAqBuqH,KAGpDzC,GAAoB54G,KAAK86G,SAASh+F,gBAAgBu7F,EAAQQ,UAAa74G,KAAK86G,SAASh+F,gBAAgBgzF,kBAAsB9vG,KAAK86G,SAAS5U,SAAWlmG,KAAK86G,SAAS5U,QAAQ,iBAC/KlmG,KAAKsvG,QAAQpJ,QAAQ9M,OAAO,gBAG7Bp5F,KAAKsvG,QAAU,IAAI+I,EAAQpH,QAAQ,IAAIoH,EAAQpH,QAAQ1+G,EAAKyN,KAAKsvG,SAAUtvG,KAAK86G,eAGtDjc,IAAvB7+F,KAAK86G,SAAShM,OACjB9uG,KAAK86G,SAASh+F,KAAOyxF,KAAK+M,UAAUt7G,KAAK86G,SAAShM,MAClD9uG,KAAKsvG,QAAQpJ,QAAQx8F,IAAI,eAAgB,oBACzC1J,KAAKsvG,QAAU,IAAI+I,EAAQpH,QAAQjxG,KAAKsvG,QAAS,CAACxyF,KAAM9c,KAAK86G,SAASh+F,QAGvE,MAAMvF,EAAKspF,UACV,GAAI7gG,KAAK86G,SAASh5E,QAAU44E,EAC3B,MAAM,IAAIrU,WAAW,iDAAiDqU,WAGjEb,EAAM,GACZ,IAAI/mH,QAAiBkN,KAAKu7G,SAE1B,IAAK,MAAMC,KAAQx7G,KAAK86G,SAASC,MAAMG,cAAe,CAErD,MAAMO,QAAyBD,EAC9Bx7G,KAAKsvG,QACLtvG,KAAK86G,SACL96G,KAAK07G,kBAAkB5oH,EAAS4tB,UAG7B+6F,aAA4BpD,EAAQ3H,WACvC59G,EAAW2oH,GAMb,GAFAz7G,KAAK07G,kBAAkB5oH,IAElBA,EAASumB,IAAMrZ,KAAK86G,SAASM,gBACjC,MAAM,IAAIzB,EAAU7mH,GAKrB,GAAIkN,KAAK86G,SAASa,mBAAoB,CACrC,GAAgD,mBAArC37G,KAAK86G,SAASa,mBACxB,MAAM,IAAIr4G,UAAU,sDAGrB,IAAKo1G,EACJ,MAAM,IAAI/sH,MAAM,+EAGjB,OAAOqU,KAAK47G,QAAQ9oH,EAAS4tB,QAAS1gB,KAAK86G,SAASa,oBAGrD,OAAO7oH,GAIFuP,EADoBrC,KAAK86G,SAASL,MAAMJ,QAAQhlB,SAASr1F,KAAKsvG,QAAQnyE,OAAOipE,eAChDpmG,KAAK67G,OAAOtkG,GAAMA,IAErD,IAAK,MAAOrX,EAAM47G,KAAa3xH,OAAO2gB,QAAQuuG,GAC7Ch3G,EAAOnC,GAAQ2gG,UACd7gG,KAAKsvG,QAAQpJ,QAAQx8F,IAAI,SAAU1J,KAAKsvG,QAAQpJ,QAAQ/sG,IAAI,WAAa2iH,GAEzE,MAAMhpH,SAAkBuP,GAAQqe,QAEhC,GAAa,SAATxgB,EAAiB,CACpB,GAAwB,MAApBpN,EAASxD,OACZ,MAAO,GAGR,GAAIqvB,EAAQo9F,UACX,OAAOp9F,EAAQo9F,gBAAgBjpH,EAASS,QAI1C,OAAOT,EAASoN,MAIlB,OAAOmC,EAGR25G,qBAAqB5qH,GAGpB,GAFA4O,KAAK46G,cAED56G,KAAK46G,YAAc56G,KAAK86G,SAASL,MAAML,SAAWhpH,aAAiBwoH,GAAe,CACrF,GAAIxoH,aAAiBuoH,EAAW,CAC/B,IAAK35G,KAAK86G,SAASL,MAAMH,YAAYjlB,SAASjkG,EAAM0B,SAASxD,QAC5D,OAAO,EAGR,MAAM2sH,EAAa7qH,EAAM0B,SAASozG,QAAQ/sG,IAAI,eAC9C,GAAI8iH,GAAcj8G,KAAK86G,SAASL,MAAMF,iBAAiBllB,SAASjkG,EAAM0B,SAASxD,QAAS,CACvF,IAAI4sH,EAAQxlG,OAAOulG,GAOnB,OANIvlG,OAAO8tF,MAAM0X,GAChBA,EAAQv2G,KAAK4jG,MAAM0S,GAAct2G,KAAKpG,MAEtC28G,GAAS,SAGuC,IAAtCl8G,KAAK86G,SAASL,MAAM0B,eAAiCD,EAAQl8G,KAAK86G,SAASL,MAAM0B,cACpF,EAGDD,EAGR,GAA8B,MAA1B9qH,EAAM0B,SAASxD,OAClB,OAAO,EAKT,MADuB,GACE,IAAM0Q,KAAK46G,YAAc,GAAM,IAGzD,OAAO,EAGRc,kBAAkB5oH,GAOjB,OANIkN,KAAK86G,SAASiB,YACjBjpH,EAASg8G,KAAOjO,SACR7gG,KAAK86G,SAASiB,gBAAgBjpH,EAASS,SAIzCT,EAGR+tG,aAAatpF,GACZ,IACC,aAAaA,IACZ,MAAOnmB,GACR,MAAM0oH,EAAK91G,KAAKC,IAAIjE,KAAKg8G,qBAAqB5qH,GAAQspH,GACtD,GAAW,IAAPZ,GAAY95G,KAAK46G,YAAc,EAAG,OAC/Bf,EAAMC,GAEZ,IAAK,MAAM0B,KAAQx7G,KAAK86G,SAASC,MAAME,YAUtC,SARyBO,EAAK,CAC7BlM,QAAStvG,KAAKsvG,QACd3wF,QAAS3e,KAAK86G,SACd1pH,MAAAA,EACAgrH,WAAYp8G,KAAK46G,gBAIClB,EAClB,OAIF,OAAO15G,KAAK67G,OAAOtkG,GAGpB,GAAIvX,KAAK86G,SAASM,gBACjB,MAAMhqH,GAKTyvG,eACC,IAAK,MAAM2a,KAAQx7G,KAAK86G,SAASC,MAAMC,cAAe,CAErD,MAAM34G,QAAem5G,EAAKx7G,KAAKsvG,QAAStvG,KAAK86G,UAE7C,GAAIz4G,aAAkB4uG,QAAS,CAC9BjxG,KAAKsvG,QAAUjtG,EACf,MAGD,GAAIA,aAAkBquG,SACrB,OAAOruG,EAIT,OAA8B,IAA1BrC,KAAK86G,SAASh5E,QACV9hC,KAAK86G,SAASj1E,MAAM7lC,KAAKsvG,QAAQ5uF,SAGlCohB,EAAQ9hC,KAAKsvG,QAAQ5uF,QAAS1gB,KAAK+5G,gBAAiB/5G,KAAK86G,UAIjEc,QAAQ9oH,EAAU6oH,GACjB,MAAM7J,EAAap7F,OAAO5jB,EAASozG,QAAQ/sG,IAAI,oBAAsB,EACrE,IAAIkjH,EAAmB,EAEvB,OAAO,IAAIhE,EAAQ3H,SAClB,IAAI2H,EAAQM,eAAe,CAC1B/0G,MAAMw0G,GACL,MAAMkE,EAASxpH,EAASgqB,KAAKy/F,YAM7B1b,eAAetvG,IACd,MAAMzE,KAACA,EAAI/B,MAAEA,SAAeuxH,EAAO/qH,OAC/BzE,EACHsrH,EAAWjzG,SAIRw2G,IACHU,GAAoBtxH,EAAMkM,WAE1B0kH,EAAmB,CAACa,QADW,IAAf1K,EAAmB,EAAIuK,EAAmBvK,EAC7BuK,iBAAAA,EAAkBvK,WAAAA,GAAa/mH,IAG7DqtH,EAAWqE,QAAQ1xH,GACnBwG,KAlBGoqH,GACHA,EAAmB,CAACa,QAAS,EAAGH,iBAAkB,EAAGvK,WAAAA,GAAa,IAAInhH,YAoBvEY,SAOL,MAAMmrH,EAAmB,IAAIvD,KAC5B,IAAK,MAAMrqF,KAAUqqF,EACpB,KAAM7U,EAASx1E,IAAWlsB,MAAMuyF,QAAQrmE,UAA8B,IAAXA,EAC1D,MAAM,IAAIxrB,UAAU,4CAItB,OAAO41G,EAAU,MAAOC,IAGnBwD,EAAiB/vG,IACtB,MAAMgwG,EAAK,CAACl4G,EAAOia,IAAY,IAAIg8F,EAAGj2G,EAAOg4G,EAAiB9vG,EAAU+R,IAExE,IAAK,MAAMwe,KAAUi8E,EACpBwD,EAAGz/E,GAAU,CAACz4B,EAAOia,IAAY,IAAIg8F,EAAGj2G,EAAOg4G,EAAiB9vG,EAAU+R,EAAS,CAACwe,OAAAA,KASrF,OANAy/E,EAAGjD,UAAYA,EACfiD,EAAGhD,aAAeA,EAClBgD,EAAG5rG,OAAS6rG,GAAeF,EAAeD,EAAiBG,IAC3DD,EAAGE,OAASD,GAAeF,EAAeD,EAAiB9vG,EAAUiwG,IACrED,EAAGlD,KAAOA,EAEHkD,GAKR,OAFYD,IAphBoEI,GCAjF,MAAMl3E,GAAQq3D,WACR8a,GAAkB3X,WAwBxB,GApBKhvG,GAAOw0C,QACXx0C,GAAOw0C,MAAQ,CAACtzC,EAAKosB,IAAYknB,GAAMtzC,EAAK,CAACw8G,cAHxB,OAGyDpwF,KAG1EttB,GAAOw+G,UACXx+G,GAAOw+G,QAAUhqE,GAAMgqE,SAGnBx+G,GAAO4/G,UACX5/G,GAAO4/G,QAAUprE,GAAMorE,SAGnB5/G,GAAOq/G,WACXr/G,GAAOq/G,SAAW7qE,GAAM6qE,UAGpBr/G,GAAO2mH,kBACX3mH,GAAO2mH,gBAAkBA,KAGrB3mH,GAAOsnH,eACX,IACCtnH,GAAOsnH,eAAiBjtH,QAAQ,wCAC/B,MAAO8mC,QAGVwqF,GAAiBzc;;;GC3BV,MAAM0c,GAAkB,CAC7B1W,OAAQ,yCAGJqW,GAAKM,GAAWlsG,OAAO,CAACk1F,QAAS+W,KAEjCE,GAAe,IAAIta,IAAI,CAC3B,MAAO,OAAQ,OAAQ,QAAS,OAAQ,WAG7Bua,GAAa,IAAIjN,MAAMyM,GAAI,CACtC5vH,MAAOqwH,GACPlkH,IAAI0F,EAAQy+G,GACV,MAAMC,EAAY1+G,EAAOy+G,GAGzB,OAAIH,GAAangB,IAAIsgB,GAGdzc,iBACL,OAAOwc,GAAgBE,EAAWv9G,KAAM6C,YAHjC06G,KAQb1c,eAAewc,GAAgBx+G,EAAQ2+G,EAASlkH,GAC9C,IAAIxG,EACJ,IACEA,QAAiB+L,EAAO7R,MAAMwwH,EAASlkH,GACvC,MAAM3M,GACN,OAaJk0G,eAA4Bl0G,GAE1B,IAAIA,EAAEmG,SAIJ,KAHiB,oBAAdnG,EAAEqS,UACHrS,EAAEqS,QAAU,GAAGrS,EAAEqS,iCAEbrS,EAIRA,EAAE2C,OAAS3C,EAAEmG,SAASxD,OAEtB,MAAMqhH,EAAchkH,EAAEmG,SAASozG,QAAQ/sG,IAAI,gBAC3C,GAAGw3G,GAAeA,EAAYtb,SAAS,QAAS,CAC9C,MAAMooB,QAAkB9wH,EAAEmG,SAASg8G,OAGnCniH,EAAEqS,QAAUy+G,EAAUz+G,SAAWrS,EAAEqS,QACnCrS,EAAE8E,KAAOgsH,EAEX,MAAM9wH,EAjCG+wH,CAAa/wH,GAEtB,MAAMgxH,UAACA,GAAY,GAAQrkH,EAAK,IAAM,GACtC,GAAGqkH,EAAW,CAEZ,MAAMhN,EAAc79G,EAASozG,QAAQ/sG,IAAI,gBACtCw3G,GAAeA,EAAYtb,SAAS,UACrCviG,EAASrB,WAAaqB,EAASg8G,QAGnC,OAAOh8G,EA0BT,OAAe,YACbsqH,GACAR,GAAIM,GACJD,gBAAAA,uFCrEF,MAAM/Q,GAAQhP,GACRsJ,gBAACA,GAAeP,aAAEA,IAAgB5F,IAClC2H,oBAACA,IAAuBzH,GACxBgF,GAAc/E,GACdod,GAAena,gBACdsG,IAAerG,IAChB0Z,WAACA,IAAc9Q,GCNrB,MAAMuR,GD4BW,EACfC,OAAAA,EACAC,UAAAA,GAAY,EACZC,aAAAA,GAAe,EACf9X,QAAAA,EAAU,GACV+X,UAAAA,EACAC,WAAAA,GACE,CAACH,WAAW,EAAMC,cAAe,EAAG9X,QAAS,OAG1C,eAFLA,EAAUD,GAAaC,MAGrBA,EAAU/7G,OAAOm8G,OAAO,GAAIJ,EAAS,CACnC,aAAc,eAGlB,MAAM+F,EAAOM,EAGb,OADc,IAAIqR,IACL7U,YAAW,SAASx2G,GAC/B,OAAO4rH,EAAa5rH,EAAK,OAG3BsuG,eAAesd,EAAa5rH,EAAK6rH,GAC/B,MAAMC,EAAS9rH,EAAI0F,WAAW,SACxBqmH,EAAU/rH,EAAI0F,WAAW,UAC/B,IAAIomH,IAAWC,EACb,MAAM,IAAI/Y,GACR,6EAEA,oBAAqB,CAAC/wF,KAAM,0BAA2BjiB,IAAAA,IAE3D,GAAGurH,IAAWQ,EACZ,MAAM,IAAI/Y,GACR,8FAEA,oBAAqB,CAAC/wF,KAAM,0BAA2BjiB,IAAAA,IAG3D,IAAIgsH,EAAM,KACV,GAAW,OAARA,EACD,OAAOA,EAGT,IAAIC,EAAY,KAEhB,MAAMC,IAACA,EAAG3hG,KAAEA,SAqFhB+jF,gBAAsBtuG,IAACA,EAAG2zG,QAAEA,EAAO6X,UAAEA,EAASE,UAAEA,EAASC,WAAEA,IACzD,IACE,MAAMv/F,EAAU,CAACunF,QAAAA,EAASoL,SAAU,UACpB/+G,EAAI0F,WAAW,UAE7B0mB,EAAQ6yF,MACN0M,GAAc,IAAIhS,GAAMwS,MAAM,CAACC,mBAAoBZ,IAElDE,IACDt/F,EAAQ6yF,MAAQyM,GAGpB,MAAMQ,QAAYrB,GAAWjkH,IAAI5G,EAAKosB,GACtC,MAAO,CAAC8/F,IAAAA,EAAK3hG,KAAM2hG,EAAIhtH,MACvB,MAAM9E,GAGN,GAAGA,EAAEmG,SACH,MAAO,CAAC2rH,IAAK9xH,EAAEmG,SAAUgqB,KAAM,MAEjC,MAAM,IAAIyoF,GACR,oDACA,2BACA,CAAC/wF,KAAM,0BAA2BjiB,IAAAA,EAAKqsH,MAAOjyH,KA5GtB4uH,CAAO,CAC/BhpH,IAAAA,EAAK2zG,QAAAA,EAAS6X,UAAAA,EAAWE,UAAAA,EAAWC,WAAAA,IAEtCK,EAAM,CAACM,WAAY,KAAMC,YAAavsH,EAAKjF,SAAUwvB,GAAQ,MAE7D,MAAM8zF,EAAa3E,EAAK8S,aAAaN,EAAInvH,QACzC,GAAGmvH,EAAInvH,QAAU,IACf,MAAM,IAAIi2G,GACR,QAAQhzG,iCAAmCq+G,IAC3C,oBAAqB,CACnBp8F,KAAM,0BACNjiB,IAAAA,EACAysH,eAAgBP,EAAInvH,SAG1B,MAAMkZ,EAAOi2G,EAAIvY,QAAQ/sG,IAAI,QACvBw3G,EAAc8N,EAAIvY,QAAQ/sG,IAAI,gBAEpC,GAAGqP,GAAwB,wBAAhBmoG,EAAuC,CAEhD,MAAMsO,EAAczY,GAAgBh+F,GAC9B02G,EAAgBD,EAAYjX,IAClC,GAAGplG,MAAMuyF,QAAQ+pB,GACf,MAAM,IAAI3Z,GACR,mFAEA,oBACA,CAAC/wF,KAAM,gCAAiCjiB,IAAAA,IAEzC2sH,IACDX,EAAIM,WAAaK,EAAcrgH,QAIjC2/G,EAAYS,EAAuB,UAChCT,GACiB,uBAAlBA,EAAUt+G,QACRywG,GAAe,IACdhS,MAAM,gCACT8f,EAAIvY,QAAQx8F,IAAI,WAAYqgG,GAAYx3G,EAAKisH,EAAU3/G,SAG3D,MAAM3M,EAAWusH,EAAIvY,QAAQ/sG,IAAI,YAEjC,IAAIqlH,GACFC,EAAInvH,QAAU,KAAOmvH,EAAInvH,OAAS,MAAQ4C,EAAU,CACpD,GAAGksH,EAAUvtH,SAAWmtH,EACtB,MAAM,IAAIzY,GACR,gEACA,0BAA2B,CACzB/wF,KAAM,0BACNjiB,IAAAA,EACAysH,eAAgBP,EAAInvH,OACpB8uH,UAAAA,IAGN,IAA+B,IAA5BA,EAAUhsH,QAAQG,GACnB,MAAM,IAAIgzG,GACR,oEACA,kCAAmC,CACjC/wF,KAAM,8BACNjiB,IAAAA,EACAysH,eAAgBP,EAAInvH,OACpB8uH,UAAAA,IAIN,OADAA,EAAUzgH,KAAKpL,GACR4rH,EAAajsH,EAAUksH,GAchC,OAVAA,EAAUzgH,KAAKpL,GAURgsH,ICxJLrrB,GAAM,OACZisB,GAAiBjsB,GAOjBA,GAAIksB,qBAAuB,SAASC,GAClCA,EAAOC,gBAAgB1vH,KAAOiuH,GAE9BwB,EAAOE,kBAAkB,SAS3BrsB,GAAIssB,aAAe,SAASH,SC1B5BI,GAAiBC,GAKjB,SAASA,GAAShiB,GAChB,IAAIzrG,EAAO+N,KASX,GARM/N,aAAgBytH,KACpBztH,EAAO,IAAIytH,IAGbztH,EAAK0tH,KAAO,KACZ1tH,EAAK2tH,KAAO,KACZ3tH,EAAKpB,OAAS,EAEV6sG,GAAgC,mBAAjBA,EAAK9sF,QACtB8sF,EAAK9sF,SAAQ,SAAUwkF,GACrBnjG,EAAK0L,KAAKy3F,WAEP,GAAIvyF,UAAUhS,OAAS,EAC5B,IAAK,IAAImE,EAAI,EAAG+N,EAAIF,UAAUhS,OAAQmE,EAAI+N,EAAG/N,IAC3C/C,EAAK0L,KAAKkF,UAAU7N,IAIxB,OAAO/C,EAoVT,SAAS4tH,GAAQ5tH,EAAMrC,EAAM7E,GAC3B,IAAI+0H,EAAWlwH,IAASqC,EAAK2tH,KAC3B,IAAIG,GAAKh1H,EAAO,KAAM6E,EAAMqC,GAC5B,IAAI8tH,GAAKh1H,EAAO6E,EAAMA,EAAKlD,KAAMuF,GAWnC,OATsB,OAAlB6tH,EAASpzH,OACXuF,EAAK0tH,KAAOG,GAEQ,OAAlBA,EAASx4E,OACXr1C,EAAK2tH,KAAOE,GAGd7tH,EAAKpB,SAEEivH,EAGT,SAASniH,GAAM1L,EAAMmjG,GACnBnjG,EAAK0tH,KAAO,IAAII,GAAK3qB,EAAMnjG,EAAK0tH,KAAM,KAAM1tH,GACvCA,EAAK2tH,OACR3tH,EAAK2tH,KAAO3tH,EAAK0tH,MAEnB1tH,EAAKpB,SAGP,SAAS+Q,GAAS3P,EAAMmjG,GACtBnjG,EAAK2tH,KAAO,IAAIG,GAAK3qB,EAAM,KAAMnjG,EAAK2tH,KAAM3tH,GACvCA,EAAK0tH,OACR1tH,EAAK0tH,KAAO1tH,EAAK2tH,MAEnB3tH,EAAKpB,SAGP,SAASkvH,GAAMh1H,EAAOu8C,EAAM56C,EAAMgxG,GAChC,KAAM19F,gBAAgB+/G,IACpB,OAAO,IAAIA,GAAKh1H,EAAOu8C,EAAM56C,EAAMgxG,GAGrC19F,KAAK09F,KAAOA,EACZ19F,KAAKjV,MAAQA,EAETu8C,GACFA,EAAK56C,KAAOsT,KACZA,KAAKsnC,KAAOA,GAEZtnC,KAAKsnC,KAAO,KAGV56C,GACFA,EAAK46C,KAAOtnC,KACZA,KAAKtT,KAAOA,GAEZsT,KAAKtT,KAAO,KA/ZhBgzH,GAAQK,KAAOA,GACfL,GAAQ1uG,OAAS0uG,GAyBjBA,GAAQl1H,UAAUw1H,WAAa,SAAUpwH,GACvC,GAAIA,EAAK8tG,OAAS19F,KAChB,MAAM,IAAIrU,MAAM,oDAGlB,IAAIe,EAAOkD,EAAKlD,KACZ46C,EAAO13C,EAAK03C,KAsBhB,OApBI56C,IACFA,EAAK46C,KAAOA,GAGVA,IACFA,EAAK56C,KAAOA,GAGVkD,IAASoQ,KAAK4/G,OAChB5/G,KAAK4/G,KAAOlzH,GAEVkD,IAASoQ,KAAK2/G,OAChB3/G,KAAK2/G,KAAOr4E,GAGd13C,EAAK8tG,KAAK7sG,SACVjB,EAAKlD,KAAO,KACZkD,EAAK03C,KAAO,KACZ13C,EAAK8tG,KAAO,KAELhxG,GAGTgzH,GAAQl1H,UAAUy1H,YAAc,SAAUrwH,GACxC,GAAIA,IAASoQ,KAAK4/G,KAAlB,CAIIhwH,EAAK8tG,MACP9tG,EAAK8tG,KAAKsiB,WAAWpwH,GAGvB,IAAIgwH,EAAO5/G,KAAK4/G,KAChBhwH,EAAK8tG,KAAO19F,KACZpQ,EAAKlD,KAAOkzH,EACRA,IACFA,EAAKt4E,KAAO13C,GAGdoQ,KAAK4/G,KAAOhwH,EACPoQ,KAAK2/G,OACR3/G,KAAK2/G,KAAO/vH,GAEdoQ,KAAKnP,WAGP6uH,GAAQl1H,UAAU01H,SAAW,SAAUtwH,GACrC,GAAIA,IAASoQ,KAAK2/G,KAAlB,CAII/vH,EAAK8tG,MACP9tG,EAAK8tG,KAAKsiB,WAAWpwH,GAGvB,IAAI+vH,EAAO3/G,KAAK2/G,KAChB/vH,EAAK8tG,KAAO19F,KACZpQ,EAAK03C,KAAOq4E,EACRA,IACFA,EAAKjzH,KAAOkD,GAGdoQ,KAAK2/G,KAAO/vH,EACPoQ,KAAK4/G,OACR5/G,KAAK4/G,KAAOhwH,GAEdoQ,KAAKnP,WAGP6uH,GAAQl1H,UAAUmT,KAAO,WACvB,IAAK,IAAI3I,EAAI,EAAG+N,EAAIF,UAAUhS,OAAQmE,EAAI+N,EAAG/N,IAC3C2I,GAAKqC,KAAM6C,UAAU7N,IAEvB,OAAOgL,KAAKnP,QAGd6uH,GAAQl1H,UAAUoX,QAAU,WAC1B,IAAK,IAAI5M,EAAI,EAAG+N,EAAIF,UAAUhS,OAAQmE,EAAI+N,EAAG/N,IAC3C4M,GAAQ5B,KAAM6C,UAAU7N,IAE1B,OAAOgL,KAAKnP,QAGd6uH,GAAQl1H,UAAU+R,IAAM,WACtB,GAAKyD,KAAK2/G,KAAV,CAIA,IAAIlB,EAAMz+G,KAAK2/G,KAAK50H,MAQpB,OAPAiV,KAAK2/G,KAAO3/G,KAAK2/G,KAAKr4E,KAClBtnC,KAAK2/G,KACP3/G,KAAK2/G,KAAKjzH,KAAO,KAEjBsT,KAAK4/G,KAAO,KAEd5/G,KAAKnP,SACE4tH,IAGTiB,GAAQl1H,UAAUwO,MAAQ,WACxB,GAAKgH,KAAK4/G,KAAV,CAIA,IAAInB,EAAMz+G,KAAK4/G,KAAK70H,MAQpB,OAPAiV,KAAK4/G,KAAO5/G,KAAK4/G,KAAKlzH,KAClBsT,KAAK4/G,KACP5/G,KAAK4/G,KAAKt4E,KAAO,KAEjBtnC,KAAK2/G,KAAO,KAEd3/G,KAAKnP,SACE4tH,IAGTiB,GAAQl1H,UAAUomB,QAAU,SAAU2G,EAAI4oG,GACxCA,EAAQA,GAASngH,KACjB,IAAK,IAAIogH,EAASpgH,KAAK4/G,KAAM5qH,EAAI,EAAc,OAAXorH,EAAiBprH,IACnDuiB,EAAGhsB,KAAK40H,EAAOC,EAAOr1H,MAAOiK,EAAGgL,MAChCogH,EAASA,EAAO1zH,MAIpBgzH,GAAQl1H,UAAU61H,eAAiB,SAAU9oG,EAAI4oG,GAC/CA,EAAQA,GAASngH,KACjB,IAAK,IAAIogH,EAASpgH,KAAK2/G,KAAM3qH,EAAIgL,KAAKnP,OAAS,EAAc,OAAXuvH,EAAiBprH,IACjEuiB,EAAGhsB,KAAK40H,EAAOC,EAAOr1H,MAAOiK,EAAGgL,MAChCogH,EAASA,EAAO94E,MAIpBo4E,GAAQl1H,UAAU2O,IAAM,SAAUs3B,GAChC,IAAK,IAAIz7B,EAAI,EAAGorH,EAASpgH,KAAK4/G,KAAiB,OAAXQ,GAAmBprH,EAAIy7B,EAAGz7B,IAE5DorH,EAASA,EAAO1zH,KAElB,GAAIsI,IAAMy7B,GAAgB,OAAX2vF,EACb,OAAOA,EAAOr1H,OAIlB20H,GAAQl1H,UAAU81H,WAAa,SAAU7vF,GACvC,IAAK,IAAIz7B,EAAI,EAAGorH,EAASpgH,KAAK2/G,KAAiB,OAAXS,GAAmBprH,EAAIy7B,EAAGz7B,IAE5DorH,EAASA,EAAO94E,KAElB,GAAItyC,IAAMy7B,GAAgB,OAAX2vF,EACb,OAAOA,EAAOr1H,OAIlB20H,GAAQl1H,UAAUs7B,IAAM,SAAUvO,EAAI4oG,GACpCA,EAAQA,GAASngH,KAEjB,IADA,IAAIy+G,EAAM,IAAIiB,GACLU,EAASpgH,KAAK4/G,KAAiB,OAAXQ,GAC3B3B,EAAI9gH,KAAK4Z,EAAGhsB,KAAK40H,EAAOC,EAAOr1H,MAAOiV,OACtCogH,EAASA,EAAO1zH,KAElB,OAAO+xH,GAGTiB,GAAQl1H,UAAU+1H,WAAa,SAAUhpG,EAAI4oG,GAC3CA,EAAQA,GAASngH,KAEjB,IADA,IAAIy+G,EAAM,IAAIiB,GACLU,EAASpgH,KAAK2/G,KAAiB,OAAXS,GAC3B3B,EAAI9gH,KAAK4Z,EAAGhsB,KAAK40H,EAAOC,EAAOr1H,MAAOiV,OACtCogH,EAASA,EAAO94E,KAElB,OAAOm3E,GAGTiB,GAAQl1H,UAAU6lH,OAAS,SAAU94F,EAAI1gB,GACvC,IAAI2pH,EACAJ,EAASpgH,KAAK4/G,KAClB,GAAI/8G,UAAUhS,OAAS,EACrB2vH,EAAM3pH,MACD,CAAA,IAAImJ,KAAK4/G,KAId,MAAM,IAAIt8G,UAAU,8CAHpB88G,EAASpgH,KAAK4/G,KAAKlzH,KACnB8zH,EAAMxgH,KAAK4/G,KAAK70H,MAKlB,IAAK,IAAIiK,EAAI,EAAc,OAAXorH,EAAiBprH,IAC/BwrH,EAAMjpG,EAAGipG,EAAKJ,EAAOr1H,MAAOiK,GAC5BorH,EAASA,EAAO1zH,KAGlB,OAAO8zH,GAGTd,GAAQl1H,UAAUi2H,cAAgB,SAAUlpG,EAAI1gB,GAC9C,IAAI2pH,EACAJ,EAASpgH,KAAK2/G,KAClB,GAAI98G,UAAUhS,OAAS,EACrB2vH,EAAM3pH,MACD,CAAA,IAAImJ,KAAK2/G,KAId,MAAM,IAAIr8G,UAAU,8CAHpB88G,EAASpgH,KAAK2/G,KAAKr4E,KACnBk5E,EAAMxgH,KAAK2/G,KAAK50H,MAKlB,IAAK,IAAIiK,EAAIgL,KAAKnP,OAAS,EAAc,OAAXuvH,EAAiBprH,IAC7CwrH,EAAMjpG,EAAGipG,EAAKJ,EAAOr1H,MAAOiK,GAC5BorH,EAASA,EAAO94E,KAGlB,OAAOk5E,GAGTd,GAAQl1H,UAAUk2H,QAAU,WAE1B,IADA,IAAI/8G,EAAM,IAAIf,MAAM5C,KAAKnP,QAChBmE,EAAI,EAAGorH,EAASpgH,KAAK4/G,KAAiB,OAAXQ,EAAiBprH,IACnD2O,EAAI3O,GAAKorH,EAAOr1H,MAChBq1H,EAASA,EAAO1zH,KAElB,OAAOiX,GAGT+7G,GAAQl1H,UAAUm2H,eAAiB,WAEjC,IADA,IAAIh9G,EAAM,IAAIf,MAAM5C,KAAKnP,QAChBmE,EAAI,EAAGorH,EAASpgH,KAAK2/G,KAAiB,OAAXS,EAAiBprH,IACnD2O,EAAI3O,GAAKorH,EAAOr1H,MAChBq1H,EAASA,EAAO94E,KAElB,OAAO3jC,GAGT+7G,GAAQl1H,UAAUuG,MAAQ,SAAUyS,EAAMC,IACxCA,EAAKA,GAAMzD,KAAKnP,QACP,IACP4S,GAAMzD,KAAKnP,SAEb2S,EAAOA,GAAQ,GACJ,IACTA,GAAQxD,KAAKnP,QAEf,IAAIH,EAAM,IAAIgvH,GACd,GAAIj8G,EAAKD,GAAQC,EAAK,EACpB,OAAO/S,EAEL8S,EAAO,IACTA,EAAO,GAELC,EAAKzD,KAAKnP,SACZ4S,EAAKzD,KAAKnP,QAEZ,IAAK,IAAImE,EAAI,EAAGorH,EAASpgH,KAAK4/G,KAAiB,OAAXQ,GAAmBprH,EAAIwO,EAAMxO,IAC/DorH,EAASA,EAAO1zH,KAElB,KAAkB,OAAX0zH,GAAmBprH,EAAIyO,EAAIzO,IAAKorH,EAASA,EAAO1zH,KACrDgE,EAAIiN,KAAKyiH,EAAOr1H,OAElB,OAAO2F,GAGTgvH,GAAQl1H,UAAUo2H,aAAe,SAAUp9G,EAAMC,IAC/CA,EAAKA,GAAMzD,KAAKnP,QACP,IACP4S,GAAMzD,KAAKnP,SAEb2S,EAAOA,GAAQ,GACJ,IACTA,GAAQxD,KAAKnP,QAEf,IAAIH,EAAM,IAAIgvH,GACd,GAAIj8G,EAAKD,GAAQC,EAAK,EACpB,OAAO/S,EAEL8S,EAAO,IACTA,EAAO,GAELC,EAAKzD,KAAKnP,SACZ4S,EAAKzD,KAAKnP,QAEZ,IAAK,IAAImE,EAAIgL,KAAKnP,OAAQuvH,EAASpgH,KAAK2/G,KAAiB,OAAXS,GAAmBprH,EAAIyO,EAAIzO,IACvEorH,EAASA,EAAO94E,KAElB,KAAkB,OAAX84E,GAAmBprH,EAAIwO,EAAMxO,IAAKorH,EAASA,EAAO94E,KACvD52C,EAAIiN,KAAKyiH,EAAOr1H,OAElB,OAAO2F,GAGTgvH,GAAQl1H,UAAUoT,OAAS,SAAUgG,EAAOi9G,KAAgBprB,GACtD7xF,EAAQ5D,KAAKnP,SACf+S,EAAQ5D,KAAKnP,OAAS,GAEpB+S,EAAQ,IACVA,EAAQ5D,KAAKnP,OAAS+S,GAGxB,IAAK,IAAI5O,EAAI,EAAGorH,EAASpgH,KAAK4/G,KAAiB,OAAXQ,GAAmBprH,EAAI4O,EAAO5O,IAChEorH,EAASA,EAAO1zH,KAGlB,IAAIgE,EAAM,GACV,IAASsE,EAAI,EAAGorH,GAAUprH,EAAI6rH,EAAa7rH,IACzCtE,EAAIiN,KAAKyiH,EAAOr1H,OAChBq1H,EAASpgH,KAAKggH,WAAWI,GAEZ,OAAXA,IACFA,EAASpgH,KAAK2/G,MAGZS,IAAWpgH,KAAK4/G,MAAQQ,IAAWpgH,KAAK2/G,OAC1CS,EAASA,EAAO94E,MAGlB,IAAStyC,EAAI,EAAGA,EAAIygG,EAAM5kG,OAAQmE,IAChCorH,EAASP,GAAO7/G,KAAMogH,EAAQ3qB,EAAMzgG,IAEtC,OAAOtE,GAGTgvH,GAAQl1H,UAAU8qB,QAAU,WAG1B,IAFA,IAAIsqG,EAAO5/G,KAAK4/G,KACZD,EAAO3/G,KAAK2/G,KACPS,EAASR,EAAiB,OAAXQ,EAAiBA,EAASA,EAAO94E,KAAM,CAC7D,IAAInlC,EAAIi+G,EAAO94E,KACf84E,EAAO94E,KAAO84E,EAAO1zH,KACrB0zH,EAAO1zH,KAAOyV,EAIhB,OAFAnC,KAAK4/G,KAAOD,EACZ3/G,KAAK2/G,KAAOC,EACL5/G,MA2DT,IAEEtU,QAAQ,gBAARA,CAAyBg0H,IACzB,MAAOoB,ICtaT,MAAMpB,GAAUxiB,GAEV6jB,GAAMjV,OAAO,OACbkV,GAASlV,OAAO,UAChBmV,GAAoBnV,OAAO,oBAC3BoV,GAAcpV,OAAO,cACrBqV,GAAUrV,OAAO,UACjBsV,GAAUtV,OAAO,WACjBuV,GAAoBvV,OAAO,kBAC3BwV,GAAWxV,OAAO,WAClByV,GAAQzV,OAAO,SACf0V,GAAoB1V,OAAO,kBAE3B2V,GAAc,IAAM,EAkP1B,MAAMtoH,GAAM,CAAClH,EAAMnH,EAAK42H,KACtB,MAAM9xH,EAAOqC,EAAKsvH,IAAOpoH,IAAIrO,GAC7B,GAAI8E,EAAM,CACR,MAAM+xH,EAAM/xH,EAAK7E,MACjB,GAAI62H,GAAQ3vH,EAAM0vH,IAEhB,GADArlG,GAAIrqB,EAAMrC,IACLqC,EAAKivH,IACR,YAEEQ,IACEzvH,EAAKuvH,MACP5xH,EAAK7E,MAAMwU,IAAMoG,KAAKpG,OACxBtN,EAAKqvH,IAAUrB,YAAYrwH,IAG/B,OAAO+xH,EAAI52H,QAIT62H,GAAU,CAAC3vH,EAAM0vH,KACrB,IAAKA,IAASA,EAAIE,SAAW5vH,EAAKkvH,IAChC,OAAO,EAET,MAAMW,EAAOn8G,KAAKpG,MAAQoiH,EAAIpiH,IAC9B,OAAOoiH,EAAIE,OAASC,EAAOH,EAAIE,OAC3B5vH,EAAKkvH,KAAaW,EAAO7vH,EAAKkvH,KAG9Bz9G,GAAOzR,IACX,GAAIA,EAAK+uH,IAAU/uH,EAAK8uH,IACtB,IAAK,IAAIX,EAASnuH,EAAKqvH,IAAU3B,KAC/B1tH,EAAK+uH,IAAU/uH,EAAK8uH,KAAmB,OAAXX,GAAkB,CAI9C,MAAM94E,EAAO84E,EAAO94E,KACpBhrB,GAAIrqB,EAAMmuH,GACVA,EAAS94E,IAKThrB,GAAM,CAACrqB,EAAMrC,KACjB,GAAIA,EAAM,CACR,MAAM+xH,EAAM/xH,EAAK7E,MACbkH,EAAKmvH,KACPnvH,EAAKmvH,IAASO,EAAI72H,IAAK62H,EAAI52H,OAE7BkH,EAAK+uH,KAAWW,EAAI9wH,OACpBoB,EAAKsvH,IAAOnoB,OAAOuoB,EAAI72H,KACvBmH,EAAKqvH,IAAUtB,WAAWpwH,KAI9B,MAAMmyH,GACJxtG,YAAazpB,EAAKC,EAAO8F,EAAQ0O,EAAKsiH,GACpC7hH,KAAKlV,IAAMA,EACXkV,KAAKjV,MAAQA,EACbiV,KAAKnP,OAASA,EACdmP,KAAKT,IAAMA,EACXS,KAAK6hH,OAASA,GAAU,GAI5B,MAAMG,GAAc,CAAC/vH,EAAMslB,EAAI3nB,EAAMuwH,KACnC,IAAIwB,EAAM/xH,EAAK7E,MACX62H,GAAQ3vH,EAAM0vH,KAChBrlG,GAAIrqB,EAAMrC,GACLqC,EAAKivH,MACRS,OAAM9iB,IAEN8iB,GACFpqG,EAAGhsB,KAAK40H,EAAOwB,EAAI52H,MAAO42H,EAAI72H,IAAKmH,QAGvCgwH,GAnTA,MACE1tG,YAAaoK,GAOX,GANuB,iBAAZA,IACTA,EAAU,CAAEnV,IAAKmV,IAEdA,IACHA,EAAU,IAERA,EAAQnV,MAA+B,iBAAhBmV,EAAQnV,KAAoBmV,EAAQnV,IAAM,GACnE,MAAM,IAAIlG,UAAU,qCAEVtD,KAAK+gH,IAAOpiG,EAAQnV,KAAOpP,EAAAA,EAEvC,MAAM8nH,EAAKvjG,EAAQ9tB,QAAU4wH,GAG7B,GAFAzhH,KAAKihH,IAAoC,mBAAPiB,EAAqBT,GAAcS,EACrEliH,KAAKkhH,IAAeviG,EAAQwjG,QAAS,EACjCxjG,EAAQkjG,QAAoC,iBAAnBljG,EAAQkjG,OACnC,MAAM,IAAIv+G,UAAU,2BACtBtD,KAAKmhH,IAAWxiG,EAAQkjG,QAAU,EAClC7hH,KAAKohH,IAAWziG,EAAQyjG,QACxBpiH,KAAKqhH,IAAqB1iG,EAAQ0jG,iBAAkB,EACpDriH,KAAKwhH,IAAqB7iG,EAAQ2jG,iBAAkB,EACpDtiH,KAAKuiH,QAIH/4G,QAAKg5G,GACP,GAAkB,iBAAPA,GAAmBA,EAAK,EACjC,MAAM,IAAIl/G,UAAU,qCAEtBtD,KAAK+gH,IAAOyB,GAAMpoH,EAAAA,EAClBsJ,GAAK1D,MAEHwJ,UACF,OAAOxJ,KAAK+gH,IAGV0B,eAAYA,GACdziH,KAAKkhH,MAAiBuB,EAEpBA,iBACF,OAAOziH,KAAKkhH,IAGVW,WAAQa,GACV,GAAkB,iBAAPA,EACT,MAAM,IAAIp/G,UAAU,wCAEtBtD,KAAKmhH,IAAWuB,EAChBh/G,GAAK1D,MAEH6hH,aACF,OAAO7hH,KAAKmhH,IAIVwB,qBAAkBC,GACF,mBAAPA,IACTA,EAAKnB,IAEHmB,IAAO5iH,KAAKihH,MACdjhH,KAAKihH,IAAqB2B,EAC1B5iH,KAAKghH,IAAU,EACfhhH,KAAKshH,IAAU1wG,SAAQ+wG,IACrBA,EAAI9wH,OAASmP,KAAKihH,IAAmBU,EAAI52H,MAAO42H,EAAI72H,KACpDkV,KAAKghH,KAAWW,EAAI9wH,WAGxB6S,GAAK1D,MAEH2iH,uBAAsB,OAAO3iH,KAAKihH,IAElCpwH,aAAY,OAAOmP,KAAKghH,IACxB6B,gBAAe,OAAO7iH,KAAKshH,IAAUzwH,OAEzCiyH,SAAUvrG,EAAI4oG,GACZA,EAAQA,GAASngH,KACjB,IAAK,IAAIogH,EAASpgH,KAAKshH,IAAU3B,KAAiB,OAAXS,GAAkB,CACvD,MAAM94E,EAAO84E,EAAO94E,KACpB06E,GAAYhiH,KAAMuX,EAAI6oG,EAAQD,GAC9BC,EAAS94E,GAIb12B,QAAS2G,EAAI4oG,GACXA,EAAQA,GAASngH,KACjB,IAAK,IAAIogH,EAASpgH,KAAKshH,IAAU1B,KAAiB,OAAXQ,GAAkB,CACvD,MAAM1zH,EAAO0zH,EAAO1zH,KACpBs1H,GAAYhiH,KAAMuX,EAAI6oG,EAAQD,GAC9BC,EAAS1zH,GAIbX,OACE,OAAOiU,KAAKshH,IAAUZ,UAAU56F,KAAInC,GAAKA,EAAE74B,MAG7C2yC,SACE,OAAOz9B,KAAKshH,IAAUZ,UAAU56F,KAAInC,GAAKA,EAAE54B,QAG7Cw3H,QACMviH,KAAKohH,KACLphH,KAAKshH,KACLthH,KAAKshH,IAAUzwH,QACjBmP,KAAKshH,IAAU1wG,SAAQ+wG,GAAO3hH,KAAKohH,IAASO,EAAI72H,IAAK62H,EAAI52H,SAG3DiV,KAAKuhH,IAAS,IAAI7qB,IAClB12F,KAAKshH,IAAY,IAAI5B,GACrB1/G,KAAKghH,IAAU,EAGjB+B,OACE,OAAO/iH,KAAKshH,IAAUx7F,KAAI67F,IACxBC,GAAQ5hH,KAAM2hH,IAAe,CAC3Bh+F,EAAGg+F,EAAI72H,IACP+8B,EAAG85F,EAAI52H,MACP4B,EAAGg1H,EAAIpiH,KAAOoiH,EAAIE,QAAU,MAC3BnB,UAAUx+G,QAAOsoB,GAAKA,IAG7Bw4F,UACE,OAAOhjH,KAAKshH,IAGd53G,IAAK5e,EAAKC,EAAO82H,GAGf,IAFAA,EAASA,GAAU7hH,KAAKmhH,MAEQ,iBAAXU,EACnB,MAAM,IAAIv+G,UAAU,2BAEtB,MAAM/D,EAAMsiH,EAASl8G,KAAKpG,MAAQ,EAC5BjK,EAAM0K,KAAKihH,IAAmBl2H,EAAOD,GAE3C,GAAIkV,KAAKuhH,IAAOvkB,IAAIlyG,GAAM,CACxB,GAAIwK,EAAM0K,KAAK+gH,IAEb,OADAzkG,GAAItc,KAAMA,KAAKuhH,IAAOpoH,IAAIrO,KACnB,EAGT,MACMsqG,EADOp1F,KAAKuhH,IAAOpoH,IAAIrO,GACXC,MAgBlB,OAZIiV,KAAKohH,MACFphH,KAAKqhH,KACRrhH,KAAKohH,IAASt2H,EAAKsqG,EAAKrqG,QAG5BqqG,EAAK71F,IAAMA,EACX61F,EAAKysB,OAASA,EACdzsB,EAAKrqG,MAAQA,EACbiV,KAAKghH,KAAW1rH,EAAM8/F,EAAKvkG,OAC3BukG,EAAKvkG,OAASyE,EACd0K,KAAK7G,IAAIrO,GACT4Y,GAAK1D,OACE,EAGT,MAAM2hH,EAAM,IAAII,GAAMj3H,EAAKC,EAAOuK,EAAKiK,EAAKsiH,GAG5C,OAAIF,EAAI9wH,OAASmP,KAAK+gH,KAChB/gH,KAAKohH,KACPphH,KAAKohH,IAASt2H,EAAKC,IAEd,IAGTiV,KAAKghH,KAAWW,EAAI9wH,OACpBmP,KAAKshH,IAAU1/G,QAAQ+/G,GACvB3hH,KAAKuhH,IAAO73G,IAAI5e,EAAKkV,KAAKshH,IAAU1B,MACpCl8G,GAAK1D,OACE,GAGTg9F,IAAKlyG,GACH,IAAKkV,KAAKuhH,IAAOvkB,IAAIlyG,GAAM,OAAO,EAClC,MAAM62H,EAAM3hH,KAAKuhH,IAAOpoH,IAAIrO,GAAKC,MACjC,OAAQ62H,GAAQ5hH,KAAM2hH,GAGxBxoH,IAAKrO,GACH,OAAOqO,GAAI6G,KAAMlV,GAAK,GAGxBm4H,KAAMn4H,GACJ,OAAOqO,GAAI6G,KAAMlV,GAAK,GAGxByR,MACE,MAAM3M,EAAOoQ,KAAKshH,IAAU3B,KAC5B,OAAK/vH,GAGL0sB,GAAItc,KAAMpQ,GACHA,EAAK7E,OAHH,KAMXuxB,IAAKxxB,GACHwxB,GAAItc,KAAMA,KAAKuhH,IAAOpoH,IAAIrO,IAG5ByP,KAAMoJ,GAEJ3D,KAAKuiH,QAEL,MAAMhjH,EAAMoG,KAAKpG,MAEjB,IAAK,IAAIwD,EAAIY,EAAI9S,OAAS,EAAGkS,GAAK,EAAGA,IAAK,CACxC,MAAM4+G,EAAMh+G,EAAIZ,GACVmgH,EAAYvB,EAAIh1H,GAAK,EAC3B,GAAkB,IAAdu2H,EAEFljH,KAAK0J,IAAIi4G,EAAIh+F,EAAGg+F,EAAI95F,OACjB,CACH,MAAMg6F,EAASqB,EAAY3jH,EAEvBsiH,EAAS,GACX7hH,KAAK0J,IAAIi4G,EAAIh+F,EAAGg+F,EAAI95F,EAAGg6F,KAM/BsB,QACEnjH,KAAKuhH,IAAO3wG,SAAQ,CAAC7lB,EAAOD,IAAQqO,GAAI6G,KAAMlV,GAAK,OCzPvD,MAAMs4H,GAAMlmB,GCAZ,MACE/H,QAASkuB,GACT/e,SAAUgf,GACV3e,SAAU4e,IACRrmB,IAEF8I,QAASwd,IACPnjB,gBACG0J,IAAexJ,GAChBgF,GAAc/E,GACdijB,GDNW,MAMflvG,aAAYjnB,SAACA,IACX0S,KAAK1S,SAAWA,EAGhB0S,KAAK0jH,MAAQ,IAAIN,GAAI,CAAC55G,IAZE,KAe1Bm6G,aAAaC,GACX,OAAO5jH,KAAK0jH,MAAMvqH,IAAIyqH,GAGxBC,aAAaD,EAAWE,GACtB9jH,KAAK0jH,MAAMh6G,IAAIk6G,EAAWE,KCuL9B,SAASC,GAA0B90F,GACjC,MAAM,IAAIs2E,GACR,sDACA,qBAAsB,CACpB/wF,KAAM,wBAAyB4a,QAASH,IAW9C,SAAS+0F,IAAoB50F,QAACA,EAAOiN,KAAEA,IACrC,IAAIjN,EACF,OAGF,MAAMH,EAAMG,EAAQ,YAEpB,GAAGm0F,GAAUt0F,GACXG,EAAQ,YAAc26E,GAAY1tE,EAAMpN,QAI1C,GAAGo0F,GAASp0F,GACV,IAAI,IAAIj6B,EAAI,EAAGA,EAAIi6B,EAAIp+B,SAAUmE,EAAG,CAClC,MAAMihG,EAAUhnE,EAAIj6B,GACjBuuH,GAAUttB,GACXhnE,EAAIj6B,GAAK+0G,GAAY1tE,EAAM45D,GAG1BqtB,GAAUrtB,IACX+tB,GAAoB,CAAC50F,QAAS,CAAC,WAAY6mE,GAAU55D,KAAAA,SAM3D,GAAIinF,GAAUr0F,GAMd,IAAI,MAAMg1F,KAAQh1F,EAChB+0F,GAAoB,CAAC50F,QAASH,EAAIg1F,GAAO5nF,KAAAA,QC5P7CgiE,GAAiBnB,GAAwBmB,OCDzC,MAAMwH,GAAO3I,GACPqI,GAAclF,IAGlBlL,QAASkuB,GACT/e,SAAUgf,GACV3e,SAAU4e,GACV3e,YAAasf,IACX3jB,IAGFz+F,WAAYqiH,GACZ1Z,WAAY2Z,GAAcra,YAC1BA,IACEvJ,IAGFwF,QAASwd,GACT5b,qBAAsByc,IACpBnnB,GAEEonB,GAAwB,IAAI5tB,IAE5B6tB,GAAkB,eAElBrxB,GAAM,OACZ9jE,GAAiB8jE,GAm7BjB,SAASsxB,GAAWZ,EAAW74H,EAAO05H,EAAYC,EAAUC,EAAShmG,GAEnE,GAAa,OAAV5zB,IAAmBw4H,GAAUx4H,IAAUmoG,GAAI0xB,UAAU75H,GACtD,OAAOA,EAIT,GAAGA,EAAM4zG,MAAM4lB,IACb,OAAO,KAYT,GARGG,GAAYA,EAASj6H,eAAeM,KACd,IAAvB45H,EAAQxrH,IAAIpO,IACZmoG,GAAI2xB,qBAAqB,CACvBjB,UAAAA,EAAWc,SAAAA,EAAUT,KAAMl5H,EAAO45H,QAAAA,EAAShmG,QAAAA,KAI/C8lG,EAAaA,GAAc,IACbK,MAAO,CACnB,MAAMC,EAAUnB,EAAU9pG,SAAS3gB,IAAIpO,GAGvC,GAAe,OAAZg6H,EACD,OAAO,KAGT,GAAGzB,GAAUyB,IAAY,QAASA,EAEhC,OAAOA,EAAQ,OAKnB,MAAMC,EAAQj6H,EAAMqH,QAAQ,KAC5B,GAAG4yH,EAAQ,EAAG,CACZ,MAAMhtH,EAASjN,EAAMsH,OAAO,EAAG2yH,GACzBC,EAASl6H,EAAMsH,OAAO2yH,EAAQ,GAIpC,GAAc,MAAXhtH,GAA2C,IAAzBitH,EAAO7yH,QAAQ,MAClC,OAAOrH,EAIN25H,GAAYA,EAASj6H,eAAeuN,IACrCk7F,GAAI2xB,qBAAqB,CACvBjB,UAAAA,EAAWc,SAAAA,EAAUT,KAAMjsH,EAAQ2sH,QAAAA,EAAShmG,QAAAA,IAKhD,MAAMomG,EAAUnB,EAAU9pG,SAAS3gB,IAAInB,GACvC,GAAG+sH,GAAWA,EAAQG,QACpB,OAAOH,EAAQ,OAASE,EAI1B,GAAGd,GAAep5H,GAChB,OAAOA,EAKX,GAAG05H,EAAWK,OAAS,WAAYlB,EACjC,OAAOA,EAAU,UAAY74H,EAI/B,GAAG05H,EAAWpoF,MAAQ,UAAWunF,GAC/B,GAAGA,EAAU,SAEX,OAAO7Z,GAAYA,GAAYprF,EAAQ0d,KAAMunF,EAAU,UAAW74H,QAE/D,GAAG05H,EAAWpoF,KACnB,OAAO0tE,GAAYprF,EAAQ0d,KAAMtxC,GAGnC,OAAOA,EAgXT,SAASo6H,GAAaC,EAAIC,GAExB,IAAMD,GAAoB,iBAAPA,IACbC,GAAoB,iBAAPA,EACjB,OAAOD,IAAOC,EAGhB,MAAMC,EAAU1iH,MAAMuyF,QAAQiwB,GAC9B,GAAGE,IAAY1iH,MAAMuyF,QAAQkwB,GAC3B,OAAO,EAET,GAAGC,EAAS,CACV,GAAGF,EAAGv0H,SAAWw0H,EAAGx0H,OAClB,OAAO,EAET,IAAI,IAAImE,EAAI,EAAGA,EAAIowH,EAAGv0H,SAAUmE,EAC9B,IAAImwH,GAAaC,EAAGpwH,GAAIqwH,EAAGrwH,IACzB,OAAO,EAGX,OAAO,EAGT,MAAMuwH,EAAMp7H,OAAO4B,KAAKq5H,GAClBI,EAAMr7H,OAAO4B,KAAKs5H,GACxB,GAAGE,EAAI10H,SAAW20H,EAAI30H,OACpB,OAAO,EAET,IAAI,MAAM40H,KAAML,EAAI,CAClB,IAAI1d,EAAK0d,EAAGK,GACR9d,EAAK0d,EAAGI,GAQZ,GANU,eAAPA,GACE7iH,MAAMuyF,QAAQuS,IAAO9kG,MAAMuyF,QAAQwS,KACpCD,EAAKA,EAAG32G,QAAQg5B,OAChB49E,EAAKA,EAAG52G,QAAQg5B,SAGhBo7F,GAAazd,EAAIC,GACnB,OAAO,EAGX,OAAO,EA/4CTzU,GAAIxjG,QAAUmxG,OACZ+iB,UAAAA,EAAWc,SAAAA,EAAU/lG,QAAAA,EACrB+mG,UAAAA,GAAY,EACZC,kBAAAA,GAAoB,EACpBC,OAAAA,EAAS,IAAI/iB,QAGVygB,GAAUoB,IAAa,aAAcA,GACtCrB,GAASqB,EAAS,eAClBA,EAAWA,EAAS,aAKtB,GAAmB,IAHNlB,GAASkB,GAGd7zH,OACN,OAAO+yH,EAIT,MAAMiC,QAAiBlnG,EAAQmnG,gBAAgBx5H,QAAQ,CACrDs3H,UAAAA,EACAx0F,QAASs1F,EACTqB,eAAgBpnG,EAAQonG,eACxB1pF,KAAM1d,EAAQ0d,OAIbinF,GAAUuC,EAAS,GAAGv4H,WACuB,kBAAvCu4H,EAAS,GAAGv4H,SAAS,gBAE5Bo4H,EAAYG,EAAS,GAAGv4H,SAAS,eAKnC,IAAIswG,EAAOgmB,EAIP8B,GAAc9nB,EAAKooB,kBAErBpoB,EAAOA,EAAKl9E,QACZk9E,EAAKooB,gBAAkBpC,GAGzB,IAAI,MAAMqC,KAAmBJ,EAAU,CACrC,IAAKv4H,SAAU2hC,GAAOg3F,EAMtB,GAHArC,EAAYhmB,EAGD,OAAR3uE,EAAc,CAGf,IAAI02F,GAC0C,IAA5Cx7H,OAAO4B,KAAK63H,EAAUsC,WAAWr1H,OAAc,CAC/C,MAAMs1H,EAAiBxnG,GAAWA,EAAQwnG,eAAkB,QAC5D,GAAqB,UAAlBA,EACD,MAAM,IAAI5gB,GACR,gFAEA,qBACA,CAAC/wF,KAAM,kCACJ,GAAqB,SAAlB2xG,EAA0B,CAElCh1H,QAAQY,KAAK,0CAGb,MAAMq0H,EAAYH,EAAgBtC,aAAaC,GAC/C,GAAGwC,EAAW,CACZxoB,EAAOgmB,EAAYwC,EACnB,SAGF,MAAMC,EAAezC,EAErBhmB,EAAOgmB,EAAY1wB,GAAIozB,kBAAkB3nG,GAAS+B,QAClD,IAAI,MAAOujG,EAAMsC,KACfp8H,OAAO2gB,QAAQu7G,EAAaH,WACzBK,IACD3C,EAAU9pG,SAASmqG,GACjBpe,GAAKnlF,MAAM2lG,EAAavsG,SAASmqG,KAGvCL,EAAUsC,UAAYrgB,GAAKnlF,MAAM2lG,EAAaH,WAG9CD,EAAgBpC,aAAawC,EAAczoB,GAC3C,SAEF,MAAM,IAAI2H,GACR,yBACA,qBACA,CAAC/wF,KAAM,yBAA0B4a,QAASs1F,EAAUyB,cAAAA,IAExDvoB,EAAOgmB,EAAY1wB,GAAIozB,kBAAkB3nG,GAAS+B,QAClD,SAIF,MAAM0lG,EAAYH,EAAgBtC,aAAaC,GAC/C,GAAGwC,EAAW,CACZxoB,EAAOgmB,EAAYwC,EACnB,SASF,GALG9C,GAAUr0F,IAAQ,aAAcA,IACjCA,EAAMA,EAAI,cAIRq0F,GAAUr0F,GACZ,MAAM,IAAIs2E,GACR,sDACA,qBAAsB,CAAC/wF,KAAM,wBAAyB4a,QAASH,IAOnE2uE,EAAOA,EAAKl9E,QAGZ,MAAMikG,EAAU,IAAIjuB,IAGpB,GAAG,aAAcznE,EAAK,CACpB,GAAuB,MAApBA,EAAI,YACL,MAAM,IAAIs2E,GACR,gCAAkCt2E,EAAI,YACtC,4BACA,CAACza,KAAM,yBAA0B4a,QAASH,IAE9C,GAAG20F,EAAU4C,gBACkB,gBAA7B5C,EAAU4C,eACV,MAAM,IAAIjhB,GACR,aAAet2E,EAAI,YAAc,wBACjC20F,EAAU4C,eACV,gCACA,CAAChyG,KAAM,2BAA4B4a,QAASH,IAEhD2uE,EAAK4oB,eAAiB,cACtB5oB,EAAK,YAAc3uE,EAAI,YACvB01F,EAAQj7G,IAAI,YAAY,GAQ1B,GAJAk0F,EAAK4oB,eACH5oB,EAAK4oB,gBAAkB5C,EAAU4C,eAGhC,UAAWv3F,EAAK,CACjB,IAAIoN,EAAOpN,EAAI,SAEf,GAAY,OAAToN,GAAiB8nF,GAAe9nF,QAE5B,CAAA,IAAG+nF,GAAe/nF,GAGvB,MAAM,IAAIkpE,GACR,+GAEA,qBAAsB,CAAC/wF,KAAM,mBAAoB4a,QAASH,IAL5DoN,EAAO0tE,GAAYnM,EAAK,SAAUvhE,GAQpCuhE,EAAK,SAAWvhE,EAChBsoF,EAAQj7G,IAAI,SAAS,GAIvB,GAAG,WAAYulB,EAAK,CAClB,MAAMlkC,EAAQkkC,EAAI,UAClB,GAAa,OAAVlkC,SACM6yG,EAAK,cACP,CAAA,IAAI2lB,GAAUx4H,GACnB,MAAM,IAAIw6G,GACR,wFAEA,qBAAsB,CAAC/wF,KAAM,wBAAyB4a,QAASH,IAC5D,IAAIk1F,GAAep5H,IAAUmoG,GAAIszB,eAAe5oB,EAAM,GAC3D,MAAM,IAAI2H,GACR,uFAEA,qBAAsB,CAAC/wF,KAAM,wBAAyB4a,QAASH,IAEjE2uE,EAAK,UAAY4mB,GAAW5mB,EAAM7yG,EAAO,CAAC+5H,OAAO,EAAMzoF,MAAM,QAC3DwiE,OAAWA,EAAWlgF,GAE1BgmG,EAAQj7G,IAAI,UAAU,GAIxB,GAAG,cAAeulB,EAAK,CACrB,MAAMlkC,EAAQkkC,EAAI,aAClB,GAAa,OAAVlkC,SACM6yG,EAAK,iBACP,CAAA,IAAI2lB,GAAUx4H,GACnB,MAAM,IAAIw6G,GACR,2FAEA,qBACA,CAAC/wF,KAAM,2BAA4B4a,QAASH,IAE9C2uE,EAAK,aAAe7yG,EAAMq7G,cAE5Bue,EAAQj7G,IAAI,aAAa,GAI3B,GAAG,eAAgBulB,EAAK,CACtB,MAAMlkC,EAAQkkC,EAAI,cAClB,GAAgC,gBAA7B20F,EAAU4C,eACX,MAAM,IAAIjhB,GACR,0DACAqe,EAAU4C,eACV,qBACA,CAAChyG,KAAM,yBAA0B4a,QAASH,IAE9C,GAAa,OAAVlkC,SACM6yG,EAAK,kBACP,CAAA,GAAa,QAAV7yG,GAA6B,QAAVA,EAC3B,MAAM,IAAIw6G,GACR,iGAEA,qBACA,CAAC/wF,KAAM,yBAA0B4a,QAASH,IAE5C2uE,EAAK,cAAgB7yG,EAEvB45H,EAAQj7G,IAAI,cAAc,GAK5B,GAAG,eAAgBulB,EAAK,CACtB,MAAMlkC,EAAQkkC,EAAI,cAClB,GAAgC,gBAA7B20F,EAAU4C,eACX,MAAM,IAAIjhB,GACR,0DACAqe,EAAU4C,eACV,qBACA,CAAChyG,KAAM,wBAAyB4a,QAASH,IAE7C,GAAoB,kBAAVlkC,EACR,MAAM,IAAIw6G,GACR,8DACA,qBACA,CAAC/wF,KAAM,2BAA4B4a,QAASs1F,IAEhDC,EAAQj7G,IAAI,cAAc,GAI5B,GAAG,YAAaulB,EAAK,CACnB,MAAMlkC,EAAQkkC,EAAI,WAClB,GAAgC,gBAA7B20F,EAAU4C,eACX,MAAM,IAAIjhB,GACR,uDACAqe,EAAU4C,eACV,qBACA,CAAChyG,KAAM,wBAAyB4a,QAASH,IAE7C,IAAIs0F,GAAUx4H,GACZ,MAAM,IAAIw6G,GACR,oDACA,qBACA,CAAC/wF,KAAM,wBAAyB4a,QAASs1F,IAI7C,MAAM+B,QAAuB9nG,EAAQmnG,gBAAgBx5H,QAAQ,CAC3Ds3H,UAAAA,EACAx0F,QAASrkC,EACTg7H,eAAgBpnG,EAAQonG,eACxB1pF,KAAM1d,EAAQ0d,OAEhB,GAA6B,IAA1BoqF,EAAe51H,OAChB,MAAM,IAAI00G,GACR,mEACA,qBACA,CAAC/wF,KAAM,yBAA0B4a,QAASs1F,IAE9C,MAAMgC,EAAkBD,EAAe,GAAG9C,aAAaC,GACvD,GAAG8C,EAIDz3F,EAAMy3F,MACD,CACL,MAAMC,EAAYF,EAAe,GAAGn5H,SACpC,GAAG,YAAaq5H,EACd,MAAM,IAAIphB,GACR,qEAEA,qBACA,CAAC/wF,KAAM,wBAAyB4a,QAASs1F,IAI7C,IAAI,MAAM55H,KAAO67H,EACX13F,EAAIxkC,eAAeK,KACrBmkC,EAAInkC,GAAO67H,EAAU77H,IAQzB27H,EAAe,GAAG5C,aAAaD,EAAW30F,GAG5C01F,EAAQj7G,IAAI,WAAW,GAMzBi7G,EAAQj7G,IAAI,aAAculB,EAAI,gBAAiB,GAG/C,IAAI,MAAMnkC,KAAOmkC,EAUf,GATAikE,GAAI2xB,qBAAqB,CACvBjB,UAAWhmB,EACX8mB,SAAUz1F,EACVg1F,KAAMn5H,EACN65H,QAAAA,EACAhmG,QAAAA,EACAgnG,kBAAAA,IAGCrC,GAAUr0F,EAAInkC,KAAS,aAAcmkC,EAAInkC,GAAM,CAChD,MAAM87H,EAAS33F,EAAInkC,GAAK,YACxB,IAAI4E,GAAU,EACd,GAAG6zH,GAAUqD,GAAS,CACpB,MAAMr0H,EAAMw3G,GAAYprF,EAAQ0d,KAAMuqF,GAEnChB,EAAO5oB,IAAIzqG,GACZ7C,GAAU,EAEVk2H,EAAO3kH,IAAI1O,GAIf,GAAG7C,EACD,UACQwjG,GAAIxjG,QAAQ,CAChBk0H,UAAWhmB,EAAKl9E,QAChBgkG,SAAUz1F,EAAInkC,GAAK,YACnB66H,mBAAmB,EACnBhnG,QAAAA,EACAinG,OAAAA,IAEF,MAAMj5H,GACN,MAAM,IAAI44G,GACR,kDACA,qBACA,CACE/wF,KAAM,yBACN4a,QAASH,EAAInkC,GAAK,YAClBm5H,KAAMn5H,KAQlBm7H,EAAgBpC,aAAaD,EAAWhmB,GAG1C,OAAOA,GAiBT1K,GAAI2xB,qBAAuB,EACzBjB,UAAAA,EACAc,SAAAA,EACAT,KAAAA,EACAU,QAAAA,EACAhmG,QAAAA,EACAgnG,kBAAAA,GAAoB,MAEpB,GAAGhB,EAAQ3nB,IAAIinB,GAAO,CAEpB,GAAGU,EAAQxrH,IAAI8qH,GACb,OAGF,MAAM,IAAI1e,GACR,wCACA,yBACA,CAAC/wF,KAAM,qBAAsB4a,QAASs1F,EAAUT,KAAAA,IAOpD,IAAIl5H,EAKJ,GARA45H,EAAQj7G,IAAIu6G,GAAM,GAIfS,EAASj6H,eAAew5H,KACzBl5H,EAAQ25H,EAAST,IAGP,UAATA,GACAX,GAAUv4H,IAC0B,UAAnCA,EAAM,eAAiB,SACxBmoG,GAAIszB,eAAe5C,EAAW,KAAM,CAErC,MAAMiD,EAAY,CAAC,aAAc,MAAO,cAClC96H,EAAO5B,OAAO4B,KAAKhB,GACzB,GAAmB,IAAhBgB,EAAK8E,QAAgB9E,EAAKo6G,MAAKxiF,IAAMkjG,EAAUxxB,SAAS1xE,KACzD,MAAM,IAAI4hF,GACR,yDACA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,EAAUT,KAAAA,QAEjD,CAAA,GAAG/wB,GAAI0xB,UAAUX,GACtB,MAAM,IAAI1e,GACR,yDACA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,EAAUT,KAAAA,IAC/C,GAAGA,EAAKtlB,MAAM4lB,IAInB,YAFApzH,QAAQY,KAAK,4EACoB,CAACkyH,KAAAA,IAE7B,GAAY,KAATA,EACR,MAAM,IAAI1e,GACR,4DACA,qBACA,CAAC/wF,KAAM,0BAA2B4a,QAASs1F,IAI/C,MAAMoC,EAAkBlD,EAAU9pG,SAAS3gB,IAAI8qH,GAG5CL,EAAU9pG,SAASkjF,IAAIinB,IACxBL,EAAU9pG,SAASs/E,OAAO6qB,GAI5B,IAAI8C,GAAa,EAMjB,IALGxD,GAAUx4H,IAAoB,OAAVA,KACrBg8H,GAAa,EACbh8H,EAAQ,CAAC,MAAOA,KAGdu4H,GAAUv4H,GACZ,MAAM,IAAIw6G,GACR,2EAEA,qBACA,CAAC/wF,KAAM,0BAA2B4a,QAASs1F,IAI/C,MAAMK,EAAU,GAChBnB,EAAU9pG,SAASpQ,IAAIu6G,EAAMc,GAC7BA,EAAQzvG,SAAU,EAGlB,MAAMuxG,EAAY,CAAC,aAAc,MAAO,YAAa,WAAY,SAG9D3zB,GAAIszB,eAAe5C,EAAW,MAC/BiD,EAAUlpH,KACR,WAAY,aAAc,SAAU,QAAS,UAAW,cAG5D,IAAI,MAAMqpH,KAAMj8H,EACd,IAAI87H,EAAUxxB,SAAS2xB,GACrB,MAAM,IAAIzhB,GACR,8DAAgEyhB,EAChE,qBACA,CAACxyG,KAAM,0BAA2B4a,QAASs1F,IAMjD,MAAMM,EAAQf,EAAK7xH,QAAQ,KAG3B,GAFA2yH,EAAQkC,cAAiBjC,EAAQ,EAE9B,aAAcj6H,EAAO,CACtB,GAAG,QAASA,EACV,MAAM,IAAIw6G,GACR,2EACgB,qBAChB,CAAC/wF,KAAM,2BAA4B4a,QAASs1F,IAEhD,GAAG,UAAW35H,EACZ,MAAM,IAAIw6G,GACR,6EACkB,qBAClB,CAAC/wF,KAAM,2BAA4B4a,QAASs1F,IAEhD,MAAMpvG,EAAUvqB,EAAM,YACtB,IAAIw4H,GAAUjuG,GACZ,MAAM,IAAIiwF,GACR,sEACA,qBAAsB,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAGjE,IAAIxxB,GAAI0xB,UAAUtvG,IAAYA,EAAQqpF,MAAM4lB,IAS1C,OAPApzH,QAAQY,KAAK,6EACoB,CAACujB,QAAAA,SAC/BwxG,EACDlD,EAAU9pG,SAASpQ,IAAIu6G,EAAM6C,GAE7BlD,EAAU9pG,SAASs/E,OAAO6qB,IAM9B,MAAMxsH,EAAK+sH,GACTZ,EAAWtuG,EAAS,CAACwvG,OAAO,EAAMzoF,MAAM,GAAQqoF,EAAUC,EAC1DhmG,GACF,IAAIwlG,GAAe1sH,GACjB,MAAM,IAAI8tG,GACR,wGAEA,qBAAsB,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAGjEK,EAAQ,OAASttH,EACjBstH,EAAQzvG,SAAU,OACb,GAAG,QAASvqB,EAAO,CACxB,IAAI0M,EAAK1M,EAAM,OACf,GAAG0M,IAAO8rH,GAAU9rH,GAClB,MAAM,IAAI8tG,GACR,wFAEA,qBAAsB,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAEjE,GAAU,OAAPjtH,EAEDstH,EAAQ,OAAS,SACZ,CAAA,IAAI7xB,GAAI0xB,UAAUntH,IAAOA,EAAGknG,MAAM4lB,IASvC,OAPApzH,QAAQY,KAAK,6EACoB,CAAC0F,GAAAA,SAC/BqvH,EACDlD,EAAU9pG,SAASpQ,IAAIu6G,EAAM6C,GAE7BlD,EAAU9pG,SAASs/E,OAAO6qB,IAGvB,GAAGxsH,IAAOwsH,EAAM,CAIrB,GAFAxsH,EAAK+sH,GACHZ,EAAWnsH,EAAI,CAACqtH,OAAO,EAAMzoF,MAAM,GAAQqoF,EAAUC,EAAShmG,IAC5DwlG,GAAe1sH,KAAQy7F,GAAI0xB,UAAUntH,GACvC,MAAM,IAAI8tG,GACR,+GAEA,qBACA,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAI3C,GAAGT,EAAKtlB,MAAM,gBAAiB,CAK7B,GAHgB6lB,GACdZ,EAAWK,EAAM,CAACa,OAAO,EAAMzoF,MAAM,GACrCqoF,EAHkB,IAAIhuB,IAAIiuB,GAASj7G,IAAIu6G,GAAM,GAGtBtlG,KACVlnB,EACb,MAAM,IAAI8tG,GACR,yEAEA,qBACA,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAI7CK,EAAQ,OAASttH,EAEjBstH,EAAQG,QAAW6B,IAChBhC,EAAQkC,eACTxvH,EAAGknG,MAAM,oBAIf,KAAK,QAASomB,GAEZ,GAAGA,EAAQkC,cAAe,CACxB,MAAMjvH,EAASisH,EAAK5xH,OAAO,EAAG2yH,GAQ9B,GAPGN,EAASj6H,eAAeuN,IAEzBk7F,GAAI2xB,qBAAqB,CACvBjB,UAAAA,EAAWc,SAAAA,EAAUT,KAAMjsH,EAAQ2sH,QAAAA,EAAShmG,QAAAA,IAI7CilG,EAAU9pG,SAASkjF,IAAIhlG,GAAS,CAEjC,MAAMitH,EAAShB,EAAK5xH,OAAO2yH,EAAQ,GACnCD,EAAQ,OAASnB,EAAU9pG,SAAS3gB,IAAInB,GAAQ,OAASitH,OAGzDF,EAAQ,OAASd,OAEd,GAAY,UAATA,EAERc,EAAQ,OAASd,MACZ,CAEL,KAAK,WAAYL,GACf,MAAM,IAAIre,GACR,6DACA,qBACA,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,EAAUT,KAAAA,IAGrDc,EAAQ,OAASnB,EAAU,UAAYK,EAc3C,KAT2B,IAAxBl5H,EAAM,gBACwB,IAA9B45H,EAAQxrH,IAAI,gBAAkD,IAAxBpO,EAAM,iBAC7C64H,EAAUsC,UAAUjC,IAAQ,EAC5Bc,EAAQmB,WAAY,GAItBvB,EAAQj7G,IAAIu6G,GAAM,GAEf,UAAWl5H,EAAO,CACnB,IAAImV,EAAOnV,EAAM,SACjB,IAAIw4H,GAAUrjH,GACZ,MAAM,IAAIqlG,GACR,oEACA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,IAG5C,GAAa,UAATxkH,GAA6B,UAATA,GACtB,GAAGgzF,GAAIszB,eAAe5C,EAAW,GAC/B,MAAM,IAAIre,GAER,gEAAIrlG,0BACJ,qBACA,CAACsU,KAAM,uBAAwB4a,QAASs1F,SAEvC,GAAY,QAATxkH,GAA2B,WAATA,EAAmB,CAK7C,GAHAA,EAAOskH,GACLZ,EAAW1jH,EAAM,CAAC4kH,OAAO,EAAMzoF,MAAM,GAAQqoF,EAAUC,EACvDhmG,IACEwlG,GAAejkH,GACjB,MAAM,IAAIqlG,GACR,2EAEA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,IAE5C,GAA0B,IAAvBxkH,EAAK9N,QAAQ,MACd,MAAM,IAAImzG,GACR,+FAEA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,IAK9CK,EAAQ,SAAW7kH,EAGrB,GAAG,eAAgBnV,EAAO,CAExB,MAAMm8H,EAAY3D,GAAUx4H,EAAM,eAChC,CAACA,EAAM,eAAkBA,EAAM,eAAiB,GAC5Co8H,EAAkB,CAAC,QAAS,OAAQ,SAAU,aACpD,IAAIC,GAAU,EACd,MAAMC,EAASH,EAAU7xB,SAAS,QAGlC,GAAGnC,GAAIszB,eAAe5C,EAAW,KAAM,CAIrC,GAHAuD,EAAgBxpH,KAAK,SAAU,MAAO,SAGnCupH,EAAU7xB,SAAS,UACpB,GAAwB,IAArB6xB,EAAUr2H,OACX,MAAM,IAAI00G,GACR,mFAEA,qBACA,CAAC/wF,KAAM,4BAA6B4a,QAASs1F,SAE5C,GAAGwC,EAAU7xB,SAAS,WAC3B,GAAG6xB,EAAU/gB,MAAKr7G,GACR,WAARA,GAA4B,QAARA,GAAyB,WAARA,GAC7B,SAARA,IACA,MAAM,IAAIy6G,GACR,qHAEA,qBACA,CAAC/wF,KAAM,4BAA6B4a,QAASs1F,SAIjD0C,GAAWF,EAAUr2H,SAAWw2H,EAAS,EAAI,GAG/C,GAAGH,EAAU7xB,SAAS,WAGpB0vB,EAAQ,SAAWA,EAAQ,UAAY,OAGnC,CAAC,MAAO,UAAU1vB,SAAS0vB,EAAQ,WACrC,MAAM,IAAIxf,GACR,+EAEA,qBACA,CAAC/wF,KAAM,uBAAwB4a,QAASs1F,SAM9C0C,IAAY/D,GAASt4H,EAAM,eAG3Bq8H,GAAWF,EAAUr2H,QAAU,EASjC,GALAu2H,GAAWF,EAAUtgB,OAAMtoF,GAAK6oG,EAAgB9xB,SAAS/2E,KAGzD8oG,KAAaC,GAAUH,EAAU7xB,SAAS,WAEtC+xB,EACF,MAAM,IAAI7hB,GACR,mFAC2B4hB,EAAgB/kH,KAAK,MAChD,qBACA,CAACoS,KAAM,4BAA6B4a,QAASs1F,IAGjD,GAAGK,EAAQzvG,UACR4xG,EAAUtgB,OAAMtoF,GAAK,CAAC,SAAU,QAAQ+2E,SAAS/2E,KAClD,MAAM,IAAIinF,GACR,2GAC2C,qBAC3C,CAAC/wF,KAAM,2BAA4B4a,QAASs1F,IAIhDK,EAAQ,cAAgBmC,EAI1B,GAAG,WAAYn8H,EAAO,CACpB,KAAK,eAAgBA,KAAWg6H,EAAQ,cAAc1vB,SAAS,UAC7D,MAAM,IAAIkQ,GAER,iEAAIx6G,EAAM,uBAAuBk5H,MAAU,qBAC3C,CAACzvG,KAAM,0BAA2B4a,QAASs1F,IAE/C,IAAInB,GAAUx4H,EAAM,YAA+C,IAAjCA,EAAM,UAAUqH,QAAQ,KACxD,MAAM,IAAImzG,GAER,0DAAIx6G,EAAM,uBAAuBk5H,MAAU,qBAC3C,CAACzvG,KAAM,0BAA2B4a,QAASs1F,IAE/CK,EAAQ,UAAYh6H,EAAM,UAQ5B,GAJG,aAAcA,IACfg6H,EAAQ,YAAch6H,EAAM,aAG3B,cAAeA,KAAW,UAAWA,GAAQ,CAC9C,IAAIi0G,EAAWj0G,EAAM,aACrB,GAAgB,OAAbi0G,IAAsBukB,GAAUvkB,GACjC,MAAM,IAAIuG,GACR,6EACqB,qBACrB,CAAC/wF,KAAM,2BAA4B4a,QAASs1F,IAIhC,OAAb1lB,IACDA,EAAWA,EAASoH,eAEtB2e,EAAQ,aAAe/lB,EAIzB,GAAG,YAAaj0G,EAAO,CACrB,GAAGk5H,EAAKtlB,MAAM,QACZ,MAAM,IAAI4G,GACR,sEACA,qBACA,CAAC/wF,KAAM,0BAA2B4a,QAASs1F,IAE/C,GAAGxxB,GAAI0xB,UAAUG,EAAQ,QACvB,MAAM,IAAIxf,GACR,+DACA,qBACA,CAAC/wF,KAAM,0BAA2B4a,QAASs1F,IAE/C,GAA+B,kBAArB35H,EAAM,WAGd,MAAM,IAAIw6G,GACR,qEACA,qBACA,CAAC/wF,KAAM,wBAAyB4a,QAASs1F,IAL3CK,EAAQG,SAA+B,IAArBn6H,EAAM,WAS5B,GAAG,eAAgBA,EAAO,CACxB,MAAMu8H,EAAYv8H,EAAM,cACxB,GAAiB,OAAdu8H,GAAoC,QAAdA,GAAqC,QAAdA,EAC9C,MAAM,IAAI/hB,GACR,0EAEA,qBACA,CAAC/wF,KAAM,yBAA0B4a,QAASs1F,IAE9CK,EAAQ,cAAgBuC,EAG1B,GAAG,UAAWv8H,EAAO,CACnB,MAAMw8H,EAAOx8H,EAAM,SACnB,IAAIw4H,GAAUgE,IAAmB,UAATA,GAA0C,IAAtBA,EAAKn1H,QAAQ,KACvD,MAAM,IAAImzG,GACR,yGAEA,qBACA,CAAC/wF,KAAM,sBAAuB4a,QAASs1F,IAE3CK,EAAQ,SAAWwC;2CAIrB;MAAM9vH,EAAKstH,EAAQ,OACnB,GAAU,aAAPttH,GAA4B,cAAPA,EACtB,MAAM,IAAI8tG,GACR,oEACA,qBAAsB,CAAC/wF,KAAM,wBAAyB4a,QAASs1F,IAInE,GAAGoC,GAAmBA,EAAgBZ,YAAcP,IAGlD/B,EAAUsC,UAAUjC,IAAQ,EAC5Bc,EAAQmB,WAAY,GAChBf,GAAa2B,EAAiB/B,IAAU,CAC1C,MAAMoB,EAAiBxnG,GAAWA,EAAQwnG,eAAkB,QAC5D,GAAqB,UAAlBA,EACD,MAAM,IAAI5gB,GACR,8CAA8C0e,gCAE9C,qBACA,CAACzvG,KAAM,8BAA+B4a,QAASs1F,EAAUT,KAAAA,IACtD,GAAqB,SAAlBkC,EAGR,YADAh1H,QAAQY,KAAK,uCAAwC,CAACkyH,KAAAA,IAGxD,MAAM,IAAI1e,GACR,yBACA,qBACA,CAAC/wF,KAAM,yBAA0B4a,QAASs1F,EAAUT,KAAAA,EAClDkC,cAAAA,MAmBVjzB,GAAIs0B,UAAY,CAAC5D,EAAW74H,EAAO05H,EAAY9lG,IACtC6lG,GAAWZ,EAAW74H,EAAO05H,OAAY5lB,OAAWA,EACzDlgF,GAgHJu0E,GAAIozB,kBAAoB3nG,IACtB,MAAM7zB,EAAMyjH,KAAK+M,UAAU,CAACkL,eAAgB7nG,EAAQ6nG,iBAC9CiB,EAASnD,GAAsBnrH,IAAIrO,GACzC,GAAG28H,EACD,OAAOA,EAGT,MAAMC,EAAiB,CACrBlB,eAAgB7nG,EAAQ6nG,eACxB1sG,SAAU,IAAI48E,IACdixB,QAAS,KACTC,WAoBF,WACE,MAAMhE,EAAY5jH,KAGlB,GAAG4jH,EAAU+D,QACX,OAAO/D,EAAU+D,QAEnB,MAAMA,EAAU/D,EAAU+D,QAAU,GAG9BE,EAAejE,EAAUiE,aAAe,GACxCC,EAAc,GAGdC,GAAmBnE,EAAU,cAAgB,SAASxd,cAGtD4hB,EAAmBpE,EAAU,cAI7B9pG,EAAW8pG,EAAU9pG,SACrBmuG,EAAQ,IAAInuG,EAAS/tB,QAAQg+B,KAAKs6F,IACxC,IAAI,MAAMJ,KAAQgE,EAAO,CACvB,MAAMlD,EAAUjrG,EAAS3gB,IAAI8qH,GAC7B,GAAe,OAAZc,EACD,SAGF,IAAImC,EAAYnC,EAAQ,eAAiB,QAGzC,GAFAmC,EAAY,GAAG3tH,OAAO2tH,GAAWn9F,OAAO3nB,KAAK,IAEvB,OAAnB2iH,EAAQ,OACT,SAGF,MAAMxoB,EAAMinB,GAASuB,EAAQ,QAC7B,IAAI,MAAM/a,KAAOzN,EAAK,CACpB,IAAI2rB,EAAQP,EAAQ3d,GACpB,MAAM4a,EAAY1xB,GAAI0xB,UAAU5a,GAEhC,GAAIke,EAcOtD,GAAcG,EAAQkC,eAE/Ba,EAAY9d,GAAKrsG,KAAKsmH,QAZtB,GAFA0D,EAAQ3d,GAAOke,EAAQ,IAEnBtD,IAAcG,EAAQkC,cAAe,CAEvCa,EAAY9d,GAAO,CAACia,GACpB,MAAMkE,EAAiB,CAACne,IAAAA,EAAKie,MAAOH,EAAY9d,IAC7CA,EAAI,KAAM6d,EACXA,EAAa7d,EAAI,IAAIrsG,KAAKwqH,GAE1BN,EAAa7d,EAAI,IAAM,CAACme,GAmB9B,GAVID,EAAMhB,KACRgB,EAAMhB,GAAa,CACjB,YAAa,GACb,QAAS,GACT,OAAQ,KAGZgB,EAAQA,EAAMhB,GACdkB,EAAkBnE,EAAMiE,EAAM,QAAS,SAEpCnD,EAAQzvG,QAET8yG,EAAkBnE,EAAMiE,EAAM,SAAU,iBACnC,GAAwB,UAArBnD,EAAQ,SAChBqD,EAAkBnE,EAAMiE,EAAM,QAAS,SACvCE,EAAkBnE,EAAMiE,EAAM,aAAc,SAC5CE,EAAkBnE,EAAMiE,EAAM,SAAU,cACnC,GAAG,UAAWnD,EAEnBqD,EAAkBnE,EAAMiE,EAAM,SAAUnD,EAAQ,eAC3C,GAAG,cAAeA,GAAW,eAAgBA,EAAS,CAE3D,MAAM/lB,EAAW+lB,EAAQ,aACnBuC,EAAYvC,EAAQ,cAExBqD,EAAkBnE,EAAMiE,EAAM,aAD7BlpB,GAAYsoB,EAEX,GAAGtoB,KAAYsoB,IAAYlhB,cACrBpH,EACoCA,EAASoH,cAC7CkhB,EACoC,IAAIA,IAEJ,aAEtC,cAAevC,EACvBqD,EAAkBnE,EAAMiE,EAAM,cAC3BnD,EAAQ,cAAgB,SAAS3e,eAC5B,eAAgB2e,EACrBA,EAAQ,cACTqD,EAAkBnE,EAAMiE,EAAM,aAC5B,IAAInD,EAAQ,iBAEdqD,EAAkBnE,EAAMiE,EAAM,aAAc,SAEtCF,GACRI,EAAkBnE,EAAMiE,EAAM,aAAc,IAAIF,KAChDI,EAAkBnE,EAAMiE,EAAM,aAAc,SAC5CE,EAAkBnE,EAAMiE,EAAM,SAAU,WAGxCE,EAAkBnE,EAAMiE,EAAM,aAAcH,GAC5CK,EAAkBnE,EAAMiE,EAAM,aAAc,SAC5CE,EAAkBnE,EAAMiE,EAAM,SAAU,WAM9C,IAAI,MAAMp9H,KAAO+8H,EACfQ,EAAaR,EAAc/8H,EAAK,GAGlC,OAAO68H,GA9IPjnG,MAuMF,WACE,MAAMg1E,EAAQ,GACdA,EAAM57E,SAAW+rF,GAAKnlF,MAAM1gB,KAAK8Z,UACjC47E,EAAMh1E,MAAQ1gB,KAAK0gB,MACnBg1E,EAAMiyB,QAAU,KAChBjyB,EAAMkyB,WAAa5nH,KAAK4nH,WACxBlyB,EAAMwwB,UAAYrgB,GAAKnlF,MAAM1gB,KAAKkmH,WAC/BlmH,KAAKgmH,kBACNtwB,EAAMswB,gBAAkBhmH,KAAKgmH,gBAAgBtlG,SAE/Cg1E,EAAM4yB,wBAA0BtoH,KAAKsoH,wBAClC,UAAWtoH,OACZ01F,EAAM,SAAW11F,KAAK,UAErB,cAAeA,OAChB01F,EAAM,aAAe11F,KAAK,cAEzB,WAAYA,OACb01F,EAAM,UAAY11F,KAAK,WAEzB,OAAO01F,GA1NP4yB,wBAiOF,WACE,IAAItoH,KAAKgmH,gBACP,OAAOhmH,KAET,OAAOA,KAAKgmH,gBAAgBtlG,SApO5BwlG,UAAW,IASb,OAziCqC,MAmiClC5B,GAAsB39G,MAGvB29G,GAAsBiE,QAExBjE,GAAsB56G,IAAI5e,EAAK48H,GACxBA,EA8IP,SAASW,EAAaG,EAAQ19H,EAAKkJ,GACjC,MAAM8W,EAAU09G,EAAO19H,GACjB4B,EAAO87H,EAAO19H,GAAO,GAE3B,IAAIk/G,EACAye,EACJ,IAAI,MAAMP,KAASp9G,EACjBk/F,EAAMke,EAAMle,IAEVye,EADCz0H,GAAOg2G,EAAIn5G,OACH,GAEAm5G,EAAIh2G,GAEZy0H,KAAU/7H,EACXA,EAAK+7H,GAAQ9qH,KAAKuqH,GAElBx7H,EAAK+7H,GAAU,CAACP,GAIpB,IAAI,MAAMp9H,KAAO4B,EACJ,KAAR5B,GAGHu9H,EAAa37H,EAAM5B,EAAKkJ,EAAM,GAWlC,SAASo0H,EAAkBnE,EAAMiE,EAAOQ,GAClCR,EAAMz9H,eAAei+H,KACvBR,EAAMQ,GAAuBzE,KAuDnC/wB,GAAIy1B,gBAAkB,CAAC15F,EAAKnkC,EAAKoV,KAE/B,GAAW,OAARpV,EAAc,CACf,GAAY,aAAToV,EACD,OAEF,OAAO,KAIT,GAAG+uB,EAAInV,SAASkjF,IAAIlyG,GAAM,CACxB,MAAMo9H,EAAQj5F,EAAInV,SAAS3gB,IAAIrO,GAE/B,GAAGo5H,GAAahkH,GAEd,OAAOgoH,EAET,GAAGA,EAAMz9H,eAAeyV,GAEtB,OAAOgoH,EAAMhoH,GAKjB,MAAY,cAATA,GAAwBA,KAAQ+uB,GAKvB,eAAT/uB,GAAyBA,KAAQ+uB,EAJ3BA,EAAI/uB,GAQD,aAATA,EAGI,UAHP,GAcFgzF,GAAIszB,eAAiB,CAAC5C,EAAWt0F,IAC5BA,EAAQlpB,YAAc,OACfw9G,EAAU4C,gBAChB5C,EAAU4C,gBAAkB,WAAal3F,EAAQlpB,WAEf,gBAA7Bw9G,EAAU4C,eAWrBtzB,GAAI0xB,UAAY/8F,IACd,IAAI07F,GAAU17F,IAAe,MAATA,EAAE,GACpB,OAAO,EAET,OAAOA,GACL,IAAK,QACL,IAAK,aACL,IAAK,WACL,IAAK,WACL,IAAK,aACL,IAAK,SACL,IAAK,YACL,IAAK,SACL,IAAK,MACL,IAAK,YACL,IAAK,SACL,IAAK,QACL,IAAK,YACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,eACL,IAAK,UACL,IAAK,YACL,IAAK,aACL,IAAK,cACL,IAAK,WACL,IAAK,OACL,IAAK,QACL,IAAK,SACL,IAAK,WACL,IAAK,SACH,OAAO,EAEX,OAAO,GC14CT,MAAM09E,GAAcrI,IAGlB/H,QAASkuB,GACT/e,SAAUgf,GACVjf,cAAeukB,GACfjkB,SAAU4e,GACV3e,YAAasf,IACX7jB,IAGF4E,OAAQ4jB,GACR7jB,QAAS8jB,GACT5jB,QAAS6jB,GACTjkB,UAAWkkB,IACTzoB,IAGFinB,UAAWhD,GACXmE,gBAAiBM,GACjBrE,UAAWsE,GACXx5H,QAASy5H,GACT3C,eAAgB4C,IACd5oB,IAGF1+F,WAAYqiH,IACV1gB,IAGFwD,SAAUoiB,GACVrjB,QAASwd,GACTlc,UAAWgiB,GACX5iB,kBAAmB6iB,IACjB7lB,GAEExQ,GAAM,OACZs2B,GAAiBt2B,GACjB,MAAMu2B,GAAc,sCA2WpB5oB,eAAe6oB,IAAc9F,UAC3BA,EAAS+F,eACTA,EAAcC,uBACdA,EAAsB3zB,QACtBA,EAAO4zB,eACPA,EAAclrG,QACdA,EAAU,GAAEmrG,WACZA,EAAUC,QACVA,EAAOC,kBACPA,EAAiBC,aACjBA,IAEA,MAAMl+H,EAAO5B,OAAO4B,KAAKkqG,GAASlsE,OAC5BmgG,EAAQ,GACd,IAAIC,EAGJ,MAAMC,EAAan0B,EAAQ8zB,IAGK,UAF9BvF,GAAWZ,EACRP,GAASptB,EAAQ8zB,IAAY9zB,EAAQ8zB,GAAS,GAAK9zB,EAAQ8zB,GAC5D,CAACjF,OAAO,GAAOnmG,GAEnB,IAAI,MAAM7zB,KAAOiB,EAAM,CACrB,IACIs+H,EADAt/H,EAAQkrG,EAAQnrG,GAIpB,GAAW,aAARA,EACD,SAIF,IAAIw/H,EAAmB9F,GAAWZ,EAAW94H,EAAK,CAACg6H,OAAO,GAAOnmG,GAGjE,IAAwB,OAArB2rG,IACCnG,GAAemG,KAAqBpB,GAAWoB,MAEjDA,EAAmBL,EAAa,CAC9BM,iBAAkBz/H,EAClB84H,UAAAA,EACA+F,eAAAA,EACAviH,OAAQ6uF,EACRt3E,QAAAA,EACAmrG,WAAAA,EACA/+H,MAAAA,EACA8+H,eAAAA,SAEsBhrB,IAArByrB,GACD,SAIJ,GAAGpB,GAAWoB,GAAmB,CAC/B,GAA8B,aAA3BV,EACD,MAAM,IAAIrkB,GACR,2EACa,qBACb,CAAC/wF,KAAM,+BAAgCzpB,MAAAA,IAE3C,GAAGu/H,KAAoBT,GACC,cAArBS,GACqB,UAArBA,EACD,MAAM,IAAI/kB,GACR,uDACA,qBACA,CAAC/wF,KAAM,qBAAsBg2G,QAASF,IAK5C,GAAwB,QAArBA,EAA4B,CAC7B,IAAI/G,GAAUx4H,GAAQ,CACpB,IAAI4zB,EAAQgoF,QACV,MAAM,IAAIpB,GACR,qDACA,qBAAsB,CAAC/wF,KAAM,oBAAqBzpB,MAAAA,IAEtD,GAAGu4H,GAAUv4H,IAEX,IAAI69H,GAAe79H,GACjB,MAAM,IAAIw6G,GACR,sFAEA,qBAAsB,CAAC/wF,KAAM,oBAAqBzpB,MAAAA,QAEjD,CAAA,IAAGs4H,GAASt4H,GAQjB,MAAM,IAAIw6G,GACR,sFAEA,qBAAsB,CAAC/wF,KAAM,oBAAqBzpB,MAAAA,IAVpD,IAAIA,EAAM67G,OAAM/+E,GAAK07F,GAAU17F,KAC7B,MAAM,IAAI09E,GACR,sFAEA,qBAAsB,CAAC/wF,KAAM,oBAAqBzpB,MAAAA,KAU1Ds+H,GACEQ,EAAgB,MAChBrG,GAASz4H,GAAO+6B,KAAI+B,GAClB07F,GAAU17F,GAAK28F,GAAWZ,EAAW/7F,EAAG,CAACwU,MAAM,GAAO1d,GAAWkJ,IACnE,CAACq/E,gBAAiBvoF,EAAQgoF,UAC5B,SAGF,GAAwB,UAArB2jB,EAA8B,CAG5BhH,GAAUv4H,KACXA,EAAQZ,OAAOsgI,YAAYtgI,OAAO2gB,QAAQ/f,GAAO+6B,KAAI,EAAEnC,EAAGkE,KAAO,CAC/D28F,GAAWwF,EAAmBrmG,EAAG,CAACmhG,OAAO,IACzCtB,GAAS37F,GAAG/B,KAAI+gF,GACd2d,GAAWwF,EAAmBnjB,EAAI,CAACxqE,MAAM,EAAMyoF,OAAO,WAI5DyE,GAAmBx+H,EAAO4zB,EAAQgoF,SAClC0iB,GACEQ,EAAgB,QAChBrG,GAASz4H,GAAO+6B,KAAI+B,GAClB07F,GAAU17F,GACR28F,GAAWwF,EAAmBniG,EAC5B,CAACwU,MAAM,EAAMyoF,OAAO,GAAOnmG,GAAWkJ,IAC5C,CAACq/E,gBAAiBvoF,EAAQgoF,UAC5B,SAMF,GAAwB,cAArB2jB,GAAoClB,GAAgBxF,EAAW,KAAM,CACtE,MAAM8G,EAAiBlH,SAAetwB,GAAIs2B,OAAO,CAC/C5F,UAAAA,EACA+F,eAAAA,EACA1zB,QAASlrG,EACT4zB,QAAAA,EACAsrG,aAAAA,KAIF,IAAIS,EAAe9jB,OAAM/+E,GAAKmhG,GAAWnhG,KACvC,MAAM,IAAI09E,GACR,2EAEA,qBAAsB,CAAC/wF,KAAM,0BAA2BzpB,MAAAA,IAG5Ds+H,GACEQ,EAAgB,YAAaa,EAAgB,CAACxjB,iBAAiB,IACjE,SAIF,GAAwB,WAArBojB,IACChH,GAAUv4H,KAAUs4H,GAASt4H,GAC/B,MAAM,IAAIw6G,GACR,4EAEA,qBAAsB,CAAC/wF,KAAM,uBAAwBzpB,MAAAA,IAGzD,GAAwB,WAArBu/H,EAA+B,CAGhCH,EAAkBp/H,EACfq/H,GAAchB,GAAgBxF,EAAW,KAE1CiG,EAAe,UAAY9+H,EAE3Bs+H,GACEQ,EAAgB,SAAU9+H,EAAO,CAACm8G,gBAAiBvoF,EAAQgoF,UAE/D,SAKF,GAAwB,cAArB2jB,EAAkC,CACnC,GAAa,OAAVv/H,EAED,SAEF,IAAIw4H,GAAUx4H,KAAW4zB,EAAQgoF,QAC/B,MAAM,IAAIpB,GACR,8DACA,qBACA,CAAC/wF,KAAM,iCAAkCzpB,MAAAA,IAG7CA,EAAQy4H,GAASz4H,GAAO+6B,KAAI+B,GAAK07F,GAAU17F,GAAKA,EAAEu+E,cAAgBv+E,IAGlE,IAAI,MAAM8iG,KAAQ5/H,EACbw4H,GAAUoH,KAAUA,EAAKhsB,MAAM8qB,KAChCt4H,QAAQY,KAAK,kCAAkC44H,KAInDtB,GACEQ,EAAgB,YAAa9+H,EAAO,CAACm8G,gBAAiBvoF,EAAQgoF,UAChE,SAIF,GAAwB,eAArB2jB,EAAmC,CACpC,IAAI/G,GAAUx4H,KAAW4zB,EAAQgoF,QAC/B,MAAM,IAAIpB,GACR,+DACA,qBACA,CAAC/wF,KAAM,yBAA0BzpB,MAAAA,IAGrCA,EAAQy4H,GAASz4H,GAGjB,IAAI,MAAMwX,KAAOxX,EACf,GAAGw4H,GAAUhhH,IAAgB,QAARA,GAAyB,QAARA,EACpC,MAAM,IAAIgjG,GACR,+DACA,qBACA,CAAC/wF,KAAM,yBAA0BzpB,MAAAA,IAIvCs+H,GACEQ,EAAgB,aAAc9+H,EAC9B,CAACm8G,gBAAiBvoF,EAAQgoF,UAC5B,SAIF,GAAwB,WAArB2jB,EAA+B,CAChC,IAAI/G,GAAUx4H,GACZ,MAAM,IAAIw6G,GACR,2DACA,qBACA,CAAC/wF,KAAM,uBAAwBzpB,MAAAA,IAEnCs+H,GAAUQ,EAAgB,SAAU9+H,GACpC,SAIF,GAAwB,aAArBu/H,EAAiC,CAClC,IAAIhH,GAAUv4H,GACZ,MAAM,IAAIw6G,GACR,8DACA,qBAAsB,CAAC/wF,KAAM,yBAA0BzpB,MAAAA,IAY3D,GATAs/H,QAAsBn3B,GAAIs2B,OAAO,CAC/B5F,UAAAA,EACA+F,eACA,WACA1zB,QAASlrG,EACT4zB,QAAAA,EACAsrG,aAAAA,IAGC,aAAcI,EACf,IAAI,MAAM5xB,KAAY4xB,EAAc,YAClChB,GACEQ,EAAgBpxB,EAAU4xB,EAAc,YAAY5xB,GACpD,CAACyO,iBAAiB,IAMxB,IAAI0jB,EAAaf,EAAe,aAAe,KAC/C,IAAI,MAAMpxB,KAAY4xB,EAAe,CACnC,GAAgB,aAAb5xB,EACD,SAEgB,OAAfmyB,IACDA,EAAaf,EAAe,YAAc,IAE5CR,GAAUuB,EAAYnyB,EAAU,GAAI,CAACyO,iBAAiB,IACtD,MAAM1S,EAAQ61B,EAAc5xB,GAC5B,IAAI,IAAIoyB,EAAK,EAAGA,EAAKr2B,EAAM3jG,SAAUg6H,EAAI,CACvC,MAAMz1B,EAAOZ,EAAMq2B,GACnB,GAAG/B,GAAS1zB,IAASyzB,GAAQzzB,GAC3B,MAAM,IAAImQ,GACR,6EACuB,qBACvB,CAAC/wF,KAAM,iCAAkCzpB,MAAOs/H,IAEpDhB,GAAUuB,EAAYnyB,EAAUrD,EAAM,CAAC8R,iBAAiB,KAI5D,SAIF,GAAwB,UAArBojB,EAA8B,CAC/BJ,EAAMvsH,KAAK7S,GACX,SAIF,IAAIggI,EAAUlH,EACd,MAAM30F,EAAMg6F,GAAiBrF,EAAW94H,EAAK,YACzCo5H,GAAaj1F,KACf67F,QAAgB3B,GAAgB,CAC9BvF,UAAAA,EACAc,SAAUz1F,EACVy2F,WAAW,EACXC,mBAAmB,EACnBhnG,QAAAA,KAIJ,MAAMuoG,EAAY+B,GAAiB6B,EAAShgI,EAAK,eAAiB,GAElE,GAAGo8H,EAAU7xB,SAAS,cAAgBiuB,GAAUv4H,GAAQ,CAGtDs/H,EAAgBU,GAAmBD,EAAS//H,EAF1Bk+H,GAAiB6B,EAAShgI,EAAK,cAEa6zB,QACzD,GAAGuoG,EAAU7xB,SAAS,WAAaiuB,GAAUv4H,GAAQ,CAE1D,MAAMigI,EAAU9D,EAAU7xB,SAAS,UAC7B41B,EAAWhC,GAAiB6B,EAAShgI,EAAK,WAAa,SACvDogI,EAA6B,WAAbD,GACpBzG,GAAWZ,EAAWqH,EAAU,CAACnG,OAAO,GAAOnmG,GAEjD0rG,QAAsBc,GAAgB,CACpCvH,UAAWkH,EACXnsG,QAAAA,EACAgrG,eAAgB7+H,EAChBC,MAAAA,EACAk/H,aAAAA,EACAe,QAAAA,EACAC,SAAAA,EACAC,cAAAA,SAEG,GAAGhE,EAAU7xB,SAAS,QAAUiuB,GAAUv4H,GAAQ,CAEvD,MAAMigI,EAAU9D,EAAU7xB,SAAS,UACnCg1B,QAAsBc,GAAgB,CACpCvH,UAAWkH,EACXnsG,QAAAA,EACAgrG,eAAgB7+H,EAChBC,MAAAA,EACAk/H,aAAAA,EACAe,QAAAA,EACAC,SAAU,aAEP,GAAG/D,EAAU7xB,SAAS,UAAYiuB,GAAUv4H,GAEjDs/H,QAAsBc,GAAgB,CAEpCvH,UAAWkH,EAAQxC,0BACnB3pG,QAAAA,EACAgrG,eAAgB7+H,EAChBC,MAAAA,EACAk/H,aAAAA,EACAe,SAAS,EACTC,SAAU,cAEP,CAEL,MAAMhmB,EAA+B,UAArBqlB,EAChB,GAAGrlB,GAA+B,SAArBqlB,EAA6B,CACxC,IAAIc,EAAqBzB,EACtB1kB,GAAqC,WAA3B2kB,IACXwB,EAAqB,MAEvBf,QAAsBn3B,GAAIs2B,OAAO,CAC/B5F,UAAWkH,EACXnB,eAAgByB,EAChBn1B,QAASlrG,EACT4zB,QAAAA,EACAmrG,WAAY7kB,EACZglB,aAAAA,SAIFI,EAD8C,UAA9CpB,GAAiBrF,EAAW94H,EAAK,SACjB,CACd,QAAS,QACT,SAAUC,SAIUmoG,GAAIs2B,OAAO,CAC/B5F,UAAWkH,EACXnB,eAAgB7+H,EAChBmrG,QAASlrG,EACT4zB,QAAAA,EACAmrG,YAAY,EACZG,aAAAA,IAMN,GAAqB,OAAlBI,GAA+C,WAArBC,IAE3BD,EAAgBJ,EAAa,CAC3BoB,cAAetgI,EACfu/H,iBAAAA,EACA1G,UAAWkH,EACXnB,eAAAA,EACAviH,OAAQ6uF,EACRt3E,QAAAA,EACAmrG,WAAAA,EACAh/H,IAAAA,EACA++H,eAAAA,SAEmBhrB,IAAlBwrB,GAwBL,GAlBwB,UAArBC,IAAiCzB,GAAQwB,IAC1CnD,EAAU7xB,SAAS,WAEnBg1B,EAAgB,CAAC,QAAS7G,GAAS6G,KAMlCnD,EAAU7xB,SAAS,YACnB6xB,EAAU/gB,MAAKr7G,GAAe,QAARA,GAAyB,WAARA,MAExCu/H,EAAgB7G,GAAS6G,GACtBvkG,KAAI+B,KAAO,SAAU27F,GAAS37F,QAKhCijG,EAAQhxG,SAASkjF,IAAIlyG,IAAQggI,EAAQhxG,SAAS3gB,IAAIrO,GAAKwqB,QAA1D,CACE,MAAMs1G,EACJf,EAAe,YAAcA,EAAe,aAAe,GAC7DQ,EAAgB7G,GAAS6G,GACzB,IAAI,IAAIQ,EAAK,EAAGA,EAAKR,EAAcx5H,SAAUg6H,EAAI,CAC/C,MAAMz1B,EAAOi1B,EAAcQ,GAC3B,GAAG/B,GAAS1zB,IAASyzB,GAAQzzB,GAC3B,MAAM,IAAImQ,GACR,6EACuB,qBACvB,CAAC/wF,KAAM,iCAAkCzpB,MAAOs/H,IAEpDhB,GAAUuB,EAAYN,EAAkBl1B,EAAM,CAAC8R,iBAAiB,UAOpEmiB,GAAUQ,EAAgBS,EAAkBD,EAAe,CACzDnjB,iBAAiB,IAMrB,GAAG,WAAY2iB,EACb,GAA+B,UAA5BA,EAAe,UAAwBT,GAAgBxF,EAAW,WAG9D,IAAIN,GAAU6G,IAAoB9G,GAAS8G,MAC/CxrG,EAAQgoF,QACT,MAAM,IAAIpB,GACR,4EAEA,qBACA,CAAC/wF,KAAM,6BAA8BzpB,MAAOo/H,IAKlD,IAAI,MAAMr/H,KAAOo/H,EAAO,CACtB,MAAMoB,EAAejI,GAASptB,EAAQnrG,IAAQmrG,EAAQnrG,GAAO,CAACmrG,EAAQnrG,IACtE,IAAI,MAAMygI,KAAMD,EAAc,CAC5B,IAAIhI,GAAUiI,IAAOphI,OAAO4B,KAAKw/H,GAAIplB,MAAKxiF,GACa,WAArD6gG,GAAWZ,EAAWjgG,EAAG,CAACmhG,OAAO,GAAOnmG,KACxC,MAAM,IAAI4mF,GACR,8DACA,qBACA,CAAC/wF,KAAM,sBAAuBzpB,MAAOwgI,UAEnC7B,GAAc,CAClB9F,UAAAA,EACA+F,eAAAA,EACAC,uBAAAA,EACA3zB,QAASs1B,EACT1B,eAAAA,EACAlrG,QAAAA,EACAmrG,WAAAA,EACAE,kBAAAA,EACAD,QAAAA,EACAE,aAAAA,MAgBR,SAASuB,IAAa5H,UAACA,EAAS+F,eAAEA,EAAc5+H,MAAEA,EAAK4zB,QAAEA,IAEvD,GAAG5zB,MAAAA,EACD,OAAO,KAIT,MAAMu/H,EAAmB9F,GACvBZ,EAAW+F,EAAgB,CAAC7E,OAAO,GAAOnmG,GAC5C,GAAwB,QAArB2rG,EACD,OAAO9F,GAAWZ,EAAW74H,EAAO,CAACsxC,MAAM,GAAO1d,GAC7C,GAAwB,UAArB2rG,EACR,OAAO9F,GAAWZ,EAAW74H,EAAO,CAAC+5H,OAAO,EAAMzoF,MAAM,GAAO1d,GAIjE,MAAMze,EAAO+oH,GAAiBrF,EAAW+F,EAAgB,SAGzD,IAAa,QAATzpH,GAAuC,WAArBoqH,IAAkC/G,GAAUx4H,GAChE,MAAO,CAAC,MAAOy5H,GAAWZ,EAAW74H,EAAO,CAACsxC,MAAM,GAAO1d,IAG5D,GAAY,WAATze,GAAqBqjH,GAAUx4H,GAChC,MAAO,CACL,MAAOy5H,GAAWZ,EAAW74H,EAAO,CAAC+5H,OAAO,EAAMzoF,MAAM,GAAO1d,IAKnE,GAAGuqG,GAAWoB,GACZ,OAAOv/H,EAGT,MAAM6yG,EAAO,GAEb,GAAG19F,IAAS,CAAC,MAAO,SAAU,SAASm1F,SAASn1F,GAE9C09F,EAAK,SAAW19F,OACX,GAAGqjH,GAAUx4H,GAAQ,CAE1B,MAAMi0G,EAAWiqB,GAAiBrF,EAAW+F,EAAgB,aAC7C,OAAb3qB,IACDpB,EAAK,aAAeoB,GAEtB,MAAMsoB,EAAY2B,GAAiBrF,EAAW+F,EAAgB,cAC7C,OAAdrC,IACD1pB,EAAK,cAAgB0pB,GASzB,MALI,CAAC,UAAW,SAAU,UAAUjyB,gBAAgBtqG,KAClDA,EAAQA,EAAMqb,YAEhBw3F,EAAK,UAAY7yG,EAEV6yG,EAaT,SAASmtB,GAAmBnH,EAAW6H,EAAanE,EAAW3oG,GAC7D,MAAMi/E,EAAO,GACP7xG,EAAO5B,OAAO4B,KAAK0/H,GAAa1hG,OACtC,IAAI,MAAMj/B,KAAOiB,EAAM,CACrB,MAAM2/H,EAAclH,GAAWZ,EAAW94H,EAAK,CAACg6H,OAAO,GAAOnmG,GAC9D,IAAInY,EAAMilH,EAAY3gI,GAClBu4H,GAAS78G,KACXA,EAAM,CAACA,IAET,IAAI,MAAM4uF,KAAQ5uF,EAAK,CACrB,GAAY,OAAT4uF,EAED,SAEF,IAAImuB,GAAUnuB,GACZ,MAAM,IAAImQ,GACR,+DACA,qBACA,CAAC/wF,KAAM,6BAA8Bi3G,YAAAA,IAEzC,MAAMjlH,EAAM,CAAC,SAAU4uF,GACJ,UAAhBs2B,IACDllH,EAAI,aAAe1b,EAAIs7G,eAEtBkhB,IACD9gH,EAAI,cAAgB8gH,GAEtB1pB,EAAKjgG,KAAK6I,IAGd,OAAOo3F,EAGTiD,eAAesqB,IACbvH,UAACA,EAASjlG,QAAEA,EAAOgrG,eAAEA,EAAc5+H,MAAEA,EAAKk/H,aAAEA,EAAYe,QAAEA,EAAOC,SAC/DA,EAAQC,cAAEA,IACZ,MAAMttB,EAAO,GACP7xG,EAAO5B,OAAO4B,KAAKhB,GAAOg/B,OAC1B4hG,EAA2B,UAAbV,EACpB,IAAI,IAAIngI,KAAOiB,EAAM,CAEnB,GAAG4/H,EAAa,CACd,MAAM18F,EAAMg6F,GAAiBrF,EAAW94H,EAAK,YACzCo5H,GAAaj1F,KACf20F,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUz1F,EACVy2F,WAAW,EACX/mG,QAAAA,KAKN,IAgBI+sG,EAhBAllH,EAAMzb,EAAMD,GACZu4H,GAAS78G,KACXA,EAAM,CAACA,IAGTA,QAAY0sF,GAAIs2B,OAAO,CACrB5F,UAAAA,EACA+F,eAAAA,EACA1zB,QAASzvF,EACTmY,QAAAA,EACAmrG,YAAY,EACZ8B,aAAa,EACb3B,aAAAA,IAOEyB,EAFDR,EACU,UAARpgI,EACa,QAEA0gI,GACZ,CAAC5H,UAAAA,EAAW+F,eAAgBsB,EAAUlgI,MAAOD,EAAK6zB,QAAAA,IAGxC6lG,GAAWZ,EAAW94H,EAAK,CAACg6H,OAAO,GAAOnmG,GAG1C,QAAbssG,EAEDngI,EAAM05H,GAAWZ,EAAW94H,EAAK,CAACuxC,MAAM,GAAO1d,GACvCgtG,IACR7gI,EAAM4gI,GAGR,IAAI,IAAIt2B,KAAQ5uF,EAAK,CAKnB,GAHGwkH,IAAYjC,GAAS3zB,KACtBA,EAAO,CAAC,SAAU,CAACA,KAEL,UAAb61B,EACkB,UAAhBS,IAEOt2B,EAAK,SACbA,EAAK,SAAW,CAACtqG,GAAKyO,OAAO67F,EAAK,UAElCA,EAAK,SAAW,CAACtqG,QAEd,CAAA,GAAGg+H,GAAS1zB,KAChB,CAAC,YAAa,QAAS,UAAUC,SAAS41B,GAC3C,MAAM,IAAI1lB,GAER,wEAAY0lB,MACZ,qBACA,CAACz2G,KAAM,uBAAwBzpB,MAAOqqG,IAChC81B,EAGW,UAAhBQ,GAEDrC,GAAUj0B,EAAM81B,EAAeQ,EAAa,CAC1CxkB,iBAAiB,EACjBG,cAAc,IAGM,UAAhBqkB,GAA6BT,KAAY71B,IACjDA,EAAK61B,GAAYngI,GAEnB8yG,EAAKjgG,KAAKy3F,IAGd,OAAOwI,EAthCT1K,GAAIs2B,OAAS3oB,OACX+iB,UAAAA,EACA+F,eAAAA,EAAiB,KACjB1zB,QAAAA,EACAt3E,QAAAA,EAAU,GACVmrG,WAAAA,GAAa,EACb8B,YAAAA,GAAc,EACd5B,kBAAAA,EAAoB,KACpBC,aAAAA,EAAe,aAGf,GAAGh0B,MAAAA,EACD,OAAO,KAQT,GAJsB,aAAnB0zB,IACDhrG,EAAUx0B,OAAOm8G,OAAO,GAAI3nF,EAAS,CAACgoF,SAAS,MAG7C0c,GAASptB,KAAaqtB,GAAUrtB,GAAU,CAE5C,IAAI6zB,IAAkC,OAAnBH,GAEF,WADfnF,GAAWZ,EAAW+F,EAAgB,CAAC7E,OAAO,GAC5CnmG,IAAwB,CAC1B,MAAMktG,QAAe5B,EAAa,CAChCoB,cAAep1B,EACf2tB,UAAAA,EACA+F,eAAAA,EACAhrG,QAAAA,EACAmrG,WAAAA,IAEF,YAAcjrB,IAAXgtB,EACM,KAEFA,EAIT,OAAOL,GAAa,CAAC5H,UAAAA,EAAW+F,eAAAA,EAAgB5+H,MAAOkrG,EAASt3E,QAAAA,IAIlE,GAAG0kG,GAASptB,GAAU,CACpB,IAAI2H,EAAO,GACX,MAAMspB,EAAY+B,GAChBrF,EAAW+F,EAAgB,eAAiB,GAC9CG,EAAaA,GAAc5C,EAAU7xB,SAAS,SAC9C,IAAI,IAAIrgG,EAAI,EAAGA,EAAIihG,EAAQplG,SAAUmE,EAAG,CAEtC,IAAIrI,QAAUumG,GAAIs2B,OAAO,CACvB5F,UAAAA,EACA+F,eAAAA,EACA1zB,QAASA,EAAQjhG,GACjB2pB,QAAAA,EACAsrG,aAAAA,EACA2B,YAAAA,EACA5B,kBAAAA,IAECF,GAAczG,GAAS12H,KACxBA,EAAI,CAAC,QAASA,IAGP,OAANA,IACDA,QAAUs9H,EAAa,CACrBoB,cAAep1B,EAAQjhG,GACvB4uH,UAAAA,EACA+F,eAAAA,EACAviH,OAAQ6uF,EACR3tE,MAAOtzB,EACP2pB,QAAAA,EACAkrG,eAAgBjsB,EAChBksB,WAAAA,SAEOjrB,IAANlyG,KAKF02H,GAAS12H,GACVixG,EAAOA,EAAKrkG,OAAO5M,GAEnBixG,EAAKjgG,KAAKhR,IAGd,OAAOixG,EAMT,MAAMgsB,EAAyBpF,GAC7BZ,EAAW+F,EAAgB,CAAC7E,OAAO,GAAOnmG,GAGtCmtG,EACJ7C,GAAiBrF,EAAW+F,EAAgB,YAM9CK,EAAoBA,IACjBpG,EAAUoC,gBAAkBpC,EAAY,MAC3C,IAAI73H,EAAO5B,OAAO4B,KAAKkqG,GAASlsE,OAC5BgiG,GAAcH,EAClB,GAAGG,GAAc/B,GAAqBj+H,EAAK8E,QAAU,IAClD9E,EAAKspG,SAAS,YACf,IAAI,MAAMvqG,KAAOiB,EAAM,CACrB,MAAMu+H,EAAmB9F,GACvBwF,EAAmBl/H,EAAK,CAACg6H,OAAO,GAAOnmG,GACzC,GAAwB,WAArB2rG,EAA+B,CAEhCyB,GAAa,EACbnI,EAAYoG,EACZ,MAEF,GAAwB,QAArBM,GAA8C,IAAhBv+H,EAAK8E,OAAc,CAElDk7H,GAAa,EACb,OAKHA,IAEDnI,EAAYA,EAAU0E,2BAIpBpE,GAAa4H,KACflI,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUoH,EACVpG,WAAW,EACXC,mBAAmB,EACnBhnG,QAAAA,KAKD,aAAcs3E,IACf2tB,QAAkBuF,GAChB,CAACvF,UAAAA,EAAWc,SAAUzuB,EAAQ,YAAat3E,QAAAA,KAI/CqrG,EAAoBpG,EAGpB,IAAImG,EAAU,KAGd,IAAI,MAAMj/H,KAAOiB,EAAM,CAErB,GAAwB,UADCy4H,GAAWZ,EAAW94H,EAAK,CAACg6H,OAAO,GAAOnmG,GAClC,CAG/BorG,EAAUA,GAAWj/H,EACrB,MAAMC,EAAQkrG,EAAQnrG,GAChB46B,EACJ9iB,MAAMuyF,QAAQpqG,GACXA,EAAM8F,OAAS,EAAI9F,EAAMgG,QAAQg5B,OAASh/B,EAAS,CAACA,GACzD,IAAI,MAAMmV,KAAQwlB,EAAO,CACvB,MAAMuJ,EAAMg6F,GAAiBe,EAAmB9pH,EAAM,YAClDgkH,GAAaj1F,KACf20F,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUz1F,EACVtQ,QAAAA,EACA+mG,WAAW,OAQrB,IAAI9nB,EAAO,SACL8rB,GAAc,CAClB9F,UAAAA,EACA+F,eAAAA,EACAC,uBAAAA,EACA3zB,QAAAA,EACA4zB,eAAgBjsB,EAChBj/E,QAAAA,EACAmrG,WAAAA,EACAC,QAAAA,EACAC,kBAAAA,EACAC,aAAAA,IAGFl+H,EAAO5B,OAAO4B,KAAK6xG,GACnB,IAAIzjG,EAAQpO,EAAK8E,OAEjB,GAAG,WAAY+sG,EAAM,CAEnB,GAAG,UAAWA,IAAS,cAAeA,GAAQ,eAAgBA,GAC5D,MAAM,IAAI2H,GACR,8HAEA,qBAAsB,CAAC/wF,KAAM,uBAAwByhF,QAAS2H,IAElE,IAAIouB,EAAa7xH,EAAQ,EAazB,GAZG,UAAWyjG,IACZouB,GAAc,GAEb,WAAYpuB,IACbouB,GAAc,GAEb,cAAepuB,IAChBouB,GAAc,GAEb,eAAgBpuB,IACjBouB,GAAc,GAEE,IAAfA,EACD,MAAM,IAAIzmB,GACR,8JAGA,qBAAsB,CAAC/wF,KAAM,uBAAwByhF,QAAS2H,IAElE,MAAMngE,EAA4B,OAAnBmgE,EAAK,UAAqB,GAAK4lB,GAAS5lB,EAAK,WACtDl4E,EAAQ4jG,GAAW1rB,EAAM,SAG/B,GAAGwrB,GAAgBxF,EAAW,MAAQl+F,EAAM2vE,SAAS,UAClC,IAAjB3vE,EAAM70B,aAED,GAAqB,IAAlB4sC,EAAO5sC,OAAc,CAC7B,MAAMg7H,QAAe5B,EAAa,CAChCoB,cAAeztB,EACfgmB,UAAAA,EACA+F,eAAAA,EACA1zB,QAAAA,EACAt3E,QAAAA,EACAmrG,WAAAA,IAGAlsB,OADYiB,IAAXgtB,EACMA,EAEA,SAEJ,CAAA,IAAIpuF,EAAOmpE,OAAM/+E,GAAM07F,GAAU17F,IAAM+gG,GAAe/gG,MAC3D,cAAe+1E,EAEf,MAAM,IAAI2H,GACR,+DACA,qBACA,CAAC/wF,KAAM,gCAAiCyhF,QAAS2H,IAC9C,IAAIl4E,EAAMkhF,OAAM3pG,GACpBknH,GAAelnH,MAAQsmH,GAAUtmH,IAA0B,IAApBA,EAAE7K,QAAQ,QAClDw2H,GAAe3rH,KACf,MAAM,IAAIsoG,GACR,yHAEA,qBAAsB,CAAC/wF,KAAM,sBAAuByhF,QAAS2H,UAE5D,GAAG,UAAWA,IAASylB,GAASzlB,EAAK,UAE1CA,EAAK,SAAW,CAACA,EAAK,eACjB,GAAG,SAAUA,GAAQ,UAAWA,EAAM,CAE3C,GAAGzjG,EAAQ,IAAiB,IAAVA,KAAe,WAAYyjG,IAC3C,MAAM,IAAI2H,GACR,0IAEa,qBACb,CAAC/wF,KAAM,6BAA8ByhF,QAAS2H,IAG/C,SAAUA,IACXA,EAAOA,EAAK,QACZ7xG,EAAO5B,OAAO4B,KAAK6xG,GACnBzjG,EAAQpO,EAAK8E,aAEV,GAAa,IAAVsJ,GAAe,cAAeyjG,EAAM,CAE5C,MAAMiuB,QAAe5B,EAAarsB,EAAM,CACtCytB,cAAeztB,EACfgmB,UAAAA,EACA+F,eAAAA,EACA1zB,QAAAA,EACAt3E,QAAAA,EACAmrG,WAAAA,IAGAlsB,OADYiB,IAAXgtB,EACMA,EAEA,KAMX,GAAGvI,GAAU1lB,KACVj/E,EAAQstG,wBAA0BnC,IACf,OAAnBH,GAAsD,WAA3BC,KAEf,IAAVzvH,GAAe,WAAYyjG,GAAQ,UAAWA,GACpC,IAAVzjG,GAAe,QAASyjG,GAAO,CAChC,MAAMiuB,QAAe5B,EAAa,CAChCoB,cAAeztB,EACfgmB,UAAAA,EACA+F,eAAAA,EACA1zB,QAAAA,EACAt3E,QAAAA,EACAmrG,WAAAA,IAGAlsB,OADYiB,IAAXgtB,EACMA,EAEA,KAKb,OAAOjuB,GC7XT,gBAAOgnB,IAAa1nB,GACd2H,GAAaxE,GACb36E,GAAQ66E,GACRsF,GAAOrF,GACP+E,GAAc9B,GAEdvQ,GAAM,OACZg5B,GAAiBh5B,GAWjBA,GAAIi5B,oBAAsB,CAACznH,EAAOia,KAIhC,MAAM6iF,GAHN7iF,EAAUA,GAAW,IAGE6iF,QAAU,IAAIqE,GAAKpJ,iBAAiB,OACrD8B,EAAS,CAAC,WAAY,IAI5B,OAHArL,GAAIk5B,cAAc1nH,EAAO65F,EAAQ,WAAYiD,GAGtCtO,GAAIm5B,cAAc9tB,IAc3BrL,GAAIk5B,cAAgB,CAAC1nH,EAAO65F,EAAQ9D,EAAO+G,EAAQ32F,EAAM6yF,KAEvD,GAAGh4E,GAAMyvE,QAAQzwF,GAAQ,CACvB,IAAI,MAAM9U,KAAQ8U,EAChBwuF,GAAIk5B,cAAcx8H,EAAM2uG,EAAQ9D,EAAO+G,OAAQ3C,EAAWnB,GAE5D,OAIF,IAAIh4E,GAAM4+E,SAAS5/F,GAIjB,YAHGg5F,GACDA,EAAK//F,KAAK+G,IAMd,GAAGmgG,GAAWG,QAAQtgG,GAAQ,CAC5B,GAAG,UAAWA,EAAO,CACnB,IAAIxE,EAAOwE,EAAM,SAES,IAAvBxE,EAAK9N,QAAQ,QACdsS,EAAM,SAAWxE,EAAOshG,EAAO5E,MAAM18F,IAMzC,YAHGw9F,GACDA,EAAK//F,KAAK+G,IAGP,GAAGg5F,GAAQmH,GAAWI,OAAOvgG,GAAQ,CAC1C,MAAM4nH,EAAQ,GAGd,OAFAp5B,GAAIk5B,cAAc1nH,EAAM,SAAU65F,EAAQ9D,EAAO+G,EAAQ32F,EAAMyhH,QAC/D5uB,EAAK//F,KAAK,CAAC,QAAS2uH,IAOtB,GAAG,UAAW5nH,EAAO,CACnB,MAAMghB,EAAQhhB,EAAM,SACpB,IAAI,MAAMxE,KAAQwlB,EACU,IAAvBxlB,EAAK9N,QAAQ,OACdovG,EAAO5E,MAAM18F,GAMhBwlB,GAAMk/E,YAAY/5F,KACnBA,EAAOg6F,GAAWO,YAAY1gG,GAC5B88F,EAAO5E,MAAMl4F,EAAM,QAAUA,EAAM,QAIpCg5F,GACDA,EAAK//F,KAAK,CAAC,MAAOkN,IAIpB,MAAM0hH,EAAWhuB,EAAO9D,GAClBK,EAAUyxB,EAAS1hH,GAAQ0hH,EAAS1hH,IAAS,GACnDiwF,EAAQ,OAASjwF,EACjB,MAAM4K,EAAatrB,OAAO4B,KAAK2Y,GAAOqlB,OACtC,IAAI,IAAI0uE,KAAYhjF,EAAY,CAE9B,GAAgB,QAAbgjF,EACD,SAIF,GAAgB,aAAbA,EAAyB,CAC1B,MAAM+zB,EAAiB,CAAC,MAAO3hH,GACzB+/G,EAAalmH,EAAM,YACzB,IAAI,MAAM+nH,KAAmB7B,EAAY,CACvC,MAAMp2B,EAAQo2B,EAAW6B,GACzB,IAAI,MAAMr3B,KAAQZ,EAAO,CACvB,IAAIk4B,EAAWt3B,EAAK,OACjByP,GAAWO,YAAYhQ,KACxBs3B,EAAWlrB,EAAO5E,MAAM8vB,IAE1Bx5B,GAAIk5B,cAAch3B,EAAMmJ,EAAQ9D,EAAO+G,EAAQkrB,GAC/C7mB,GAAKoB,SACHslB,EAASG,GAAWD,EAAiBD,EACrC,CAACtlB,iBAAiB,EAAME,gBAAgB,KAG9C,SAIF,GAAgB,WAAb3O,EAAuB,CAEnB5tF,KAAQ0zF,IACXA,EAAO1zF,GAAQ,IAEjBqoF,GAAIk5B,cAAc1nH,EAAM+zF,GAAW8F,EAAQ1zF,EAAM22F,GACjD,SAIF,GAAgB,cAAb/I,EAA0B,CAC3BvF,GAAIk5B,cAAc1nH,EAAM+zF,GAAW8F,EAAQ9D,EAAO+G,GAClD,SAIF,GAAgB,UAAb/I,GAAwBmsB,GAAUnsB,GAAW,CAC9C,GAAgB,WAAbA,GAAyBA,KAAYqC,IACrCp2F,EAAM+zF,KAAcqC,EAAQrC,IAC7B/zF,EAAM+zF,GAAU,SAAWqC,EAAQrC,GAAU,QAC7C,MAAM,IAAI8M,GACR,gEACA,qBACA,CAAC/wF,KAAM,sBAAuBsmF,QAAAA,IAElCA,EAAQrC,GAAY/zF,EAAM+zF,GAC1B,SAIF,MAAMk0B,EAAUjoH,EAAM+zF,GAQtB,GAL8B,IAA3BA,EAASrmG,QAAQ,QAClBqmG,EAAW+I,EAAO5E,MAAMnE,IAIJ,IAAnBk0B,EAAQ97H,OAIX,IAAI,IAAI4vB,KAAKksG,EAOX,GANgB,UAAbl0B,IAEDh4E,EAAyB,IAApBA,EAAEruB,QAAQ,MAAeovG,EAAO5E,MAAMn8E,GAAKA,GAI/CokF,GAAWC,UAAUrkF,IAAMokF,GAAWE,mBAAmBtkF,GAAI,CAE9D,GAAG,QAASA,IAAMA,EAAE,OAClB,SAIF,MAAMhpB,EAAKotG,GAAWO,YAAY3kF,GAChC+gF,EAAO5E,MAAMn8E,EAAE,QAAUA,EAAE,OAG7BolF,GAAKoB,SACHnM,EAASrC,EAAU,CAAC,MAAOhhG,GAC3B,CAACyvG,iBAAiB,EAAME,gBAAgB,IAC1ClU,GAAIk5B,cAAc3rG,EAAG89E,EAAQ9D,EAAO+G,EAAQ/pG,QACvC,GAAGotG,GAAWG,QAAQvkF,GAC3BolF,GAAKoB,SACHnM,EAASrC,EAAUh4E,EACnB,CAACymF,iBAAiB,EAAME,gBAAgB,SACrC,GAAGvC,GAAWI,OAAOxkF,GAAI,CAE9B,MAAM6rG,EAAQ,GACdp5B,GAAIk5B,cAAc3rG,EAAE,SAAU89E,EAAQ9D,EAAO+G,EAAQ32F,EAAMyhH,GAC3D7rG,EAAI,CAAC,QAAS6rG,GACdzmB,GAAKoB,SACHnM,EAASrC,EAAUh4E,EACnB,CAACymF,iBAAiB,EAAME,gBAAgB,SAG1ClU,GAAIk5B,cAAc3rG,EAAG89E,EAAQ9D,EAAO+G,EAAQ32F,GAC5Cg7F,GAAKoB,SACHnM,EAASrC,EAAUh4E,EAAG,CAACymF,iBAAiB,EAAME,gBAAgB,SAzClEvB,GAAKoB,SAASnM,EAASrC,EAAU,GAAI,CAACyO,iBAAiB,MAuD7DhU,GAAI05B,mBAAqBruB,IACvB,MAAMsuB,EAAS,GACf,IAAI,MAAMhiH,KAAQ1gB,OAAO4B,KAAKwyG,GAAQx0E,OACpC,IAAI,MAAMtyB,KAAMtN,OAAO4B,KAAKwyG,EAAO1zF,IAAOkf,OAAQ,CAChD,MAAMn6B,EAAO2uG,EAAO1zF,GAAMpT,GACrBA,KAAMo1H,IACTA,EAAOp1H,GAAM,CAAC,MAAOA,IAEvB,MAAMq1H,EAAaD,EAAOp1H,GAE1B,IAAI,MAAMghG,KAAYtuG,OAAO4B,KAAK6D,GAAMm6B,OACtC,GAAG66F,GAAUnsB,IAA0B,UAAbA,EAExBq0B,EAAWr0B,GAAYoN,GAAKnlF,MAAM9wB,EAAK6oG,SAGvC,IAAI,MAAM1tG,KAAS6E,EAAK6oG,GACtBoN,GAAKoB,SACH6lB,EAAYr0B,EAAUoN,GAAKnlF,MAAM31B,GACjC,CAACm8G,iBAAiB,EAAME,gBAAgB,IAOpD,OAAOylB,GAGT35B,GAAIm5B,cAAgB9tB,IAElB,MAAMwuB,EAAexuB,EAAO,YACtByuB,EAAa7iI,OAAO4B,KAAKwyG,GAAQx0E,OACvC,IAAI,MAAM81E,KAAamtB,EAAY,CACjC,GAAiB,aAAdntB,EACD,SAEF,MAAMqsB,EAAU3tB,EAAOsB,GACvB,IAAI/E,EAAUiyB,EAAaltB,GACvB/E,EAKQ,WAAYA,IACtBA,EAAQ,UAAY,IALpBiyB,EAAaltB,GAAa/E,EAAU,CAClC,MAAO+E,EACP,SAAU,IAKd,MAAMpF,EAAQK,EAAQ,UACtB,IAAI,MAAMrjG,KAAMtN,OAAO4B,KAAKmgI,GAASniG,OAAQ,CAC3C,MAAMn6B,EAAOs8H,EAAQz0H,GAEjBotG,GAAWE,mBAAmBn1G,IAChC6qG,EAAM98F,KAAK/N,IAIjB,OAAOm9H,GC3RT,MACEhoB,mBAAoBkoB,IAClB/vB,IAGFivB,oBAAqBe,IACnB7sB,GAEEnN,GAAM,OACZ8E,GAAiB9E,GASjBA,GAAI8E,QAAUtzF,IACZ,MAAMqoH,EAAeG,GAAqBxoH,GAGpCyoH,EAAY,GACZphI,EAAO5B,OAAO4B,KAAKghI,GAAchjG,OACvC,IAAI,IAAIg8E,EAAK,EAAGA,EAAKh6G,EAAK8E,SAAUk1G,EAAI,CACtC,MAAMn2G,EAAOm9H,EAAahhI,EAAKg6G,IAE3BknB,GAAoBr9H,IACtBu9H,EAAUxvH,KAAK/N,GAGnB,OAAOu9H,GC/BT,MAAM5nB,GAAcrI,GACd2H,GAAaxE,GACb36E,GAAQ66E,GACRsF,GAAOrF,IAGPyH,SAEJA,aACAC,YACAC,WACAC,YACAC,oBAGAG,eAKAE,cACAC,eACAC,cACA5K,IACEyF,GAEEgmB,GAAc,sCAEdv2B,GAAM,OACZk6B,GAAiBl6B,GAsPjB,SAASm6B,GAAa5sG,EAAG6sG,EAAgBC,GAEvC,GAAG9sG,EAAEq+E,SAAShI,SAAS,QACrB,MAAO,CAAC,MAAOr2E,EAAE11B,OAInB,MAAM6yG,EAAO,CAAC,SAAUn9E,EAAE11B,OAG1B,GAAG01B,EAAEu+E,SACHpB,EAAK,aAAen9E,EAAEu+E,aACjB,CACL,IAAI9+F,EAAOugB,EAAEs+E,SAASh0G,MAItB,GAHImV,IACFA,EAAO89F,IAEN99F,IAASsoG,GAAkB,CAC5BtoG,EAAO,QACP,IACE09F,EAAK,UAAY2Q,KAAKhF,MAAM3L,EAAK,WACjC,MAAMjxG,GACN,MAAM,IAAI44G,GACR,oCACA,4BACA,CAAC/wF,KAAM,uBAAwBzpB,MAAO6yG,EAAK,UAAWghB,MAAOjyH,KAInE,GAAG2gI,EAAgB,CACjB,GAAGptH,IAASwoG,GACY,SAAnB9K,EAAK,UACNA,EAAK,WAAY,EACU,UAAnBA,EAAK,YACbA,EAAK,WAAY,QAEd,GAAGl4E,GAAM6+E,UAAU3G,EAAK,WAC7B,GAAG19F,IAAS0oG,GAAa,CACvB,MAAM5zG,EAAIohG,SAASwH,EAAK,UAAW,IAChC5oG,EAAEw4H,QAAQ,KAAO5vB,EAAK,YACvBA,EAAK,UAAY5oG,QAEXkL,IAASyoG,KACjB/K,EAAK,UAAY6G,WAAW7G,EAAK,YAIjC,CAAC8K,GAAaE,GAAaD,GAAY3K,IAAY3I,SAASn1F,KAC9D09F,EAAK,SAAW19F,QAEb,GAAoB,kBAAjBqtH,GACRrtH,EAAKjI,WAAW,+BAAgC,CAChD,OAAS+mG,EAAUsoB,GAAapnH,EAAK+B,MAAM,QACxC+8F,EAASnuG,OAAS,IACnB+sG,EAAK,aAAeoB,EAChBA,EAASL,MAAM8qB,KACjBt4H,QAAQY,KAAK,kCAAkCitG,MAGnDpB,EAAK,cAAgB0pB,OACbpnH,IAAS89F,KACjBJ,EAAK,SAAW19F,GAIpB,OAAO09F,EA7ST1K,GAAIu6B,QAAU5sB,MACZvC,GAEEovB,WAAAA,GAAa,EACbJ,eAAAA,GAAiB,EACjBC,aAAAA,EAAe,SAGjB,MAAMR,EAAe,GACfY,EAAW,CAAC,WAAYZ,GACxBa,EAAiB,GAEvB,IAAI,MAAMzvB,KAAQG,EAAS,CAEzB,MAAMzzF,EAAgC,iBAAxBszF,EAAK1D,MAAMqE,SACvB,WAAaX,EAAK1D,MAAM1vG,MACrB8f,KAAQ8iH,IACXA,EAAS9iH,GAAQ,IAEP,aAATA,GAAyBA,KAAQkiH,IAClCA,EAAaliH,GAAQ,CAAC,MAAOA,IAG/B,MAAMqhH,EAAUyB,EAAS9iH,GAGnBkrB,EAAIooE,EAAKrD,QAAQ/vG,MACjBoX,EAAIg8F,EAAKS,UAAU7zG,MACnB01B,EAAI09E,EAAK5uF,OAEVwmB,KAAKm2F,IACRA,EAAQn2F,GAAK,CAAC,MAAOA,IAEvB,MAAMnmC,EAAOs8H,EAAQn2F,GAEf83F,EAAeptG,EAAEq+E,SAAShI,SAAS,QAKzC,GAJG+2B,KAAkBptG,EAAE11B,SAASmhI,KAC9BA,EAAQzrG,EAAE11B,OAAS,CAAC,MAAO01B,EAAE11B,QAG5BoX,IAAMkmG,KAAaqlB,GAAcG,EAAc,CAChDhoB,GAAKoB,SAASr3G,EAAM,QAAS6wB,EAAE11B,MAAO,CAACm8G,iBAAiB,IACxD,SAGF,MAAMn8G,EAAQsiI,GAAa5sG,EAAG6sG,EAAgBC,GAK9C,GAJA1nB,GAAKoB,SAASr3G,EAAMuS,EAAGpX,EAAO,CAACm8G,iBAAiB,IAI7C2mB,EACD,GAAGptG,EAAE11B,QAAUq9G,GAAS,CAEtB,MAAM74F,EAAS28G,EAAQzrG,EAAE11B,OACpB,WAAYwkB,IACfA,EAAOu+G,OAAS,IAElBv+G,EAAOu+G,OAAOnwH,KAAK,CACjB/N,KAAAA,EACA6oG,SAAUt2F,EACVpX,MAAAA,SAEM01B,EAAE11B,SAAS6iI,EAEnBA,EAAentG,EAAE11B,QAAS,EAG1B6iI,EAAentG,EAAE11B,OAAS,CACxB6E,KAAAA,EACA6oG,SAAUt2F,EACVpX,MAAAA,GAwER,IAAI,MAAM8f,KAAQ8iH,EAAU,CAC1B,MAAMI,EAAcJ,EAAS9iH,GAG7B,KAAKu9F,MAAW2lB,GACd,SAIF,MAAMC,EAAMD,EAAY3lB,IACxB,GAAI4lB,EAAIF,OAAR,CAGA,IAAI,IAAIG,KAASD,EAAIF,OAAQ,CAC3B,IAAIl+H,EAAOq+H,EAAMr+H,KACb6oG,EAAWw1B,EAAMx1B,SACjBmnB,EAAOqO,EAAMljI,MACjB,MAAM2yG,EAAO,GACPwwB,EAAY,GAQlB,IAAIC,EAAehkI,OAAO4B,KAAK6D,GAAMiB,OACrC,KAAM4nG,IAAa0P,IACjBziF,GAAM4+E,SAASspB,EAAeh+H,EAAK,UACnC81B,GAAMyvE,QAAQvlG,EAAKs4G,MAA0C,IAA3Bt4G,EAAKs4G,IAAWr3G,QAClD60B,GAAMyvE,QAAQvlG,EAAKu4G,MAAwC,IAA1Bv4G,EAAKu4G,IAAUt3G,SAC9B,IAAjBs9H,GACmB,IAAjBA,GAAsBzoG,GAAMyvE,QAAQvlG,EAAK,WACjB,IAAzBA,EAAK,SAASiB,QAAgBjB,EAAK,SAAS,KAAOq4G,MACrDvK,EAAK//F,KAAK/N,EAAKs4G,IAAW,IAC1BgmB,EAAUvwH,KAAK/N,EAAK,QAGpBq+H,EAAQL,EAAeh+H,EAAK,QAC5BA,EAAOq+H,EAAMr+H,KACb6oG,EAAWw1B,EAAMx1B,SACjBmnB,EAAOqO,EAAMljI,MACbojI,EAAehkI,OAAO4B,KAAK6D,GAAMiB,OAG7Bg0G,GAAWO,YAAYx1G,aAMtBgwH,EAAK,OACZA,EAAK,SAAWliB,EAAKpoF,UACrB,IAAI,MAAM84G,KAAYF,SACbH,EAAYK,UAIhBJ,EAAIF,QAGb,MAAMzrH,EAAS,GACTkqH,EAAWpiI,OAAO4B,KAAKghI,GAAchjG,OAC3C,IAAI,MAAM+wE,KAAWyxB,EAAU,CAC7B,MAAM38H,EAAOm9H,EAAajyB,GAC1B,GAAGA,KAAW6yB,EAAU,CACtB,MAAMlzB,EAAQ7qG,EAAK,UAAY,GACzBm+H,EAAcJ,EAAS7yB,GACvBuzB,EAAgBlkI,OAAO4B,KAAKgiI,GAAahkG,OAC/C,IAAI,MAAMukG,KAAgBD,EAAe,CACvC,MAAMz+H,EAAOm+H,EAAYO,GAErBzpB,GAAWE,mBAAmBn1G,IAChC6qG,EAAM98F,KAAK/N,IAKbi1G,GAAWE,mBAAmBn1G,IAChCyS,EAAO1E,KAAK/N,GAIhB,OAAOyS,GCxQT,MAAM+pH,cAACA,IAAiBlvB,cACjB0nB,IAAavkB,GACdwE,GAAatE,GACbguB,GCJW,SAASC,EAAWj/G,GACnC,OAAe,OAAXA,GAAqC,iBAAXA,GAAwC,MAAjBA,EAAOk/G,OACnDlgB,KAAK+M,UAAU/rG,GAGpB3M,MAAMuyF,QAAQ5lF,GACT,IAAMA,EAAO8gG,QAAO,CAACpzG,EAAGyxH,EAAIC,IAG1B1xH,GAFc,IAAP0xH,EAAW,GAAK,KAEXH,OADE3vB,IAAP6vB,GAAkC,iBAAPA,EAAkB,KAAOA,IAEjE,IAAM,IAGJ,IAAMvkI,OAAO4B,KAAKwjB,GAAQwa,OAAOsmF,QAAO,CAACpzG,EAAGyxH,EAAIC,KACrD,QAAmB9vB,IAAftvF,EAAOm/G,IACe,iBAAfn/G,EAAOm/G,GAChB,OAAOzxH,EAGT,OAAOA,GADoB,IAAbA,EAAEpM,OAAe,GAAK,KACjB29H,EAAUE,GAAM,IAAMF,EAAUj/G,EAAOm/G,MACzD,IAAM,KDfLhpG,GAAQ+9E,GACRoC,GAAOnC,IAEPwE,UAGJA,GAASC,SACTA,GAAQC,QACRA,GAAOC,SACPA,GAAQG,iBAGRA,GAAgB1K,eAEhBA,GAAc4K,YAGdA,GAAWC,WACXA,GAAUC,YACVA,GAAW5K,WACXA,IACEsO,IAGFxqG,WAAYqiH,IACV5X,GAEErZ,GAAM,OACZ07B,GAAiB17B,GAkDjB,SAAS27B,GAAYvwB,EAAS7D,EAAOq0B,EAAWttB,EAAQ7iF,GACtD,MAAM49E,EAAMpyG,OAAO4B,KAAK0uG,GAAO1wE,OAC/B,IAAI,MAAMtyB,KAAM8kG,EAAK,CACnB,MAAM3sG,EAAO6qG,EAAMhjG,GACbge,EAAatrB,OAAO4B,KAAK6D,GAAMm6B,OACrC,IAAI,IAAI0uE,KAAYhjF,EAAY,CAC9B,MAAM++E,EAAQ5kG,EAAK6oG,GACnB,GAAgB,UAAbA,EACDA,EAAW4P,QACN,GAAGuc,GAAUnsB,GAClB,SAGF,IAAI,MAAMrD,KAAQZ,EAAO,CAEvB,MAAMsG,EAAU,CACdgE,SAAUrnG,EAAGQ,WAAW,MAAQ,YAAc,YAC9ClN,MAAO0M,GAIT,IAAI0sH,GAAe1sH,GACjB,SAIF,MAAMmnG,EAAY,CAChBE,SAAUrG,EAASxgG,WAAW,MAAQ,YAAc,YACpDlN,MAAO0tG,GAIT,IAAI0rB,GAAe1rB,GACjB,SAIF,GAA0B,cAAvBmG,EAAUE,WACVngF,EAAQowG,sBACT,SAIF,MAAMx/G,EACJy/G,GAAa55B,EAAMoM,EAAQlD,EAASwwB,EAAWnwG,EAAQ4uG,cAEtDh+G,GACD+uF,EAAQ3gG,KAAK,CACXm9F,QAAAA,EACA8D,UAAAA,EACArvF,OAAAA,EACAkrF,MAAOq0B,OA8EnB,SAASE,GAAa55B,EAAMoM,EAAQlD,EAASwwB,EAAWvB,GACtD,MAAMh+G,EAAS,GAGf,GAAGs1F,GAAWG,QAAQ5P,GAAO,CAC3B7lF,EAAOuvF,SAAW,UAClBvvF,EAAOxkB,WAAQ8zG,EACftvF,EAAOwvF,SAAW,CAChBD,SAAU,aAEZ,IAAI/zG,EAAQqqG,EAAK,UACjB,MAAM2J,EAAW3J,EAAK,UAAY,KAGlC,GAAgB,UAAb2J,EACDxvF,EAAOxkB,MAAQwjI,GAAiBxjI,GAChCwkB,EAAOwvF,SAASh0G,MAAQy9G,QACnB,GAAG9iF,GAAMw+E,UAAUn5G,GACxBwkB,EAAOxkB,MAAQA,EAAMqb,WACrBmJ,EAAOwvF,SAASh0G,MAAQg0G,GAAY2J,QAC/B,GAAGhjF,GAAMy+E,SAASp5G,IAAUg0G,IAAa4J,GAC1CjjF,GAAMy+E,SAASp5G,KACjBA,EAAQ05G,WAAW15G,IAGrBwkB,EAAOxkB,MAAQA,EAAMkkI,cAAc,IAAIn+H,QAAQ,aAAc,OAC7Dye,EAAOwvF,SAASh0G,MAAQg0G,GAAY4J,QAC/B,GAAGjjF,GAAM0+E,SAASr5G,GACvBwkB,EAAOxkB,MAAQA,EAAMyiI,QAAQ,GAC7Bj+G,EAAOwvF,SAASh0G,MAAQg0G,GAAY6J,QAC/B,GAAoB,kBAAjB2kB,GACR,eAAgBn4B,EAAM,CACtB,MAAM2J,EAAW,+BACd3J,EAAK,cAAgB,IACtB,IAAIA,EAAK,gBACX7lF,EAAOwvF,SAASh0G,MAAQg0G,EACxBxvF,EAAOxkB,MAAQA,MACP,cAAeqqG,GACvB7lF,EAAOxkB,MAAQA,EACfwkB,EAAOwvF,SAASh0G,MAAQg0G,GAAYjB,GACpCvuF,EAAOyvF,SAAW5J,EAAK,eAEvB7lF,EAAOxkB,MAAQA,EACfwkB,EAAOwvF,SAASh0G,MAAQg0G,GAAYf,SAEjC,GAAG6G,GAAWI,OAAO7P,GAAO,CACjC,MAAMk3B,EAzGV,SAAoB5uB,EAAM8D,EAAQlD,EAASwwB,EAAWvB,GACpD,MAAMp9F,EAAQ,CAAC2uE,SAAU,YAAa/zG,MAAOm9G,IACvCgnB,EAAO,CAACpwB,SAAU,YAAa/zG,MAAOo9G,IACtC6lB,EAAM,CAAClvB,SAAU,YAAa/zG,MAAOq9G,IAErCzmG,EAAO+7F,EAAKnhG,MAEZ8F,EAASV,EAAO,CAACm9F,SAAU,YAAa/zG,MAAOy2G,EAAO5E,SAAWoxB,EACvE,IAAIlzB,EAAUz4F,EAEd,IAAI,MAAM+yF,KAAQsI,EAAM,CACtB,MAAMnuF,EAASy/G,GAAa55B,EAAMoM,EAAQlD,EAASwwB,EAAWvB,GACxD7gI,EAAO,CAACoyG,SAAU,YAAa/zG,MAAOy2G,EAAO5E,SACnD0B,EAAQ3gG,KAAK,CACXm9F,QAAAA,EACA8D,UAAWzuE,EACX5gB,OAAAA,EACAkrF,MAAOq0B,IAETxwB,EAAQ3gG,KAAK,CACXm9F,QAAAA,EACA8D,UAAWswB,EACX3/G,OAAQ7iB,EACR+tG,MAAOq0B,IAETh0B,EAAUpuG,EAIZ,GAAGiV,EAAM,CACP,MAAM4N,EAASy/G,GAAartH,EAAM6/F,EAAQlD,EAASwwB,EAAWvB,GAC9DjvB,EAAQ3gG,KAAK,CACXm9F,QAAAA,EACA8D,UAAWzuE,EACX5gB,OAAAA,EACAkrF,MAAOq0B,IAETxwB,EAAQ3gG,KAAK,CACXm9F,QAAAA,EACA8D,UAAWswB,EACX3/G,OAAQy+G,EACRvzB,MAAOq0B,IAIX,OAAOzsH,EA6DH8sH,CAAW/5B,EAAK,SAAUoM,EAAQlD,EAASwwB,EAAWvB,GACxDh+G,EAAOuvF,SAAWwtB,EAAMxtB,SACxBvvF,EAAOxkB,MAAQuhI,EAAMvhI,UAChB,CAEL,MAAM0M,EAAKiuB,GAAM4+E,SAASlP,GAAQA,EAAK,OAASA,EAChD7lF,EAAOuvF,SAAWrnG,EAAGQ,WAAW,MAAQ,YAAc,YACtDsX,EAAOxkB,MAAQ0M,EAIjB,MAAuB,cAApB8X,EAAOuvF,UAA6BqlB,GAAe50G,EAAOxkB,OAItDwkB,EAHE,KApOX2jF,GAAIk8B,MAAQ,CAAC1qH,EAAOia,KAElB,MAAM6iF,EAAS,IAAIqE,GAAKpJ,iBAAiB,OACnCyvB,EAAU,CAAC,WAAY,IAC7BE,GAAc1nH,EAAOwnH,EAAS,WAAY1qB,GAE1C,MAAMlD,EAAU,GACV0uB,EAAa7iI,OAAO4B,KAAKmgI,GAASniG,OACxC,IAAI,MAAM81E,KAAamtB,EAAY,CACjC,IAAI8B,EACJ,GAAiB,aAAdjvB,EACDivB,EAAY,CAAChwB,SAAU,eAAgB/zG,MAAO,QACzC,CAAA,IAAGo5H,GAAetkB,GASvB,SAPEivB,EADCjvB,EAAU5nG,WAAW,MACV,CAAC6mG,SAAU,aAEX,CAACA,SAAU,aAEzBgwB,EAAU/jI,MAAQ80G,EAKpBgvB,GAAYvwB,EAAS4tB,EAAQrsB,GAAYivB,EAAWttB,EAAQ7iF,GAG9D,OAAO2/E,GEpET,MAAMsmB,UAACA,IAAa1nB,GACd2H,GAAaxE,GACb36E,GAAQ66E,GACRsF,GAAOrF,GACPjuG,GAAMkxG,GACN8B,GAAc7B,IAElB0oB,cAAeiD,GACfzC,mBAAoB0C,IAClBhjB,GAEEpZ,GAAM,OACZq8B,GAAiBr8B,GAyWjB,SAASs8B,GAAqBjkH,GAC5B,MAAMgkH,EAAQ,GACd,IAAI,MAAMzkI,KAAOygB,OACGszF,IAAftzF,EAAMzgB,KACPykI,EAAM,IAAMzkI,GAAO,CAACygB,EAAMzgB,KAG9B,MAAO,CAACykI,GAaV,SAASE,GAA0BC,EAAgBj1B,EAAOk1B,GACxD,IAAI,IAAI36H,EAAI26H,EAAa9+H,OAAS,EAAGmE,GAAK,IAAKA,EAAG,CAChD,MAAM8lG,EAAU60B,EAAa36H,GAC7B,GAAG8lG,EAAQL,QAAUA,GACnBK,EAAQA,QAAQ,SAAW40B,EAAe,OAC1C,OAAO,EAGX,OAAO,EAYT,SAASE,GAAcL,EAAO5wG,EAAS9T,GACrC,MAAM2D,EAAO,IAAM3D,EACnB,IAAI+yF,EAAQpvF,KAAQ+gH,EAAQA,EAAM/gH,GAAM,GAAKmQ,EAAQ9T,GACrD,GAAY,UAATA,EAKD,IAAY,IAAT+yF,EACDA,EAAO,aACF,IAAY,IAATA,EACRA,EAAO,cACF,GAAY,YAATA,GAA+B,WAATA,GAA8B,UAATA,GAC1C,WAATA,GAA8B,UAATA,GAA6B,UAATA,EACzC,MAAM,IAAI2H,GACR,mDACA,qBAAsB,CAAC/wF,KAAM,uBAAwB+6G,MAAAA,IAG3D,OAAO3xB,EAQT,SAASiyB,GAAeN,GACtB,IAAI7pG,GAAMyvE,QAAQo6B,IAA2B,IAAjBA,EAAM1+H,SAAiB60B,GAAM4+E,SAASirB,EAAM,IACtE,MAAM,IAAIhqB,GACR,mEACA,qBAAsB,CAACgqB,MAAAA,IAG3B,GAAG,QAASA,EAAM,GAChB,IAAI,MAAM93H,KAAMouG,GAAKG,QAAQupB,EAAM,GAAG,QAEpC,IAAK7pG,GAAM4+E,SAAS7sG,KAAOlF,GAAIuP,WAAWrK,IACvCiuB,GAAMi/E,SAASltG,IAA4B,IAArBA,EAAGrF,QAAQ,MAClC,MAAM,IAAImzG,GACR,gDACA,qBAAsB,CAAC/wF,KAAM,gBAAiB+6G,MAAAA,IAKtD,GAAG,UAAWA,EAAM,GAClB,IAAI,MAAMrvH,KAAQ2lG,GAAKG,QAAQupB,EAAM,GAAG,UAEtC,IAAK7pG,GAAM4+E,SAASpkG,KAAS3N,GAAIuP,WAAW5B,IACzCwlB,GAAMi/E,SAASzkG,IAAgC,IAAvBA,EAAK9N,QAAQ,MACtC,MAAM,IAAImzG,GACR,kDACA,qBAAsB,CAAC/wF,KAAM,gBAAiB+6G,MAAAA,IA8CxD,SAASO,GAAeC,EAAOj1B,EAASy0B,EAAOhkH,GAE7C,IAAIykH,GAAW,EACXC,GAAc,EAElB,IAAI,MAAMnlI,KAAOykI,EAAO,CACtB,IAAIW,GAAY,EAChB,MAAMC,EAAatqB,GAAKyB,UAAUxM,EAAShwG,GACrCslI,EAAgD,IAAtCvqB,GAAKyB,UAAUioB,EAAOzkI,GAAK+F,OAE3C,GAAW,QAAR/F,GAOD,GALG46B,GAAM2+E,cAAckrB,EAAM,OAAO,IAAM,IACxCW,GAAY,EACJX,EAAM,OAAO1+H,QAAU,IAC/Bq/H,EAAYX,EAAM,OAAOl6B,SAAS86B,EAAW,MAE3C5kH,EAAM8kH,WACR,OAAOH,OAEJ,GAAW,UAARplI,EAAiB,CAIzB,GADAklI,GAAW,EACRI,EAAS,CACV,GAAGD,EAAWt/H,OAAS,EAErB,OAAO,EAETq/H,GAAY,OACP,GAA6B,IAA1BX,EAAM,SAAS1+H,QACvB60B,GAAM2+E,cAAckrB,EAAM,SAAS,IAEnCW,EAAYC,EAAWt/H,OAAS,OAGhC,IAAI,MAAMqP,KAAQqvH,EAAM,SAGpBW,KAFCxqG,GAAM4+E,SAASpkG,MAAS,aAAcA,MAI3BgwH,GAAaC,EAAWhqB,MAAKmqB,GAAMA,IAAOpwH,KAI5D,IAAIqL,EAAM8kH,WACR,OAAOH,MAEJ,CAAA,GAAGtL,GAAU95H,GAClB,SACK,CAEL,MAAMylI,EAAY1qB,GAAKyB,UAAUioB,EAAOzkI,GAAK,GAC7C,IAAI0lI,GAAa,EAWjB,GAVGD,IACDV,GAAe,CAACU,IAChBC,EAAa,aAAcD,GAI7BP,GAAW,EAIc,IAAtBG,EAAWt/H,QAAgB2/H,EAC5B,SAIF,GAAGL,EAAWt/H,OAAS,GAAKu/H,EAC1B,OAAO,EAGT,QAAiBvxB,IAAd0xB,EAAyB,CAG1B,GAAGJ,EAAWt/H,OAAS,EACrB,OAAO,EAETq/H,GAAY,OAEZ,GAAGrrB,GAAWI,OAAOsrB,GAAY,CAC/B,MAAME,EAAYF,EAAU,SAAS,GACrC,GAAG1rB,GAAWI,OAAOkrB,EAAW,IAAK,CACnC,MAAMO,EAAiBP,EAAW,GAAG,SAElCtrB,GAAWG,QAAQyrB,GAEpBP,EAAYQ,EAAevqB,MAAKwqB,GAAMC,GAAYH,EAAWE,MACrD9rB,GAAWC,UAAU2rB,IAC7B5rB,GAAWE,mBAAmB0rB,MAC9BP,EAAYQ,EAAevqB,MAAKwqB,GAAME,GACpCd,EAAOU,EAAWE,EAAIplH,YAI5B2kH,EADQrrB,GAAWG,QAAQurB,GACfJ,EAAWhqB,MAAKolB,GAAMqF,GAAYL,EAAWhF,KACjD1mB,GAAWE,mBAAmBwrB,GAEpCJ,EAAWhqB,MAAKolB,GAAMsF,GAAWd,EAAOQ,EAAWhF,EAAIhgH,OACjDma,GAAM4+E,SAASisB,IACXJ,EAAWt/H,OAAS,GAQtC,IAAIq/H,GAAa3kH,EAAM8kH,WACrB,OAAO,EAGTJ,EAAcA,GAAeC,EAI/B,OAAOF,GAAYC,EASrB,SAASa,GAAaf,EAAOt4H,GAE3B,MAAMs5H,EAAShB,EAAMiB,aAAajB,EAAMt1B,OAClCw2B,EAAQF,EAAOt5H,GACf2P,EAAS6pH,EAAM7pH,OACfqxF,EAAWw4B,EAAMx4B,SAGjBqC,EAAU,CAAC,MAAOrjG,GAGxB,GAAGiuB,GAAMyvE,QAAQ/tF,IAEf,IAAI,IAAIpS,EAAI,EAAGA,EAAIoS,EAAOvW,SAAUmE,EAClC,GAAG6wG,GAAKmB,cAAc5/F,EAAOpS,GAAI8lG,GAAU,CACzC1zF,EAAOpS,GAAK8lG,EACZ,WAGC,CAEL,MAAMo2B,EAAWxrG,GAAMyvE,QAAQ/tF,EAAOqxF,IACtCoN,GAAK2B,YAAYpgG,EAAQqxF,EAAUqC,EAAS,CAACoM,gBAAiBgqB,IAC9DrrB,GAAKoB,SAAS7/F,EAAQqxF,EAAUqC,EAAS,CAACoM,gBAAiBgqB,IAI7D,MAAMC,EAAmB15H,IAEvB,MAAM8kG,EAAMpyG,OAAO4B,KAAKglI,GACxB,IAAI,MAAMrkI,KAAQ6vG,EACb7vG,KAAQqkI,GAAUrrG,GAAM4+E,SAASysB,EAAOrkI,GAAM0a,SAC/C2pH,EAAOrkI,GAAM0a,OAAO,SAAW3P,WACxBs5H,EAAOrkI,GACdykI,EAAiBzkI,KAIvBykI,EAAiB15H;;;;;;;;GAWnB,SAAS25H,GAAiB1sH,EAAOia,GAE/B,GAAG+G,GAAMyvE,QAAQzwF,GACf,OAAOA,EAAMohB,KAAI/6B,GAASqmI,GAAiBrmI,EAAO4zB,KAGpD,GAAG+G,GAAM4+E,SAAS5/F,GAAQ;;AAExB,GAAG,cAAeA,EAChB,OAAOA,EAAM,aAAa,GAI5B,GAAGmgG,GAAWG,QAAQtgG,GACpB,OAAOA,EAIT,GAAGmgG,GAAWI,OAAOvgG,GAEnB,OADAA,EAAM,SAAW0sH,GAAiB1sH,EAAM,SAAUia,GAC3Cja,EAIT,GAAG,QAASA,EAAO,CACjB,MAAMjN,EAAKiN,EAAM,OACjB,GAAGia,EAAQnW,KAAK/d,eAAegN,GAAK,CAClC,MAAMzD,EAAM2qB,EAAQnW,KAAK/Q,GAAIrF,QAAQsS,GACrC,IAAY,IAAT1Q,EAED,OAAO2qB,EAAQnW,KAAK/Q,GAAIzD,GAG1B2qB,EAAQnW,KAAK/Q,GAAIkG,KAAK+G,QAGtBia,EAAQnW,KAAK/Q,GAAM,CAACiN,GAKxB,IAAI,MAAMpZ,KAAQoZ,EAEJ,QAATpZ,GAAkBqzB,EAAQ0yG,cAAch8B,SAAS3wF,EAAMpZ,WACjDoZ,EAAM,OAIfA,EAAMpZ,GAAQ8lI,GAAiB1sH,EAAMpZ,GAAOqzB,GAGhD,OAAOja,EAUT,SAAS4sH,GAAgBlqH,EAAQqxF,EAAU9zF,GACtC+gB,GAAM4+E,SAASl9F,GAChBy+F,GAAKoB,SAAS7/F,EAAQqxF,EAAU9zF,EAAQ,CAACuiG,iBAAiB,IAE1D9/F,EAAOzJ,KAAKgH,GAYhB,SAASksH,GAAWd,EAAOj5F,EAAS/rC,EAAOwgB,GACzC,KAAK,QAASxgB,GACZ,OAAO,EAET,MAAMwmI,EAAaxB,EAAMxD,SAASxhI,EAAM,QACxC,OAAOwmI,GAAczB,GAAeC,EAAOwB,EAAYz6F,EAASvrB,GAkBlE,SAASqlH,GAAY95F,EAAS/rC,GAC5B,MAAM28G,EAAK38G,EAAM,UACXm1G,EAAKn1G,EAAM,SACXymI,EAAKzmI,EAAM,aACX48G,EAAK7wE,EAAQ,UAChBpR,GAAMyvE,QAAQr+D,EAAQ,WACrBA,EAAQ,UAAY,CAACA,EAAQ,WAC/B,GACIqpE,EAAKrpE,EAAQ,SAChBpR,GAAMyvE,QAAQr+D,EAAQ,UACrBA,EAAQ,SAAW,CAACA,EAAQ,UAC9B,GACI26F,EAAK36F,EAAQ,aAChBpR,GAAMyvE,QAAQr+D,EAAQ,cACrBA,EAAQ,aAAe,CAACA,EAAQ,cAClC,GAEF,OAAiB,IAAd6wE,EAAG92G,QAA8B,IAAdsvG,EAAGtvG,QAA8B,IAAd4gI,EAAG5gI,WAGvC82G,EAAGtS,SAASqS,KAAOhiF,GAAM2+E,cAAcsD,EAAG,WAGzCzH,GAAoB,IAAdC,EAAGtvG,QAAgBsvG,EAAG9K,SAAS6K,IAAOA,GAChDx6E,GAAM2+E,cAAclE,EAAG,UAGnBqxB,GAAoB,IAAdC,EAAG5gI,QAAgB4gI,EAAGp8B,SAASm8B,IAAOA,GAChD9rG,GAAM2+E,cAAcotB,EAAG,MAxxB3Bv+B,GAAIw+B,qBAAuB,CAAChtH,EAAO6qH,EAAO5wG,KAExC,MAAMoxG,EAAQ,CACZpxG,QAAAA,EACAgzG,UAAU,EACVl3B,MAAO,WACPkzB,SAAU,CAAC,WAAY,IACvBgC,aAAc,GACdnnH,KAAM,GACNopH,SAAU,IAKNpwB,EAAS,IAAIqE,GAAKpJ,iBAAiB,OACzC4yB,GAAe3qH,EAAOqrH,EAAMpC,SAAU,WAAYnsB,GAC/C7iF,EAAQkuG,SACTkD,EAAMpC,SAAS,WAAa2B,GAAoBS,EAAMpC,UACtDoC,EAAMt1B,MAAQ,WAEhBs1B,EAAMxD,SAAWwD,EAAMpC,SAASoC,EAAMt1B,OAGtC,MAAMo3B,EAAS,GAYf,OAXA3+B,GAAIq8B,MAAMQ,EAAO5lI,OAAO4B,KAAKgkI,EAAMxD,UAAUxiG,OAAQwlG,EAAOsC,GAGzDlzG,EAAQmzG,4BAETnzG,EAAQ0yG,cACNlnI,OAAO4B,KAAKgkI,EAAM6B,UAAU1vH,QAAOzK,GAAoC,IAA9Bs4H,EAAM6B,SAASn6H,GAAI5G;;AAIhE8tB,EAAQnW,KAAO,GACR4oH,GAAiBS,EAAQlzG,IAYlCu0E,GAAIq8B,MAAQ,CAACQ,EAAOxD,EAAUgD,EAAOnoH,EAAQqxF,EAAW,QAEtDo3B,GAAeN,GACfA,EAAQA,EAAM,GAGd,MAAM5wG,EAAUoxG,EAAMpxG,QAChBpT,EAAQ,CACZ0lH,MAAOrB,GAAcL,EAAO5wG,EAAS,SACrCozG,SAAUnC,GAAcL,EAAO5wG,EAAS,YACxC0xG,WAAYT,GAAcL,EAAO5wG,EAAS,eAIxCoxG,EAAMvnH,KAAK/d,eAAeslI,EAAMt1B,SAClCs1B,EAAMvnH,KAAKunH,EAAMt1B,OAAS,IAE5B,MAAMjyF,EAAOunH,EAAMvnH,KAAKunH,EAAMt1B,OAGxBu3B,EAwYR,SAAyBjC,EAAOxD,EAAUgD,EAAOhkH,GAE/C,MAAMqyF,EAAO,GACb,IAAI,MAAMnmG,KAAM80H,EAAU,CACxB,MAAMzxB,EAAUi1B,EAAMpC,SAASoC,EAAMt1B,OAAOhjG,GACzCq4H,GAAeC,EAAOj1B,EAASy0B,EAAOhkH,KACvCqyF,EAAKnmG,GAAMqjG,GAGf,OAAO8C,EAjZSq0B,CAAgBlC,EAAOxD,EAAUgD,EAAOhkH,GAGlDgxF,EAAMpyG,OAAO4B,KAAKimI,GAASjoG,OACjC,IAAI,MAAMtyB,KAAM8kG,EAAK,CACnB,MAAMzB,EAAUk3B,EAAQv6H,GAWxB,GANgB,OAAbghG,EACDs3B,EAAMiB,aAAe,CAAC,CAACjB,EAAMt1B,OAAQ,IAErCs1B,EAAMiB,aAAajB,EAAMt1B,OAASs1B,EAAMiB,aAAajB,EAAMt1B,QAAU,GAGpD,UAAhBlvF,EAAM0lH,OAAqBx5H,KAAM+Q,EAAM,CAMxC8oH,GAAgBlqH,EAAQqxF,EAAUjwF,EAAK/Q,IACvC,SAIF,MAAMkN,EAAS,CAAC,MAAOlN,GAOvB,GANwB,IAArBA,EAAGrF,QAAQ,OACZyzG,GAAKoB,SAAS8oB,EAAM6B,SAAUn6H,EAAIkN,EAAQ,CAACuiG,iBAAiB,IAE9D1+F,EAAK/Q,GAAMkN,GAGS,WAAhB4G,EAAM0lH,OAAsC,UAAhB1lH,EAAM0lH,QAAsBlB,EAAMmC,KAChE,MAAM,IAAI3sB,GACR,mDACA,qBAAsB,CAAC/wF,KAAM,uBAAwB+6G,MAAAA,IAGzD,GAAIQ,EAAM4B,WAAY5B,EAAMiB,aAAajB,EAAMt1B,OAAOhwG,eAAegN,GAUrE,IAAGs4H,EAAM4B,UACU,WAAhBpmH,EAAM0lH,QACPxB,GAA0B30B,EAASi1B,EAAMt1B,MAAOs1B,EAAMJ,cAMxD,IAAGI,EAAM4B,UACU,UAAfpmH,EAAM0lH,OAAoC,SAAf1lH,EAAM0lH,QAClClB,EAAMiB,aAAajB,EAAMt1B,OAAOhwG,eAAegN,GAFlD,CAqBA,GAbmB,UAAhB8T,EAAM0lH,OAEJx5H,KAAMs4H,EAAMiB,aAAajB,EAAMt1B,QAChCq2B,GAAaf,EAAOt4H,GAIxBs4H,EAAMiB,aAAajB,EAAMt1B,OAAOhjG,GAAM,CAAC2P,OAAAA,EAAQqxF,SAAAA,GAG/Cs3B,EAAMJ,aAAahyH,KAAK,CAACm9F,QAAAA,EAASL,MAAOs1B,EAAMt1B,QAG5ChjG,KAAMs4H,EAAMpC,SAAU,CACvB,IAAIwE,GAAU,EACVC,EAAW,KACV,WAAY7C,GAIf6C,EAAW7C,EAAM,UAAU,GAC3B4C,IAAmB,YAAP16H,GAA2B,aAAPA,GAC5BiuB,GAAM4+E,SAAS8tB,KACjBA,EAAW,MANbD,EAA0B,YAAhBpC,EAAMt1B,MAChB23B,EAAW,IASVD,GAEDj/B,GAAIq8B,MACF,IAAIQ,EAAOt1B,MAAOhjG,EAAIk6H,UAAU,GAChCxnI,OAAO4B,KAAKgkI,EAAMpC,SAASl2H,IAAKsyB,OAAQ,CAACqoG,GAAWztH,EAAQ,UAK/D,cAAe4qH,GAChBr8B,GAAIq8B,MACF,IAAIQ,EAAO4B,UAAU,GACrBpF,EAAUgD,EAAM,aAAc5qH,EAAQ,aAI1C,IAAI,MAAMrZ,KAAQnB,OAAO4B,KAAK+uG,GAAS/wE,OAErC,GAAG66F,GAAUt5H,IAGX,GAFAqZ,EAAOrZ,GAAQu6G,GAAKnlF,MAAMo6E,EAAQxvG,IAEtB,UAATA,EAED,IAAI,MAAM4U,KAAQ46F,EAAQ,SACE,IAAvB56F,EAAK9N,QAAQ,OACdyzG,GAAKoB,SACH8oB,EAAM6B,SAAU1xH,EAAMyE,EAAQ,CAACuiG,iBAAiB,SAQ1D,IAAG37F,EAAMwmH,UAAczmI,KAAQikI,EAK/B,IAAI,MAAM9uG,KAAKq6E,EAAQxvG,GAAO,CAC5B,MAAM8mI,EAAY9mI,KAAQikI,EACxBA,EAAMjkI,GAAQkkI,GAAqBjkH,GAGrC,GAAGs5F,GAAWI,OAAOxkF,GAAI,CACvB,MAAM2xG,EACH7C,EAAMjkI,IAASikI,EAAMjkI,GAAM,IAAMikI,EAAMjkI,GAAM,GAAG,SAC/CikI,EAAMjkI,GAAM,GAAG,SACfkkI,GAAqBjkH,GAGnBmyF,EAAO,CAAC,QAAS,IACvB4zB,GAAgB3sH,EAAQrZ,EAAMoyG,GAG9B,MAAMlwG,EAAMizB,EAAE,SACd,IAAI,MAAM4xG,KAAM7kI,EACXq3G,GAAWE,mBAAmBstB,GAE/Bn/B,GAAIq8B,MACF,IAAIQ,EAAO4B,UAAU,GACrB,CAACU,EAAG,QAASD,EAAU10B,EAAM,SAG/B4zB,GAAgB5zB,EAAM,QAASmI,GAAKnlF,MAAM2xG,SAGtCxtB,GAAWE,mBAAmBtkF,GAEtCyyE,GAAIq8B,MACF,IAAIQ,EAAO4B,UAAU,GACrB,CAAClxG,EAAE,QAAS2xG,EAAUztH,EAAQrZ,GACxBslI,GAAYwB,EAAS,GAAI3xG,IAEjC6wG,GAAgB3sH,EAAQrZ,EAAMu6G,GAAKnlF,MAAMD,IAM/C,IAAI,MAAMn1B,KAAQnB,OAAO4B,KAAKwjI,GAAOxlG,OAAQ,CAE3C,GAAY,UAATz+B,GACD,IAAIo6B,GAAM4+E,SAASirB,EAAMjkI,GAAM,OAC1B,aAAcikI,EAAMjkI,GAAM,IAC7B,cAGG,GAAGs5H,GAAUt5H,GAClB,SAKF,MAAMoB,EAAO6iI,EAAMjkI,GAAM,IAAM,GAE/B,IADsBskI,GAAcljI,EAAMiyB,EAAS,kBAC5BrzB,KAAQqZ,GAAS,CACtC,IAAI2tH,EAAW,QACZ,aAAc5lI,IACf4lI,EAAWzsB,GAAKnlF,MAAMh0B,EAAK,cAEzBg5B,GAAMyvE,QAAQm9B,KAChBA,EAAW,CAACA,IAEd3tH,EAAOrZ,GAAQ,CAAC,CAAC,YAAagnI,KAMlC,IAAI,MAAMC,KAAepoI,OAAO4B,KAAKwjI,EAAM,aAAe,IAAIxlG,OAAQ,CACpE,MAAMqoG,EAAW7C,EAAM,YAAYgD,GACnC,IAAI,MAAMz3B,KAAW3wG,OAAO4B,KAAKgkI,EAAMxD,UAAW,CAE9C1mB,GAAKyB,UAAUyoB,EAAMxD,SAASzxB,GAAUy3B,GAC5BpsB,MAAKt+E,GAAKA,EAAE,SAAWpwB,MAEnCkN,EAAO,YAAcA,EAAO,aAAe,GAC3CkhG,GAAKoB,SACHtiG,EAAO,YAAa4tH,EAAa,GAAI,CAACrrB,iBAAiB,IACzDhU,GAAIq8B,MACF,IAAIQ,EAAO4B,UAAU,GACrB,CAAC72B,GAAUs3B,EAAUztH,EAAO,YAAY4tH,GACxC95B,KAMR64B,GAAgBlqH,EAAQqxF,EAAU9zF,GAGlCorH,EAAMJ,aAAapzH,WApKjB+0H,GAAgBlqH,EAAQqxF,EAAU9zF,QARlC2sH,GAAgBlqH,EAAQqxF,EAAU9zF,KAwLxCuuF,GAAIs/B,YAAc,CAAC9tH,EAAOia,KAExB,GAAG+G,GAAMyvE,QAAQzwF,GAAQ,CAEvB,OADgBA,EAAMohB,KAAI+B,GAAKqrE,GAAIs/B,YAAY3qG,EAAGlJ,KACnCzc,QAAO2lB,GAAKA,IAG7B,GAAa,UAAVnjB,EACD,OAAO,KAGT,GAAGghB,GAAM4+E,SAAS5/F,GAAQ,CAExB,GAAG,QAASA,EAAO,CACjB,MAAMjN,EAAKiN,EAAM,OACjB,GAAGia,EAAQnW,KAAK/d,eAAegN,GAAK,CAClC,MAAMzD,EAAM2qB,EAAQnW,KAAK/Q,GAAIrF,QAAQsS,GACrC,IAAY,IAAT1Q,EAED,OAAO2qB,EAAQnW,KAAK/Q,GAAIzD,GAG1B2qB,EAAQnW,KAAK/Q,GAAIkG,KAAK+G,QAGtBia,EAAQnW,KAAK/Q,GAAM,CAACiN,GAIxB,IAAI,MAAM5Z,KAAO4Z,EACfA,EAAM5Z,GAAOooG,GAAIs/B,YAAY9tH,EAAM5Z,GAAM6zB,GAG7C,OAAOja,GCxWT,MAAM6gG,GAAcrI,IAGlB/H,QAASkuB,GACT/e,SAAUgf,GACV3e,SAAU4e,GACV3e,YAAasf,IACX7jB,IAGF4E,OAAQ4jB,GACR7jB,QAAS8jB,GACT5jB,QAAS6jB,GACT5jB,cAAestB,GACf1tB,mBAAoBkoB,IAClB1sB,IAGFinB,UAAWhD,GACXmE,gBAAiBM,GACjBrE,UAAWsE,GACXx5H,QAASy5H,GACT3C,eAAgB4C,IACd5oB,IAGF6J,WAAYqoB,GACZ3oB,YAAa4oB,IACXlvB,IAGFwD,SAAUoiB,GACVrjB,QAASwd,GACT5b,qBAAsByc,IACpB3gB,GAEExQ,GAAM,OACZ0/B,GAAiB1/B,GAwmCjB,SAAS2/B,GAAmBjP,EAAWkP,EAAcn0G,GACnD,GAAmE,UAAhE6lG,GAAWZ,EAAWkP,EAAc,CAAChO,OAAO,GAAOnmG,GACpD,MAAM,IAAI4mF,GACR,sFAEA,qBAAsB,CAAC/wF,KAAM,wBA9lCnC0+E,GAAI0/B,QAAU/xB,OACZ+iB,UAAAA,EACA+F,eAAAA,EAAiB,KACjB1zB,QAAAA,EACAt3E,QAAAA,EAAU,GACVo0G,cAAAA,EAAgB,aAGhB,GAAG1P,GAASptB,GAAU,CACpB,IAAI2H,EAAO,GACX,IAAI,IAAI5oG,EAAI,EAAGA,EAAIihG,EAAQplG,SAAUmE,EAAG,CAEtC,IAAIg+H,QAAkB9/B,GAAI0/B,QAAQ,CAChChP,UAAAA,EACA+F,eAAAA,EACA1zB,QAASA,EAAQjhG,GACjB2pB,QAAAA,EACAo0G,cAAAA,IAEe,OAAdC,IACDA,QAAkBD,EAAc,CAC9B1H,cAAep1B,EAAQjhG,GACvB4uH,UAAAA,EACA+F,eAAAA,EACAviH,OAAQ6uF,EACR3tE,MAAOtzB,EACP2pB,QAAAA,SAEekgF,IAAdm0B,IAILp1B,EAAKjgG,KAAKq1H,GAEZ,GAAGr0G,EAAQs0G,eAAiC,IAAhBr1B,EAAK/sG,OAAc,CAIrB,KAFNo4H,GAChBrF,EAAW+F,EAAgB,eAAiB,IACjC94H,SACX+sG,EAAOA,EAAK,IAGhB,OAAOA,EAIT,MAAM3uE,EAAMg6F,GAAiBrF,EAAW+F,EAAgB,YAYxD,GAXIzF,GAAaj1F,KACf20F,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUz1F,EACVy2F,WAAW,EACXC,mBAAmB,EACnBhnG,QAAAA,KAKD2kG,GAAUrtB,GAAU,CACrB,GAAGt3E,EAAQnW,MAAQ,QAASytF,GAC1Bt3E,EAAQnW,KAAK/d,eAAewrG,EAAQ,QAAS,CAE7C,MAAMi9B,EAASv0G,EAAQnW,KAAKytF,EAAQ,QACpC,IAAI,IAAIjhG,EAAI,EAAGA,EAAIk+H,EAAOriI,SAAUmE,EAClC,GAAGk+H,EAAOl+H,GAAGm+H,WAAal9B,EACxB,OAAOi9B,EAAOl+H,GAAGg+H,UAMvB,GAAGlK,GAAS7yB,IAAYg3B,GAAoBh3B,GAAU,CACpD,MAAM2H,EACJ1K,GAAIkgC,aAAa,CAACxP,UAAAA,EAAW+F,eAAAA,EAAgB5+H,MAAOkrG,EAASt3E,QAAAA,IAQ/D,OAPGA,EAAQnW,MAAQykH,GAAoBh3B,KAEhCt3E,EAAQnW,KAAK/d,eAAewrG,EAAQ,UACvCt3E,EAAQnW,KAAKytF,EAAQ,QAAU,IAEjCt3E,EAAQnW,KAAKytF,EAAQ,QAAQt4F,KAAK,CAACw1H,SAAUl9B,EAAS+8B,UAAWp1B,KAE5DA,EAKT,GAAGirB,GAAQ5yB,GAAU,CAGnB,IAFkBgzB,GAChBrF,EAAW+F,EAAgB,eAAiB,IACjCt0B,SAAS,SACpB,OAAOnC,GAAI0/B,QAAQ,CACjBhP,UAAAA,EACA+F,eAAAA,EACA1zB,QAASA,EAAQ,SACjBt3E,QAAAA,EACAo0G,cAAAA,IAMN,MAAMM,EAAoC,aAAnB1J,EAEjB/rB,EAAO,GAGP01B,EAAW1P,EAIbkF,GAAS7yB,IAAag3B,GAAoBh3B,KAC5C2tB,EAAYA,EAAU0E,2BAIxB,MAAMwD,EACJ7C,GAAiBqK,EAAU3J,EAAgB,YACzCzF,GAAa4H,KACflI,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUoH,EACVpG,WAAW,EACXC,mBAAmB,EACnBhnG,QAAAA,KAIDA,EAAQnW,MAAQ,QAASytF,IAEtBt3E,EAAQnW,KAAK/d,eAAewrG,EAAQ,UACtCt3E,EAAQnW,KAAKytF,EAAQ,QAAU,IAEjCt3E,EAAQnW,KAAKytF,EAAQ,QAAQt4F,KAAK,CAACw1H,SAAUl9B,EAAS+8B,UAAWp1B,KAMnE,IAAIl4E,EAAQuwE,EAAQ,UAAY,GAC7BvwE,EAAM70B,OAAS,IAChB60B,EAAQ9iB,MAAMY,KAAKkiB,GAAOqE,QAI5B,MAAMwpG,EAAc3P,EACpB,IAAI,MAAM1jH,KAAQwlB,EAAO,CACvB,MAAM8tG,EAAgBtgC,GAAIugC,WACxB,CAAC7P,UAAW2P,EAAavpB,IAAK9pG,EAAMukH,WAAY,CAACK,OAAO,KAGpD71F,EAAMg6F,GAAiBqK,EAAUE,EAAe,YAClDtP,GAAaj1F,KACf20F,QAAkBuF,GAAgB,CAChCvF,UAAAA,EACAc,SAAUz1F,EACVtQ,QAAAA,EACA+mG,WAAW,KAMjB,MAAM35H,EAAO5B,OAAO4B,KAAKkqG,GAASlsE,OAClC,IAAI,MAAMugG,KAAoBv+H,EAAM,CAClC,MAAMs+H,EAAgBp0B,EAAQq0B,GAG9B,GAAwB,QAArBA,EAqBH,GAAwB,UAArBA,EA6BH,GAAwB,aAArBA,EAsCH,GAAwB,cAArBA,EAiBH,GAAwB,WAArBA,EAoBH,GAAwB,WAArBA,GAAsD,UAArBA,GACb,cAArBA,GACApB,GAAWoB,GAFb,CAIE,MAAMoJ,EAAQxgC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAKsgB,EACL7F,WAAY,CAACK,OAAO,KAEtBuE,GAAUzrB,EAAM81B,EAAOrJ,OATzB,CAcA,IAAIhH,GAASgH,GACX,MAAM,IAAI9kB,GACR,4DACA,sBAIJ,GAA4B,IAAzB8kB,EAAcx5H,OAAc,CAC7B,MAAM8iI,EAAqBzgC,GAAIugC,WAAW,CACxC7P,UAAAA,EACA5Z,IAAKsgB,EACLv/H,MAAOs/H,EACP5F,WAAY,CAACK,OAAO,GACpBxvG,QAAS+9G,IAELP,EAAelP,EAAU9pG,SAASkjF,IAAI22B,GAC1C/P,EAAU9pG,SAAS3gB,IAAIw6H,GAAoB,SAAW,KACxD,IAAIC,EAAah2B,EACdk1B,IACDD,GAAmBjP,EAAWkP,EAAcn0G,GACxC2kG,GAAU1lB,EAAKk1B,MACjBl1B,EAAKk1B,GAAgB,IAEvBc,EAAah2B,EAAKk1B,IAEpBzJ,GACEuK,EAAYD,EAAoBtJ,EAAe,CAC7CnjB,iBAAiB,IAKvB,IAAI,MAAM2sB,KAAgBxJ,EAAe,CAEvC,MAAMsJ,EAAqBzgC,GAAIugC,WAAW,CACxC7P,UAAAA,EACA5Z,IAAKsgB,EACLv/H,MAAO8oI,EACPpP,WAAY,CAACK,OAAO,GACpBxvG,QAAS+9G,IAKLP,EAAelP,EAAU9pG,SAASkjF,IAAI22B,GAC1C/P,EAAU9pG,SAAS3gB,IAAIw6H,GAAoB,SAAW,KACxD,IAAIC,EAAah2B,EACdk1B,IACDD,GAAmBjP,EAAWkP,EAAcn0G,GACxC2kG,GAAU1lB,EAAKk1B,MACjBl1B,EAAKk1B,GAAgB,IAEvBc,EAAah2B,EAAKk1B,IAGpB,MAAM5L,EAAY+B,GAChBrF,EAAW+P,EAAoB,eAAiB,GAG5CzuB,EAAU6jB,GAAS8K,GACnB5uB,EAAS4jB,GAAQgL,GACvB,IAAIC,EACD7uB,EACD6uB,EAAQD,EAAa,SACb3uB,IACR4uB,EAAQD,EAAa,WAIvB,IAAIE,QAAsB7gC,GAAI0/B,QAAQ,CACpChP,UAAAA,EACA+F,eAAgBgK,EAChB19B,QAAUgP,GAAUC,EAAW4uB,EAAQD,EACvCl1G,QAAAA,EACAo0G,cAAAA,IAIF,GAAG9tB,EAAQ,CAMT,GAJIoe,GAAS0Q,KACXA,EAAgB,CAACA,IAGf7M,EAAU7xB,SAAS,SAkBhB,CACLg0B,GAAUuK,EAAYD,EAAoBI,EAAe,CACvD5sB,cAAc,EACdC,gBAAgB,IAElB,SArBA2sB,EAAgB,CACd,CAAC7gC,GAAIugC,WAAW,CACd7P,UAAAA,EACA5Z,IAAK,QACLya,WAAY,CAACK,OAAO,MACjBiP,GAIJ,WAAYF,IACbE,EAAc7gC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAK,SACLya,WAAY,CAACK,OAAO,MAChB+O,EAAa,WAYzB,GAAG3uB,EACD,GAAGgiB,EAAU7xB,SAAS,YAAc6xB,EAAU7xB,SAAS,QACrD6xB,EAAU7xB,SAAS,WAAao9B,GAAeoB,IAAgB,CAE/D,IAAIG,EACDJ,EAAWnpI,eAAekpI,GAC3BK,EAAYJ,EAAWD,GAEvBC,EAAWD,GAAsBK,EAAY,GAI/C,MAAMlpI,GAAOo8H,EAAU7xB,SAAS,OAC9Bw+B,EAAa,OAASA,EAAa,YACnC3gC,GAAIugC,WAAW,CAAC7P,UAAAA,EAAW5Z,IAAK,QAC9Bya,WAAY,CAACK,OAAO,KAIxBuE,GACE2K,EAAWlpI,EAAKipI,EAAe,CAC7B7sB,iBACIvoF,EAAQs0G,eAAiB/L,EAAU7xB,SAAS,eAE5C6xB,EAAU7xB,SAAS,WAC3Bo9B,GAAeoB,IAKZxQ,GAAS0Q,IAAkBA,EAAcljI,OAAS,IACnDkjI,EAAgB,CAAC,YAAaA,IAEhC1K,GACEuK,EAAYD,EAAoBI,EAAe,CAC7C7sB,iBACIvoF,EAAQs0G,eAAiB/L,EAAU7xB,SAAS,YAKjDguB,GAAS0Q,IAA2C,IAAzBA,EAAcljI,QAC1C8tB,EAAQs0G,gBACRc,EAAgBA,EAAc,IAEhCA,EAAgB,CACd,CAAC7gC,GAAIugC,WAAW,CACd7P,UAAAA,EACA5Z,IAAK,SACLya,WAAY,CAACK,OAAO,MACjBiP,GAIJ,QAASF,IACVE,EAAc7gC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAK,MACLya,WAAY,CAACK,OAAO,MAChB+O,EAAa,QAIlB,WAAYA,IACbE,EAAc7gC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAK,SACLya,WAAY,CAACK,OAAO,MAChB+O,EAAa,WAErBxK,GACEuK,EAAYD,EAAoBI,EAAe,CAC7C7sB,iBACIvoF,EAAQs0G,eAAiB/L,EAAU7xB,SAAS,gBAGjD,GAAG6xB,EAAU7xB,SAAS,cAC3B6xB,EAAU7xB,SAAS,WAAa6xB,EAAU7xB,SAAS,QACnD6xB,EAAU7xB,SAAS,SAAU,CAG7B,IAAI2+B,EAOAlpI,EACJ,GAPG8oI,EAAWnpI,eAAekpI,GAC3BK,EAAYJ,EAAWD,GAEvBC,EAAWD,GAAsBK,EAAY,GAI5C9M,EAAU7xB,SAAS,aAGjByzB,GAASiL,KACVA,EAAgBA,EAAc,WAEhCjpI,EAAM+oI,EAAa,kBACd,GAAG3M,EAAU7xB,SAAS,UAAW,CACtC,MAAM41B,EAAWhC,GACfrF,EAAW+P,EAAoB,WAAa,SACxCM,EAAe/gC,GAAIugC,WACvB,CAAC7P,UAAAA,EAAW5Z,IAAKihB,EAAUxG,WAAY,CAACK,OAAO,KACjD,GAAgB,WAAbmG,EACDngI,EAAM+oI,EAAa,iBACZE,EAAcE,OAChB,CACL,IAAIC,EAEJ,IADCppI,KAAQopI,GAAU1Q,GAASuQ,EAAc9I,IAAa,IACnD1H,GAAUz4H,GAIZ,OAAOopI,EAAOrjI,QACZ,KAAK,SACIkjI,EAAc9I,GACrB,MACF,KAAK,EACH8I,EAAc9I,GAAYiJ,EAAO,GACjC,MACF,QACEH,EAAc9I,GAAYiJ,OAV9BppI,EAAM,WAeL,GAAGo8H,EAAU7xB,SAAS,OAAQ,CACnC,MAAM8+B,EAAQjhC,GAAIugC,WAAW,CAAC7P,UAAAA,EAAW5Z,IAAK,MAC5Cya,WAAY,CAACK,OAAO,KACtBh6H,EAAMipI,EAAcI,UACbJ,EAAcI,QAChB,GAAGjN,EAAU7xB,SAAS,SAAU,CACrC,MAAM00B,EAAU72B,GAAIugC,WAAW,CAC7B7P,UAAAA,EACA5Z,IAAK,QACLya,WAAY,CAACK,OAAO,KAEtB,IAAIp/F,EAEJ,QADC56B,KAAQ46B,GAAS89F,GAASuQ,EAAchK,IAAY,IAC9CrkG,EAAM70B,QACX,KAAK,SACIkjI,EAAchK,GACrB,MACF,KAAK,EACHgK,EAAchK,GAAWrkG,EAAM,GAC/B,MACF,QACEquG,EAAchK,GAAWrkG,EAMY,IAAtCv7B,OAAO4B,KAAKgoI,GAAeljI,QAC5B,QAASgjI,IACTE,QAAsB7gC,GAAI0/B,QAAQ,CAChChP,UAAAA,EACA+F,eAAgBgK,EAChB19B,QAAS,CAAC,MAAO49B,EAAa,QAC9Bl1G,QAAAA,EACAo0G,cAAAA,KAMFjoI,IACFA,EAAMooG,GAAIugC,WAAW,CAAC7P,UAAAA,EAAW5Z,IAAK,QACpCya,WAAY,CAACK,OAAO,MAIxBuE,GACE2K,EAAWlpI,EAAKipI,EAAe,CAC7B7sB,gBAAiBggB,EAAU7xB,SAAS,cAEnC,CAIL,MAAMF,GAAYx2E,EAAQs0G,eACxB/L,EAAU7xB,SAAS,SAAW6xB,EAAU7xB,SAAS,UAChDguB,GAAS0Q,IAA2C,IAAzBA,EAAcljI,QACrB,UAArBy5H,GAAqD,WAArBA,EAGlCjB,GACEuK,EAAYD,EAAoBI,EAChC,CAAC7sB,gBAAiB/R,UA5UxB,CAIE,IAFkB8zB,GAChBrF,EAAW+F,EAAgB,eAAiB,IACjCt0B,SAAS,UACpB,SAIF,MAAMq+B,EAAQxgC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAKsgB,EACL7F,WAAY,CAACK,OAAO,KAEtBuE,GAAUzrB,EAAM81B,EAAOrJ,OA/BzB,CAEE,MAAM+J,QAAuBlhC,GAAI0/B,QAAQ,CACvChP,UAAAA,EACA+F,eAAAA,EACA1zB,QAASo0B,EACT1rG,QAAAA,EACAo0G,cAAAA,IAGG1P,GAAS+Q,IAA6C,IAA1BA,EAAevjI,QAC9Cw4H,GAAUzrB,EAAM0sB,EAAkB8J,OAjDtC,CAEE,MAAMA,QAAuBlhC,GAAI0/B,QAAQ,CACvChP,UAAAA,EACA+F,eAAgB,WAChB1zB,QAASo0B,EACT1rG,QAAAA,EACAo0G,cAAAA,IAIF,IAAI,MAAMsB,KAAqBD,EAC7B,GAAGxQ,EAAU9pG,SAASkjF,IAAIq3B,IACxBzQ,EAAU9pG,SAAS3gB,IAAIk7H,GAAmB/+G,QAAS,CACnD,MAAMvqB,EAAQqpI,EAAeC,GAGvBnD,GAFYjI,GAChBrF,EAAWyQ,EAAmB,eAAiB,IAErCh/B,SAAS,UAAY12E,EAAQs0G,cACzC5J,GACEzrB,EAAMy2B,EAAmBtpI,EAAO,CAACm8G,gBAAiBgqB,WAC7CkD,EAAeC,GAI1B,GAAGlqI,OAAO4B,KAAKqoI,GAAgBvjI,OAAS,EAAG,CAEzC,MAAM6iI,EAAQxgC,GAAIugC,WAAW,CAC3B7P,UAAAA,EACA5Z,IAAKsgB,EACL7F,WAAY,CAACK,OAAO,KAEtBuE,GAAUzrB,EAAM81B,EAAOU,QA7D3B,CAEE,IAAIA,EAAiB5Q,GAAS6G,GAAevkG,KAC3CwuG,GAAephC,GAAIugC,WAAW,CAC5B7P,UAAW0P,EACXtpB,IAAKsqB,EACL7P,WAAY,CAACK,OAAO,OAEK,IAA1BsP,EAAevjI,SAChBujI,EAAiBA,EAAe,IAIlC,MAAMV,EAAQxgC,GAAIugC,WAChB,CAAC7P,UAAAA,EAAW5Z,IAAK,QAASya,WAAY,CAACK,OAAO,KAQ1C3vB,GAPY8zB,GAChBrF,EAAW8P,EAAO,eAAiB,IAIzBr+B,SAAS,SACnB+zB,GAAgBxF,EAAW,MAEbP,GAAS+Q,IAA4C,IAAzB/J,EAAcx5H,OAC1Dw4H,GAAUzrB,EAAM81B,EAAOU,EAAgB,CAACltB,gBAAiB/R,QA7C3D,CACE,IAAIi/B,EAAiB5Q,GAAS6G,GAAevkG,KAC3CwuG,GAAephC,GAAIugC,WAAW,CAC5B7P,UAAAA,EACA5Z,IAAKsqB,EACL7P,WAAY,CAACK,OAAO,GACpBzoF,KAAM1d,EAAQ0d,SAEW,IAA1B+3F,EAAevjI,SAChBujI,EAAiBA,EAAe,IAOlCx2B,EAHc1K,GAAIugC,WAChB,CAAC7P,UAAAA,EAAW5Z,IAAK,MAAOya,WAAY,CAACK,OAAO,MAEhCsP,GA0alB,OAAOx2B,EAIT,OAAO3H,GAiBT/C,GAAIugC,WAAa,EACf7P,UAAAA,EACA5Z,IAAAA,EACAj/G,MAAAA,EAAQ,KACR05H,WAAAA,EAAa,CAACK,OAAO,GACrBxvG,QAAAA,GAAU,EACV+mB,KAAAA,EAAO,SAGP,GAAW,OAAR2tE,EACD,OAAOA,EAKN4Z,EAAU2Q,sBAAwB3Q,EAAUoC,kBAC7CpC,EAAYA,EAAUoC,iBAGxB,MAAMwO,EAAa5Q,EAAUgE,aAG7B,GAAGsB,GAAWlf,IACZA,KAAOwqB,GACP,UAAWA,EAAWxqB,IACtB,UAAWwqB,EAAWxqB,GAAK,UAC3B,UAAWwqB,EAAWxqB,GAAK,SAAS,SACpC,OAAOwqB,EAAWxqB,GAAK,SAAS,SAAS,SAI3C,GAAGya,EAAWK,OAAS9a,KAAOwqB,EAAY,CACxC,MAAMzM,EAAkBnE,EAAU,cAAgB,QAG5C6Q,EAAa,GAChBnR,GAAUv4H,IAAU,WAAYA,KAAW,WAAYA,IACxD0pI,EAAW92H,KAAK,SAAU,cAIzB2lH,GAAUv4H,IAAU,cAAeA,IACpCA,EAAQA,EAAM,aAAa,IAK1Bg+H,GAASh+H,IAEP,WAAYA,GACb0pI,EAAW92H,KACT,eAAgB,mBAAoB,SAAU,cAG/C,QAAS5S,GACV0pI,EAAW92H,KACT,YAAa,iBAEjB82H,EAAW92H,KAAK,SAAU,aAAc,QAEnC,WAAY5S,GACf0pI,EAAW92H,KACT,eAAgB,mBAAoB,SAAU,cAG7C,QAAS5S,GACZ0pI,EAAW92H,KAAK,YAAa,kBAEvB2lH,GAAUv4H,KAAW+9H,GAAS/9H,IACtC0pI,EAAW92H,KAAK,MAAO,UAAW,QAAS,aAI7C,IAAI+2H,EAAiB,YACjBhM,EAAsB,QAE1B,GAAGpzG,EACDo/G,EAAiB,QACjBhM,EAAsB,WACtB+L,EAAW92H,KAAK,aACX,GAAGkrH,GAAQ99H,GAAQ,CAGnB,WAAYA,GACf0pI,EAAW92H,KAAK,SAElB,MAAM+/F,EAAO3yG,EAAM,SACnB,GAAmB,IAAhB2yG,EAAK7sG,OAGN6jI,EAAiB,OACjBhM,EAAsB,YACjB,CACL,IAAIiM,EAAkC,IAAhBj3B,EAAK7sG,OAAgBk3H,EAAkB,KACzD6M,EAAa,KACjB,IAAI,IAAI5/H,EAAI,EAAGA,EAAI0oG,EAAK7sG,SAAUmE,EAAG,CACnC,MAAMogG,EAAOsI,EAAK1oG,GAClB,IAAI6/H,EAAe,QACfC,EAAW,QACf,GAAGhM,GAAS1zB,GACV,GAAG,eAAgBA,EAAM,CAGvBy/B,EAAe,IAFDz/B,EAAK,cAAgB,IAAIgR,iBAC3BhR,EAAK,oBAET,cAAeA,EACvBy/B,EAAez/B,EAAK,aAAagR,cACzB,UAAWhR,EACnB0/B,EAAW1/B,EAAK,SAGhBy/B,EAAe,aAGjBC,EAAW,MAcb,GAZsB,OAAnBH,EACDA,EAAiBE,EACTA,IAAiBF,GAAkB7L,GAAS1zB,KACpDu/B,EAAiB,SAED,OAAfC,EACDA,EAAaE,EACLA,IAAaF,IACrBA,EAAa,SAIO,UAAnBD,GAA6C,UAAfC,EAC/B,MAGJD,EAAiBA,GAAkB,QACnCC,EAAaA,GAAc,QACT,UAAfA,GACDF,EAAiB,QACjBhM,EAAsBkM,GAEtBlM,EAAsBiM,OAGrB,CACL,GAAG7L,GAAS/9H,GACV,GAAG,cAAeA,KAAW,WAAYA,GAAQ,CAC/C0pI,EAAW92H,KAAK,YAAa,iBAC7B+qH,EAAsB39H,EAAM,aAC5B,MAAMwX,EAAMxX,EAAM,cACfwX,IACDmmH,EAAsB,GAAGA,KAAuBnmH,SAE1C,eAAgBxX,KAAW,WAAYA,GAC/C29H,EAAsB,IAAI39H,EAAM,gBACxB,UAAWA,IACnB2pI,EAAiB,QACjBhM,EAAsB39H,EAAM,eAG9B2pI,EAAiB,QACjBhM,EAAsB,MAExB+L,EAAW92H,KAAK,QAIlB82H,EAAW92H,KAAK,SAIb2lH,GAAUv4H,MAAY,WAAYA,IAEnC0pI,EAAW92H,KAAK,SAAU,cAIzBmrH,GAAS/9H,IAAwC,IAA9BZ,OAAO4B,KAAKhB,GAAO8F,QAEvC4jI,EAAW92H,KAAK,YAAa,iBAG/B,MAAMsmH,EA2OV,SACEL,EAAW5Z,EAAKj/G,EAAO0pI,EAAYC,EAAgBhM,GACxB,OAAxBA,IACDA,EAAsB,SAIxB,MAAMqM,EAAQ,GAGd,IAA4B,QAAxBrM,GAAyD,aAAxBA,IACnCpF,GAAUv4H,IAAU,QAASA,EAAO,CAET,aAAxB29H,GACDqM,EAAMp3H,KAAK,YAGb,MAAMsmH,EAAO/wB,GAAIugC,WACf,CAAC7P,UAAAA,EAAW5Z,IAAKj/G,EAAM,OAAQ05H,WAAY,CAACK,OAAO,KAClDlB,EAAU9pG,SAASkjF,IAAIinB,IACxBL,EAAU9pG,SAAS3gB,IAAI8qH,IACvBL,EAAU9pG,SAAS3gB,IAAI8qH,GAAM,SAAWl5H,EAAM,OAE9CgqI,EAAMp3H,KAAK3Q,MAAM+nI,EAAO,CAAC,SAAU,QAGnCA,EAAMp3H,KAAK3Q,MAAM+nI,EAAO,CAAC,MAAO,eAE7B,CACLA,EAAMp3H,KAAK+qH,GAGX,MAAMsM,EAAUD,EAAME,MAAKC,GAAMA,EAAG7/B,SAAS,OAC1C2/B,GAEDD,EAAMp3H,KAAKq3H,EAAQlkI,QAAQ,UAAW,MAG1CikI,EAAMp3H,KAAK,SAEX,MAAMw3H,EAAevR,EAAU+D,QAAQ3d,GACvC,IAAI,MAAMkd,KAAauN,EAAY,CAEjC,KAAKvN,KAAaiO,GAChB,SAGF,MAAMC,EAAyBD,EAAajO,GAAWwN,GACvD,IAAI,MAAMW,KAAQN,EAEhB,GAAKM,KAAQD,EAKb,OAAOA,EAAuBC,GAIlC,OAAO,KAtSQC,CACX1R,EAAW5Z,EAAKj/G,EAAO0pI,EAAYC,EAAgBhM,GACrD,GAAY,OAATzE,EACD,OAAOA,EAKX,GAAGQ,EAAWK,OACT,WAAYlB,EAAW,CAExB,MAAMkB,EAAQlB,EAAU,UACxB,GAA0B,IAAvB5Z,EAAI53G,QAAQ0yH,IAAgB9a,IAAQ8a,EAAO,CAE5C,MAAMG,EAASjb,EAAI33G,OAAOyyH,EAAMj0H,QAChC,IAAI+yH,EAAU9pG,SAASkjF,IAAIioB,GACzB,OAAOA,GAOf,IAAIsQ,EAAS,KAEb,MAAMC,EAAiB,GACvB,IAAIhN,EAAS5E,EAAUiE,aAGvB,MAAM4N,EAAmBzrB,EAAIn5G,OAAS,EACtC,IAAI,IAAImE,EAAI,EAAGA,EAAIygI,GAAoBzrB,EAAIh1G,KAAMwzH,IAAUxzH,EACzDwzH,EAASA,EAAOxe,EAAIh1G,IACjB,KAAMwzH,GACPgN,EAAe73H,KAAK6qH,EAAO,IAAI,IAInC,IAAI,IAAIxzH,EAAIwgI,EAAe3kI,OAAS,EAAGmE,GAAK,IAAKA,EAAG,CAClD,MAAMkzH,EAAQsN,EAAexgI,GACvBizH,EAAQC,EAAMD,MACpB,IAAI,MAAMhE,KAAQgE,EAAO,CAKvB,MAAMyN,EAAQzR,EAAO,IAAMja,EAAI33G,OAAO61H,EAAMle,IAAIn5G,QACzB+yH,EAAU9pG,SAAS3gB,IAAI8qH,GAAMiB,WAChDtB,EAAU9pG,SAASkjF,IAAI04B,IACd,OAAV3qI,GAAkB64H,EAAU9pG,SAAS3gB,IAAIu8H,GAAO,SAAW1rB,KAI9B,OAAXurB,GACnBlR,GAAsBqR,EAAOH,GAAU,KACvCA,EAASG,IAMf,GAAc,OAAXH,EACD,OAAOA,EAKT,IAAI,MAAOtR,EAAM0R,KAAO/R,EAAU9pG,SAChC,GAAG67G,GAAMA,EAAGzQ,SAAWlb,EAAI/xG,WAAWgsH,EAAO,KAC3C,MAAM,IAAI1e,GACR,iBAAiByE,4BAA8Bia,MAC/C,qBACA,CAACzvG,KAAM,2BAA4B4a,QAASw0F,IAKlD,OAAIa,EAAWK,MAcR9a,EAbF,UAAW4Z,EACRA,EAAU,SAIL8O,GAAYC,GAAat2F,EAAMunF,EAAU,UAAW5Z,GAFpDA,EAKF0oB,GAAYr2F,EAAM2tE,IAmB/B9W,GAAIkgC,aAAe,EAAExP,UAAAA,EAAW+F,eAAAA,EAAgB5+H,MAAAA,EAAO4zB,QAAAA,MAErD,GAAGmqG,GAAS/9H,GAAQ,CAElB,MAAMmV,EAAO+oH,GAAiBrF,EAAW+F,EAAgB,SACnD3qB,EAAWiqB,GAAiBrF,EAAW+F,EAAgB,aACvDrC,EAAY2B,GAAiBrF,EAAW+F,EAAgB,cACxDzC,EACJ+B,GAAiBrF,EAAW+F,EAAgB,eAAiB,GAGzDiM,EAAgB,WAAY7qI,IAAUm8H,EAAU7xB,SAAS,UAG/D,IAAIugC,GAA0B,UAAT11H,EAAkB,CAErC,GAAGnV,EAAM,WAAamV,EACpB,OAAOnV,EAAM,UAEf,GAAG,cAAeA,GAASA,EAAM,eAAiBi0G,GAC/C,eAAgBj0G,GAASA,EAAM,gBAAkBu8H,EAClD,OAAOv8H,EAAM,UAEf,GAAG,cAAeA,GAASA,EAAM,eAAiBi0G,EAChD,OAAOj0G,EAAM,UAEf,GAAG,eAAgBA,GAASA,EAAM,gBAAkBu8H,EAClD,OAAOv8H,EAAM,UAQjB,MAAM8qI,EAAW1rI,OAAO4B,KAAKhB,GAAO8F,OAC9BilI,EAA+B,IAAbD,GACR,IAAbA,GAAkB,WAAY9qI,IAAU6qI,EACrCG,EAAsB,cAAenS,EACrCoS,EAAgBzS,GAAUx4H,EAAM,WAChCkrI,EAAkBrS,EAAU9pG,SAASkjF,IAAI2sB,IACW,OAAxD/F,EAAU9pG,SAAS3gB,IAAIwwH,GAAgB,aACzC,GAAGmM,GACQ,UAAT51H,KACE61H,IAAuBC,GAAiBC,GAC1C,OAAOlrI,EAAM,UAGf,MAAM6yG,EAAO,GA4Cb,OAzCGg4B,IACDh4B,EAAK1K,GAAIugC,WAAW,CAClB7P,UAAAA,EACA5Z,IAAK,SACLya,WAAY,CAACK,OAAO,MAChB/5H,EAAM,WAGX,UAAWA,EAEZ6yG,EAAK1K,GAAIugC,WAAW,CAClB7P,UAAAA,EACA5Z,IAAK,QACLya,WAAY,CAACK,OAAO,MAChB5xB,GAAIugC,WACR,CAAC7P,UAAAA,EAAW5Z,IAAKj/G,EAAM,SAAU05H,WAAY,CAACK,OAAO,KAC/C,cAAe/5H,IAEvB6yG,EAAK1K,GAAIugC,WAAW,CAClB7P,UAAAA,EACA5Z,IAAK,YACLya,WAAY,CAACK,OAAO,MAChB/5H,EAAM,cAGX,eAAgBA,IAEjB6yG,EAAK1K,GAAIugC,WAAW,CAClB7P,UAAAA,EACA5Z,IAAK,aACLya,WAAY,CAACK,OAAO,MAChB/5H,EAAM,eAId6yG,EAAK1K,GAAIugC,WAAW,CAClB7P,UAAAA,EACA5Z,IAAK,SACLya,WAAY,CAACK,OAAO,MAChB/5H,EAAM,UAEL6yG,EAIT,MAAM0sB,EAAmB9F,GAAWZ,EAAW+F,EAAgB,CAAC7E,OAAO,GACrEnmG,GACIze,EAAO+oH,GAAiBrF,EAAW+F,EAAgB,SACnDqJ,EAAY9/B,GAAIugC,WAAW,CAC/B7P,UAAAA,EACA5Z,IAAKj/G,EAAM,OACX05H,WAAY,CAACK,MAAgB,WAAT5kH,GACpBm8B,KAAM1d,EAAQ0d,OAGhB,MAAY,QAATn8B,GAA2B,WAATA,GAA0C,WAArBoqH,EACjC0I,EAGF,CACL,CAAC9/B,GAAIugC,WAAW,CACd7P,UAAAA,EACA5Z,IAAK,MACLya,WAAY,CAACK,OAAO,MACjBkO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzhCT,MAAMpvB,GAAW1G,GACXiiB,GAAW9e,GACXwF,GAAOtF,GACP21B,GXnBW,MAMf3hH,aAAY4hH,YAACA,IACXn2H,KAAKo2H,WAAa,IAAI1/B,IACtB12F,KAAKm2H,YAAcA,EAGrBt1B,eAAc+iB,UACZA,EAASx0F,QAAEA,EAAO22F,eAAEA,EAAc1pF,KAAEA,EAAIupF,OAAEA,EAAS,IAAI/iB,MAGpDzzE,GAAWk0F,GAAUl0F,IAAYA,EAAQ,cAC1CA,EAAUA,EAAQ,aAIpBA,EAAUo0F,GAASp0F,GAGnB,MAAMinG,EAAc,GACpB,IAAI,MAAMpnG,KAAOG,EAAS,CACxB,GAAGm0F,GAAUt0F,GAAM,CAEjB,IAAI42F,EAAW7lH,KAAKs2H,KAAKrnG,GACrB42F,IAEFA,QAAiB7lH,KAAKu2H,sBACpB,CAAC3S,UAAAA,EAAWrxH,IAAK08B,EAAK82F,eAAAA,EAAgB1pF,KAAAA,EAAMupF,OAAAA,KAI7CvC,GAASwC,GACVwQ,EAAY14H,QAAQkoH,GAEpBwQ,EAAY14H,KAAKkoH,GAEnB,SAEF,GAAW,OAAR52F,EAAc,CAEfonG,EAAY14H,KAAK,IAAI8lH,GAAgB,CAACn2H,SAAU,QAChD,SAEEg2H,GAAUr0F,IACZ80F,GAA0B30F,GAG5B,MAAMtkC,EAAMyjH,KAAK+M,UAAUrsF,GAC3B,IAAI42F,EAAW7lH,KAAKs2H,KAAKxrI,GACrB+6H,IAEFA,EAAW,IAAIpC,GAAgB,CAACn2H,SAAU2hC,IAC1CjvB,KAAKw2H,sBAAsB,CAAC1rI,IAAAA,EAAK+6H,SAAAA,EAAU4Q,IAAK,YAElDJ,EAAY14H,KAAKkoH,GAGnB,OAAOwQ,EAGTC,KAAKxrI,GAGH,IAAI+6H,EAAW7lH,KAAKo2H,WAAWj9H,IAAIrO,GACnC,IAAI+6H,EAAU,CAEZ,MAAM6Q,EAAS12H,KAAKm2H,YAAYh9H,IAAIrO,GACjC4rI,IACD7Q,EAAW6Q,EAAOv9H,IAAI,UACnB0sH,GACD7lH,KAAKo2H,WAAW1sH,IAAI5e,EAAK+6H,IAI/B,OAAOA,EAGT2Q,uBAAsB1rI,IAACA,EAAG+6H,SAAEA,EAAQ4Q,IAAEA,IAEpC,GADAz2H,KAAKo2H,WAAW1sH,IAAI5e,EAAK+6H,QACdhnB,IAAR43B,EAAmB,CACpB,IAAIC,EAAS12H,KAAKm2H,YAAYh9H,IAAIrO,GAC9B4rI,IACFA,EAAS,IAAIhgC,IACb12F,KAAKm2H,YAAYzsH,IAAI5e,EAAK4rI,IAE5BA,EAAOhtH,IAAI+sH,EAAK5Q,GAElB,OAAOA,EAGThlB,6BAA4B+iB,UAACA,EAASrxH,IAAEA,EAAGwzH,eAAEA,EAAc1pF,KAAEA,EAAIupF,OAAEA,IAEjErzH,EAAMw3G,GAAY1tE,EAAM9pC,GACxB,MAAM68B,QAACA,EAAOunG,UAAEA,SAAmB32H,KAAK42H,cACtC,CAAChT,UAAAA,EAAWrxH,IAAAA,EAAKwzH,eAAAA,EAAgBH,OAAAA,IAInC5B,GAAoB,CAAC50F,QAAAA,EAASiN,KAD9BA,EAAOs6F,EAAU7X,aAAevsH,IAIhC,MAAMszH,QAAiB7lH,KAAK1T,QAC1B,CAACs3H,UAAAA,EAAWx0F,QAAAA,EAAS22F,eAAAA,EAAgB1pF,KAAAA,EAAMupF,OAAAA,IAE7C,OADA5lH,KAAKw2H,sBAAsB,CAAC1rI,IAAKyH,EAAKszH,SAAAA,EAAU4Q,IAAKE,EAAUF,MACxD5Q,EAGThlB,qBAAoB+iB,UAACA,EAASrxH,IAAEA,EAAGwzH,eAAEA,EAAcH,OAAEA,IAEnD,GAAGA,EAAOj/G,KAnHW,GAoHnB,MAAM,IAAI4+F,GACR,4CACA,yBACA,CACE/wF,KAAmC,gBAA7BovG,EAAU4C,eACd,gCACA,mBACFh9G,IA3He,KAiIrB,GAAGo8G,EAAO5oB,IAAIzqG,GACZ,MAAM,IAAIgzG,GACR,mCACA,yBACA,CACE/wF,KAAmC,gBAA7BovG,EAAU4C,eACd,8BACA,mBACFj0H,IAAAA,IAON,IAAI68B,EACAunG,EAHJ/Q,EAAO3kH,IAAI1O,GAKX,IACEokI,QAAkB5Q,EAAexzH,GACjC68B,EAAUunG,EAAUrpI,UAAY,KAE7Bi2H,GAAUn0F,KACXA,EAAUm/E,KAAKhF,MAAMn6E,IAEvB,MAAMziC,GACN,MAAM,IAAI44G,GACR,iUAMA,oBACA,CAAC/wF,KAAM,gCAAiCjiB,IAAAA,EAAKqsH,MAAOjyH,IAIxD,IAAI22H,GAAUl0F,GACZ,MAAM,IAAIm2E,GACR,kHAEA,oBAAqB,CAAC/wF,KAAM,yBAA0BjiB,IAAAA,IAkB1D,OAXE68B,EAHG,aAAcA,EAGP,CAAC,WAAYA,EAAQ,aAFrB,CAAC,WAAY,IAMtBunG,EAAU9X,aACPwE,GAASj0F,EAAQ,eACnBA,EAAQ,YAAc,CAACA,EAAQ,cAEjCA,EAAQ,YAAYzxB,KAAKg5H,EAAU9X,aAG9B,CAACzvF,QAAAA,EAASunG,UAAAA,KWvKfl6B,GAAmBoJ,GAAKpJ,iBACxB8I,GAAc9B,GACd2f,GAAM1f,GACNrF,GAASiO,IAERkd,OAAQqN,IAAWtqB,IACnBvU,QAAS8+B,IAAYtqB,IACrBihB,QAASsJ,IAAYC,IACrB5H,MAAO6H,IAAUC,IAGtBxF,qBAAsByF,GACtB3E,YAAa4E,IACXC,IAGFliC,QAASkuB,GACT/e,SAAUgf,GACV3e,SAAU4e,IACR+T,IAGFvyB,mBAAoBkoB,IAClBsK,IAGF/P,UAAWhD,GACX8B,kBAAmBkR,GACnB9nI,QAASy5H,GACT3C,eAAgB4C,IACdqO,IAGF7E,QAAS8E,GACTjE,WAAYkE,IACVC,IAGFxL,cAAeiD,GACflD,oBAAqBe,GACrBb,cAAewL,IACbC,GAIE/iB,GAAU,SAASsK,GAGzB,MAAM0Y,EAAc,GAKdC,EAAwB,IAAI5U,GAAI,CAAC55G,IADC,MAg5BxC,SAASyuH,EAAat5G,GAASonG,eAC7BA,EAAiB1G,EAAO0G,kBACrBn5G,IAEH,OAAOziB,OAAOm8G,OAAO,GAAI,CAACyf,eAAAA,GAAiBn5G,EAAU+R,GAIvD,OAt3BA0gG,EAAOuT,QAAU/xB,eAAen8F,EAAOuqB,EAAKtQ,GAC1C,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,yCAGtB,GAAW,OAAR2rB,EACD,MAAM,IAAIs2E,GACR,2CACA,sBAAuB,CAAC/wF,KAAM,0BAIlC,GAAa,OAAV9P,EACD,OAAO,KAyBT,IAAIyuH,GArBJx0G,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjCuuH,eAAe,EACfiF,mBAAmB,EACnBz9B,OAAO,EACP09B,eAAe,EACf3vH,MAAM,EACNg5F,OAAQ,IAAI/E,GAAiB,OAC7BqpB,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,OAEPxvH,OAGTmW,EAAQw5G,eAAgB,GAEtBx5G,EAAQu5G,0BACHv5G,EAAQ0d,KAMf82F,EADCx0G,EAAQw5G,cACEzzH,QAEM26G,EAAOmK,OAAO9kH,EAAOia,GAIxC,MAAMilG,QAAkBvE,EAAO+Y,eAC7BZ,GAAmB74G,GAAUsQ,EAAKtQ,GAGpC,IAAIq0G,QAAkB0E,GAAS,CAC7B9T,UAAAA,EACA3tB,QAASk9B,EACTx0G,QAAAA,EACAo0G,cAAep0G,EAAQo0G,gBAItBp0G,EAAQs0G,gBAAkBt0G,EAAQ87E,OAAS4oB,GAAS2P,GAC7B,IAArBA,EAAUniI,OAEXmiI,EAAYA,EAAU,GACO,IAArBA,EAAUniI,SAElBmiI,EAAY,IAENr0G,EAAQ87E,OAAS6oB,GAAU0P,KAEnCA,EAAY,CAACA,IAIZ1P,GAAUr0F,IAAQ,aAAcA,IACjCA,EAAMA,EAAI,aAIZA,EAAM42E,GAAKnlF,MAAMuO,GACbo0F,GAASp0F,KACXA,EAAM,CAACA,IAGT,MAAMopG,EAAMppG,EACZA,EAAM,GACN,IAAI,IAAIj6B,EAAI,EAAGA,EAAIqjI,EAAIxnI,SAAUmE,IAC3BsuH,GAAU+U,EAAIrjI,KAAO7K,OAAO4B,KAAKssI,EAAIrjI,IAAInE,OAAS,IACpDo+B,EAAItxB,KAAK06H,EAAIrjI,IAKjB,MAAMsjI,EAAcrpG,EAAIp+B,OAAS,EAMjC,GALkB,IAAfo+B,EAAIp+B,SACLo+B,EAAMA,EAAI,IAITo0F,GAAS2P,GAAY,CAEtB,MAAMuF,EAAaZ,GAAY,CAC7B/T,UAAAA,EAAW5Z,IAAK,SAAUya,WAAY,CAACK,OAAO,KAE1CrqB,EAAQu4B,EACdA,EAAY,GACTsF,IACDtF,EAAU,YAAc/jG,GAE1B+jG,EAAUuF,GAAc99B,OACnB,GAAG6oB,GAAU0P,IAAcsF,EAAY,CAE5C,MAAM79B,EAAQu4B,EACdA,EAAY,CAAC,WAAY/jG,GACzB,IAAI,MAAMnkC,KAAO2vG,EACfu4B,EAAUloI,GAAO2vG,EAAM3vG,GAI3B,OAAOkoI,GAqBT3T,EAAOmK,OAAS3oB,eAAen8F,EAAOia,GACpC,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,yCASM,KAL5Bqb,EAAUs5G,EAAat5G,EAAS,CAC9BstG,uBAAuB,EACvBnG,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,OAEP/N,eACTtrG,EAAQsrG,kBAAeprB,GAIzB,MAAM25B,EAAY,GAGZC,EAAoB,GAG1B,GAAG,kBAAmB95G,EAAS,CAC7B,MAAM+5G,EAAgB7yB,GAAKnlF,MAAM/B,EAAQ+5G,eACtCpV,GAAUoV,IAAkB,aAAcA,EAC3CF,EAAUE,cAAgBA,EAE1BF,EAAUE,cAAgB,CAAC,WAAYA,GAEzCD,EAAkB96H,KAAK66H,EAAUE,eAInC,IAAIC,EACJ,GAAIpV,GAAU7+G,GAGP,CAEL,MAAMiyH,QAAkBtX,EAAOlmH,IAAIuL,EAAOia,GAC1Cg6G,EAAchC,EAAU7X,YACxB0Z,EAAU9zH,MAAQiyH,EAAUrpI,SACzBqpI,EAAU9X,aAEX2Z,EAAUI,cAAgB,CAAC,WAAYjC,EAAU9X,YACjD4Z,EAAkB96H,KAAK66H,EAAUI,qBATnCJ,EAAU9zH,MAAQmhG,GAAKnlF,MAAMhc,GAc1B,SAAUia,IACbA,EAAQ0d,KAAOs8F,GAAe,IAIhC,IAAI/U,EAAY4T,GAAmB74G,GACnC,IAAI,MAAM+lG,KAAY+T,EACpB7U,QAAkBuF,GAAgB,CAACvF,UAAAA,EAAWc,SAAAA,EAAU/lG,QAAAA,IAI1D,IAAIw0G,QAAiB0D,GAAQ,CAC3BjT,UAAAA,EACA3tB,QAASuiC,EAAU9zH,MACnBia,QAAAA,EACAsrG,aAActrG,EAAQsrG,eAgBxB,OAZG3G,GAAU6P,IAAc,WAAYA,GACJ,IAAjChpI,OAAO4B,KAAKonI,GAAUtiI,OACtBsiI,EAAWA,EAAS,UACC,OAAbA,IACRA,EAAW,IAIT9P,GAAS8P,KACXA,EAAW,CAACA,IAGPA,GAgBT9T,EAAOrnB,QAAU6I,eAAen8F,EAAOuqB,EAAKtQ,GAC1C,GAAG9b,UAAUhS,OAAS,EACpB,OAAO,IAAIyS,UAAU,yCAIrB2rB,EADgB,mBAARA,EACF,KAEAA,GAAO,KAIftQ,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjCohH,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,MAIlB,MAAM7E,QAAiB9T,EAAOmK,OAAO9kH,EAAOia,GAGtCwuG,EAAY2J,GAAS3D,GAE3B,GAAW,OAARlkG,EAED,OAAOk+F,EAITxuG,EAAQ87E,OAAQ,EAChB97E,EAAQw5G,eAAgB,EACxB,MAAMnF,QAAkB3T,EAAOuT,QAAQzF,EAAWl+F,EAAKtQ,GAEvD,OAAOq0G,GAqBT3T,EAAOkQ,MAAQ1uB,eAAen8F,EAAO6qH,EAAO5wG,GAC1C,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,uCAgBtB,GAZAqb,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjCusH,MAAO,QACPc,UAAU,EACV1B,YAAY,EACZwI,aAAa,EACbxH,cAAe,GACfvL,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,MAIfzU,GAAUgM,GAAQ,CAEnB,MAAMoH,QAAkBtX,EAAOlmH,IAAIo2H,EAAO5wG,GAG1C,GAFA4wG,EAAQoH,EAAUrpI,SAEfqpI,EAAU9X,WAAY,CAEvB,IAAI5vF,EAAMsgG,EAAM,YACZtgG,EAEMo0F,GAASp0F,GACjBA,EAAItxB,KAAKg5H,EAAU9X,YAEnB5vF,EAAM,CAACA,EAAK0nG,EAAU9X,YAJtB5vF,EAAM0nG,EAAU9X,WAMlB0Q,EAAM,YAActgG,GAIxB,MAAM6pG,EAAevJ,GAAQA,EAAM,aAAoB,GAGjD3L,QAAkBvE,EAAO+Y,eAC7BZ,GAAmB74G,GAAUm6G,EAAcn6G,GAGzCA,EAAQl0B,eAAe,eACzBk0B,EAAQo6G,UAAY3P,GAAgBxF,EAAW,MAE7CjlG,EAAQl0B,eAAe,+BACzBk0B,EAAQmzG,0BAA4B1I,GAAgBxF,EAAW,MAIjE,MAAMuP,QAAiB9T,EAAOmK,OAAO9kH,EAAOia,GAGtChS,EAAO,IAAIgS,GACjBhS,EAAKg6F,SAAU,EACfh6F,EAAKs/G,uBAAwB,EAC7B,MAAM+M,QAAsB3Z,EAAOmK,OAAO+F,EAAO5iH,GAI3CssH,EAAY9uI,OAAO4B,KAAKwjI,GAC3BzpG,KAAIh7B,GAAO05H,GAAWZ,EAAW94H,EAAK,CAACg6H,OAAO,MACjDn4G,EAAKkgH,QAAUoM,EAAU5jC,SAAS,UAClC1oF,EAAKulH,KAAO9I,GAAgBxF,EAAW,KAGvC,MAAMiO,EAASsF,GAAsBhE,EAAU6F,EAAersH,GAE9DA,EAAK8tF,OAAS97E,EAAQo6G,UACtBpsH,EAAKwrH,eAAgB,EACrBxrH,EAAKnE,KAAO,GACZmE,EAAKusH,SAAU,EACf,IAAIlG,QAAkB3T,EAAOuT,QAAQf,EAAQiH,EAAcnsH,GAM3D,OAHAA,EAAKnE,KAAO,GACZwqH,EAAYoE,GAAapE,EAAWrmH,GAE7BqmH,GAkBT3T,EAAO72G,KAAOq4F,eAAen8F,EAAOuqB,EAAKtQ,GAGvC,MAAM4wG,EAAQ,GAKd,OAJGtgG,IACDsgG,EAAM,YAActgG,GAEtBsgG,EAAM,UAAY,QACXlQ,EAAOkQ,MAAM7qH,EAAO6qH,EAAO5wG,IA2BpC0gG,EAAOx9G,UAAYw9G,EAAOzb,SAAW/C,eAAen8F,EAAOia,GACzD,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,0CAWtB,GAAG,gBAPHqb,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjC04F,UAAW,YACX+6B,eAAe,EACfrS,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,OAEW,CAC3B,GAA2B,wBAAxBr5G,EAAQw6G,aACe,uBAAxBx6G,EAAQw6G,YACR,MAAM,IAAI5zB,GACR,yCACA,wBAGJ,MAAM6zB,EAAc/6B,GAAOkL,MAAM7kG,GAGjC,OAAOk/F,GAASA,SAASw1B,EAAaz6G,GAIxC,MAAMhS,EAAO,IAAIgS,UACVhS,EAAKspB,OACZtpB,EAAKoiH,uBAAwB,EAC7B,MAAMzwB,QAAgB+gB,EAAO+P,MAAM1qH,EAAOiI,GAG1C,OAAOi3F,GAASA,SAAStF,EAAS3/E,IAmBpC0gG,EAAOoO,QAAU5sB,eAAevC,EAAS3/E,GACvC,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,kDAItBqb,EAAUs5G,EAAat5G,EAAS,CAC9BsX,OAAQstF,GAAUjlB,GAAW,2BAAwBO,IAGvD,MAAM5oE,OAACA,GAAUtX,EACjB,IAAI06G,UAACA,GAAa16G,EAGlB,GAAGsX,GAGD,GADAojG,EAAYA,GAAatB,EAAY9hG,IACjCojG,EACF,MAAM,IAAI9zB,GACR,wBACA,uBAAwB,CAACtvE,OAAAA,SAI7BojG,EAAY,IAAM/6B,EAIpB,MAAMg7B,QAAsBD,EAAU/6B,GACtC,OAAOy4B,GAASuC,EAAe36G,IAqBjC0gG,EAAO+P,MAAQvuB,eAAen8F,EAAOia,GACnC,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,gDAYtB,IAAI6vH,EAEFA,GAVFx0G,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjCyzH,eAAe,EACfrS,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,OAKPG,cACEzzH,QAGM26G,EAAOmK,OAAO9kH,EAAOia,GAIxC,MAAM2/E,EAAU24B,GAAO9D,EAAUx0G,GACjC,GAAGA,EAAQsX,OAAQ,CACjB,GAAsB,wBAAnBtX,EAAQsX,QACU,uBAAnBtX,EAAQsX,OACR,OAAOooE,GAAOmwB,UAAUlwB,GAE1B,MAAM,IAAIiH,GACR,yBACA,uBAAwB,CAACtvE,OAAQtX,EAAQsX,SAG7C,OAAOqoE,GAmBT+gB,EAAO+M,cAAgBvrB,eAAen8F,EAAOia,GAC3C,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,iDAItBqb,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAMknF,GAAU7+G,GAASA,EAAQ,GACjCohH,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,MAIlB,MAAM7E,QAAiB9T,EAAOmK,OAAO9kH,EAAOia,GAE5C,OAAOuuG,GAAqBiG,EAAUx0G,IAwBxC0gG,EAAOka,MAAQ14B,eAAe24B,EAAMvqG,EAAKtQ,GACvC,GAAG9b,UAAUhS,OAAS,EACpB,MAAM,IAAIyS,UAAU,uCAEtB,IAAI+/G,GAASmW,GACX,MAAM,IAAIl2H,UAAU,6CAIpB2rB,EADgB,mBAARA,EACF,KAEAA,GAAO,KAIftQ,EAAUs5G,EAAat5G,EAAS,CAC9BmnG,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,MAIlB,MAAM7E,QAAiB9mI,QAAQwuG,IAAI2+B,EAAK1zG,KAAIy4F,IAC1C,MAAM5xG,EAAO,IAAIgS,GACjB,OAAO0gG,EAAOmK,OAAOjL,EAAK5xG,OAG5B,IAAI8sH,GAAa,EACd,eAAgB96G,IACjB86G,EAAa96G,EAAQ86G,YAGvB,MAAMj4B,EAAS7iF,EAAQ6iF,QAAU,IAAI/E,GAAiB,OAChD8B,EAAS,CAAC,WAAY,IAE5B,IAAI,IAAIvpG,EAAI,EAAGA,EAAIm+H,EAAStiI,SAAUmE,EAAG,CAEvC,MAAMupH,EAAM1Y,GAAK4B,kBAAkB0rB,EAASn+H,GAAI,CAC9CwsG,OAAQ,IAAI/E,GAAiB,MAAQznG,EAAI,OAKrC0kI,EAAWD,GAAoB,IAANzkI,EAAWupG,EAAS,CAAC,WAAY,IAGhE,GAFA8wB,GAAe9Q,EAAKmb,EAAS,WAAYl4B,GAEtCk4B,IAAYn7B,EAEb,IAAI,MAAMsB,KAAa65B,EAAS,CAC9B,MAAMC,EAAWD,EAAQ75B,GACzB,KAAKA,KAAatB,GAAS,CACzBA,EAAOsB,GAAa85B,EACpB,SAEF,MAAMzN,EAAU3tB,EAAOsB,GACvB,IAAI,MAAM/0G,KAAO6uI,EACV7uI,KAAOohI,IACVA,EAAQphI,GAAO6uI,EAAS7uI,KAQlC,MAAMiiI,EAAe8K,GAAet5B,GAG9B4uB,EAAY,GACZphI,EAAO5B,OAAO4B,KAAKghI,GAAchjG,OACvC,IAAI,IAAIg8E,EAAK,EAAGA,EAAKh6G,EAAK8E,SAAUk1G,EAAI,CACtC,MAAMn2G,EAAOm9H,EAAahhI,EAAKg6G,IAE3BknB,GAAoBr9H,IACtBu9H,EAAUxvH,KAAK/N,GAInB,GAAW,OAARq/B,EACD,OAAOk+F,EAITxuG,EAAQ87E,OAAQ,EAChB97E,EAAQw5G,eAAgB,EACxB,MAAMnF,QAAkB3T,EAAOuT,QAAQzF,EAAWl+F,EAAKtQ,GAEvD,OAAOq0G,GAUT7oI,OAAOC,eAAei1H,EAAQ,iBAAkB,CAC9ClmH,IAAK,IAAMkmH,EAAOua,gBAClBlwH,IAAKme,GAAKw3F,EAAOua,gBAAkB/xG,IAGrCw3F,EAAO0G,eAAiBllB,MAAAA,IACtB,MAAM,IAAI0E,GACR,yFACkC,2BAClC,CAAC/wF,KAAM,0BAA2BjiB,IAAAA,KAatC8sH,EAAOlmH,IAAM0nG,eAAetuG,EAAKosB,GAC/B,IAAIpkB,EAEFA,EADmC,mBAA3BokB,EAAQonG,eACTpnG,EAAQonG,eAER1G,EAAO0G,eAGhB,MAAM4Q,QAAkBp8H,EAAKhI,GAE7B,IACE,IAAIokI,EAAUrpI,SACZ,MAAM,IAAIi4G,GACR,6CACA,6BAEDge,GAAUoT,EAAUrpI,YACrBqpI,EAAUrpI,SAAWihH,KAAKhF,MAAMotB,EAAUrpI,WAE5C,MAAMX,GACN,MAAM,IAAI44G,GACR,sDACA,2BAA4B,CAC1B/wF,KAAM,0BACNoqG,MAAOjyH,EACPgqI,UAAAA,IAIN,OAAOA,GAeTtX,EAAO+Y,eAAiBv3B,eACtB+iB,EAAWc,EAAU/lG,GASrB,OAPAA,EAAUs5G,EAAat5G,EAAS,CAC9B0d,KAAM,GACNypF,gBAAiB,IAAIoQ,GACnB,CAACC,YAAa6B,MAIF,OAAbtT,EACM8S,GAAmB74G,IAI5B+lG,EAAW7e,GAAKnlF,MAAMgkG,GACjBpB,GAAUoB,IAAa,aAAcA,IACxCA,EAAW,CAAC,WAAYA,IAGnByE,GAAgB,CAACvF,UAAAA,EAAWc,SAAAA,EAAU/lG,QAAAA,MAI/C0gG,EAAOsJ,gBAAkB8O,GAAqB9O,gBAK9CtJ,EAAOC,gBAAkB,GASzBD,EAAOE,kBAAoB,SAASr/G,GAClC,KAAKA,KAAQm/G,EAAOC,iBAClB,MAAM,IAAI/Z,GACR,kCAAoCrlG,EAAO,IAC3C,+BACA,CAACA,KAAAA,IAILm/G,EAAO0G,eAAiB1G,EAAOC,gBAAgBp/G,GAAMlT,MACnDqyH,EAAQz8G,MAAMpY,UAAUuG,MAAMxF,KAAKsX,UAAW,KAalDw8G,EAAOwa,kBAAoB,SAASlpB,EAAanH,GAC/CuuB,EAAYpnB,GAAenH,GAQ7B6V,EAAOya,oBAAsB,SAASnpB,UAC7BonB,EAAYpnB,IAIrB0O,EAAOwa,kBAAkB,sBAAuBx7B,GAAOkL,OACvD8V,EAAOwa,kBAAkB,qBAAsBx7B,GAAOkL,OAGtD8V,EAAO9sH,IAAMwnI,GAGb1a,EAAOxZ,KAAOA,GAEd17G,OAAOm8G,OAAO+Y,EAAQxZ,IAGtBwZ,EAAO2a,SAAW3a,EAGlBA,EAAOzB,aAAeqc,GAGtB5a,EAAO6a,gBCj+BU7a,CAAAA,IACf,MAAM6a,EACJ9zH,WACE,MAAO,4BA0CX,OAvCAjc,OAAOC,eAAe8vI,EAAiB,YAAa,CAClDhvI,UAAU,EACVF,YAAY,IAEdb,OAAOC,eAAe8vI,EAAgB1vI,UAAW,cAAe,CAC9DU,UAAU,EACVF,YAAY,EACZC,cAAc,EACdF,MAAOmvI,IASTA,EAAgBtH,QAAU,SAASluH,EAAOuqB,GACxC,OAAGpsB,UAAUhS,OAAS,EACbxE,QAAQE,OACb,IAAI+W,UAAU,0CAEX+7G,EAAOuT,QAAQluH,EAAOuqB,IAE/BirG,EAAgB1Q,OAAS,SAAS9kH,GAChC,OAAG7B,UAAUhS,OAAS,EACbxE,QAAQE,OACb,IAAI+W,UAAU,yCAEX+7G,EAAOmK,OAAO9kH,IAEvBw1H,EAAgBliC,QAAU,SAAStzF,GACjC,OAAG7B,UAAUhS,OAAS,EACbxE,QAAQE,OACb,IAAI+W,UAAU,0CAEX+7G,EAAOrnB,QAAQtzF,IAGjBw1H,GDo7BgBC,CAA6B9a,GAEtDF,GAASK,aAAaH,GACtBF,GAASC,qBAAqBC,GAUvBA,GAMDtC,GAAU,WACd,OAAOhI,IAAQ,WACb,OAAOgI,SAKXhI,GAAQgI,QEz/BRvZ,GF2/BiBuZ,GG9/BJqd,yBAiBGlgC,EAAuB9G,OAAiBn9D,yDAA8BulE,GAAoB6+B,OAAQ9lC,0FAfhF,YAAa,KAChC,4BACA,4BACA,4BACA,2BACD,2BACC,wDACC,iCACC,UAQJnB,QAAUA,OACV8G,OAASA,OACT3F,QAAUA,OACVt+D,OAASA,8EAGlB,gGACOj2B,KAAKi2B,QAAUulE,GAAoB6+B,gDAAer6H,KAAKs6H,uBACvDt6H,KAAKi2B,QAAUulE,GAAoB6C,gDAAer+F,KAAKu6H,6CACnD,2JAGX,qHAC2BnL,SAAMpvH,KAAKw6H,4BAA5BC,SACAC,EAAcD,EAAI5pI,yBACjB6pI,uHAGX,kBACW16H,KAAKw6H,oEAGhB,6GACiBpL,SAAMpvH,KAAKw6H,aAAc,CAACvkG,OAAQ,oKC5B1C0kG,mBAAkBP,8JAE3B,uIAES7lC,SAAWpjG,QAAQW,IAAI,4BACvByiG,SAAWpjG,QAAQW,IAAI,IAC5BX,QAAQsjC,KAAK,6BAGR8/D,SAAWpjG,QAAQW,IAAI,uCACvByiG,SAAWpjG,QAAQsjC,KAAK,oCACxB+lG,aAAa,WAAU78H,6BAAeqC,KAAK46H,iGAC3CrmC,SAAWpjG,QAAQ0pI,QAAQ,4BAC3BtmC,SAAWpjG,QAAQsjC,KAAK,wCACxB+lG,aAAa,WAAU78H,6BAAeqC,KAAK86H,qGAC3CvmC,SAAWpjG,QAAQ0pI,QAAQ,gCAC3BtmC,SAAWpjG,QAAQsjC,KAAK,uCACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAK+6H,2GAC3CxmC,SAAWpjG,QAAQ0pI,QAAQ,8BAC3BtmC,SAAWpjG,QAAQsjC,KAAK,sCACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKg7H,0GAC3CzmC,SAAWpjG,QAAQ0pI,QAAQ,6BAC3BtmC,SAAWpjG,QAAQsjC,KAAK,wCACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKi7H,4GAC3C1mC,SAAWpjG,QAAQ0pI,QAAQ,+BAC3BtmC,SAAWpjG,QAAQW,IAAI,SAGvByiG,SAAWpjG,QAAQW,IAAI,kDACvByiG,SAAWpjG,QAAQsjC,KAAK,yDACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKk7H,qIAC3C3mC,SAAWpjG,QAAQ0pI,QAAQ,gDAC3BtmC,SAAWpjG,QAAQsjC,KAAK,0DACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKm7H,sIAC3C5mC,SAAWpjG,QAAQ0pI,QAAQ,iDAC3BtmC,SAAWpjG,QAAQsjC,KAAK,iDACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKo7H,8HAC3C7mC,SAAWpjG,QAAQ0pI,QAAQ,wCAC3BtmC,SAAWpjG,QAAQW,IAAI,SAGvByiG,SAAWpjG,QAAQW,IAAI,oDACvByiG,SAAWpjG,QAAQsjC,KAAK,yDACxB+lG,aAAa,WAAU78H,+BAAeqC,KAAKq7H,8HAC3C9mC,SAAWpjG,QAAQ0pI,QAAQ,gDAC3BtmC,SAAWpjG,QAAQW,IAAI,SAGvByiG,SAAWpjG,QAAQW,IAAI,8CACvByiG,SAAWpjG,QAAQsjC,KAAK,gDACxB+lG,aAAa,WAAU78H,gCAAeqC,KAAKs7H,6HAC3C/mC,SAAWpjG,QAAQ0pI,QAAQ,uCAC3BtmC,SAAWpjG,QAAQsjC,KAAK,mDACxB+lG,aAAa,WAAU78H,gCAAeqC,KAAKu7H,gIAC3ChnC,SAAWpjG,QAAQ0pI,QAAQ,0CAC3BtmC,SAAWpjG,QAAQsjC,KAAK,iDACxB+lG,aAAa,WAAU78H,gCAAeqC,KAAKw7H,0HAC3CjnC,SAAWpjG,QAAQ0pI,QAAQ,wCAC3BtmC,SAAWpjG,QAAQW,IAAI,IAE5BX,QAAQ0pI,QAAQ,yBAEb76H,KAAKu0F,4CACsBv0F,KAAKy7H,0BAAzBf,SACNvpI,QAAQW,IAAI,kBAAoB4oI,8BAGvB16H,KAAK07H,4MAOrB,6GACgB//B,GAAoB37F,KAAKk6F,OAAQl6F,KAAKozF,QnDy0W7C,WmDz0W+D,CAAC,4MAE1E,6GACiBuI,GAAoB37F,KAAKk6F,OAAQl6F,KAAKozF,QnDkxVzC,WmDlxV+D,CAAC,8MAE9E,6GACiBuI,GAAoB37F,KAAKk6F,OAAQl6F,KAAKozF,QnDsxVnC,WmDtxV+D,CAAC,2MAEpF,6GACiBuI,GAAoB37F,KAAKk6F,OAAQl6F,KAAKozF,QnDy0W5C,WmDz0W+D,CAAC,4MAE3E,6GAEiBuI,GAAoB37F,KAAKk6F,OAAQl6F,KAAKozF,QnDm7V1C,WmDn7V+D,CAAC,gBADxC,0NAOrC,6GAIiB6G,GAAiBj6F,KAAKk6F,OAAQl6F,KAAKozF,QnDuwW9B,WmD1wWC,gBACD,yBACM,uBAC8F,2NAG1H,6GAKiB8H,GAAkBl7F,KAAKk6F,OAAQl6F,KAAKozF,QnD4uWjB,WmDhvWb,oBACD,kBACM,sBnDqzWjB,4NmDhzWX,6GAKiB8H,GAAkBl7F,KAAKk6F,OAAQl6F,KAAKozF,QnDouWjB,WmDxuWb,oBACD,kBACM,iBnDuvVR,4NmD/uVnB,6GAIgB6G,GAAiBj6F,KAAKk6F,OAAQl6F,KAAKozF,QnDgvW/B,WmDnvWE,0BACD,wBACM,mOAO5B,6GAMiB8H,GAAkBl7F,KAAKk6F,OAAQl6F,KAAKozF,QnDqrWlC,UmD1rWI,iBACD,iBACM,enDkuVR,WAsjBT,6NmDlxWX,6GAMiB8H,GAAkBl7F,KAAKk6F,OAAQl6F,KAAKozF,QnD4qWlC,UmDjrWI,iBACD,iBACM,gBnDktVd,WAOM,2NmDntVpB,6GAMiB8H,GAAkBl7F,KAAKk6F,OAAQl6F,KAAKozF,QnDmqWlC,UmDxqWI,iBACD,iBACM,kBnD6vWlB,WApjBI,wJoDj3VL7rD,GAAuC,WACrC,wBACC,qBACA,yBACA,+BACA,sBACA,yBACF,yBACA,qBACA,mBACA,oBACC,8BACA,8BACA,iCACA,iCACA,oCACA,2BACA,qBACA,2BACA,kCACA,oBACA,6BACA,sCACA,0BACA,kCACA,4BACA,qCACA,mCACA,oBACA,wBACA,iCACA,gCACA,oBACA,oBACA,sBACA,sBACA,yCACA,uBACA,kCACA,8BACA,8BACA,4BACC,oCACA,6BACA,2CACA,2CACA,uBACA,qCACA,kCACA,gCACA,8BACA,kCACA,6BACA,8BACA,wCACA,8BACA,0BACA,qBACA,iCACA,4BACA,uCACA,6BACA,qBACA,kCACA,mCACA,oCACA,yBACA,4BACA,qBACA,qCACA,+BACA,2BACA,4BACA,0BACA,6BACA,wBACA,0BACA,6CACA,gCACA,6BACA,kCACA,qBACA,gCACA,+BACA,uBACA,iCACA,uBACA,oCACA,qBACA,2BACA,iCACA,wCACA,iCACA,oCACA,sBACA,+BACA,kCACA,iCACA,sBACA,wCACA,iCACA,2BACA,wBACA,uBACA,0CACA,8BACA,oBACA,4BACA,kCACA,4BACA,oCACA,iCACA,4BACA,2BACA,+BACA,4BACA,6BACA,kCACA,uBACA,kCACA,oCACA,uBACA,4BACA,wBACA,uBACA,uBACA,gCACA,2BACA,kCACA,4BACA,sBACA,6BACA,8BACA,4BACA,4BACA,yBACA,iCACA,WC9HHo0F,mBAAsBvB,wIAE/B,+GAES7lC,SAAWpjG,QAAQW,IAAI,iCACvByiG,SAAWpjG,QAAQW,IAAI,IAC5BX,QAAQsjC,KAAK,kCAER8/D,SAAWpjG,QAAQW,IAAI,uCACvByiG,SAAWpjG,QAAQsjC,KAAK,kCACOz0B,KAAK47H,+BAApCpB,aAAa,sBACbjmC,SAAWpjG,QA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"}