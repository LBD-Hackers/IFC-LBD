{"version":3,"file":"bundle.umd.min.js","sources":["../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/regenerator-runtime/runtime.js","../../node_modules/@babel/runtime/regenerator/index.js","../../b58644c0fa156bdc7173218adfc9ae","../../node_modules/rollup-plugin-node-globals/src/global.js","../../node_modules/process-es6/browser.js","../../7559c37f2a071653ad328b95ad7214","../../node_modules/buffer-es6/base64.js","../../node_modules/buffer-es6/ieee754.js","../../node_modules/buffer-es6/isArray.js","../../node_modules/buffer-es6/index.js","../../node_modules/web-ifc/web-ifc-api.js","../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../src/helpers/uri-builder.ts","../../src/helpers/path-search.ts","../../src/helpers/IfcTypesTree.ts","../../src/helpers/BaseDefinitions.ts","../../src/helpers/item-search.ts","../../src/helpers/class-assignment.ts","../../src/helpers/prefixes.ts","../../node_modules/rdf-data-factory/lib/BlankNode.js","../../node_modules/rdf-data-factory/lib/DefaultGraph.js","../../node_modules/rdf-data-factory/lib/NamedNode.js","../../node_modules/rdf-data-factory/lib/Literal.js","../../node_modules/rdf-data-factory/lib/Quad.js","../../node_modules/rdf-data-factory/lib/Variable.js","../../node_modules/rdf-data-factory/lib/DataFactory.js","../../node_modules/rdf-data-factory/index.js","../../src/helpers/communica-extension-functions.ts","../../src/helpers/unit-tools.ts","../../node_modules/comunica-geosparql/lib/bundles/bundle.umd.js","../../src/parsers/parser.ts","../../src/parsers/bot-parser.ts","../../src/helpers/IfcElementsMap.ts","../../src/parsers/product-parser.ts","../../src/helpers/character-decode.ts","../../src/helpers/IfcDatatypesMap.ts","../../src/parsers/property-parser.ts","../../src/helpers/object-placement.ts","../../src/parsers/fso-parser.ts","../../src/parsers/tso-parser.ts","../../src/index.ts"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = require(\"regenerator-runtime\");\n","export default '/Users/mads/Documents/Development/LBD/IFC-LBD/node_modules/web-ifc/web-ifc-api.js'","export default (typeof global !== \"undefined\" ? global :\n            typeof self !== \"undefined\" ? self :\n            typeof window !== \"undefined\" ? window : {});\n","// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nexport function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nexport var title = 'browser';\nexport var platform = 'browser';\nexport var browser = true;\nexport var env = {};\nexport var argv = [];\nexport var version = ''; // empty string to avoid regexp issues\nexport var versions = {};\nexport var release = {};\nexport var config = {};\n\nfunction noop() {}\n\nexport var on = noop;\nexport var addListener = noop;\nexport var once = noop;\nexport var off = noop;\nexport var removeListener = noop;\nexport var removeAllListeners = noop;\nexport var emit = noop;\n\nexport function binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nexport function cwd () { return '/' }\nexport function chdir (dir) {\n    throw new Error('process.chdir is not supported');\n};\nexport function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nexport function hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3\n  var seconds = Math.floor(clocktime)\n  var nanoseconds = Math.floor((clocktime%1)*1e9)\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0]\n    nanoseconds = nanoseconds - previousTimestamp[1]\n    if (nanoseconds<0) {\n      seconds--\n      nanoseconds += 1e9\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nexport function uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nexport default {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n","export default '/Users/mads/Documents/Development/LBD/IFC-LBD/node_modules/web-ifc'","\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i]\n    revLookup[code.charCodeAt(i)] = i\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62\n  revLookup['_'.charCodeAt(0)] = 63\n}\n\nexport function toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nexport function fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","\nexport function read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexport function write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nexport default Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\nimport * as base64 from './base64'\nimport * as ieee754 from './ieee754'\nimport isArray from './isArray'\n\nexport var INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength()\nexport {_kMaxLength as kMaxLength};\nfunction typedArraySupport () {\n  return true;\n  // rollup issues\n  // try {\n  //   var arr = new Uint8Array(1)\n  //   arr.__proto__ = {\n  //     __proto__: Uint8Array.prototype,\n  //     foo: function () { return 42 }\n  //   }\n  //   return arr.foo() === 42 && // typed array instances can be augmented\n  //       typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n  //       arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  // } catch (e) {\n  //   return false\n  // }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    // Object.defineProperty(Buffer, Symbol.species, {\n    //   value: null,\n    //   configurable: true\n    // })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nexport function SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nexport function isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __require = (x) => {\n  if (typeof require !== \"undefined\")\n    return require(x);\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\n};\nvar __commonJS = (cb, mod) => function __require2() {\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\n};\nvar __async = (__this, __arguments, generator) => {\n  return new Promise((resolve, reject) => {\n    var fulfilled = (value) => {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var rejected = (value) => {\n      try {\n        step(generator.throw(value));\n      } catch (e) {\n        reject(e);\n      }\n    };\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n    step((generator = generator.apply(__this, __arguments)).next());\n  });\n};\n\n// (disabled):crypto\nvar require_crypto = __commonJS({\n  \"(disabled):crypto\"() {\n  }\n});\n\n// dist/web-ifc-mt.js\nvar require_web_ifc_mt = __commonJS({\n  \"dist/web-ifc-mt.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        function GROWABLE_HEAP_I8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP8;\n        }\n        function GROWABLE_HEAP_U8() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU8;\n        }\n        function GROWABLE_HEAP_I16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP16;\n        }\n        function GROWABLE_HEAP_U16() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU16;\n        }\n        function GROWABLE_HEAP_I32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAP32;\n        }\n        function GROWABLE_HEAP_U32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPU32;\n        }\n        function GROWABLE_HEAP_F32() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF32;\n        }\n        function GROWABLE_HEAP_F64() {\n          if (wasmMemory.buffer != buffer) {\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n          }\n          return HEAPF64;\n        }\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var ENVIRONMENT_IS_PTHREAD = Module[\"ENVIRONMENT_IS_PTHREAD\"] || false;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          buffer = Module[\"buffer\"];\n        }\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n          var nodeWorkerThreads;\n          try {\n            nodeWorkerThreads = __require(\"worker_threads\");\n          } catch (e) {\n            console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?');\n            throw e;\n          }\n          global.Worker = nodeWorkerThreads.Worker;\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          if (ENVIRONMENT_IS_NODE) {\n            read_ = function shell_read(filename, binary) {\n              if (!nodeFS)\n                nodeFS = __require(\"fs\");\n              if (!nodePath)\n                nodePath = __require(\"path\");\n              filename = nodePath[\"normalize\"](filename);\n              return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n            };\n            readBinary = function readBinary2(filename) {\n              var ret = read_(filename, true);\n              if (!ret.buffer) {\n                ret = new Uint8Array(ret);\n              }\n              assert(ret.buffer);\n              return ret;\n            };\n          } else {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        if (ENVIRONMENT_IS_NODE) {\n          if (typeof performance === \"undefined\") {\n            global.performance = __require(\"perf_hooks\").performance;\n          }\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        function warnOnce(text) {\n          if (!warnOnce.shown)\n            warnOnce.shown = {};\n          if (!warnOnce.shown[text]) {\n            warnOnce.shown[text] = 1;\n            err(text);\n          }\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var Atomics_load = Atomics.load;\n        var Atomics_store = Atomics.store;\n        var Atomics_compareExchange = Atomics.compareExchange;\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var wasmModule;\n        var threadInfoStruct = 0;\n        var selfThreadId = 0;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var str = \"\";\n          while (!(idx >= endIdx)) {\n            var u0 = heap[idx++ >>> 0];\n            if (!u0)\n              return str;\n            if (!(u0 & 128)) {\n              str += String.fromCharCode(u0);\n              continue;\n            }\n            var u1 = heap[idx++ >>> 0] & 63;\n            if ((u0 & 224) == 192) {\n              str += String.fromCharCode((u0 & 31) << 6 | u1);\n              continue;\n            }\n            var u2 = heap[idx++ >>> 0] & 63;\n            if ((u0 & 240) == 224) {\n              u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n            } else {\n              u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n            }\n            if (u0 < 65536) {\n              str += String.fromCharCode(u0);\n            } else {\n              var ch = u0 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(GROWABLE_HEAP_U8(), ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, GROWABLE_HEAP_U8(), outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var str = \"\";\n          for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n            var codeUnit = GROWABLE_HEAP_I16()[ptr + i * 2 >> 1];\n            if (codeUnit == 0)\n              break;\n            str += String.fromCharCode(codeUnit);\n          }\n          return str;\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            GROWABLE_HEAP_I16()[outPtr >> 1] = codeUnit;\n            outPtr += 2;\n          }\n          GROWABLE_HEAP_I16()[outPtr >> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = GROWABLE_HEAP_I32()[ptr + i * 4 >> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            GROWABLE_HEAP_I32()[outPtr >> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          GROWABLE_HEAP_I32()[outPtr >> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          GROWABLE_HEAP_I8().set(array, buffer2);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            GROWABLE_HEAP_I8()[buffer2++ >> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            GROWABLE_HEAP_I8()[buffer2 >> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (ENVIRONMENT_IS_PTHREAD) {\n          wasmMemory = Module[\"wasmMemory\"];\n          buffer = Module[\"buffer\"];\n        } else {\n          if (Module[\"wasmMemory\"]) {\n            wasmMemory = Module[\"wasmMemory\"];\n          } else {\n            wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536, \"shared\": true });\n            if (!(wasmMemory.buffer instanceof SharedArrayBuffer)) {\n              err(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\");\n              if (ENVIRONMENT_IS_NODE) {\n                console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\");\n              }\n              throw Error(\"bad memory\");\n            }\n          }\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATEXIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        if (ENVIRONMENT_IS_PTHREAD)\n          runtimeInitialized = true;\n        function preRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return;\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          assert(!ENVIRONMENT_IS_PTHREAD, \"addRunDependency cannot be used in a pthread worker\");\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          if (ENVIRONMENT_IS_PTHREAD)\n            console.error(\"Pthread aborting at \" + new Error().stack);\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = \"web-ifc-mt.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"pa\"];\n            wasmModule = module2;\n            if (!ENVIRONMENT_IS_PTHREAD) {\n              var numWorkersToLoad = PThread.unusedWorkers.length;\n              PThread.unusedWorkers.forEach(function(w) {\n                PThread.loadWasmModuleToWorker(w, function() {\n                  if (!--numWorkersToLoad)\n                    removeRunDependency(\"wasm-instantiate\");\n                });\n              });\n            }\n          }\n          if (!ENVIRONMENT_IS_PTHREAD) {\n            addRunDependency(\"wasm-instantiate\");\n          }\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"], output[\"module\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        var ASM_CONSTS = { 41793: function($0, $1) {\n          setTimeout(function() {\n            _do_emscripten_dispatch_to_thread($0, $1);\n          }, 0);\n        }, 41871: function() {\n          throw \"Canceled!\";\n        } };\n        function initPthreadsJS() {\n          PThread.initRuntime();\n        }\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        Module[\"dynCall\"] = dynCall;\n        var __pthread_ptr = 0;\n        var __pthread_is_main_runtime_thread = 0;\n        var __pthread_is_main_browser_thread = 0;\n        function registerPthreadPtr(pthreadPtr, isMainBrowserThread, isMainRuntimeThread) {\n          pthreadPtr = pthreadPtr | 0;\n          isMainBrowserThread = isMainBrowserThread | 0;\n          isMainRuntimeThread = isMainRuntimeThread | 0;\n          __pthread_ptr = pthreadPtr;\n          __pthread_is_main_browser_thread = isMainBrowserThread;\n          __pthread_is_main_runtime_thread = isMainRuntimeThread;\n        }\n        Module[\"registerPthreadPtr\"] = registerPthreadPtr;\n        var ERRNO_CODES = { EPERM: 63, ENOENT: 44, ESRCH: 71, EINTR: 27, EIO: 29, ENXIO: 60, E2BIG: 1, ENOEXEC: 45, EBADF: 8, ECHILD: 12, EAGAIN: 6, EWOULDBLOCK: 6, ENOMEM: 48, EACCES: 2, EFAULT: 21, ENOTBLK: 105, EBUSY: 10, EEXIST: 20, EXDEV: 75, ENODEV: 43, ENOTDIR: 54, EISDIR: 31, EINVAL: 28, ENFILE: 41, EMFILE: 33, ENOTTY: 59, ETXTBSY: 74, EFBIG: 22, ENOSPC: 51, ESPIPE: 70, EROFS: 69, EMLINK: 34, EPIPE: 64, EDOM: 18, ERANGE: 68, ENOMSG: 49, EIDRM: 24, ECHRNG: 106, EL2NSYNC: 156, EL3HLT: 107, EL3RST: 108, ELNRNG: 109, EUNATCH: 110, ENOCSI: 111, EL2HLT: 112, EDEADLK: 16, ENOLCK: 46, EBADE: 113, EBADR: 114, EXFULL: 115, ENOANO: 104, EBADRQC: 103, EBADSLT: 102, EDEADLOCK: 16, EBFONT: 101, ENOSTR: 100, ENODATA: 116, ETIME: 117, ENOSR: 118, ENONET: 119, ENOPKG: 120, EREMOTE: 121, ENOLINK: 47, EADV: 122, ESRMNT: 123, ECOMM: 124, EPROTO: 65, EMULTIHOP: 36, EDOTDOT: 125, EBADMSG: 9, ENOTUNIQ: 126, EBADFD: 127, EREMCHG: 128, ELIBACC: 129, ELIBBAD: 130, ELIBSCN: 131, ELIBMAX: 132, ELIBEXEC: 133, ENOSYS: 52, ENOTEMPTY: 55, ENAMETOOLONG: 37, ELOOP: 32, EOPNOTSUPP: 138, EPFNOSUPPORT: 139, ECONNRESET: 15, ENOBUFS: 42, EAFNOSUPPORT: 5, EPROTOTYPE: 67, ENOTSOCK: 57, ENOPROTOOPT: 50, ESHUTDOWN: 140, ECONNREFUSED: 14, EADDRINUSE: 3, ECONNABORTED: 13, ENETUNREACH: 40, ENETDOWN: 38, ETIMEDOUT: 73, EHOSTDOWN: 142, EHOSTUNREACH: 23, EINPROGRESS: 26, EALREADY: 7, EDESTADDRREQ: 17, EMSGSIZE: 35, EPROTONOSUPPORT: 66, ESOCKTNOSUPPORT: 137, EADDRNOTAVAIL: 4, ENETRESET: 39, EISCONN: 30, ENOTCONN: 53, ETOOMANYREFS: 141, EUSERS: 136, EDQUOT: 19, ESTALE: 72, ENOTSUP: 138, ENOMEDIUM: 148, EILSEQ: 25, EOVERFLOW: 61, ECANCELED: 11, ENOTRECOVERABLE: 56, EOWNERDEAD: 62, ESTRPIPE: 135 };\n        function _emscripten_futex_wake(addr, count) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true || count < 0)\n            return -28;\n          if (count == 0)\n            return 0;\n          if (count >= 2147483647)\n            count = Infinity;\n          var mainThreadWaitAddress = Atomics.load(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2);\n          var mainThreadWoken = 0;\n          if (mainThreadWaitAddress == addr) {\n            var loadedAddr = Atomics.compareExchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, mainThreadWaitAddress, 0);\n            if (loadedAddr == mainThreadWaitAddress) {\n              --count;\n              mainThreadWoken = 1;\n              if (count <= 0)\n                return 1;\n            }\n          }\n          var ret = Atomics.notify(GROWABLE_HEAP_I32(), addr >> 2, count);\n          if (ret >= 0)\n            return ret + mainThreadWoken;\n          throw \"Atomics.notify returned an unexpected value \" + ret;\n        }\n        Module[\"_emscripten_futex_wake\"] = _emscripten_futex_wake;\n        function killThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! killThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in killThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.terminate();\n          PThread.freeThreadData(pthread);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(pthread.worker), 1);\n          pthread.worker.pthread = void 0;\n        }\n        function cancelThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cancelThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cancelThread!\";\n          var pthread = PThread.pthreads[pthread_ptr];\n          pthread.worker.postMessage({ \"cmd\": \"cancel\" });\n        }\n        function cleanupThread(pthread_ptr) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! cleanupThread() can only ever be called from main application thread!\";\n          if (!pthread_ptr)\n            throw \"Internal Error! Null pthread_ptr in cleanupThread!\";\n          GROWABLE_HEAP_I32()[pthread_ptr + 12 >> 2] = 0;\n          var pthread = PThread.pthreads[pthread_ptr];\n          if (pthread) {\n            var worker = pthread.worker;\n            PThread.returnWorkerToPool(worker);\n          }\n        }\n        var PThread = { MAIN_THREAD_ID: 1, mainThreadInfo: { schedPolicy: 0, schedPrio: 0 }, unusedWorkers: [], runningWorkers: [], initMainThreadBlock: function() {\n          var pthreadPoolSize = navigator.hardwareConcurrency;\n          for (var i = 0; i < pthreadPoolSize; ++i) {\n            PThread.allocateUnusedWorker();\n          }\n        }, initRuntime: function() {\n          PThread.mainThreadBlock = _malloc(232);\n          for (var i = 0; i < 232 / 4; ++i)\n            GROWABLE_HEAP_U32()[PThread.mainThreadBlock / 4 + i] = 0;\n          GROWABLE_HEAP_I32()[PThread.mainThreadBlock + 12 >> 2] = PThread.mainThreadBlock;\n          var headPtr = PThread.mainThreadBlock + 156;\n          GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;\n          var tlsMemory = _malloc(512);\n          for (var i = 0; i < 128; ++i)\n            GROWABLE_HEAP_U32()[tlsMemory / 4 + i] = 0;\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 104 >> 2, tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 40 >> 2, PThread.mainThreadBlock);\n          Atomics.store(GROWABLE_HEAP_U32(), PThread.mainThreadBlock + 44 >> 2, 42);\n          PThread.initShared();\n          registerPthreadPtr(PThread.mainThreadBlock, !ENVIRONMENT_IS_WORKER, 1);\n          _emscripten_register_main_browser_thread_id(PThread.mainThreadBlock);\n        }, initWorker: function() {\n          PThread.initShared();\n          readyPromiseResolve(Module);\n        }, initShared: function() {\n          PThread.mainThreadFutex = _main_thread_futex;\n        }, pthreads: {}, threadExitHandlers: [], setThreadStatus: function() {\n        }, runExitHandlers: function() {\n          while (PThread.threadExitHandlers.length > 0) {\n            PThread.threadExitHandlers.pop()();\n          }\n          if (ENVIRONMENT_IS_PTHREAD && threadInfoStruct)\n            ___pthread_tsd_run_dtors();\n        }, threadExit: function(exitCode) {\n          var tb = _pthread_self();\n          if (tb) {\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 4 >> 2, exitCode);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 0 >> 2, 1);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 60 >> 2, 1);\n            Atomics.store(GROWABLE_HEAP_U32(), tb + 64 >> 2, 0);\n            PThread.runExitHandlers();\n            _emscripten_futex_wake(tb + 0, 2147483647);\n            registerPthreadPtr(0, 0, 0);\n            threadInfoStruct = 0;\n            if (ENVIRONMENT_IS_PTHREAD) {\n              postMessage({ \"cmd\": \"exit\" });\n            }\n          }\n        }, threadCancel: function() {\n          PThread.runExitHandlers();\n          Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 4 >> 2, -1);\n          Atomics.store(GROWABLE_HEAP_U32(), threadInfoStruct + 0 >> 2, 1);\n          _emscripten_futex_wake(threadInfoStruct + 0, 2147483647);\n          threadInfoStruct = selfThreadId = 0;\n          registerPthreadPtr(0, 0, 0);\n          postMessage({ \"cmd\": \"cancelDone\" });\n        }, terminateAllThreads: function() {\n          for (var t in PThread.pthreads) {\n            var pthread = PThread.pthreads[t];\n            if (pthread && pthread.worker) {\n              PThread.returnWorkerToPool(pthread.worker);\n            }\n          }\n          PThread.pthreads = {};\n          for (var i = 0; i < PThread.unusedWorkers.length; ++i) {\n            var worker = PThread.unusedWorkers[i];\n            worker.terminate();\n          }\n          PThread.unusedWorkers = [];\n          for (var i = 0; i < PThread.runningWorkers.length; ++i) {\n            var worker = PThread.runningWorkers[i];\n            var pthread = worker.pthread;\n            PThread.freeThreadData(pthread);\n            worker.terminate();\n          }\n          PThread.runningWorkers = [];\n        }, freeThreadData: function(pthread) {\n          if (!pthread)\n            return;\n          if (pthread.threadInfoStruct) {\n            var tlsMemory = GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2];\n            GROWABLE_HEAP_I32()[pthread.threadInfoStruct + 104 >> 2] = 0;\n            _free(tlsMemory);\n            _free(pthread.threadInfoStruct);\n          }\n          pthread.threadInfoStruct = 0;\n          if (pthread.allocatedOwnStack && pthread.stackBase)\n            _free(pthread.stackBase);\n          pthread.stackBase = 0;\n          if (pthread.worker)\n            pthread.worker.pthread = null;\n        }, returnWorkerToPool: function(worker) {\n          delete PThread.pthreads[worker.pthread.thread];\n          PThread.unusedWorkers.push(worker);\n          PThread.runningWorkers.splice(PThread.runningWorkers.indexOf(worker), 1);\n          PThread.freeThreadData(worker.pthread);\n          worker.pthread = void 0;\n        }, receiveObjectTransfer: function(data) {\n        }, loadWasmModuleToWorker: function(worker, onFinishedLoading) {\n          worker.onmessage = function(e) {\n            var d = e[\"data\"];\n            var cmd = d[\"cmd\"];\n            if (worker.pthread)\n              PThread.currentProxiedOperationCallerThread = worker.pthread.threadInfoStruct;\n            if (d[\"targetThread\"] && d[\"targetThread\"] != _pthread_self()) {\n              var thread = PThread.pthreads[d.targetThread];\n              if (thread) {\n                thread.worker.postMessage(e.data, d[\"transferList\"]);\n              } else {\n                console.error('Internal error! Worker sent a message \"' + cmd + '\" to target pthread ' + d[\"targetThread\"] + \", but that thread no longer exists!\");\n              }\n              PThread.currentProxiedOperationCallerThread = void 0;\n              return;\n            }\n            if (cmd === \"processQueuedMainThreadWork\") {\n              _emscripten_main_thread_process_queued_calls();\n            } else if (cmd === \"spawnThread\") {\n              spawnThread(e.data);\n            } else if (cmd === \"cleanupThread\") {\n              cleanupThread(d[\"thread\"]);\n            } else if (cmd === \"killThread\") {\n              killThread(d[\"thread\"]);\n            } else if (cmd === \"cancelThread\") {\n              cancelThread(d[\"thread\"]);\n            } else if (cmd === \"loaded\") {\n              worker.loaded = true;\n              if (onFinishedLoading)\n                onFinishedLoading(worker);\n              if (worker.runPthread) {\n                worker.runPthread();\n                delete worker.runPthread;\n              }\n            } else if (cmd === \"print\") {\n              out(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"printErr\") {\n              err(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"alert\") {\n              alert(\"Thread \" + d[\"threadId\"] + \": \" + d[\"text\"]);\n            } else if (cmd === \"exit\") {\n              var detached = worker.pthread && Atomics.load(GROWABLE_HEAP_U32(), worker.pthread.thread + 68 >> 2);\n              if (detached) {\n                PThread.returnWorkerToPool(worker);\n              }\n            } else if (cmd === \"cancelDone\") {\n              PThread.returnWorkerToPool(worker);\n            } else if (cmd === \"objectTransfer\") {\n              PThread.receiveObjectTransfer(e.data);\n            } else if (e.data.target === \"setimmediate\") {\n              worker.postMessage(e.data);\n            } else {\n              err(\"worker sent an unknown command \" + cmd);\n            }\n            PThread.currentProxiedOperationCallerThread = void 0;\n          };\n          worker.onerror = function(e) {\n            err(\"pthread sent an error! \" + e.filename + \":\" + e.lineno + \": \" + e.message);\n          };\n          if (ENVIRONMENT_IS_NODE) {\n            worker.on(\"message\", function(data) {\n              worker.onmessage({ data });\n            });\n            worker.on(\"error\", function(data) {\n              worker.onerror(data);\n            });\n            worker.on(\"exit\", function(data) {\n            });\n          }\n          worker.postMessage({ \"cmd\": \"load\", \"urlOrBlob\": Module[\"mainScriptUrlOrBlob\"] || _scriptDir, \"wasmMemory\": wasmMemory, \"wasmModule\": wasmModule });\n        }, allocateUnusedWorker: function() {\n          var pthreadMainJs = locateFile(\"web-ifc-mt.worker.js\");\n          PThread.unusedWorkers.push(new Worker(pthreadMainJs));\n        }, getNewWorker: function() {\n          if (PThread.unusedWorkers.length == 0) {\n            PThread.allocateUnusedWorker();\n            PThread.loadWasmModuleToWorker(PThread.unusedWorkers[0]);\n          }\n          if (PThread.unusedWorkers.length > 0)\n            return PThread.unusedWorkers.pop();\n          else\n            return null;\n        }, busySpinWait: function(msecs) {\n          var t = performance.now() + msecs;\n          while (performance.now() < t) {\n          }\n        } };\n        function establishStackSpace(stackTop, stackMax) {\n          _emscripten_stack_set_limits(stackTop, stackMax);\n          stackRestore(stackTop);\n        }\n        Module[\"establishStackSpace\"] = establishStackSpace;\n        function getNoExitRuntime() {\n          return noExitRuntime;\n        }\n        Module[\"getNoExitRuntime\"] = getNoExitRuntime;\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (ENVIRONMENT_IS_PTHREAD) {\n          _emscripten_get_now = function() {\n            return performance.now() - Module[\"__performance_now_clock_drift\"];\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          GROWABLE_HEAP_I32()[___errno_location() >> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          GROWABLE_HEAP_I32()[tp >> 2] = now / 1e3 | 0;\n          GROWABLE_HEAP_I32()[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        var ExceptionInfoAttrs = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\n        }\n        function _atexit(func, arg) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(1, 1, func, arg);\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\n          this.set_type = function(type) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2] = type;\n          };\n          this.get_type = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2];\n          };\n          this.set_destructor = function(destructor) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2];\n          };\n          this.set_refcount = function(refcount) {\n            GROWABLE_HEAP_I32()[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] = caught;\n          };\n          this.get_caught = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return GROWABLE_HEAP_I8()[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            Atomics.add(GROWABLE_HEAP_I32(), this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2, 1);\n          };\n          this.release_ref = function() {\n            var prev = Atomics.sub(GROWABLE_HEAP_I32(), this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2, 1);\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            GROWABLE_HEAP_I8()[ptr + size++] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === GROWABLE_HEAP_I8().buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            GROWABLE_HEAP_I8().set(contents, ptr);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          GROWABLE_HEAP_I32()[buf >> 2] = stat.dev;\n          GROWABLE_HEAP_I32()[buf + 4 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 8 >> 2] = stat.ino;\n          GROWABLE_HEAP_I32()[buf + 12 >> 2] = stat.mode;\n          GROWABLE_HEAP_I32()[buf + 16 >> 2] = stat.nlink;\n          GROWABLE_HEAP_I32()[buf + 20 >> 2] = stat.uid;\n          GROWABLE_HEAP_I32()[buf + 24 >> 2] = stat.gid;\n          GROWABLE_HEAP_I32()[buf + 28 >> 2] = stat.rdev;\n          GROWABLE_HEAP_I32()[buf + 32 >> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 40 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 44 >> 2] = tempI64[1];\n          GROWABLE_HEAP_I32()[buf + 48 >> 2] = 4096;\n          GROWABLE_HEAP_I32()[buf + 52 >> 2] = stat.blocks;\n          GROWABLE_HEAP_I32()[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 60 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 68 >> 2] = 0;\n          GROWABLE_HEAP_I32()[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;\n          GROWABLE_HEAP_I32()[buf + 76 >> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[buf + 80 >> 2] = tempI64[0], GROWABLE_HEAP_I32()[buf + 84 >> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = GROWABLE_HEAP_U8().slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = GROWABLE_HEAP_I8()[buf + len];\n          stringToUTF8(ret, buf, bufsize + 1);\n          GROWABLE_HEAP_I8()[buf + len] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];\n            var curr = FS.read(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = GROWABLE_HEAP_I32()[iov + i * 8 >> 2];\n            var len = GROWABLE_HEAP_I32()[iov + (i * 8 + 4) >> 2];\n            var curr = FS.write(stream, GROWABLE_HEAP_I8(), ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = GROWABLE_HEAP_I32()[SYSCALLS.varargs - 4 >> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_ioctl(fd, op, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(2, 1, fd, op, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                GROWABLE_HEAP_I32()[argp >> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(3, 1, path, flags, varargs);\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](GROWABLE_HEAP_U32()[pointer >> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (GROWABLE_HEAP_U8()[c]) {\n            ret += embind_charCodes[GROWABLE_HEAP_U8()[c++]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = GROWABLE_HEAP_I8();\n            } else if (size === 2) {\n              heap = GROWABLE_HEAP_I16();\n            } else if (size === 4) {\n              heap = GROWABLE_HEAP_I32();\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(GROWABLE_HEAP_I32()[(firstElement >> 2) + i]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I8() : GROWABLE_HEAP_U8();\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I16() : GROWABLE_HEAP_U16();\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? GROWABLE_HEAP_I32() : GROWABLE_HEAP_U32();\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F32()[pointer >> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](GROWABLE_HEAP_F64()[pointer >> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return GROWABLE_HEAP_I8()[pointer];\n              } : function readU8FromPointer(pointer) {\n                return GROWABLE_HEAP_U8()[pointer];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return GROWABLE_HEAP_I16()[pointer >> 1];\n              } : function readU16FromPointer(pointer) {\n                return GROWABLE_HEAP_U16()[pointer >> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return GROWABLE_HEAP_I32()[pointer >> 2];\n              } : function readU32FromPointer(pointer) {\n                return GROWABLE_HEAP_U32()[pointer >> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = GROWABLE_HEAP_U32();\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || GROWABLE_HEAP_U8()[currentBytePtr] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(GROWABLE_HEAP_U8()[value + 4 + i]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  GROWABLE_HEAP_U8()[ptr + 4 + i] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  GROWABLE_HEAP_U8()[ptr + 4 + i] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return GROWABLE_HEAP_U16();\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return GROWABLE_HEAP_U32();\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = GROWABLE_HEAP_U32()[value >> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            GROWABLE_HEAP_U32()[ptr >> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function __emscripten_notify_thread_queue(targetThreadId, mainThreadId) {\n          if (targetThreadId == mainThreadId) {\n            postMessage({ \"cmd\": \"processQueuedMainThreadWork\" });\n          } else if (ENVIRONMENT_IS_PTHREAD) {\n            postMessage({ \"targetThread\": targetThreadId, \"cmd\": \"processThreadQueue\" });\n          } else {\n            var pthread = PThread.pthreads[targetThreadId];\n            var worker = pthread && pthread.worker;\n            if (!worker) {\n              return;\n            }\n            worker.postMessage({ \"cmd\": \"processThreadQueue\" });\n          }\n          return 1;\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          GROWABLE_HEAP_I32()[destructorsRef >> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(GROWABLE_HEAP_I32()[(argTypes >> 2) + i], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        function _emscripten_asm_const_int(code, sigPtr, argbuf) {\n          var args = readAsmConstArgs(sigPtr, argbuf);\n          return ASM_CONSTS[code].apply(null, args);\n        }\n        function _emscripten_check_blocking_allowed() {\n          if (ENVIRONMENT_IS_NODE)\n            return;\n          if (ENVIRONMENT_IS_WORKER)\n            return;\n          warnOnce(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\");\n        }\n        function _emscripten_conditional_set_current_thread_status(expectedStatus, newStatus) {\n          expectedStatus = expectedStatus | 0;\n          newStatus = newStatus | 0;\n        }\n        function _emscripten_futex_wait(addr, val, timeout) {\n          if (addr <= 0 || addr > GROWABLE_HEAP_I8().length || addr & true)\n            return -28;\n          if (!ENVIRONMENT_IS_WEB) {\n            var ret = Atomics.wait(GROWABLE_HEAP_I32(), addr >> 2, val, timeout);\n            if (ret === \"timed-out\")\n              return -73;\n            if (ret === \"not-equal\")\n              return -6;\n            if (ret === \"ok\")\n              return 0;\n            throw \"Atomics.wait returned an unexpected value \" + ret;\n          } else {\n            if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n              return -6;\n            }\n            var tNow = performance.now();\n            var tEnd = tNow + timeout;\n            var lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, addr);\n            while (1) {\n              tNow = performance.now();\n              if (tNow > tEnd) {\n                lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, 0);\n                return -73;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, 0);\n              if (lastAddr == 0) {\n                break;\n              }\n              _emscripten_main_thread_process_queued_calls();\n              if (Atomics.load(GROWABLE_HEAP_I32(), addr >> 2) != val) {\n                return -6;\n              }\n              lastAddr = Atomics.exchange(GROWABLE_HEAP_I32(), PThread.mainThreadFutex >> 2, addr);\n            }\n            return 0;\n          }\n        }\n        function _emscripten_is_main_browser_thread() {\n          return __pthread_is_main_browser_thread | 0;\n        }\n        function _emscripten_is_main_runtime_thread() {\n          return __pthread_is_main_runtime_thread | 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          GROWABLE_HEAP_U8().copyWithin(dest, src, src + num);\n        }\n        function _emscripten_proxy_to_main_thread_js(index, sync) {\n          var numCallArgs = arguments.length - 2;\n          var stack = stackSave();\n          var args = stackAlloc(numCallArgs * 8);\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            GROWABLE_HEAP_F64()[b + i] = arguments[2 + i];\n          }\n          var ret = _emscripten_run_in_main_runtime_thread_js(index, numCallArgs, args, sync);\n          stackRestore(stack);\n          return ret;\n        }\n        var _emscripten_receive_on_main_thread_js_callArgs = [];\n        var readAsmConstArgsArray = [];\n        function readAsmConstArgs(sigPtr, buf) {\n          readAsmConstArgsArray.length = 0;\n          var ch;\n          buf >>= 2;\n          while (ch = GROWABLE_HEAP_U8()[sigPtr++]) {\n            var double = ch < 105;\n            if (double && buf & 1)\n              buf++;\n            readAsmConstArgsArray.push(double ? GROWABLE_HEAP_F64()[buf++ >> 1] : GROWABLE_HEAP_I32()[buf]);\n            ++buf;\n          }\n          return readAsmConstArgsArray;\n        }\n        function _emscripten_receive_on_main_thread_js(index, numCallArgs, args) {\n          _emscripten_receive_on_main_thread_js_callArgs.length = numCallArgs;\n          var b = args >> 3;\n          for (var i = 0; i < numCallArgs; i++) {\n            _emscripten_receive_on_main_thread_js_callArgs[i] = GROWABLE_HEAP_F64()[b + i];\n          }\n          var isEmAsmConst = index < 0;\n          var func = !isEmAsmConst ? proxiedFunctionTable[index] : ASM_CONSTS[-index - 1];\n          return func.apply(null, _emscripten_receive_on_main_thread_js_callArgs);\n        }\n        function _emscripten_get_heap_size() {\n          return GROWABLE_HEAP_U8().length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          if (requestedSize <= oldSize) {\n            return false;\n          }\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var JSEvents = { inEventHandler: 0, removeAllEventListeners: function() {\n          for (var i = JSEvents.eventHandlers.length - 1; i >= 0; --i) {\n            JSEvents._removeHandler(i);\n          }\n          JSEvents.eventHandlers = [];\n          JSEvents.deferredCalls = [];\n        }, registerRemoveEventListeners: function() {\n          if (!JSEvents.removeEventListenersRegistered) {\n            __ATEXIT__.push(JSEvents.removeAllEventListeners);\n            JSEvents.removeEventListenersRegistered = true;\n          }\n        }, deferredCalls: [], deferCall: function(targetFunction, precedence, argsList) {\n          function arraysHaveEqualContent(arrA, arrB) {\n            if (arrA.length != arrB.length)\n              return false;\n            for (var i2 in arrA) {\n              if (arrA[i2] != arrB[i2])\n                return false;\n            }\n            return true;\n          }\n          for (var i in JSEvents.deferredCalls) {\n            var call = JSEvents.deferredCalls[i];\n            if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {\n              return;\n            }\n          }\n          JSEvents.deferredCalls.push({ targetFunction, precedence, argsList });\n          JSEvents.deferredCalls.sort(function(x, y) {\n            return x.precedence < y.precedence;\n          });\n        }, removeDeferredCalls: function(targetFunction) {\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {\n              JSEvents.deferredCalls.splice(i, 1);\n              --i;\n            }\n          }\n        }, canPerformEventHandlerRequests: function() {\n          return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;\n        }, runDeferredCalls: function() {\n          if (!JSEvents.canPerformEventHandlerRequests()) {\n            return;\n          }\n          for (var i = 0; i < JSEvents.deferredCalls.length; ++i) {\n            var call = JSEvents.deferredCalls[i];\n            JSEvents.deferredCalls.splice(i, 1);\n            --i;\n            call.targetFunction.apply(null, call.argsList);\n          }\n        }, eventHandlers: [], removeAllHandlersOnTarget: function(target, eventTypeString) {\n          for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n            if (JSEvents.eventHandlers[i].target == target && (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {\n              JSEvents._removeHandler(i--);\n            }\n          }\n        }, _removeHandler: function(i) {\n          var h = JSEvents.eventHandlers[i];\n          h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);\n          JSEvents.eventHandlers.splice(i, 1);\n        }, registerOrRemoveHandler: function(eventHandler) {\n          var jsEventHandler = function jsEventHandler2(event) {\n            ++JSEvents.inEventHandler;\n            JSEvents.currentEventHandler = eventHandler;\n            JSEvents.runDeferredCalls();\n            eventHandler.handlerFunc(event);\n            JSEvents.runDeferredCalls();\n            --JSEvents.inEventHandler;\n          };\n          if (eventHandler.callbackfunc) {\n            eventHandler.eventListenerFunc = jsEventHandler;\n            eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);\n            JSEvents.eventHandlers.push(eventHandler);\n            JSEvents.registerRemoveEventListeners();\n          } else {\n            for (var i = 0; i < JSEvents.eventHandlers.length; ++i) {\n              if (JSEvents.eventHandlers[i].target == eventHandler.target && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {\n                JSEvents._removeHandler(i--);\n              }\n            }\n          }\n        }, queueEventHandlerOnThread_iiii: function(targetThread, eventHandlerFunc, eventTypeId, eventData, userData) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          GROWABLE_HEAP_I32()[varargs >> 2] = eventTypeId;\n          GROWABLE_HEAP_I32()[varargs + 4 >> 2] = eventData;\n          GROWABLE_HEAP_I32()[varargs + 8 >> 2] = userData;\n          __emscripten_call_on_thread(0, targetThread, 637534208, eventHandlerFunc, eventData, varargs);\n          stackRestore(stackTop);\n        }, getTargetThreadForEventCallback: function(targetThread) {\n          switch (targetThread) {\n            case 1:\n              return 0;\n            case 2:\n              return PThread.currentProxiedOperationCallerThread;\n            default:\n              return targetThread;\n          }\n        }, getNodeNameForTarget: function(target) {\n          if (!target)\n            return \"\";\n          if (target == window)\n            return \"#window\";\n          if (target == screen)\n            return \"#screen\";\n          return target && target.nodeName ? target.nodeName : \"\";\n        }, fullscreenEnabled: function() {\n          return document.fullscreenEnabled || document.webkitFullscreenEnabled;\n        } };\n        function stringToNewUTF8(jsString) {\n          var length = lengthBytesUTF8(jsString) + 1;\n          var cString = _malloc(length);\n          stringToUTF8(jsString, cString, length);\n          return cString;\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height) {\n          var stackTop = stackSave();\n          var varargs = stackAlloc(12);\n          var targetCanvasPtr = 0;\n          if (targetCanvas) {\n            targetCanvasPtr = stringToNewUTF8(targetCanvas);\n          }\n          GROWABLE_HEAP_I32()[varargs >> 2] = targetCanvasPtr;\n          GROWABLE_HEAP_I32()[varargs + 4 >> 2] = width;\n          GROWABLE_HEAP_I32()[varargs + 8 >> 2] = height;\n          __emscripten_call_on_thread(0, targetThread, 657457152, 0, targetCanvasPtr, varargs);\n          stackRestore(stackTop);\n        }\n        function _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, targetCanvas, width, height) {\n          targetCanvas = targetCanvas ? UTF8ToString(targetCanvas) : \"\";\n          _emscripten_set_offscreencanvas_size_on_target_thread_js(targetThread, targetCanvas, width, height);\n        }\n        function maybeCStringToJsString(cString) {\n          return cString > 2 ? UTF8ToString(cString) : cString;\n        }\n        var specialHTMLTargets = [0, typeof document !== \"undefined\" ? document : 0, typeof window !== \"undefined\" ? window : 0];\n        function findEventTarget(target) {\n          target = maybeCStringToJsString(target);\n          var domElement = specialHTMLTargets[target] || (typeof document !== \"undefined\" ? document.querySelector(target) : void 0);\n          return domElement;\n        }\n        function findCanvasEventTarget(target) {\n          return findEventTarget(target);\n        }\n        function _emscripten_set_canvas_element_size_calling_thread(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas)\n            return -4;\n          if (canvas.canvasSharedPtr) {\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr >> 2] = width;\n            GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 4 >> 2] = height;\n          }\n          if (canvas.offscreenCanvas || !canvas.controlTransferredOffscreen) {\n            if (canvas.offscreenCanvas)\n              canvas = canvas.offscreenCanvas;\n            var autoResizeViewport = false;\n            if (canvas.GLctxObject && canvas.GLctxObject.GLctx) {\n              var prevViewport = canvas.GLctxObject.GLctx.getParameter(2978);\n              autoResizeViewport = prevViewport[0] === 0 && prevViewport[1] === 0 && prevViewport[2] === canvas.width && prevViewport[3] === canvas.height;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            if (autoResizeViewport) {\n              canvas.GLctxObject.GLctx.viewport(0, 0, width, height);\n            }\n          } else if (canvas.canvasSharedPtr) {\n            var targetThread = GROWABLE_HEAP_I32()[canvas.canvasSharedPtr + 8 >> 2];\n            _emscripten_set_offscreencanvas_size_on_target_thread(targetThread, target, width, height);\n            return 1;\n          } else {\n            return -4;\n          }\n          return 0;\n        }\n        function _emscripten_set_canvas_element_size_main_thread(target, width, height) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(4, 1, target, width, height);\n          return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n        }\n        function _emscripten_set_canvas_element_size(target, width, height) {\n          var canvas = findCanvasEventTarget(target);\n          if (canvas) {\n            return _emscripten_set_canvas_element_size_calling_thread(target, width, height);\n          } else {\n            return _emscripten_set_canvas_element_size_main_thread(target, width, height);\n          }\n        }\n        function _emscripten_set_current_thread_status(newStatus) {\n          newStatus = newStatus | 0;\n        }\n        function __webgl_enable_ANGLE_instanced_arrays(ctx) {\n          var ext = ctx.getExtension(\"ANGLE_instanced_arrays\");\n          if (ext) {\n            ctx[\"vertexAttribDivisor\"] = function(index, divisor) {\n              ext[\"vertexAttribDivisorANGLE\"](index, divisor);\n            };\n            ctx[\"drawArraysInstanced\"] = function(mode, first, count, primcount) {\n              ext[\"drawArraysInstancedANGLE\"](mode, first, count, primcount);\n            };\n            ctx[\"drawElementsInstanced\"] = function(mode, count, type, indices, primcount) {\n              ext[\"drawElementsInstancedANGLE\"](mode, count, type, indices, primcount);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_OES_vertex_array_object(ctx) {\n          var ext = ctx.getExtension(\"OES_vertex_array_object\");\n          if (ext) {\n            ctx[\"createVertexArray\"] = function() {\n              return ext[\"createVertexArrayOES\"]();\n            };\n            ctx[\"deleteVertexArray\"] = function(vao) {\n              ext[\"deleteVertexArrayOES\"](vao);\n            };\n            ctx[\"bindVertexArray\"] = function(vao) {\n              ext[\"bindVertexArrayOES\"](vao);\n            };\n            ctx[\"isVertexArray\"] = function(vao) {\n              return ext[\"isVertexArrayOES\"](vao);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_draw_buffers(ctx) {\n          var ext = ctx.getExtension(\"WEBGL_draw_buffers\");\n          if (ext) {\n            ctx[\"drawBuffers\"] = function(n, bufs) {\n              ext[\"drawBuffersWEBGL\"](n, bufs);\n            };\n            return 1;\n          }\n        }\n        function __webgl_enable_WEBGL_multi_draw(ctx) {\n          return !!(ctx.multiDrawWebgl = ctx.getExtension(\"WEBGL_multi_draw\"));\n        }\n        var GL = { counter: 1, buffers: [], programs: [], framebuffers: [], renderbuffers: [], textures: [], uniforms: [], shaders: [], vaos: [], contexts: {}, offscreenCanvases: {}, timerQueriesEXT: [], programInfos: {}, stringCache: {}, unpackAlignment: 4, recordError: function recordError(errorCode) {\n          if (!GL.lastError) {\n            GL.lastError = errorCode;\n          }\n        }, getNewId: function(table) {\n          var ret = GL.counter++;\n          for (var i = table.length; i < ret; i++) {\n            table[i] = null;\n          }\n          return ret;\n        }, getSource: function(shader, count, string, length) {\n          var source = \"\";\n          for (var i = 0; i < count; ++i) {\n            var len = length ? GROWABLE_HEAP_I32()[length + i * 4 >> 2] : -1;\n            source += UTF8ToString(GROWABLE_HEAP_I32()[string + i * 4 >> 2], len < 0 ? void 0 : len);\n          }\n          return source;\n        }, createContext: function(canvas, webGLContextAttributes) {\n          var ctx = canvas.getContext(\"webgl\", webGLContextAttributes);\n          if (!ctx)\n            return 0;\n          var handle = GL.registerContext(ctx, webGLContextAttributes);\n          return handle;\n        }, registerContext: function(ctx, webGLContextAttributes) {\n          var handle = _malloc(8);\n          GROWABLE_HEAP_I32()[handle + 4 >> 2] = _pthread_self();\n          var context = { handle, attributes: webGLContextAttributes, version: webGLContextAttributes.majorVersion, GLctx: ctx };\n          if (ctx.canvas)\n            ctx.canvas.GLctxObject = context;\n          GL.contexts[handle] = context;\n          if (typeof webGLContextAttributes.enableExtensionsByDefault === \"undefined\" || webGLContextAttributes.enableExtensionsByDefault) {\n            GL.initExtensions(context);\n          }\n          return handle;\n        }, makeContextCurrent: function(contextHandle) {\n          GL.currentContext = GL.contexts[contextHandle];\n          Module.ctx = GLctx = GL.currentContext && GL.currentContext.GLctx;\n          return !(contextHandle && !GLctx);\n        }, getContext: function(contextHandle) {\n          return GL.contexts[contextHandle];\n        }, deleteContext: function(contextHandle) {\n          if (GL.currentContext === GL.contexts[contextHandle])\n            GL.currentContext = null;\n          if (typeof JSEvents === \"object\")\n            JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas);\n          if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas)\n            GL.contexts[contextHandle].GLctx.canvas.GLctxObject = void 0;\n          _free(GL.contexts[contextHandle].handle);\n          GL.contexts[contextHandle] = null;\n        }, initExtensions: function(context) {\n          if (!context)\n            context = GL.currentContext;\n          if (context.initExtensionsDone)\n            return;\n          context.initExtensionsDone = true;\n          var GLctx2 = context.GLctx;\n          __webgl_enable_ANGLE_instanced_arrays(GLctx2);\n          __webgl_enable_OES_vertex_array_object(GLctx2);\n          __webgl_enable_WEBGL_draw_buffers(GLctx2);\n          GLctx2.disjointTimerQueryExt = GLctx2.getExtension(\"EXT_disjoint_timer_query\");\n          __webgl_enable_WEBGL_multi_draw(GLctx2);\n          var automaticallyEnabledExtensions = [\"OES_texture_float\", \"OES_texture_half_float\", \"OES_standard_derivatives\", \"OES_vertex_array_object\", \"WEBGL_compressed_texture_s3tc\", \"WEBGL_depth_texture\", \"OES_element_index_uint\", \"EXT_texture_filter_anisotropic\", \"EXT_frag_depth\", \"WEBGL_draw_buffers\", \"ANGLE_instanced_arrays\", \"OES_texture_float_linear\", \"OES_texture_half_float_linear\", \"EXT_blend_minmax\", \"EXT_shader_texture_lod\", \"EXT_texture_norm16\", \"WEBGL_compressed_texture_pvrtc\", \"EXT_color_buffer_half_float\", \"WEBGL_color_buffer_float\", \"EXT_sRGB\", \"WEBGL_compressed_texture_etc1\", \"EXT_disjoint_timer_query\", \"WEBGL_compressed_texture_etc\", \"WEBGL_compressed_texture_astc\", \"EXT_color_buffer_float\", \"WEBGL_compressed_texture_s3tc_srgb\", \"EXT_disjoint_timer_query_webgl2\", \"WEBKIT_WEBGL_compressed_texture_pvrtc\"];\n          var exts = GLctx2.getSupportedExtensions() || [];\n          exts.forEach(function(ext) {\n            if (automaticallyEnabledExtensions.indexOf(ext) != -1) {\n              GLctx2.getExtension(ext);\n            }\n          });\n        }, populateUniformTable: function(program) {\n          var p = GL.programs[program];\n          var ptable = GL.programInfos[program] = { uniforms: {}, maxUniformLength: 0, maxAttributeLength: -1, maxUniformBlockNameLength: -1 };\n          var utable = ptable.uniforms;\n          var numUniforms = GLctx.getProgramParameter(p, 35718);\n          for (var i = 0; i < numUniforms; ++i) {\n            var u = GLctx.getActiveUniform(p, i);\n            var name2 = u.name;\n            ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name2.length + 1);\n            if (name2.slice(-1) == \"]\") {\n              name2 = name2.slice(0, name2.lastIndexOf(\"[\"));\n            }\n            var loc = GLctx.getUniformLocation(p, name2);\n            if (loc) {\n              var id = GL.getNewId(GL.uniforms);\n              utable[name2] = [u.size, id];\n              GL.uniforms[id] = loc;\n              for (var j = 1; j < u.size; ++j) {\n                var n = name2 + \"[\" + j + \"]\";\n                loc = GLctx.getUniformLocation(p, n);\n                id = GL.getNewId(GL.uniforms);\n                GL.uniforms[id] = loc;\n              }\n            }\n          }\n        } };\n        var __emscripten_webgl_power_preferences = [\"default\", \"low-power\", \"high-performance\"];\n        function _emscripten_webgl_do_create_context(target, attributes) {\n          var a = attributes >> 2;\n          var powerPreference = GROWABLE_HEAP_I32()[a + (24 >> 2)];\n          var contextAttributes = { \"alpha\": !!GROWABLE_HEAP_I32()[a + (0 >> 2)], \"depth\": !!GROWABLE_HEAP_I32()[a + (4 >> 2)], \"stencil\": !!GROWABLE_HEAP_I32()[a + (8 >> 2)], \"antialias\": !!GROWABLE_HEAP_I32()[a + (12 >> 2)], \"premultipliedAlpha\": !!GROWABLE_HEAP_I32()[a + (16 >> 2)], \"preserveDrawingBuffer\": !!GROWABLE_HEAP_I32()[a + (20 >> 2)], \"powerPreference\": __emscripten_webgl_power_preferences[powerPreference], \"failIfMajorPerformanceCaveat\": !!GROWABLE_HEAP_I32()[a + (28 >> 2)], majorVersion: GROWABLE_HEAP_I32()[a + (32 >> 2)], minorVersion: GROWABLE_HEAP_I32()[a + (36 >> 2)], enableExtensionsByDefault: GROWABLE_HEAP_I32()[a + (40 >> 2)], explicitSwapControl: GROWABLE_HEAP_I32()[a + (44 >> 2)], proxyContextToMainThread: GROWABLE_HEAP_I32()[a + (48 >> 2)], renderViaOffscreenBackBuffer: GROWABLE_HEAP_I32()[a + (52 >> 2)] };\n          var canvas = findCanvasEventTarget(target);\n          if (!canvas) {\n            return 0;\n          }\n          if (contextAttributes.explicitSwapControl) {\n            return 0;\n          }\n          var contextHandle = GL.createContext(canvas, contextAttributes);\n          return contextHandle;\n        }\n        function _emscripten_webgl_create_context(a0, a1) {\n          return _emscripten_webgl_do_create_context(a0, a1);\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(5, 1, __environ, environ_buf);\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              GROWABLE_HEAP_I32()[__environ + i * 4 >> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(6, 1, penviron_count, penviron_buf_size);\n          try {\n            var strings = getEnvStrings();\n            GROWABLE_HEAP_I32()[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            GROWABLE_HEAP_I32()[penviron_buf_size >> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(7, 1, fd);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(8, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(9, 1, fd, offset_low, offset_high, whence, newOffset);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], GROWABLE_HEAP_I32()[newOffset >> 2] = tempI64[0], GROWABLE_HEAP_I32()[newOffset + 4 >> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            return _emscripten_proxy_to_main_thread_js(10, 1, fd, iov, iovcnt, pnum);\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            GROWABLE_HEAP_I32()[pnum >> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _pthread_cleanup_push(routine, arg) {\n          PThread.threadExitHandlers.push(function() {\n            wasmTable.get(routine)(arg);\n          });\n        }\n        function spawnThread(threadParams) {\n          if (ENVIRONMENT_IS_PTHREAD)\n            throw \"Internal Error! spawnThread() can only ever be called from main application thread!\";\n          var worker = PThread.getNewWorker();\n          if (worker.pthread !== void 0)\n            throw \"Internal error!\";\n          if (!threadParams.pthread_ptr)\n            throw \"Internal error, no pthread ptr!\";\n          PThread.runningWorkers.push(worker);\n          var tlsMemory = _malloc(128 * 4);\n          for (var i = 0; i < 128; ++i) {\n            GROWABLE_HEAP_I32()[tlsMemory + i * 4 >> 2] = 0;\n          }\n          var stackHigh = threadParams.stackBase + threadParams.stackSize;\n          var pthread = PThread.pthreads[threadParams.pthread_ptr] = { worker, stackBase: threadParams.stackBase, stackSize: threadParams.stackSize, allocatedOwnStack: threadParams.allocatedOwnStack, thread: threadParams.pthread_ptr, threadInfoStruct: threadParams.pthread_ptr };\n          var tis = pthread.threadInfoStruct >> 2;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (0 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (4 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (8 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (68 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (104 >> 2), tlsMemory);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (48 >> 2), 0);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (40 >> 2), pthread.threadInfoStruct);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (44 >> 2), 42);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (84 >> 2), threadParams.stackSize);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (80 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 8 >> 2), stackHigh);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 12 >> 2), threadParams.detached);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 20 >> 2), threadParams.schedPolicy);\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (108 + 24 >> 2), threadParams.schedPrio);\n          var global_libc = _emscripten_get_global_libc();\n          var global_locale = global_libc + 40;\n          Atomics.store(GROWABLE_HEAP_U32(), tis + (176 >> 2), global_locale);\n          worker.pthread = pthread;\n          var msg = { \"cmd\": \"run\", \"start_routine\": threadParams.startRoutine, \"arg\": threadParams.arg, \"threadInfoStruct\": threadParams.pthread_ptr, \"selfThreadId\": threadParams.pthread_ptr, \"parentThreadId\": threadParams.parent_pthread_ptr, \"stackBase\": threadParams.stackBase, \"stackSize\": threadParams.stackSize };\n          worker.runPthread = function() {\n            msg.time = performance.now();\n            worker.postMessage(msg, threadParams.transferList);\n          };\n          if (worker.loaded) {\n            worker.runPthread();\n            delete worker.runPthread;\n          }\n        }\n        function _pthread_getschedparam(thread, policy, schedparam) {\n          if (!policy && !schedparam)\n            return ERRNO_CODES.EINVAL;\n          if (!thread) {\n            err(\"pthread_getschedparam called with a null thread pointer!\");\n            return ERRNO_CODES.ESRCH;\n          }\n          var self2 = GROWABLE_HEAP_I32()[thread + 12 >> 2];\n          if (self2 !== thread) {\n            err(\"pthread_getschedparam attempted on thread \" + thread + \", which does not point to a valid thread, or does not exist anymore!\");\n            return ERRNO_CODES.ESRCH;\n          }\n          var schedPolicy = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 20 >> 2);\n          var schedPrio = Atomics.load(GROWABLE_HEAP_U32(), thread + 108 + 24 >> 2);\n          if (policy)\n            GROWABLE_HEAP_I32()[policy >> 2] = schedPolicy;\n          if (schedparam)\n            GROWABLE_HEAP_I32()[schedparam >> 2] = schedPrio;\n          return 0;\n        }\n        function _pthread_self() {\n          return __pthread_ptr | 0;\n        }\n        Module[\"_pthread_self\"] = _pthread_self;\n        function _pthread_create(pthread_ptr, attr, start_routine, arg) {\n          if (typeof SharedArrayBuffer === \"undefined\") {\n            err(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\");\n            return 6;\n          }\n          if (!pthread_ptr) {\n            err(\"pthread_create called with a null thread pointer!\");\n            return 28;\n          }\n          var transferList = [];\n          var error = 0;\n          if (ENVIRONMENT_IS_PTHREAD && (transferList.length === 0 || error)) {\n            return _emscripten_sync_run_in_main_thread_4(687865856, pthread_ptr, attr, start_routine, arg);\n          }\n          if (error)\n            return error;\n          var stackSize = 0;\n          var stackBase = 0;\n          var detached = 0;\n          var schedPolicy = 0;\n          var schedPrio = 0;\n          if (attr) {\n            stackSize = GROWABLE_HEAP_I32()[attr >> 2];\n            stackSize += 81920;\n            stackBase = GROWABLE_HEAP_I32()[attr + 8 >> 2];\n            detached = GROWABLE_HEAP_I32()[attr + 12 >> 2] !== 0;\n            var inheritSched = GROWABLE_HEAP_I32()[attr + 16 >> 2] === 0;\n            if (inheritSched) {\n              var prevSchedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              var prevSchedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n              var parentThreadPtr = PThread.currentProxiedOperationCallerThread ? PThread.currentProxiedOperationCallerThread : _pthread_self();\n              _pthread_getschedparam(parentThreadPtr, attr + 20, attr + 24);\n              schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n              GROWABLE_HEAP_I32()[attr + 20 >> 2] = prevSchedPolicy;\n              GROWABLE_HEAP_I32()[attr + 24 >> 2] = prevSchedPrio;\n            } else {\n              schedPolicy = GROWABLE_HEAP_I32()[attr + 20 >> 2];\n              schedPrio = GROWABLE_HEAP_I32()[attr + 24 >> 2];\n            }\n          } else {\n            stackSize = 2097152;\n          }\n          var allocatedOwnStack = stackBase == 0;\n          if (allocatedOwnStack) {\n            stackBase = _memalign(16, stackSize);\n          } else {\n            stackBase -= stackSize;\n            assert(stackBase > 0);\n          }\n          var threadInfoStruct2 = _malloc(232);\n          for (var i = 0; i < 232 >> 2; ++i)\n            GROWABLE_HEAP_U32()[(threadInfoStruct2 >> 2) + i] = 0;\n          GROWABLE_HEAP_I32()[pthread_ptr >> 2] = threadInfoStruct2;\n          GROWABLE_HEAP_I32()[threadInfoStruct2 + 12 >> 2] = threadInfoStruct2;\n          var headPtr = threadInfoStruct2 + 156;\n          GROWABLE_HEAP_I32()[headPtr >> 2] = headPtr;\n          var threadParams = { stackBase, stackSize, allocatedOwnStack, schedPolicy, schedPrio, detached, startRoutine: start_routine, pthread_ptr: threadInfoStruct2, parent_pthread_ptr: _pthread_self(), arg, transferList };\n          if (ENVIRONMENT_IS_PTHREAD) {\n            threadParams.cmd = \"spawnThread\";\n            postMessage(threadParams, transferList);\n          } else {\n            spawnThread(threadParams);\n          }\n          return 0;\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = GROWABLE_HEAP_I32()[tm + 40 >> 2];\n          var date = { tm_sec: GROWABLE_HEAP_I32()[tm >> 2], tm_min: GROWABLE_HEAP_I32()[tm + 4 >> 2], tm_hour: GROWABLE_HEAP_I32()[tm + 8 >> 2], tm_mday: GROWABLE_HEAP_I32()[tm + 12 >> 2], tm_mon: GROWABLE_HEAP_I32()[tm + 16 >> 2], tm_year: GROWABLE_HEAP_I32()[tm + 20 >> 2], tm_wday: GROWABLE_HEAP_I32()[tm + 24 >> 2], tm_yday: GROWABLE_HEAP_I32()[tm + 28 >> 2], tm_isdst: GROWABLE_HEAP_I32()[tm + 32 >> 2], tm_gmtoff: GROWABLE_HEAP_I32()[tm + 36 >> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          PThread.initMainThreadBlock();\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        var GLctx;\n        var proxiedFunctionTable = [null, _atexit, ___sys_ioctl, ___sys_open, _emscripten_set_canvas_element_size_main_thread, _environ_get, _environ_sizes_get, _fd_close, _fd_read, _fd_seek, _fd_write];\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        if (!ENVIRONMENT_IS_PTHREAD)\n          __ATINIT__.push({ func: function() {\n            ___wasm_call_ctors();\n          } });\n        var asmLibraryArg = { \"p\": ___assert_fail, \"H\": ___cxa_allocate_exception, \"G\": ___cxa_throw, \"ha\": ___sys_ioctl, \"ia\": ___sys_open, \"na\": __embind_finalize_value_array, \"w\": __embind_finalize_value_object, \"ka\": __embind_register_bool, \"z\": __embind_register_class, \"y\": __embind_register_class_constructor, \"e\": __embind_register_class_function, \"ja\": __embind_register_emval, \"ma\": __embind_register_enum, \"E\": __embind_register_enum_value, \"N\": __embind_register_float, \"i\": __embind_register_function, \"u\": __embind_register_integer, \"q\": __embind_register_memory_view, \"O\": __embind_register_std_string, \"F\": __embind_register_std_wstring, \"oa\": __embind_register_value_array, \"l\": __embind_register_value_array_element, \"x\": __embind_register_value_object, \"h\": __embind_register_value_object_field, \"la\": __embind_register_void, \"$\": __emscripten_notify_thread_queue, \"s\": __emval_as, \"P\": __emval_call, \"b\": __emval_decref, \"Z\": __emval_get_global, \"t\": __emval_get_property, \"o\": __emval_incref, \"ba\": __emval_instanceof, \"Q\": __emval_is_number, \"I\": __emval_new_array, \"j\": __emval_new_cstring, \"A\": __emval_new_object, \"r\": __emval_run_destructors, \"m\": __emval_set_property, \"g\": __emval_take_value, \"K\": _abort, \"fa\": _clock_gettime, \"B\": _emscripten_asm_const_int, \"aa\": _emscripten_check_blocking_allowed, \"J\": _emscripten_conditional_set_current_thread_status, \"k\": _emscripten_futex_wait, \"n\": _emscripten_futex_wake, \"d\": _emscripten_get_now, \"D\": _emscripten_is_main_browser_thread, \"C\": _emscripten_is_main_runtime_thread, \"U\": _emscripten_memcpy_big, \"W\": _emscripten_receive_on_main_thread_js, \"v\": _emscripten_resize_heap, \"X\": _emscripten_set_canvas_element_size, \"f\": _emscripten_set_current_thread_status, \"Y\": _emscripten_webgl_create_context, \"da\": _environ_get, \"ea\": _environ_sizes_get, \"M\": _fd_close, \"ga\": _fd_read, \"R\": _fd_seek, \"L\": _fd_write, \"T\": initPthreadsJS, \"a\": wasmMemory || Module[\"wasmMemory\"], \"V\": _pthread_cleanup_push, \"_\": _pthread_create, \"c\": _pthread_self, \"S\": _setTempRet0, \"ca\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ta\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"va\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments);\n        };\n        var _emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = function() {\n          return (_emscripten_get_global_libc = Module[\"_emscripten_get_global_libc\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments);\n        };\n        var ___em_js__initPthreadsJS = Module[\"___em_js__initPthreadsJS\"] = function() {\n          return (___em_js__initPthreadsJS = Module[\"___em_js__initPthreadsJS\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments);\n        };\n        var stackSave = Module[\"stackSave\"] = function() {\n          return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"za\"]).apply(null, arguments);\n        };\n        var stackRestore = Module[\"stackRestore\"] = function() {\n          return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments);\n        };\n        var stackAlloc = Module[\"stackAlloc\"] = function() {\n          return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments);\n        };\n        var _emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = function() {\n          return (_emscripten_stack_set_limits = Module[\"_emscripten_stack_set_limits\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments);\n        };\n        var _memalign = Module[\"_memalign\"] = function() {\n          return (_memalign = Module[\"_memalign\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments);\n        };\n        var _emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = function() {\n          return (_emscripten_main_browser_thread_id = Module[\"_emscripten_main_browser_thread_id\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments);\n        };\n        var ___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = function() {\n          return (___pthread_tsd_run_dtors = Module[\"___pthread_tsd_run_dtors\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments);\n        };\n        var _emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = function() {\n          return (_emscripten_main_thread_process_queued_calls = Module[\"_emscripten_main_thread_process_queued_calls\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments);\n        };\n        var _emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = function() {\n          return (_emscripten_current_thread_process_queued_calls = Module[\"_emscripten_current_thread_process_queued_calls\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments);\n        };\n        var _emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = function() {\n          return (_emscripten_register_main_browser_thread_id = Module[\"_emscripten_register_main_browser_thread_id\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments);\n        };\n        var _do_emscripten_dispatch_to_thread = Module[\"_do_emscripten_dispatch_to_thread\"] = function() {\n          return (_do_emscripten_dispatch_to_thread = Module[\"_do_emscripten_dispatch_to_thread\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments);\n        };\n        var _emscripten_async_run_in_main_thread = Module[\"_emscripten_async_run_in_main_thread\"] = function() {\n          return (_emscripten_async_run_in_main_thread = Module[\"_emscripten_async_run_in_main_thread\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread = Module[\"_emscripten_sync_run_in_main_thread\"] = function() {\n          return (_emscripten_sync_run_in_main_thread = Module[\"_emscripten_sync_run_in_main_thread\"] = Module[\"asm\"][\"La\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_0 = Module[\"_emscripten_sync_run_in_main_thread_0\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_0 = Module[\"_emscripten_sync_run_in_main_thread_0\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_1 = Module[\"_emscripten_sync_run_in_main_thread_1\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_1 = Module[\"_emscripten_sync_run_in_main_thread_1\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_2 = Module[\"_emscripten_sync_run_in_main_thread_2\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_2 = Module[\"_emscripten_sync_run_in_main_thread_2\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_xprintf_varargs = Module[\"_emscripten_sync_run_in_main_thread_xprintf_varargs\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_xprintf_varargs = Module[\"_emscripten_sync_run_in_main_thread_xprintf_varargs\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_3 = Module[\"_emscripten_sync_run_in_main_thread_3\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_3 = Module[\"_emscripten_sync_run_in_main_thread_3\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_4 = Module[\"_emscripten_sync_run_in_main_thread_4\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_5 = Module[\"_emscripten_sync_run_in_main_thread_5\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_5 = Module[\"_emscripten_sync_run_in_main_thread_5\"] = Module[\"asm\"][\"Sa\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_6 = Module[\"_emscripten_sync_run_in_main_thread_6\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_6 = Module[\"_emscripten_sync_run_in_main_thread_6\"] = Module[\"asm\"][\"Ta\"]).apply(null, arguments);\n        };\n        var _emscripten_sync_run_in_main_thread_7 = Module[\"_emscripten_sync_run_in_main_thread_7\"] = function() {\n          return (_emscripten_sync_run_in_main_thread_7 = Module[\"_emscripten_sync_run_in_main_thread_7\"] = Module[\"asm\"][\"Ua\"]).apply(null, arguments);\n        };\n        var _emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = function() {\n          return (_emscripten_run_in_main_runtime_thread_js = Module[\"_emscripten_run_in_main_runtime_thread_js\"] = Module[\"asm\"][\"Va\"]).apply(null, arguments);\n        };\n        var __emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = function() {\n          return (__emscripten_call_on_thread = Module[\"__emscripten_call_on_thread\"] = Module[\"asm\"][\"Wa\"]).apply(null, arguments);\n        };\n        var _emscripten_tls_init = Module[\"_emscripten_tls_init\"] = function() {\n          return (_emscripten_tls_init = Module[\"_emscripten_tls_init\"] = Module[\"asm\"][\"Xa\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"Ya\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"Za\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"_a\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"$a\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"ab\"]).apply(null, arguments);\n        };\n        var _main_thread_futex = Module[\"_main_thread_futex\"] = 51928;\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        Module[\"PThread\"] = PThread;\n        Module[\"PThread\"] = PThread;\n        Module[\"_pthread_self\"] = _pthread_self;\n        Module[\"wasmMemory\"] = wasmMemory;\n        Module[\"ExitStatus\"] = ExitStatus;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            PThread.terminateAllThreads();\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        if (!ENVIRONMENT_IS_PTHREAD)\n          noExitRuntime = true;\n        if (!ENVIRONMENT_IS_PTHREAD) {\n          run();\n        } else {\n          PThread.initWorker();\n        }\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/web-ifc.js\nvar require_web_ifc = __commonJS({\n  \"dist/web-ifc.js\"(exports, module) {\n    var WebIFCWasm2 = function() {\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\n      if (typeof __filename !== \"undefined\")\n        _scriptDir = _scriptDir || __filename;\n      return function(WebIFCWasm3) {\n        WebIFCWasm3 = WebIFCWasm3 || {};\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n          readyPromiseResolve = resolve;\n          readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for (key in Module) {\n          if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n          }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n          throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = false;\n        var ENVIRONMENT_IS_WORKER = false;\n        var ENVIRONMENT_IS_NODE = false;\n        var ENVIRONMENT_IS_SHELL = false;\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n          if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n          }\n          return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        var nodeFS;\n        var nodePath;\n        if (ENVIRONMENT_IS_NODE) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\n          } else {\n            scriptDirectory = __dirname + \"/\";\n          }\n          read_ = function shell_read(filename, binary) {\n            if (!nodeFS)\n              nodeFS = __require(\"fs\");\n            if (!nodePath)\n              nodePath = __require(\"path\");\n            filename = nodePath[\"normalize\"](filename);\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n          };\n          readBinary = function readBinary2(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n              ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n          };\n          if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n          }\n          arguments_ = process[\"argv\"].slice(2);\n          process[\"on\"](\"uncaughtException\", function(ex) {\n            if (!(ex instanceof ExitStatus)) {\n              throw ex;\n            }\n          });\n          process[\"on\"](\"unhandledRejection\", abort);\n          quit_ = function(status) {\n            process[\"exit\"](status);\n          };\n          Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n          };\n        } else if (ENVIRONMENT_IS_SHELL) {\n          if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n              return read(f);\n            };\n          }\n          readBinary = function readBinary2(f) {\n            var data;\n            if (typeof readbuffer === \"function\") {\n              return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n          };\n          if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n          } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n          }\n          if (typeof quit === \"function\") {\n            quit_ = function(status) {\n              quit(status);\n            };\n          }\n          if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\")\n              console = {};\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n          }\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n          if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n          }\n          if (_scriptDir) {\n            scriptDirectory = _scriptDir;\n          }\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n          } else {\n            scriptDirectory = \"\";\n          }\n          {\n            read_ = function shell_read(url) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, false);\n              xhr.send(null);\n              return xhr.responseText;\n            };\n            if (ENVIRONMENT_IS_WORKER) {\n              readBinary = function readBinary2(url) {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.responseType = \"arraybuffer\";\n                xhr.send(null);\n                return new Uint8Array(xhr.response);\n              };\n            }\n            readAsync = function readAsync2(url, onload, onerror) {\n              var xhr = new XMLHttpRequest();\n              xhr.open(\"GET\", url, true);\n              xhr.responseType = \"arraybuffer\";\n              xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                  onload(xhr.response);\n                  return;\n                }\n                onerror();\n              };\n              xhr.onerror = onerror;\n              xhr.send(null);\n            };\n          }\n          setWindowTitle = function(title) {\n            document.title = title;\n          };\n        } else {\n        }\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for (key in moduleOverrides) {\n          if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n          }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"])\n          arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"])\n          thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"])\n          quit_ = Module[\"quit\"];\n        var STACK_ALIGN = 16;\n        function alignMemory(size, factor) {\n          if (!factor)\n            factor = STACK_ALIGN;\n          return Math.ceil(size / factor) * factor;\n        }\n        var tempRet0 = 0;\n        var setTempRet0 = function(value) {\n          tempRet0 = value;\n        };\n        var wasmBinary;\n        if (Module[\"wasmBinary\"])\n          wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime;\n        if (Module[\"noExitRuntime\"])\n          noExitRuntime = Module[\"noExitRuntime\"];\n        if (typeof WebAssembly !== \"object\") {\n          abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS = 0;\n        function assert(condition, text) {\n          if (!condition) {\n            abort(\"Assertion failed: \" + text);\n          }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n          idx >>>= 0;\n          var endIdx = idx + maxBytesToRead;\n          var endPtr = idx;\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\n            ++endPtr;\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            while (idx < endPtr) {\n              var u0 = heap[idx++ >>> 0];\n              if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n              }\n              var u1 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 224) == 192) {\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\n                continue;\n              }\n              var u2 = heap[idx++ >>> 0] & 63;\n              if ((u0 & 240) == 224) {\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n              } else {\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\n              }\n              if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n              } else {\n                var ch = u0 - 65536;\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n              }\n            }\n          }\n          return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n          ptr >>>= 0;\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n          outIdx >>>= 0;\n          if (!(maxBytesToWrite > 0))\n            return 0;\n          var startIdx = outIdx;\n          var endIdx = outIdx + maxBytesToWrite - 1;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n              var u1 = str.charCodeAt(++i);\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n              if (outIdx >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = u;\n            } else if (u <= 2047) {\n              if (outIdx + 1 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else if (u <= 65535) {\n              if (outIdx + 2 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            } else {\n              if (outIdx + 3 >= endIdx)\n                break;\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\n              heap[outIdx++ >>> 0] = 128 | u & 63;\n            }\n          }\n          heap[outIdx >>> 0] = 0;\n          return outIdx - startIdx;\n        }\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n        }\n        function lengthBytesUTF8(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343)\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n            if (u <= 127)\n              ++len;\n            else if (u <= 2047)\n              len += 2;\n            else if (u <= 65535)\n              len += 3;\n            else\n              len += 4;\n          }\n          return len;\n        }\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\n        function UTF16ToString(ptr, maxBytesToRead) {\n          var endPtr = ptr;\n          var idx = endPtr >> 1;\n          var maxIdx = idx + maxBytesToRead / 2;\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\n            ++idx;\n          endPtr = idx << 1;\n          if (endPtr - ptr > 32 && UTF16Decoder) {\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\n          } else {\n            var str = \"\";\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\n              if (codeUnit == 0)\n                break;\n              str += String.fromCharCode(codeUnit);\n            }\n            return str;\n          }\n        }\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 2)\n            return 0;\n          maxBytesToWrite -= 2;\n          var startPtr = outPtr;\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n          for (var i = 0; i < numCharsToWrite; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            HEAP16[outPtr >>> 1] = codeUnit;\n            outPtr += 2;\n          }\n          HEAP16[outPtr >>> 1] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF16(str) {\n          return str.length * 2;\n        }\n        function UTF32ToString(ptr, maxBytesToRead) {\n          var i = 0;\n          var str = \"\";\n          while (!(i >= maxBytesToRead / 4)) {\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\n            if (utf32 == 0)\n              break;\n            ++i;\n            if (utf32 >= 65536) {\n              var ch = utf32 - 65536;\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n            } else {\n              str += String.fromCharCode(utf32);\n            }\n          }\n          return str;\n        }\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\n          outPtr >>>= 0;\n          if (maxBytesToWrite === void 0) {\n            maxBytesToWrite = 2147483647;\n          }\n          if (maxBytesToWrite < 4)\n            return 0;\n          var startPtr = outPtr;\n          var endPtr = startPtr + maxBytesToWrite - 4;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\n              var trailSurrogate = str.charCodeAt(++i);\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n            }\n            HEAP32[outPtr >>> 2] = codeUnit;\n            outPtr += 4;\n            if (outPtr + 4 > endPtr)\n              break;\n          }\n          HEAP32[outPtr >>> 2] = 0;\n          return outPtr - startPtr;\n        }\n        function lengthBytesUTF32(str) {\n          var len = 0;\n          for (var i = 0; i < str.length; ++i) {\n            var codeUnit = str.charCodeAt(i);\n            if (codeUnit >= 55296 && codeUnit <= 57343)\n              ++i;\n            len += 4;\n          }\n          return len;\n        }\n        function writeArrayToMemory(array, buffer2) {\n          HEAP8.set(array, buffer2 >>> 0);\n        }\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\n          for (var i = 0; i < str.length; ++i) {\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\n          }\n          if (!dontAddNull)\n            HEAP8[buffer2 >>> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n          if (x % multiple > 0) {\n            x += multiple - x % multiple;\n          }\n          return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n          buffer = buf;\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        if (Module[\"wasmMemory\"]) {\n          wasmMemory = Module[\"wasmMemory\"];\n        } else {\n          wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536 });\n        }\n        if (wasmMemory) {\n          buffer = wasmMemory.buffer;\n        }\n        INITIAL_MEMORY = buffer.byteLength;\n        updateGlobalBufferAndViews(buffer);\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATMAIN__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        var runtimeExited = false;\n        function preRun() {\n          if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\")\n              Module[\"preRun\"] = [Module[\"preRun\"]];\n            while (Module[\"preRun\"].length) {\n              addOnPreRun(Module[\"preRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n          runtimeInitialized = true;\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\n            FS.init();\n          TTY.init();\n          callRuntimeCallbacks(__ATINIT__);\n        }\n        function preMain() {\n          FS.ignorePermissions = false;\n          callRuntimeCallbacks(__ATMAIN__);\n        }\n        function exitRuntime() {\n          runtimeExited = true;\n        }\n        function postRun() {\n          if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\")\n              Module[\"postRun\"] = [Module[\"postRun\"]];\n            while (Module[\"postRun\"].length) {\n              addOnPostRun(Module[\"postRun\"].shift());\n            }\n          }\n          callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n          __ATPRERUN__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n          __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function getUniqueRunDependency(id) {\n          return id;\n        }\n        function addRunDependency(id) {\n          runDependencies++;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n        }\n        function removeRunDependency(id) {\n          runDependencies--;\n          if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n          }\n          if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n              var callback = dependenciesFulfilled;\n              dependenciesFulfilled = null;\n              callback();\n            }\n          }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n          if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n          }\n          what += \"\";\n          err(what);\n          ABORT = true;\n          EXITSTATUS = 1;\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n          var e = new WebAssembly.RuntimeError(what);\n          readyPromiseReject(e);\n          throw e;\n        }\n        function hasPrefix(str, prefix) {\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n          return hasPrefix(filename, dataURIPrefix);\n        }\n        var fileURIPrefix = \"file://\";\n        function isFileURI(filename) {\n          return hasPrefix(filename, fileURIPrefix);\n        }\n        var wasmBinaryFile = \"web-ifc.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n          wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary() {\n          try {\n            if (wasmBinary) {\n              return new Uint8Array(wasmBinary);\n            }\n            if (readBinary) {\n              return readBinary(wasmBinaryFile);\n            } else {\n              throw \"both async and sync fetching of the wasm failed\";\n            }\n          } catch (err2) {\n            abort(err2);\n          }\n        }\n        function getBinaryPromise() {\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n              if (!response[\"ok\"]) {\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n              }\n              return response[\"arrayBuffer\"]();\n            }).catch(function() {\n              return getBinary();\n            });\n          }\n          return Promise.resolve().then(getBinary);\n        }\n        function createWasm() {\n          var info = { \"a\": asmLibraryArg };\n          function receiveInstance(instance, module2) {\n            var exports3 = instance.exports;\n            Module[\"asm\"] = exports3;\n            wasmTable = Module[\"asm\"][\"ba\"];\n            removeRunDependency(\"wasm-instantiate\");\n          }\n          addRunDependency(\"wasm-instantiate\");\n          function receiveInstantiatedSource(output) {\n            receiveInstance(output[\"instance\"]);\n          }\n          function instantiateArrayBuffer(receiver) {\n            return getBinaryPromise().then(function(binary) {\n              return WebAssembly.instantiate(binary, info);\n            }).then(receiver, function(reason) {\n              err(\"failed to asynchronously prepare wasm: \" + reason);\n              abort(reason);\n            });\n          }\n          function instantiateAsync() {\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\n                var result = WebAssembly.instantiateStreaming(response, info);\n                return result.then(receiveInstantiatedSource, function(reason) {\n                  err(\"wasm streaming compile failed: \" + reason);\n                  err(\"falling back to ArrayBuffer instantiation\");\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\n                });\n              });\n            } else {\n              return instantiateArrayBuffer(receiveInstantiatedSource);\n            }\n          }\n          if (Module[\"instantiateWasm\"]) {\n            try {\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\n              return exports2;\n            } catch (e) {\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\n              return false;\n            }\n          }\n          instantiateAsync().catch(readyPromiseReject);\n          return {};\n        }\n        var tempDouble;\n        var tempI64;\n        function callRuntimeCallbacks(callbacks) {\n          while (callbacks.length > 0) {\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n              callback(Module);\n              continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n              if (callback.arg === void 0) {\n                wasmTable.get(func)();\n              } else {\n                wasmTable.get(func)(callback.arg);\n              }\n            } else {\n              func(callback.arg === void 0 ? null : callback.arg);\n            }\n          }\n        }\n        function dynCallLegacy(sig, ptr, args) {\n          if (args && args.length) {\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\n          }\n          return Module[\"dynCall_\" + sig].call(null, ptr);\n        }\n        function dynCall(sig, ptr, args) {\n          if (sig.indexOf(\"j\") != -1) {\n            return dynCallLegacy(sig, ptr, args);\n          }\n          return wasmTable.get(ptr).apply(null, args);\n        }\n        function ___assert_fail(condition, filename, line, func) {\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\n        }\n        var ExceptionInfoAttrs = { DESTRUCTOR_OFFSET: 0, REFCOUNT_OFFSET: 4, TYPE_OFFSET: 8, CAUGHT_OFFSET: 12, RETHROWN_OFFSET: 13, SIZE: 16 };\n        function ___cxa_allocate_exception(size) {\n          return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\n        }\n        function ExceptionInfo(excPtr) {\n          this.excPtr = excPtr;\n          this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\n          this.set_type = function(type) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >>> 2] = type;\n          };\n          this.get_type = function() {\n            return HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >>> 2];\n          };\n          this.set_destructor = function(destructor) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >>> 2] = destructor;\n          };\n          this.get_destructor = function() {\n            return HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >>> 2];\n          };\n          this.set_refcount = function(refcount) {\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = refcount;\n          };\n          this.set_caught = function(caught) {\n            caught = caught ? 1 : 0;\n            HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >>> 0] = caught;\n          };\n          this.get_caught = function() {\n            return HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >>> 0] != 0;\n          };\n          this.set_rethrown = function(rethrown) {\n            rethrown = rethrown ? 1 : 0;\n            HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >>> 0] = rethrown;\n          };\n          this.get_rethrown = function() {\n            return HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >>> 0] != 0;\n          };\n          this.init = function(type, destructor) {\n            this.set_type(type);\n            this.set_destructor(destructor);\n            this.set_refcount(0);\n            this.set_caught(false);\n            this.set_rethrown(false);\n          };\n          this.add_ref = function() {\n            var value = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2];\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = value + 1;\n          };\n          this.release_ref = function() {\n            var prev = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2];\n            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >>> 2] = prev - 1;\n            return prev === 1;\n          };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n          var info = new ExceptionInfo(ptr);\n          info.init(type, destructor);\n          exceptionLast = ptr;\n          uncaughtExceptionCount++;\n          throw ptr;\n        }\n        var PATH = { splitPath: function(filename) {\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n          return splitPathRe.exec(filename).slice(1);\n        }, normalizeArray: function(parts, allowAboveRoot) {\n          var up = 0;\n          for (var i = parts.length - 1; i >= 0; i--) {\n            var last = parts[i];\n            if (last === \".\") {\n              parts.splice(i, 1);\n            } else if (last === \"..\") {\n              parts.splice(i, 1);\n              up++;\n            } else if (up) {\n              parts.splice(i, 1);\n              up--;\n            }\n          }\n          if (allowAboveRoot) {\n            for (; up; up--) {\n              parts.unshift(\"..\");\n            }\n          }\n          return parts;\n        }, normalize: function(path) {\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !isAbsolute).join(\"/\");\n          if (!path && !isAbsolute) {\n            path = \".\";\n          }\n          if (path && trailingSlash) {\n            path += \"/\";\n          }\n          return (isAbsolute ? \"/\" : \"\") + path;\n        }, dirname: function(path) {\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\n          if (!root && !dir) {\n            return \".\";\n          }\n          if (dir) {\n            dir = dir.substr(0, dir.length - 1);\n          }\n          return root + dir;\n        }, basename: function(path) {\n          if (path === \"/\")\n            return \"/\";\n          path = PATH.normalize(path);\n          path = path.replace(/\\/$/, \"\");\n          var lastSlash = path.lastIndexOf(\"/\");\n          if (lastSlash === -1)\n            return path;\n          return path.substr(lastSlash + 1);\n        }, extname: function(path) {\n          return PATH.splitPath(path)[3];\n        }, join: function() {\n          var paths = Array.prototype.slice.call(arguments, 0);\n          return PATH.normalize(paths.join(\"/\"));\n        }, join2: function(l, r) {\n          return PATH.normalize(l + \"/\" + r);\n        } };\n        function getRandomDevice() {\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\n            var randomBuffer = new Uint8Array(1);\n            return function() {\n              crypto.getRandomValues(randomBuffer);\n              return randomBuffer[0];\n            };\n          } else if (ENVIRONMENT_IS_NODE) {\n            try {\n              var crypto_module = require_crypto();\n              return function() {\n                return crypto_module[\"randomBytes\"](1)[0];\n              };\n            } catch (e) {\n            }\n          }\n          return function() {\n            abort(\"randomDevice\");\n          };\n        }\n        var PATH_FS = { resolve: function() {\n          var resolvedPath = \"\", resolvedAbsolute = false;\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            var path = i >= 0 ? arguments[i] : FS.cwd();\n            if (typeof path !== \"string\") {\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\n            } else if (!path) {\n              return \"\";\n            }\n            resolvedPath = path + \"/\" + resolvedPath;\n            resolvedAbsolute = path.charAt(0) === \"/\";\n          }\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\n            return !!p;\n          }), !resolvedAbsolute).join(\"/\");\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\n        }, relative: function(from, to) {\n          from = PATH_FS.resolve(from).substr(1);\n          to = PATH_FS.resolve(to).substr(1);\n          function trim(arr) {\n            var start = 0;\n            for (; start < arr.length; start++) {\n              if (arr[start] !== \"\")\n                break;\n            }\n            var end = arr.length - 1;\n            for (; end >= 0; end--) {\n              if (arr[end] !== \"\")\n                break;\n            }\n            if (start > end)\n              return [];\n            return arr.slice(start, end - start + 1);\n          }\n          var fromParts = trim(from.split(\"/\"));\n          var toParts = trim(to.split(\"/\"));\n          var length = Math.min(fromParts.length, toParts.length);\n          var samePartsLength = length;\n          for (var i = 0; i < length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n              samePartsLength = i;\n              break;\n            }\n          }\n          var outputParts = [];\n          for (var i = samePartsLength; i < fromParts.length; i++) {\n            outputParts.push(\"..\");\n          }\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\n          return outputParts.join(\"/\");\n        } };\n        var TTY = { ttys: [], init: function() {\n        }, shutdown: function() {\n        }, register: function(dev, ops) {\n          TTY.ttys[dev] = { input: [], output: [], ops };\n          FS.registerDevice(dev, TTY.stream_ops);\n        }, stream_ops: { open: function(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        }, close: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, flush: function(stream) {\n          stream.tty.ops.flush(stream.tty);\n        }, read: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === void 0 && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === void 0)\n              break;\n            bytesRead++;\n            buffer2[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        } }, default_tty_ops: { get_char: function(tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (ENVIRONMENT_IS_NODE) {\n              var BUFSIZE = 256;\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\n              var bytesRead = 0;\n              try {\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\n              } catch (e) {\n                if (e.toString().indexOf(\"EOF\") != -1)\n                  bytesRead = 0;\n                else\n                  throw e;\n              }\n              if (bytesRead > 0) {\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\n              } else {\n                result = null;\n              }\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\n              result = window.prompt(\"Input: \");\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            } else if (typeof readline == \"function\") {\n              result = readline();\n              if (result !== null) {\n                result += \"\\n\";\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        }, put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } }, default_tty1_ops: { put_char: function(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0)\n              tty.output.push(val);\n          }\n        }, flush: function(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        } } };\n        function mmapAlloc(size) {\n          var alignedSize = alignMemory(size, 16384);\n          var ptr = _malloc(alignedSize);\n          while (size < alignedSize)\n            HEAP8[ptr + size++ >>> 0] = 0;\n          return ptr;\n        }\n        var MEMFS = { ops_table: null, mount: function(mount) {\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\n        }, createNode: function(parent, name2, mode, dev) {\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n            throw new FS.ErrnoError(63);\n          }\n          if (!MEMFS.ops_table) {\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\n          }\n          var node = FS.createNode(parent, name2, mode, dev);\n          if (FS.isDir(node.mode)) {\n            node.node_ops = MEMFS.ops_table.dir.node;\n            node.stream_ops = MEMFS.ops_table.dir.stream;\n            node.contents = {};\n          } else if (FS.isFile(node.mode)) {\n            node.node_ops = MEMFS.ops_table.file.node;\n            node.stream_ops = MEMFS.ops_table.file.stream;\n            node.usedBytes = 0;\n            node.contents = null;\n          } else if (FS.isLink(node.mode)) {\n            node.node_ops = MEMFS.ops_table.link.node;\n            node.stream_ops = MEMFS.ops_table.link.stream;\n          } else if (FS.isChrdev(node.mode)) {\n            node.node_ops = MEMFS.ops_table.chrdev.node;\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\n          }\n          node.timestamp = Date.now();\n          if (parent) {\n            parent.contents[name2] = node;\n          }\n          return node;\n        }, getFileDataAsRegularArray: function(node) {\n          if (node.contents && node.contents.subarray) {\n            var arr = [];\n            for (var i = 0; i < node.usedBytes; ++i)\n              arr.push(node.contents[i]);\n            return arr;\n          }\n          return node.contents;\n        }, getFileDataAsTypedArray: function(node) {\n          if (!node.contents)\n            return new Uint8Array(0);\n          if (node.contents.subarray)\n            return node.contents.subarray(0, node.usedBytes);\n          return new Uint8Array(node.contents);\n        }, expandFileStorage: function(node, newCapacity) {\n          newCapacity >>>= 0;\n          var prevCapacity = node.contents ? node.contents.length : 0;\n          if (prevCapacity >= newCapacity)\n            return;\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\n          if (prevCapacity != 0)\n            newCapacity = Math.max(newCapacity, 256);\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newCapacity);\n          if (node.usedBytes > 0)\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n          return;\n        }, resizeFileStorage: function(node, newSize) {\n          newSize >>>= 0;\n          if (node.usedBytes == newSize)\n            return;\n          if (newSize == 0) {\n            node.contents = null;\n            node.usedBytes = 0;\n            return;\n          }\n          if (!node.contents || node.contents.subarray) {\n            var oldContents = node.contents;\n            node.contents = new Uint8Array(newSize);\n            if (oldContents) {\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\n            }\n            node.usedBytes = newSize;\n            return;\n          }\n          if (!node.contents)\n            node.contents = [];\n          if (node.contents.length > newSize)\n            node.contents.length = newSize;\n          else\n            while (node.contents.length < newSize)\n              node.contents.push(0);\n          node.usedBytes = newSize;\n        }, node_ops: { getattr: function(node) {\n          var attr = {};\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        }, setattr: function(node, attr) {\n          if (attr.mode !== void 0) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== void 0) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== void 0) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        }, lookup: function(parent, name2) {\n          throw FS.genericErrors[44];\n        }, mknod: function(parent, name2, mode, dev) {\n          return MEMFS.createNode(parent, name2, mode, dev);\n        }, rename: function(old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {\n            }\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          delete old_node.parent.contents[old_node.name];\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          old_node.parent = new_dir;\n        }, unlink: function(parent, name2) {\n          delete parent.contents[name2];\n        }, rmdir: function(parent, name2) {\n          var node = FS.lookupNode(parent, name2);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name2];\n        }, readdir: function(node) {\n          var entries = [\".\", \"..\"];\n          for (var key2 in node.contents) {\n            if (!node.contents.hasOwnProperty(key2)) {\n              continue;\n            }\n            entries.push(key2);\n          }\n          return entries;\n        }, symlink: function(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        }, readlink: function(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes)\n            return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer2.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer2[offset + i] = contents[position + i];\n          }\n          return size;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          if (buffer2.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n          if (!length)\n            return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer2.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer2.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer2.subarray) {\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer2[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        }, llseek: function(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        }, allocate: function(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          assert(address === 0);\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          if (!(flags & 2) && contents.buffer === buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(contents, position, position + length);\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            ptr >>>= 0;\n            HEAP8.set(contents, ptr >>> 0);\n          }\n          return { ptr, allocated };\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (mmapFlags & 2) {\n            return 0;\n          }\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\n          return 0;\n        } } };\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\n          path = PATH_FS.resolve(FS.cwd(), path);\n          opts = opts || {};\n          if (!path)\n            return { path: \"\", node: null };\n          var defaults = { follow_mount: true, recurse_count: 0 };\n          for (var key2 in defaults) {\n            if (opts[key2] === void 0) {\n              opts[key2] = defaults[key2];\n            }\n          }\n          if (opts.recurse_count > 8) {\n            throw new FS.ErrnoError(32);\n          }\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n            return !!p;\n          }), false);\n          var current = FS.root;\n          var current_path = \"/\";\n          for (var i = 0; i < parts.length; i++) {\n            var islast = i === parts.length - 1;\n            if (islast && opts.parent) {\n              break;\n            }\n            current = FS.lookupNode(current, parts[i]);\n            current_path = PATH.join2(current_path, parts[i]);\n            if (FS.isMountpoint(current)) {\n              if (!islast || islast && opts.follow_mount) {\n                current = current.mounted.root;\n              }\n            }\n            if (!islast || opts.follow) {\n              var count = 0;\n              while (FS.isLink(current.mode)) {\n                var link = FS.readlink(current_path);\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\n                current = lookup.node;\n                if (count++ > 40) {\n                  throw new FS.ErrnoError(32);\n                }\n              }\n            }\n          }\n          return { path: current_path, node: current };\n        }, getPath: function(node) {\n          var path;\n          while (true) {\n            if (FS.isRoot(node)) {\n              var mount = node.mount.mountpoint;\n              if (!path)\n                return mount;\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\n            }\n            path = path ? node.name + \"/\" + path : node.name;\n            node = node.parent;\n          }\n        }, hashName: function(parentid, name2) {\n          var hash = 0;\n          for (var i = 0; i < name2.length; i++) {\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\n          }\n          return (parentid + hash >>> 0) % FS.nameTable.length;\n        }, hashAddNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          node.name_next = FS.nameTable[hash];\n          FS.nameTable[hash] = node;\n        }, hashRemoveNode: function(node) {\n          var hash = FS.hashName(node.parent.id, node.name);\n          if (FS.nameTable[hash] === node) {\n            FS.nameTable[hash] = node.name_next;\n          } else {\n            var current = FS.nameTable[hash];\n            while (current) {\n              if (current.name_next === node) {\n                current.name_next = node.name_next;\n                break;\n              }\n              current = current.name_next;\n            }\n          }\n        }, lookupNode: function(parent, name2) {\n          var errCode = FS.mayLookup(parent);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode, parent);\n          }\n          var hash = FS.hashName(parent.id, name2);\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n            var nodeName = node.name;\n            if (node.parent.id === parent.id && nodeName === name2) {\n              return node;\n            }\n          }\n          return FS.lookup(parent, name2);\n        }, createNode: function(parent, name2, mode, rdev) {\n          var node = new FS.FSNode(parent, name2, mode, rdev);\n          FS.hashAddNode(node);\n          return node;\n        }, destroyNode: function(node) {\n          FS.hashRemoveNode(node);\n        }, isRoot: function(node) {\n          return node === node.parent;\n        }, isMountpoint: function(node) {\n          return !!node.mounted;\n        }, isFile: function(mode) {\n          return (mode & 61440) === 32768;\n        }, isDir: function(mode) {\n          return (mode & 61440) === 16384;\n        }, isLink: function(mode) {\n          return (mode & 61440) === 40960;\n        }, isChrdev: function(mode) {\n          return (mode & 61440) === 8192;\n        }, isBlkdev: function(mode) {\n          return (mode & 61440) === 24576;\n        }, isFIFO: function(mode) {\n          return (mode & 61440) === 4096;\n        }, isSocket: function(mode) {\n          return (mode & 49152) === 49152;\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\n          var flags = FS.flagModes[str];\n          if (typeof flags === \"undefined\") {\n            throw new Error(\"Unknown file open mode: \" + str);\n          }\n          return flags;\n        }, flagsToPermissionString: function(flag) {\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\n          if (flag & 512) {\n            perms += \"w\";\n          }\n          return perms;\n        }, nodePermissions: function(node, perms) {\n          if (FS.ignorePermissions) {\n            return 0;\n          }\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\n            return 2;\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\n            return 2;\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\n            return 2;\n          }\n          return 0;\n        }, mayLookup: function(dir) {\n          var errCode = FS.nodePermissions(dir, \"x\");\n          if (errCode)\n            return errCode;\n          if (!dir.node_ops.lookup)\n            return 2;\n          return 0;\n        }, mayCreate: function(dir, name2) {\n          try {\n            var node = FS.lookupNode(dir, name2);\n            return 20;\n          } catch (e) {\n          }\n          return FS.nodePermissions(dir, \"wx\");\n        }, mayDelete: function(dir, name2, isdir) {\n          var node;\n          try {\n            node = FS.lookupNode(dir, name2);\n          } catch (e) {\n            return e.errno;\n          }\n          var errCode = FS.nodePermissions(dir, \"wx\");\n          if (errCode) {\n            return errCode;\n          }\n          if (isdir) {\n            if (!FS.isDir(node.mode)) {\n              return 54;\n            }\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n              return 10;\n            }\n          } else {\n            if (FS.isDir(node.mode)) {\n              return 31;\n            }\n          }\n          return 0;\n        }, mayOpen: function(node, flags) {\n          if (!node) {\n            return 44;\n          }\n          if (FS.isLink(node.mode)) {\n            return 32;\n          } else if (FS.isDir(node.mode)) {\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\n              return 31;\n            }\n          }\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\n          fd_start = fd_start || 0;\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\n          for (var fd = fd_start; fd <= fd_end; fd++) {\n            if (!FS.streams[fd]) {\n              return fd;\n            }\n          }\n          throw new FS.ErrnoError(33);\n        }, getStream: function(fd) {\n          return FS.streams[fd];\n        }, createStream: function(stream, fd_start, fd_end) {\n          if (!FS.FSStream) {\n            FS.FSStream = function() {\n            };\n            FS.FSStream.prototype = { object: { get: function() {\n              return this.node;\n            }, set: function(val) {\n              this.node = val;\n            } }, isRead: { get: function() {\n              return (this.flags & 2097155) !== 1;\n            } }, isWrite: { get: function() {\n              return (this.flags & 2097155) !== 0;\n            } }, isAppend: { get: function() {\n              return this.flags & 1024;\n            } } };\n          }\n          var newStream = new FS.FSStream();\n          for (var p in stream) {\n            newStream[p] = stream[p];\n          }\n          stream = newStream;\n          var fd = FS.nextfd(fd_start, fd_end);\n          stream.fd = fd;\n          FS.streams[fd] = stream;\n          return stream;\n        }, closeStream: function(fd) {\n          FS.streams[fd] = null;\n        }, chrdev_stream_ops: { open: function(stream) {\n          var device = FS.getDevice(stream.node.rdev);\n          stream.stream_ops = device.stream_ops;\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        }, llseek: function() {\n          throw new FS.ErrnoError(70);\n        } }, major: function(dev) {\n          return dev >> 8;\n        }, minor: function(dev) {\n          return dev & 255;\n        }, makedev: function(ma, mi) {\n          return ma << 8 | mi;\n        }, registerDevice: function(dev, ops) {\n          FS.devices[dev] = { stream_ops: ops };\n        }, getDevice: function(dev) {\n          return FS.devices[dev];\n        }, getMounts: function(mount) {\n          var mounts = [];\n          var check = [mount];\n          while (check.length) {\n            var m = check.pop();\n            mounts.push(m);\n            check.push.apply(check, m.mounts);\n          }\n          return mounts;\n        }, syncfs: function(populate, callback) {\n          if (typeof populate === \"function\") {\n            callback = populate;\n            populate = false;\n          }\n          FS.syncFSRequests++;\n          if (FS.syncFSRequests > 1) {\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\n          }\n          var mounts = FS.getMounts(FS.root.mount);\n          var completed = 0;\n          function doCallback(errCode) {\n            FS.syncFSRequests--;\n            return callback(errCode);\n          }\n          function done(errCode) {\n            if (errCode) {\n              if (!done.errored) {\n                done.errored = true;\n                return doCallback(errCode);\n              }\n              return;\n            }\n            if (++completed >= mounts.length) {\n              doCallback(null);\n            }\n          }\n          mounts.forEach(function(mount) {\n            if (!mount.type.syncfs) {\n              return done(null);\n            }\n            mount.type.syncfs(mount, populate, done);\n          });\n        }, mount: function(type, opts, mountpoint) {\n          var root = mountpoint === \"/\";\n          var pseudo = !mountpoint;\n          var node;\n          if (root && FS.root) {\n            throw new FS.ErrnoError(10);\n          } else if (!root && !pseudo) {\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n            mountpoint = lookup.path;\n            node = lookup.node;\n            if (FS.isMountpoint(node)) {\n              throw new FS.ErrnoError(10);\n            }\n            if (!FS.isDir(node.mode)) {\n              throw new FS.ErrnoError(54);\n            }\n          }\n          var mount = { type, opts, mountpoint, mounts: [] };\n          var mountRoot = type.mount(mount);\n          mountRoot.mount = mount;\n          mount.root = mountRoot;\n          if (root) {\n            FS.root = mountRoot;\n          } else if (node) {\n            node.mounted = mount;\n            if (node.mount) {\n              node.mount.mounts.push(mount);\n            }\n          }\n          return mountRoot;\n        }, unmount: function(mountpoint) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n          if (!FS.isMountpoint(lookup.node)) {\n            throw new FS.ErrnoError(28);\n          }\n          var node = lookup.node;\n          var mount = node.mounted;\n          var mounts = FS.getMounts(mount);\n          Object.keys(FS.nameTable).forEach(function(hash) {\n            var current = FS.nameTable[hash];\n            while (current) {\n              var next = current.name_next;\n              if (mounts.indexOf(current.mount) !== -1) {\n                FS.destroyNode(current);\n              }\n              current = next;\n            }\n          });\n          node.mounted = null;\n          var idx = node.mount.mounts.indexOf(mount);\n          node.mount.mounts.splice(idx, 1);\n        }, lookup: function(parent, name2) {\n          return parent.node_ops.lookup(parent, name2);\n        }, mknod: function(path, mode, dev) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.mayCreate(parent, name2);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.mknod) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.mknod(parent, name2, mode, dev);\n        }, create: function(path, mode) {\n          mode = mode !== void 0 ? mode : 438;\n          mode &= 4095;\n          mode |= 32768;\n          return FS.mknod(path, mode, 0);\n        }, mkdir: function(path, mode) {\n          mode = mode !== void 0 ? mode : 511;\n          mode &= 511 | 512;\n          mode |= 16384;\n          return FS.mknod(path, mode, 0);\n        }, mkdirTree: function(path, mode) {\n          var dirs = path.split(\"/\");\n          var d = \"\";\n          for (var i = 0; i < dirs.length; ++i) {\n            if (!dirs[i])\n              continue;\n            d += \"/\" + dirs[i];\n            try {\n              FS.mkdir(d, mode);\n            } catch (e) {\n              if (e.errno != 20)\n                throw e;\n            }\n          }\n        }, mkdev: function(path, mode, dev) {\n          if (typeof dev === \"undefined\") {\n            dev = mode;\n            mode = 438;\n          }\n          mode |= 8192;\n          return FS.mknod(path, mode, dev);\n        }, symlink: function(oldpath, newpath) {\n          if (!PATH_FS.resolve(oldpath)) {\n            throw new FS.ErrnoError(44);\n          }\n          var lookup = FS.lookupPath(newpath, { parent: true });\n          var parent = lookup.node;\n          if (!parent) {\n            throw new FS.ErrnoError(44);\n          }\n          var newname = PATH.basename(newpath);\n          var errCode = FS.mayCreate(parent, newname);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.symlink) {\n            throw new FS.ErrnoError(63);\n          }\n          return parent.node_ops.symlink(parent, newname, oldpath);\n        }, rename: function(old_path, new_path) {\n          var old_dirname = PATH.dirname(old_path);\n          var new_dirname = PATH.dirname(new_path);\n          var old_name = PATH.basename(old_path);\n          var new_name = PATH.basename(new_path);\n          var lookup, old_dir, new_dir;\n          lookup = FS.lookupPath(old_path, { parent: true });\n          old_dir = lookup.node;\n          lookup = FS.lookupPath(new_path, { parent: true });\n          new_dir = lookup.node;\n          if (!old_dir || !new_dir)\n            throw new FS.ErrnoError(44);\n          if (old_dir.mount !== new_dir.mount) {\n            throw new FS.ErrnoError(75);\n          }\n          var old_node = FS.lookupNode(old_dir, old_name);\n          var relative = PATH_FS.relative(old_path, new_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(28);\n          }\n          relative = PATH_FS.relative(new_path, old_dirname);\n          if (relative.charAt(0) !== \".\") {\n            throw new FS.ErrnoError(55);\n          }\n          var new_node;\n          try {\n            new_node = FS.lookupNode(new_dir, new_name);\n          } catch (e) {\n          }\n          if (old_node === new_node) {\n            return;\n          }\n          var isdir = FS.isDir(old_node.mode);\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!old_dir.node_ops.rename) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (new_dir !== old_dir) {\n            errCode = FS.nodePermissions(old_dir, \"w\");\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"willMovePath\"]) {\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n          FS.hashRemoveNode(old_node);\n          try {\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.hashAddNode(old_node);\n          }\n          try {\n            if (FS.trackingDelegate[\"onMovePath\"])\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\n          }\n        }, rmdir: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, true);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.rmdir) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.rmdir(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          if (!node.node_ops.readdir) {\n            throw new FS.ErrnoError(54);\n          }\n          return node.node_ops.readdir(node);\n        }, unlink: function(path) {\n          var lookup = FS.lookupPath(path, { parent: true });\n          var parent = lookup.node;\n          var name2 = PATH.basename(path);\n          var node = FS.lookupNode(parent, name2);\n          var errCode = FS.mayDelete(parent, name2, false);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          if (!parent.node_ops.unlink) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          try {\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\n              FS.trackingDelegate[\"willDeletePath\"](path);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n          parent.node_ops.unlink(parent, name2);\n          FS.destroyNode(node);\n          try {\n            if (FS.trackingDelegate[\"onDeletePath\"])\n              FS.trackingDelegate[\"onDeletePath\"](path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\n          }\n        }, readlink: function(path) {\n          var lookup = FS.lookupPath(path);\n          var link = lookup.node;\n          if (!link) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!link.node_ops.readlink) {\n            throw new FS.ErrnoError(28);\n          }\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n        }, stat: function(path, dontFollow) {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          var node = lookup.node;\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!node.node_ops.getattr) {\n            throw new FS.ErrnoError(63);\n          }\n          return node.node_ops.getattr(node);\n        }, lstat: function(path) {\n          return FS.stat(path, true);\n        }, chmod: function(path, mode, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\n        }, lchmod: function(path, mode) {\n          FS.chmod(path, mode, true);\n        }, fchmod: function(fd, mode) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chmod(stream.node, mode);\n        }, chown: function(path, uid, gid, dontFollow) {\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          node.node_ops.setattr(node, { timestamp: Date.now() });\n        }, lchown: function(path, uid, gid) {\n          FS.chown(path, uid, gid, true);\n        }, fchown: function(fd, uid, gid) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          FS.chown(stream.node, uid, gid);\n        }, truncate: function(path, len) {\n          if (len < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          var node;\n          if (typeof path === \"string\") {\n            var lookup = FS.lookupPath(path, { follow: true });\n            node = lookup.node;\n          } else {\n            node = path;\n          }\n          if (!node.node_ops.setattr) {\n            throw new FS.ErrnoError(63);\n          }\n          if (FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!FS.isFile(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          var errCode = FS.nodePermissions(node, \"w\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\n        }, ftruncate: function(fd, len) {\n          var stream = FS.getStream(fd);\n          if (!stream) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(28);\n          }\n          FS.truncate(stream.node, len);\n        }, utime: function(path, atime, mtime) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          var node = lookup.node;\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\n        }, open: function(path, flags, mode, fd_start, fd_end) {\n          if (path === \"\") {\n            throw new FS.ErrnoError(44);\n          }\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\n          mode = typeof mode === \"undefined\" ? 438 : mode;\n          if (flags & 64) {\n            mode = mode & 4095 | 32768;\n          } else {\n            mode = 0;\n          }\n          var node;\n          if (typeof path === \"object\") {\n            node = path;\n          } else {\n            path = PATH.normalize(path);\n            try {\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\n              node = lookup.node;\n            } catch (e) {\n            }\n          }\n          var created = false;\n          if (flags & 64) {\n            if (node) {\n              if (flags & 128) {\n                throw new FS.ErrnoError(20);\n              }\n            } else {\n              node = FS.mknod(path, mode, 0);\n              created = true;\n            }\n          }\n          if (!node) {\n            throw new FS.ErrnoError(44);\n          }\n          if (FS.isChrdev(node.mode)) {\n            flags &= ~512;\n          }\n          if (flags & 65536 && !FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          if (!created) {\n            var errCode = FS.mayOpen(node, flags);\n            if (errCode) {\n              throw new FS.ErrnoError(errCode);\n            }\n          }\n          if (flags & 512) {\n            FS.truncate(node, 0);\n          }\n          flags &= ~(128 | 512 | 131072);\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\n            if (!FS.readFiles)\n              FS.readFiles = {};\n            if (!(path in FS.readFiles)) {\n              FS.readFiles[path] = 1;\n              err(\"FS.trackingDelegate error on read file: \" + path);\n            }\n          }\n          try {\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\n              var trackingFlags = 0;\n              if ((flags & 2097155) !== 1) {\n                trackingFlags |= FS.tracking.openFlags.READ;\n              }\n              if ((flags & 2097155) !== 0) {\n                trackingFlags |= FS.tracking.openFlags.WRITE;\n              }\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\n            }\n          } catch (e) {\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\n          }\n          return stream;\n        }, close: function(stream) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (stream.getdents)\n            stream.getdents = null;\n          try {\n            if (stream.stream_ops.close) {\n              stream.stream_ops.close(stream);\n            }\n          } catch (e) {\n            throw e;\n          } finally {\n            FS.closeStream(stream.fd);\n          }\n          stream.fd = null;\n        }, isClosed: function(stream) {\n          return stream.fd === null;\n        }, llseek: function(stream, offset, whence) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!stream.seekable || !stream.stream_ops.llseek) {\n            throw new FS.ErrnoError(70);\n          }\n          if (whence != 0 && whence != 1 && whence != 2) {\n            throw new FS.ErrnoError(28);\n          }\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\n          stream.ungotten = [];\n          return stream.position;\n        }, read: function(stream, buffer2, offset, length, position) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.read) {\n            throw new FS.ErrnoError(28);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\n          if (!seeking)\n            stream.position += bytesRead;\n          return bytesRead;\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\n          offset >>>= 0;\n          if (length < 0 || position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(31);\n          }\n          if (!stream.stream_ops.write) {\n            throw new FS.ErrnoError(28);\n          }\n          if (stream.seekable && stream.flags & 1024) {\n            FS.llseek(stream, 0, 2);\n          }\n          var seeking = typeof position !== \"undefined\";\n          if (!seeking) {\n            position = stream.position;\n          } else if (!stream.seekable) {\n            throw new FS.ErrnoError(70);\n          }\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\n          if (!seeking)\n            stream.position += bytesWritten;\n          try {\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\n          } catch (e) {\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\n          }\n          return bytesWritten;\n        }, allocate: function(stream, offset, length) {\n          if (FS.isClosed(stream)) {\n            throw new FS.ErrnoError(8);\n          }\n          if (offset < 0 || length <= 0) {\n            throw new FS.ErrnoError(28);\n          }\n          if ((stream.flags & 2097155) === 0) {\n            throw new FS.ErrnoError(8);\n          }\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          if (!stream.stream_ops.allocate) {\n            throw new FS.ErrnoError(138);\n          }\n          stream.stream_ops.allocate(stream, offset, length);\n        }, mmap: function(stream, address, length, position, prot, flags) {\n          address >>>= 0;\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n            throw new FS.ErrnoError(2);\n          }\n          if ((stream.flags & 2097155) === 1) {\n            throw new FS.ErrnoError(2);\n          }\n          if (!stream.stream_ops.mmap) {\n            throw new FS.ErrnoError(43);\n          }\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\n          offset >>>= 0;\n          if (!stream || !stream.stream_ops.msync) {\n            return 0;\n          }\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\n        }, munmap: function(stream) {\n          return 0;\n        }, ioctl: function(stream, cmd, arg) {\n          if (!stream.stream_ops.ioctl) {\n            throw new FS.ErrnoError(59);\n          }\n          return stream.stream_ops.ioctl(stream, cmd, arg);\n        }, readFile: function(path, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 0;\n          opts.encoding = opts.encoding || \"binary\";\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n          }\n          var ret;\n          var stream = FS.open(path, opts.flags);\n          var stat = FS.stat(path);\n          var length = stat.size;\n          var buf = new Uint8Array(length);\n          FS.read(stream, buf, 0, length, 0);\n          if (opts.encoding === \"utf8\") {\n            ret = UTF8ArrayToString(buf, 0);\n          } else if (opts.encoding === \"binary\") {\n            ret = buf;\n          }\n          FS.close(stream);\n          return ret;\n        }, writeFile: function(path, data, opts) {\n          opts = opts || {};\n          opts.flags = opts.flags || 577;\n          var stream = FS.open(path, opts.flags, opts.mode);\n          if (typeof data === \"string\") {\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\n          } else if (ArrayBuffer.isView(data)) {\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\n          } else {\n            throw new Error(\"Unsupported data type\");\n          }\n          FS.close(stream);\n        }, cwd: function() {\n          return FS.currentPath;\n        }, chdir: function(path) {\n          var lookup = FS.lookupPath(path, { follow: true });\n          if (lookup.node === null) {\n            throw new FS.ErrnoError(44);\n          }\n          if (!FS.isDir(lookup.node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n          FS.currentPath = lookup.path;\n        }, createDefaultDirectories: function() {\n          FS.mkdir(\"/tmp\");\n          FS.mkdir(\"/home\");\n          FS.mkdir(\"/home/web_user\");\n        }, createDefaultDevices: function() {\n          FS.mkdir(\"/dev\");\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\n            return 0;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            return length;\n          } });\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\n          var random_device = getRandomDevice();\n          FS.createDevice(\"/dev\", \"random\", random_device);\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\n          FS.mkdir(\"/dev/shm\");\n          FS.mkdir(\"/dev/shm/tmp\");\n        }, createSpecialDirectories: function() {\n          FS.mkdir(\"/proc\");\n          FS.mkdir(\"/proc/self\");\n          FS.mkdir(\"/proc/self/fd\");\n          FS.mount({ mount: function() {\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\n            node.node_ops = { lookup: function(parent, name2) {\n              var fd = +name2;\n              var stream = FS.getStream(fd);\n              if (!stream)\n                throw new FS.ErrnoError(8);\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\n                return stream.path;\n              } } };\n              ret.parent = ret;\n              return ret;\n            } };\n            return node;\n          } }, {}, \"/proc/self/fd\");\n        }, createStandardStreams: function() {\n          if (Module[\"stdin\"]) {\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\n          }\n          if (Module[\"stdout\"]) {\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\n          } else {\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\n          }\n          if (Module[\"stderr\"]) {\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\n          } else {\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\n          }\n          var stdin = FS.open(\"/dev/stdin\", 0);\n          var stdout = FS.open(\"/dev/stdout\", 1);\n          var stderr = FS.open(\"/dev/stderr\", 1);\n        }, ensureErrnoError: function() {\n          if (FS.ErrnoError)\n            return;\n          FS.ErrnoError = function ErrnoError(errno, node) {\n            this.node = node;\n            this.setErrno = function(errno2) {\n              this.errno = errno2;\n            };\n            this.setErrno(errno);\n            this.message = \"FS error\";\n          };\n          FS.ErrnoError.prototype = new Error();\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n          [44].forEach(function(code) {\n            FS.genericErrors[code] = new FS.ErrnoError(code);\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\n          });\n        }, staticInit: function() {\n          FS.ensureErrnoError();\n          FS.nameTable = new Array(4096);\n          FS.mount(MEMFS, {}, \"/\");\n          FS.createDefaultDirectories();\n          FS.createDefaultDevices();\n          FS.createSpecialDirectories();\n          FS.filesystems = { \"MEMFS\": MEMFS };\n        }, init: function(input, output, error) {\n          FS.init.initialized = true;\n          FS.ensureErrnoError();\n          Module[\"stdin\"] = input || Module[\"stdin\"];\n          Module[\"stdout\"] = output || Module[\"stdout\"];\n          Module[\"stderr\"] = error || Module[\"stderr\"];\n          FS.createStandardStreams();\n        }, quit: function() {\n          FS.init.initialized = false;\n          var fflush = Module[\"_fflush\"];\n          if (fflush)\n            fflush(0);\n          for (var i = 0; i < FS.streams.length; i++) {\n            var stream = FS.streams[i];\n            if (!stream) {\n              continue;\n            }\n            FS.close(stream);\n          }\n        }, getMode: function(canRead, canWrite) {\n          var mode = 0;\n          if (canRead)\n            mode |= 292 | 73;\n          if (canWrite)\n            mode |= 146;\n          return mode;\n        }, findObject: function(path, dontResolveLastLink) {\n          var ret = FS.analyzePath(path, dontResolveLastLink);\n          if (ret.exists) {\n            return ret.object;\n          } else {\n            return null;\n          }\n        }, analyzePath: function(path, dontResolveLastLink) {\n          try {\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            path = lookup.path;\n          } catch (e) {\n          }\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\n          try {\n            var lookup = FS.lookupPath(path, { parent: true });\n            ret.parentExists = true;\n            ret.parentPath = lookup.path;\n            ret.parentObject = lookup.node;\n            ret.name = PATH.basename(path);\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n            ret.exists = true;\n            ret.path = lookup.path;\n            ret.object = lookup.node;\n            ret.name = lookup.node.name;\n            ret.isRoot = lookup.path === \"/\";\n          } catch (e) {\n            ret.error = e.errno;\n          }\n          return ret;\n        }, createPath: function(parent, path, canRead, canWrite) {\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\n          var parts = path.split(\"/\").reverse();\n          while (parts.length) {\n            var part = parts.pop();\n            if (!part)\n              continue;\n            var current = PATH.join2(parent, part);\n            try {\n              FS.mkdir(current);\n            } catch (e) {\n            }\n            parent = current;\n          }\n          return current;\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(canRead, canWrite);\n          return FS.create(path, mode);\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\n          var mode = FS.getMode(canRead, canWrite);\n          var node = FS.create(path, mode);\n          if (data) {\n            if (typeof data === \"string\") {\n              var arr = new Array(data.length);\n              for (var i = 0, len = data.length; i < len; ++i)\n                arr[i] = data.charCodeAt(i);\n              data = arr;\n            }\n            FS.chmod(node, mode | 146);\n            var stream = FS.open(node, 577);\n            FS.write(stream, data, 0, data.length, 0, canOwn);\n            FS.close(stream);\n            FS.chmod(node, mode);\n          }\n          return node;\n        }, createDevice: function(parent, name2, input, output) {\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\n          var mode = FS.getMode(!!input, !!output);\n          if (!FS.createDevice.major)\n            FS.createDevice.major = 64;\n          var dev = FS.makedev(FS.createDevice.major++, 0);\n          FS.registerDevice(dev, { open: function(stream) {\n            stream.seekable = false;\n          }, close: function(stream) {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          }, read: function(stream, buffer2, offset, length, pos) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === void 0 && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === void 0)\n                break;\n              bytesRead++;\n              buffer2[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          }, write: function(stream, buffer2, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer2[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          } });\n          return FS.mkdev(path, mode, dev);\n        }, forceLoadFile: function(obj) {\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n            return true;\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n          } else if (read_) {\n            try {\n              obj.contents = intArrayFromString(read_(obj.url), true);\n              obj.usedBytes = obj.contents.length;\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n          } else {\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\n          }\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\n          function LazyUint8Array() {\n            this.lengthKnown = false;\n            this.chunks = [];\n          }\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return void 0;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          };\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"HEAD\", url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024;\n            if (!hasByteServing)\n              chunkSize = datalength;\n            var doXHR = function(from, to) {\n              if (from > to)\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1)\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n              var xhr2 = new XMLHttpRequest();\n              xhr2.open(\"GET\", url, false);\n              if (datalength !== chunkSize)\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n              if (typeof Uint8Array != \"undefined\")\n                xhr2.responseType = \"arraybuffer\";\n              if (xhr2.overrideMimeType) {\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\n              }\n              xhr2.send(null);\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\n              if (xhr2.response !== void 0) {\n                return new Uint8Array(xhr2.response || []);\n              } else {\n                return intArrayFromString(xhr2.responseText || \"\", true);\n              }\n            };\n            var lazyArray2 = this;\n            lazyArray2.setDataGetter(function(chunkNum) {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\n                throw new Error(\"doXHR failed!\");\n              return lazyArray2.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n          if (typeof XMLHttpRequest !== \"undefined\") {\n            if (!ENVIRONMENT_IS_WORKER)\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\n            var lazyArray = new LazyUint8Array();\n            Object.defineProperties(lazyArray, { length: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._length;\n            } }, chunkSize: { get: function() {\n              if (!this.lengthKnown) {\n                this.cacheLength();\n              }\n              return this._chunkSize;\n            } } });\n            var properties = { isDevice: false, contents: lazyArray };\n          } else {\n            var properties = { isDevice: false, url };\n          }\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\n          if (properties.contents) {\n            node.contents = properties.contents;\n          } else if (properties.url) {\n            node.contents = null;\n            node.url = properties.url;\n          }\n          Object.defineProperties(node, { usedBytes: { get: function() {\n            return this.contents.length;\n          } } });\n          var stream_ops = {};\n          var keys = Object.keys(node.stream_ops);\n          keys.forEach(function(key2) {\n            var fn = node.stream_ops[key2];\n            stream_ops[key2] = function forceLoadLazyFile() {\n              FS.forceLoadFile(node);\n              return fn.apply(null, arguments);\n            };\n          });\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\n            FS.forceLoadFile(node);\n            var contents = stream.node.contents;\n            if (position >= contents.length)\n              return 0;\n            var size = Math.min(contents.length - position, length);\n            if (contents.slice) {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents[position + i];\n              }\n            } else {\n              for (var i = 0; i < size; i++) {\n                buffer2[offset + i] = contents.get(position + i);\n              }\n            }\n            return size;\n          };\n          node.stream_ops = stream_ops;\n          return node;\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\n          Browser.init();\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\n          function processData(byteArray) {\n            function finish(byteArray2) {\n              if (preFinish)\n                preFinish();\n              if (!dontCreateFile) {\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\n              }\n              if (onload)\n                onload();\n              removeRunDependency(dep);\n            }\n            var handled = false;\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\n              if (handled)\n                return;\n              if (plugin[\"canHandle\"](fullname)) {\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\n                  if (onerror)\n                    onerror();\n                  removeRunDependency(dep);\n                });\n                handled = true;\n              }\n            });\n            if (!handled)\n              finish(byteArray);\n          }\n          addRunDependency(dep);\n          if (typeof url == \"string\") {\n            Browser.asyncLoad(url, function(byteArray) {\n              processData(byteArray);\n            }, onerror);\n          } else {\n            processData(url);\n          }\n        }, indexedDB: function() {\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\n        }, DB_NAME: function() {\n          return \"EM_FS_\" + window.location.pathname;\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\n            out(\"creating db\");\n            var db = openRequest.result;\n            db.createObjectStore(FS.DB_STORE_NAME);\n          };\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\n              putRequest.onsuccess = function putRequest_onsuccess() {\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              putRequest.onerror = function putRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        }, loadFilesFromDB: function(paths, onload, onerror) {\n          onload = onload || function() {\n          };\n          onerror = onerror || function() {\n          };\n          var indexedDB = FS.indexedDB();\n          try {\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n          } catch (e) {\n            return onerror(e);\n          }\n          openRequest.onupgradeneeded = onerror;\n          openRequest.onsuccess = function openRequest_onsuccess() {\n            var db = openRequest.result;\n            try {\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\n            } catch (e) {\n              onerror(e);\n              return;\n            }\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\n            var ok = 0, fail = 0, total = paths.length;\n            function finish() {\n              if (fail == 0)\n                onload();\n              else\n                onerror();\n            }\n            paths.forEach(function(path) {\n              var getRequest = files.get(path);\n              getRequest.onsuccess = function getRequest_onsuccess() {\n                if (FS.analyzePath(path).exists) {\n                  FS.unlink(path);\n                }\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\n                ok++;\n                if (ok + fail == total)\n                  finish();\n              };\n              getRequest.onerror = function getRequest_onerror() {\n                fail++;\n                if (ok + fail == total)\n                  finish();\n              };\n            });\n            transaction.onerror = onerror;\n          };\n          openRequest.onerror = onerror;\n        } };\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\n          if (path[0] !== \"/\") {\n            var dir;\n            if (dirfd === -100) {\n              dir = FS.cwd();\n            } else {\n              var dirstream = FS.getStream(dirfd);\n              if (!dirstream)\n                throw new FS.ErrnoError(8);\n              dir = dirstream.path;\n            }\n            path = PATH.join2(dir, path);\n          }\n          return path;\n        }, doStat: function(func, path, buf) {\n          try {\n            var stat = func(path);\n          } catch (e) {\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\n              return -54;\n            }\n            throw e;\n          }\n          HEAP32[buf >>> 2] = stat.dev;\n          HEAP32[buf + 4 >>> 2] = 0;\n          HEAP32[buf + 8 >>> 2] = stat.ino;\n          HEAP32[buf + 12 >>> 2] = stat.mode;\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\n          HEAP32[buf + 20 >>> 2] = stat.uid;\n          HEAP32[buf + 24 >>> 2] = stat.gid;\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\n          HEAP32[buf + 32 >>> 2] = 0;\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\n          HEAP32[buf + 48 >>> 2] = 4096;\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\n          HEAP32[buf + 60 >>> 2] = 0;\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\n          HEAP32[buf + 68 >>> 2] = 0;\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\n          HEAP32[buf + 76 >>> 2] = 0;\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\n          return 0;\n        }, doMsync: function(addr, stream, len, flags, offset) {\n          var buffer2 = HEAPU8.slice(addr, addr + len);\n          FS.msync(stream, buffer2, offset, len, flags);\n        }, doMkdir: function(path, mode) {\n          path = PATH.normalize(path);\n          if (path[path.length - 1] === \"/\")\n            path = path.substr(0, path.length - 1);\n          FS.mkdir(path, mode, 0);\n          return 0;\n        }, doMknod: function(path, mode, dev) {\n          switch (mode & 61440) {\n            case 32768:\n            case 8192:\n            case 24576:\n            case 4096:\n            case 49152:\n              break;\n            default:\n              return -28;\n          }\n          FS.mknod(path, mode, dev);\n          return 0;\n        }, doReadlink: function(path, buf, bufsize) {\n          if (bufsize <= 0)\n            return -28;\n          var ret = FS.readlink(path);\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\n          var endChar = HEAP8[buf + len >>> 0];\n          stringToUTF8(ret, buf, bufsize + 1);\n          HEAP8[buf + len >>> 0] = endChar;\n          return len;\n        }, doAccess: function(path, amode) {\n          if (amode & ~7) {\n            return -28;\n          }\n          var node;\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n          if (!node) {\n            return -44;\n          }\n          var perms = \"\";\n          if (amode & 4)\n            perms += \"r\";\n          if (amode & 2)\n            perms += \"w\";\n          if (amode & 1)\n            perms += \"x\";\n          if (perms && FS.nodePermissions(node, perms)) {\n            return -2;\n          }\n          return 0;\n        }, doDup: function(path, flags, suggestFD) {\n          var suggest = FS.getStream(suggestFD);\n          if (suggest)\n            FS.close(suggest);\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\n        }, doReadv: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n            if (curr < len)\n              break;\n          }\n          return ret;\n        }, doWritev: function(stream, iov, iovcnt, offset) {\n          var ret = 0;\n          for (var i = 0; i < iovcnt; i++) {\n            var ptr = HEAP32[iov + i * 8 >>> 2];\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\n            if (curr < 0)\n              return -1;\n            ret += curr;\n          }\n          return ret;\n        }, varargs: void 0, get: function() {\n          SYSCALLS.varargs += 4;\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\n          return ret;\n        }, getStr: function(ptr) {\n          var ret = UTF8ToString(ptr);\n          return ret;\n        }, getStreamFromFD: function(fd) {\n          var stream = FS.getStream(fd);\n          if (!stream)\n            throw new FS.ErrnoError(8);\n          return stream;\n        }, get64: function(low, high) {\n          return low;\n        } };\n        function ___sys_ioctl(fd, op, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            switch (op) {\n              case 21509:\n              case 21505: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21510:\n              case 21511:\n              case 21512:\n              case 21506:\n              case 21507:\n              case 21508: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21519: {\n                if (!stream.tty)\n                  return -59;\n                var argp = SYSCALLS.get();\n                HEAP32[argp >>> 2] = 0;\n                return 0;\n              }\n              case 21520: {\n                if (!stream.tty)\n                  return -59;\n                return -28;\n              }\n              case 21531: {\n                var argp = SYSCALLS.get();\n                return FS.ioctl(stream, op, argp);\n              }\n              case 21523: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              case 21524: {\n                if (!stream.tty)\n                  return -59;\n                return 0;\n              }\n              default:\n                abort(\"bad ioctl syscall \" + op);\n            }\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        function ___sys_open(path, flags, varargs) {\n          SYSCALLS.varargs = varargs;\n          try {\n            var pathname = SYSCALLS.getStr(path);\n            var mode = SYSCALLS.get();\n            var stream = FS.open(pathname, flags, mode);\n            return stream.fd;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return -e.errno;\n          }\n        }\n        var tupleRegistrations = {};\n        function runDestructors(destructors) {\n          while (destructors.length) {\n            var ptr = destructors.pop();\n            var del = destructors.pop();\n            del(ptr);\n          }\n        }\n        function simpleReadValueFromPointer(pointer) {\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\n        }\n        var awaitingDependencies = {};\n        var registeredTypes = {};\n        var typeDependencies = {};\n        var char_0 = 48;\n        var char_9 = 57;\n        function makeLegalFunctionName(name2) {\n          if (name2 === void 0) {\n            return \"_unknown\";\n          }\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\n          var f = name2.charCodeAt(0);\n          if (f >= char_0 && f <= char_9) {\n            return \"_\" + name2;\n          } else {\n            return name2;\n          }\n        }\n        function createNamedFunction(name2, body) {\n          name2 = makeLegalFunctionName(name2);\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\n        }\n        function extendError(baseErrorType, errorName) {\n          var errorClass = createNamedFunction(errorName, function(message) {\n            this.name = errorName;\n            this.message = message;\n            var stack = new Error(message).stack;\n            if (stack !== void 0) {\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n            }\n          });\n          errorClass.prototype = Object.create(baseErrorType.prototype);\n          errorClass.prototype.constructor = errorClass;\n          errorClass.prototype.toString = function() {\n            if (this.message === void 0) {\n              return this.name;\n            } else {\n              return this.name + \": \" + this.message;\n            }\n          };\n          return errorClass;\n        }\n        var InternalError = void 0;\n        function throwInternalError(message) {\n          throw new InternalError(message);\n        }\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\n          myTypes.forEach(function(type) {\n            typeDependencies[type] = dependentTypes;\n          });\n          function onComplete(typeConverters2) {\n            var myTypeConverters = getTypeConverters(typeConverters2);\n            if (myTypeConverters.length !== myTypes.length) {\n              throwInternalError(\"Mismatched type converter count\");\n            }\n            for (var i = 0; i < myTypes.length; ++i) {\n              registerType(myTypes[i], myTypeConverters[i]);\n            }\n          }\n          var typeConverters = new Array(dependentTypes.length);\n          var unregisteredTypes = [];\n          var registered = 0;\n          dependentTypes.forEach(function(dt, i) {\n            if (registeredTypes.hasOwnProperty(dt)) {\n              typeConverters[i] = registeredTypes[dt];\n            } else {\n              unregisteredTypes.push(dt);\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\n                awaitingDependencies[dt] = [];\n              }\n              awaitingDependencies[dt].push(function() {\n                typeConverters[i] = registeredTypes[dt];\n                ++registered;\n                if (registered === unregisteredTypes.length) {\n                  onComplete(typeConverters);\n                }\n              });\n            }\n          });\n          if (unregisteredTypes.length === 0) {\n            onComplete(typeConverters);\n          }\n        }\n        function __embind_finalize_value_array(rawTupleType) {\n          var reg = tupleRegistrations[rawTupleType];\n          delete tupleRegistrations[rawTupleType];\n          var elements = reg.elements;\n          var elementsLength = elements.length;\n          var elementTypes = elements.map(function(elt) {\n            return elt.getterReturnType;\n          }).concat(elements.map(function(elt) {\n            return elt.setterArgumentType;\n          }));\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\n            elements.forEach(function(elt, i) {\n              var getterReturnType = elementTypes2[i];\n              var getter = elt.getter;\n              var getterContext = elt.getterContext;\n              var setterArgumentType = elementTypes2[i + elementsLength];\n              var setter = elt.setter;\n              var setterContext = elt.setterContext;\n              elt.read = function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              };\n              elt.write = function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = new Array(elementsLength);\n              for (var i = 0; i < elementsLength; ++i) {\n                rv[i] = elements[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              if (elementsLength !== o.length) {\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\n              }\n              var ptr = rawConstructor();\n              for (var i = 0; i < elementsLength; ++i) {\n                elements[i].write(ptr, o[i]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        var structRegistrations = {};\n        function __embind_finalize_value_object(structType) {\n          var reg = structRegistrations[structType];\n          delete structRegistrations[structType];\n          var rawConstructor = reg.rawConstructor;\n          var rawDestructor = reg.rawDestructor;\n          var fieldRecords = reg.fields;\n          var fieldTypes = fieldRecords.map(function(field) {\n            return field.getterReturnType;\n          }).concat(fieldRecords.map(function(field) {\n            return field.setterArgumentType;\n          }));\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\n            var fields = {};\n            fieldRecords.forEach(function(field, i) {\n              var fieldName = field.fieldName;\n              var getterReturnType = fieldTypes2[i];\n              var getter = field.getter;\n              var getterContext = field.getterContext;\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\n              var setter = field.setter;\n              var setterContext = field.setterContext;\n              fields[fieldName] = { read: function(ptr) {\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\n              }, write: function(ptr, o) {\n                var destructors = [];\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\n                runDestructors(destructors);\n              } };\n            });\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\n              var rv = {};\n              for (var i in fields) {\n                rv[i] = fields[i].read(ptr);\n              }\n              rawDestructor(ptr);\n              return rv;\n            }, \"toWireType\": function(destructors, o) {\n              for (var fieldName in fields) {\n                if (!(fieldName in o)) {\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\n                }\n              }\n              var ptr = rawConstructor();\n              for (fieldName in fields) {\n                fields[fieldName].write(ptr, o[fieldName]);\n              }\n              if (destructors !== null) {\n                destructors.push(rawDestructor, ptr);\n              }\n              return ptr;\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\n          });\n        }\n        function getShiftFromSize(size) {\n          switch (size) {\n            case 1:\n              return 0;\n            case 2:\n              return 1;\n            case 4:\n              return 2;\n            case 8:\n              return 3;\n            default:\n              throw new TypeError(\"Unknown type size: \" + size);\n          }\n        }\n        function embind_init_charCodes() {\n          var codes = new Array(256);\n          for (var i = 0; i < 256; ++i) {\n            codes[i] = String.fromCharCode(i);\n          }\n          embind_charCodes = codes;\n        }\n        var embind_charCodes = void 0;\n        function readLatin1String(ptr) {\n          var ret = \"\";\n          var c = ptr;\n          while (HEAPU8[c >>> 0]) {\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\n          }\n          return ret;\n        }\n        var BindingError = void 0;\n        function throwBindingError(message) {\n          throw new BindingError(message);\n        }\n        function registerType(rawType, registeredInstance, options) {\n          options = options || {};\n          if (!(\"argPackAdvance\" in registeredInstance)) {\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n          }\n          var name2 = registeredInstance.name;\n          if (!rawType) {\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\n          }\n          if (registeredTypes.hasOwnProperty(rawType)) {\n            if (options.ignoreDuplicateRegistrations) {\n              return;\n            } else {\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\n            }\n          }\n          registeredTypes[rawType] = registeredInstance;\n          delete typeDependencies[rawType];\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\n            var callbacks = awaitingDependencies[rawType];\n            delete awaitingDependencies[rawType];\n            callbacks.forEach(function(cb) {\n              cb();\n            });\n          }\n        }\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\n            return !!wt;\n          }, \"toWireType\": function(destructors, o) {\n            return o ? trueValue : falseValue;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\n            var heap;\n            if (size === 1) {\n              heap = HEAP8;\n            } else if (size === 2) {\n              heap = HEAP16;\n            } else if (size === 4) {\n              heap = HEAP32;\n            } else {\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\n            }\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\n          }, destructorFunction: null });\n        }\n        function ClassHandle_isAliasOf(other) {\n          if (!(this instanceof ClassHandle)) {\n            return false;\n          }\n          if (!(other instanceof ClassHandle)) {\n            return false;\n          }\n          var leftClass = this.$$.ptrType.registeredClass;\n          var left = this.$$.ptr;\n          var rightClass = other.$$.ptrType.registeredClass;\n          var right = other.$$.ptr;\n          while (leftClass.baseClass) {\n            left = leftClass.upcast(left);\n            leftClass = leftClass.baseClass;\n          }\n          while (rightClass.baseClass) {\n            right = rightClass.upcast(right);\n            rightClass = rightClass.baseClass;\n          }\n          return leftClass === rightClass && left === right;\n        }\n        function shallowCopyInternalPointer(o) {\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\n        }\n        function throwInstanceAlreadyDeleted(obj) {\n          function getInstanceTypeName(handle) {\n            return handle.$$.ptrType.registeredClass.name;\n          }\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\n        }\n        var finalizationGroup = false;\n        function detachFinalizer(handle) {\n        }\n        function runDestructor($$) {\n          if ($$.smartPtr) {\n            $$.smartPtrType.rawDestructor($$.smartPtr);\n          } else {\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\n          }\n        }\n        function releaseClassHandle($$) {\n          $$.count.value -= 1;\n          var toDelete = $$.count.value === 0;\n          if (toDelete) {\n            runDestructor($$);\n          }\n        }\n        function attachFinalizer(handle) {\n          if (typeof FinalizationGroup === \"undefined\") {\n            attachFinalizer = function(handle2) {\n              return handle2;\n            };\n            return handle;\n          }\n          finalizationGroup = new FinalizationGroup(function(iter) {\n            for (var result = iter.next(); !result.done; result = iter.next()) {\n              var $$ = result.value;\n              if (!$$.ptr) {\n                console.warn(\"object already deleted: \" + $$.ptr);\n              } else {\n                releaseClassHandle($$);\n              }\n            }\n          });\n          attachFinalizer = function(handle2) {\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\n            return handle2;\n          };\n          detachFinalizer = function(handle2) {\n            finalizationGroup.unregister(handle2.$$);\n          };\n          return attachFinalizer(handle);\n        }\n        function ClassHandle_clone() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.preservePointerOnDelete) {\n            this.$$.count.value += 1;\n            return this;\n          } else {\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\n            clone.$$.count.value += 1;\n            clone.$$.deleteScheduled = false;\n            return clone;\n          }\n        }\n        function ClassHandle_delete() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          detachFinalizer(this);\n          releaseClassHandle(this.$$);\n          if (!this.$$.preservePointerOnDelete) {\n            this.$$.smartPtr = void 0;\n            this.$$.ptr = void 0;\n          }\n        }\n        function ClassHandle_isDeleted() {\n          return !this.$$.ptr;\n        }\n        var delayFunction = void 0;\n        var deletionQueue = [];\n        function flushPendingDeletes() {\n          while (deletionQueue.length) {\n            var obj = deletionQueue.pop();\n            obj.$$.deleteScheduled = false;\n            obj[\"delete\"]();\n          }\n        }\n        function ClassHandle_deleteLater() {\n          if (!this.$$.ptr) {\n            throwInstanceAlreadyDeleted(this);\n          }\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\n            throwBindingError(\"Object already scheduled for deletion\");\n          }\n          deletionQueue.push(this);\n          if (deletionQueue.length === 1 && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n          this.$$.deleteScheduled = true;\n          return this;\n        }\n        function init_ClassHandle() {\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\n        }\n        function ClassHandle() {\n        }\n        var registeredPointers = {};\n        function ensureOverloadTable(proto, methodName, humanName) {\n          if (proto[methodName].overloadTable === void 0) {\n            var prevFunc = proto[methodName];\n            proto[methodName] = function() {\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\n              }\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\n            };\n            proto[methodName].overloadTable = [];\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\n          }\n        }\n        function exposePublicSymbol(name2, value, numArguments) {\n          if (Module.hasOwnProperty(name2)) {\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\n            }\n            ensureOverloadTable(Module, name2, name2);\n            if (Module.hasOwnProperty(numArguments)) {\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\n            }\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            if (numArguments !== void 0) {\n              Module[name2].numArguments = numArguments;\n            }\n          }\n        }\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\n          this.name = name2;\n          this.constructor = constructor;\n          this.instancePrototype = instancePrototype;\n          this.rawDestructor = rawDestructor;\n          this.baseClass = baseClass;\n          this.getActualType = getActualType;\n          this.upcast = upcast;\n          this.downcast = downcast;\n          this.pureVirtualFunctions = [];\n        }\n        function upcastPointer(ptr, ptrClass, desiredClass) {\n          while (ptrClass !== desiredClass) {\n            if (!ptrClass.upcast) {\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\n            }\n            ptr = ptrClass.upcast(ptr);\n            ptrClass = ptrClass.baseClass;\n          }\n          return ptr;\n        }\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function genericPointerToWireType(destructors, handle) {\n          var ptr;\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            if (this.isSmartPointer) {\n              ptr = this.rawConstructor();\n              if (destructors !== null) {\n                destructors.push(this.rawDestructor, ptr);\n              }\n              return ptr;\n            } else {\n              return 0;\n            }\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (!this.isConst && handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          if (this.isSmartPointer) {\n            if (handle.$$.smartPtr === void 0) {\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\n            }\n            switch (this.sharingPolicy) {\n              case 0:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\n                }\n                break;\n              case 1:\n                ptr = handle.$$.smartPtr;\n                break;\n              case 2:\n                if (handle.$$.smartPtrType === this) {\n                  ptr = handle.$$.smartPtr;\n                } else {\n                  var clonedHandle = handle[\"clone\"]();\n                  ptr = this.rawShare(ptr, __emval_register(function() {\n                    clonedHandle[\"delete\"]();\n                  }));\n                  if (destructors !== null) {\n                    destructors.push(this.rawDestructor, ptr);\n                  }\n                }\n                break;\n              default:\n                throwBindingError(\"Unsupporting sharing policy\");\n            }\n          }\n          return ptr;\n        }\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\n          if (handle === null) {\n            if (this.isReference) {\n              throwBindingError(\"null is not a valid \" + this.name);\n            }\n            return 0;\n          }\n          if (!handle.$$) {\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\n          }\n          if (!handle.$$.ptr) {\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\n          }\n          if (handle.$$.ptrType.isConst) {\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\n          }\n          var handleClass = handle.$$.ptrType.registeredClass;\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\n          return ptr;\n        }\n        function RegisteredPointer_getPointee(ptr) {\n          if (this.rawGetPointee) {\n            ptr = this.rawGetPointee(ptr);\n          }\n          return ptr;\n        }\n        function RegisteredPointer_destructor(ptr) {\n          if (this.rawDestructor) {\n            this.rawDestructor(ptr);\n          }\n        }\n        function RegisteredPointer_deleteObject(handle) {\n          if (handle !== null) {\n            handle[\"delete\"]();\n          }\n        }\n        function downcastPointer(ptr, ptrClass, desiredClass) {\n          if (ptrClass === desiredClass) {\n            return ptr;\n          }\n          if (desiredClass.baseClass === void 0) {\n            return null;\n          }\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\n          if (rv === null) {\n            return null;\n          }\n          return desiredClass.downcast(rv);\n        }\n        function getInheritedInstanceCount() {\n          return Object.keys(registeredInstances).length;\n        }\n        function getLiveInheritedInstances() {\n          var rv = [];\n          for (var k in registeredInstances) {\n            if (registeredInstances.hasOwnProperty(k)) {\n              rv.push(registeredInstances[k]);\n            }\n          }\n          return rv;\n        }\n        function setDelayFunction(fn) {\n          delayFunction = fn;\n          if (deletionQueue.length && delayFunction) {\n            delayFunction(flushPendingDeletes);\n          }\n        }\n        function init_embind() {\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\n          Module[\"setDelayFunction\"] = setDelayFunction;\n        }\n        var registeredInstances = {};\n        function getBasestPointer(class_, ptr) {\n          if (ptr === void 0) {\n            throwBindingError(\"ptr should not be undefined\");\n          }\n          while (class_.baseClass) {\n            ptr = class_.upcast(ptr);\n            class_ = class_.baseClass;\n          }\n          return ptr;\n        }\n        function getInheritedInstance(class_, ptr) {\n          ptr = getBasestPointer(class_, ptr);\n          return registeredInstances[ptr];\n        }\n        function makeClassHandle(prototype, record) {\n          if (!record.ptrType || !record.ptr) {\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\n          }\n          var hasSmartPtrType = !!record.smartPtrType;\n          var hasSmartPtr = !!record.smartPtr;\n          if (hasSmartPtrType !== hasSmartPtr) {\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\n          }\n          record.count = { value: 1 };\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\n        }\n        function RegisteredPointer_fromWireType(ptr) {\n          var rawPointer = this.getPointee(ptr);\n          if (!rawPointer) {\n            this.destructor(ptr);\n            return null;\n          }\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\n          if (registeredInstance !== void 0) {\n            if (registeredInstance.$$.count.value === 0) {\n              registeredInstance.$$.ptr = rawPointer;\n              registeredInstance.$$.smartPtr = ptr;\n              return registeredInstance[\"clone\"]();\n            } else {\n              var rv = registeredInstance[\"clone\"]();\n              this.destructor(ptr);\n              return rv;\n            }\n          }\n          function makeDefaultHandle() {\n            if (this.isSmartPointer) {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\n            } else {\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\n            }\n          }\n          var actualType = this.registeredClass.getActualType(rawPointer);\n          var registeredPointerRecord = registeredPointers[actualType];\n          if (!registeredPointerRecord) {\n            return makeDefaultHandle.call(this);\n          }\n          var toType;\n          if (this.isConst) {\n            toType = registeredPointerRecord.constPointerType;\n          } else {\n            toType = registeredPointerRecord.pointerType;\n          }\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\n          if (dp === null) {\n            return makeDefaultHandle.call(this);\n          }\n          if (this.isSmartPointer) {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\n          } else {\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\n          }\n        }\n        function init_RegisteredPointer() {\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\n        }\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\n          this.name = name2;\n          this.registeredClass = registeredClass;\n          this.isReference = isReference;\n          this.isConst = isConst;\n          this.isSmartPointer = isSmartPointer;\n          this.pointeeType = pointeeType;\n          this.sharingPolicy = sharingPolicy;\n          this.rawGetPointee = rawGetPointee;\n          this.rawConstructor = rawConstructor;\n          this.rawShare = rawShare;\n          this.rawDestructor = rawDestructor;\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\n            if (isConst) {\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            } else {\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\n              this.destructorFunction = null;\n            }\n          } else {\n            this[\"toWireType\"] = genericPointerToWireType;\n          }\n        }\n        function replacePublicSymbol(name2, value, numArguments) {\n          if (!Module.hasOwnProperty(name2)) {\n            throwInternalError(\"Replacing nonexistant public symbol\");\n          }\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\n            Module[name2].overloadTable[numArguments] = value;\n          } else {\n            Module[name2] = value;\n            Module[name2].argCount = numArguments;\n          }\n        }\n        function getDynCaller(sig, ptr) {\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\n          var argCache = [];\n          return function() {\n            argCache.length = arguments.length;\n            for (var i = 0; i < arguments.length; i++) {\n              argCache[i] = arguments[i];\n            }\n            return dynCall(sig, ptr, argCache);\n          };\n        }\n        function embind__requireFunction(signature, rawFunction) {\n          signature = readLatin1String(signature);\n          function makeDynCaller() {\n            if (signature.indexOf(\"j\") != -1) {\n              return getDynCaller(signature, rawFunction);\n            }\n            return wasmTable.get(rawFunction);\n          }\n          var fp = makeDynCaller();\n          if (typeof fp !== \"function\") {\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\n          }\n          return fp;\n        }\n        var UnboundTypeError = void 0;\n        function getTypeName(type) {\n          var ptr = ___getTypeName(type);\n          var rv = readLatin1String(ptr);\n          _free(ptr);\n          return rv;\n        }\n        function throwUnboundTypeError(message, types) {\n          var unboundTypes = [];\n          var seen = {};\n          function visit(type) {\n            if (seen[type]) {\n              return;\n            }\n            if (registeredTypes[type]) {\n              return;\n            }\n            if (typeDependencies[type]) {\n              typeDependencies[type].forEach(visit);\n              return;\n            }\n            unboundTypes.push(type);\n            seen[type] = true;\n          }\n          types.forEach(visit);\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\n        }\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\n          name2 = readLatin1String(name2);\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\n          if (upcast) {\n            upcast = embind__requireFunction(upcastSignature, upcast);\n          }\n          if (downcast) {\n            downcast = embind__requireFunction(downcastSignature, downcast);\n          }\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\n          var legalFunctionName = makeLegalFunctionName(name2);\n          exposePublicSymbol(legalFunctionName, function() {\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\n          });\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\n            base = base[0];\n            var baseClass;\n            var basePrototype;\n            if (baseClassRawType) {\n              baseClass = base.registeredClass;\n              basePrototype = baseClass.instancePrototype;\n            } else {\n              basePrototype = ClassHandle.prototype;\n            }\n            var constructor = createNamedFunction(legalFunctionName, function() {\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\n                throw new BindingError(\"Use 'new' to construct \" + name2);\n              }\n              if (registeredClass.constructor_body === void 0) {\n                throw new BindingError(name2 + \" has no accessible constructor\");\n              }\n              var body = registeredClass.constructor_body[arguments.length];\n              if (body === void 0) {\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\n              }\n              return body.apply(this, arguments);\n            });\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\n            constructor.prototype = instancePrototype;\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\n            replacePublicSymbol(legalFunctionName, constructor);\n            return [referenceConverter, pointerConverter, constPointerConverter];\n          });\n        }\n        function heap32VectorToArray(count, firstElement) {\n          var array = [];\n          for (var i = 0; i < count; i++) {\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\n          }\n          return array;\n        }\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\n          assert(argCount > 0);\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          invoker = embind__requireFunction(invokerSignature, invoker);\n          var args = [rawConstructor];\n          var destructors = [];\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = \"constructor \" + classType.name;\n            if (classType.registeredClass.constructor_body === void 0) {\n              classType.registeredClass.constructor_body = [];\n            }\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n            }\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\n            };\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\n                if (arguments.length !== argCount - 1) {\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\n                }\n                destructors.length = 0;\n                args.length = argCount;\n                for (var i = 1; i < argCount; ++i) {\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\n                }\n                var ptr = invoker.apply(null, args);\n                runDestructors(destructors);\n                return argTypes[0][\"fromWireType\"](ptr);\n              };\n              return [];\n            });\n            return [];\n          });\n        }\n        function new_(constructor, argumentList) {\n          if (!(constructor instanceof Function)) {\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\n          }\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\n          });\n          dummy.prototype = constructor.prototype;\n          var obj = new dummy();\n          var r = constructor.apply(obj, argumentList);\n          return r instanceof Object ? r : obj;\n        }\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\n          var argCount = argTypes.length;\n          if (argCount < 2) {\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n          }\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\n          var needsDestructorStack = false;\n          for (var i = 1; i < argTypes.length; ++i) {\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\n              needsDestructorStack = true;\n              break;\n            }\n          }\n          var returns = argTypes[0].name !== \"void\";\n          var argsList = \"\";\n          var argsListWired = \"\";\n          for (var i = 0; i < argCount - 2; ++i) {\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\n          }\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"var destructors = [];\\n\";\n          }\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\n          if (isClassMethodFunc) {\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\n          }\n          for (var i = 0; i < argCount - 2; ++i) {\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\n            args1.push(\"argType\" + i);\n            args2.push(argTypes[i + 2]);\n          }\n          if (isClassMethodFunc) {\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\n          }\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\n          if (needsDestructorStack) {\n            invokerFnBody += \"runDestructors(destructors);\\n\";\n          } else {\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\n              if (argTypes[i].destructorFunction !== null) {\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\n                args1.push(paramName + \"_dtor\");\n                args2.push(argTypes[i].destructorFunction);\n              }\n            }\n          }\n          if (returns) {\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\n          } else {\n          }\n          invokerFnBody += \"}\\n\";\n          args1.push(invokerFnBody);\n          var invokerFunction = new_(Function, args1).apply(null, args2);\n          return invokerFunction;\n        }\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          methodName = readLatin1String(methodName);\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\n            classType = classType[0];\n            var humanName = classType.name + \".\" + methodName;\n            if (isPureVirtual) {\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\n            }\n            function unboundTypesHandler() {\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\n            }\n            var proto = classType.registeredClass.instancePrototype;\n            var method = proto[methodName];\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\n              unboundTypesHandler.argCount = argCount - 2;\n              unboundTypesHandler.className = classType.name;\n              proto[methodName] = unboundTypesHandler;\n            } else {\n              ensureOverloadTable(proto, methodName, humanName);\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\n            }\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\n              if (proto[methodName].overloadTable === void 0) {\n                memberFunction.argCount = argCount - 2;\n                proto[methodName] = memberFunction;\n              } else {\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\n              }\n              return [];\n            });\n            return [];\n          });\n        }\n        var emval_free_list = [];\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\n        function __emval_decref(handle) {\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\n            emval_handle_array[handle] = void 0;\n            emval_free_list.push(handle);\n          }\n        }\n        function count_emval_handles() {\n          var count = 0;\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              ++count;\n            }\n          }\n          return count;\n        }\n        function get_first_emval() {\n          for (var i = 5; i < emval_handle_array.length; ++i) {\n            if (emval_handle_array[i] !== void 0) {\n              return emval_handle_array[i];\n            }\n          }\n          return null;\n        }\n        function init_emval() {\n          Module[\"count_emval_handles\"] = count_emval_handles;\n          Module[\"get_first_emval\"] = get_first_emval;\n        }\n        function __emval_register(value) {\n          switch (value) {\n            case void 0: {\n              return 1;\n            }\n            case null: {\n              return 2;\n            }\n            case true: {\n              return 3;\n            }\n            case false: {\n              return 4;\n            }\n            default: {\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n              emval_handle_array[handle] = { refcount: 1, value };\n              return handle;\n            }\n          }\n        }\n        function __embind_register_emval(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\n            var rv = emval_handle_array[handle].value;\n            __emval_decref(handle);\n            return rv;\n          }, \"toWireType\": function(destructors, value) {\n            return __emval_register(value);\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\n        }\n        function enumReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return function(pointer) {\n                var heap = signed ? HEAP8 : HEAPU8;\n                return this[\"fromWireType\"](heap[pointer >>> 0]);\n              };\n            case 1:\n              return function(pointer) {\n                var heap = signed ? HEAP16 : HEAPU16;\n                return this[\"fromWireType\"](heap[pointer >>> 1]);\n              };\n            case 2:\n              return function(pointer) {\n                var heap = signed ? HEAP32 : HEAPU32;\n                return this[\"fromWireType\"](heap[pointer >>> 2]);\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_enum(rawType, name2, size, isSigned) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          function ctor() {\n          }\n          ctor.values = {};\n          registerType(rawType, { name: name2, constructor: ctor, \"fromWireType\": function(c) {\n            return this.constructor.values[c];\n          }, \"toWireType\": function(destructors, c) {\n            return c.value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": enumReadValueFromPointer(name2, shift, isSigned), destructorFunction: null });\n          exposePublicSymbol(name2, ctor);\n        }\n        function requireRegisteredType(rawType, humanName) {\n          var impl = registeredTypes[rawType];\n          if (impl === void 0) {\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\n          }\n          return impl;\n        }\n        function __embind_register_enum_value(rawEnumType, name2, enumValue) {\n          var enumType = requireRegisteredType(rawEnumType, \"enum\");\n          name2 = readLatin1String(name2);\n          var Enum = enumType.constructor;\n          var Value2 = Object.create(enumType.constructor.prototype, { value: { value: enumValue }, constructor: { value: createNamedFunction(enumType.name + \"_\" + name2, function() {\n          }) } });\n          Enum.values[enumValue] = Value2;\n          Enum[name2] = Value2;\n        }\n        function _embind_repr(v) {\n          if (v === null) {\n            return \"null\";\n          }\n          var t = typeof v;\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\n            return v.toString();\n          } else {\n            return \"\" + v;\n          }\n        }\n        function floatReadValueFromPointer(name2, shift) {\n          switch (shift) {\n            case 2:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\n              };\n            case 3:\n              return function(pointer) {\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\n              };\n            default:\n              throw new TypeError(\"Unknown float type: \" + name2);\n          }\n        }\n        function __embind_register_float(rawType, name2, size) {\n          var shift = getShiftFromSize(size);\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            return value;\n          }, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            return value;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\n        }\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\n          name2 = readLatin1String(name2);\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\n          exposePublicSymbol(name2, function() {\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\n          }, argCount - 1);\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\n            return [];\n          });\n        }\n        function integerReadValueFromPointer(name2, shift, signed) {\n          switch (shift) {\n            case 0:\n              return signed ? function readS8FromPointer(pointer) {\n                return HEAP8[pointer >>> 0];\n              } : function readU8FromPointer(pointer) {\n                return HEAPU8[pointer >>> 0];\n              };\n            case 1:\n              return signed ? function readS16FromPointer(pointer) {\n                return HEAP16[pointer >>> 1];\n              } : function readU16FromPointer(pointer) {\n                return HEAPU16[pointer >>> 1];\n              };\n            case 2:\n              return signed ? function readS32FromPointer(pointer) {\n                return HEAP32[pointer >>> 2];\n              } : function readU32FromPointer(pointer) {\n                return HEAPU32[pointer >>> 2];\n              };\n            default:\n              throw new TypeError(\"Unknown integer type: \" + name2);\n          }\n        }\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\n          name2 = readLatin1String(name2);\n          if (maxRange === -1) {\n            maxRange = 4294967295;\n          }\n          var shift = getShiftFromSize(size);\n          var fromWireType = function(value) {\n            return value;\n          };\n          if (minRange === 0) {\n            var bitshift = 32 - 8 * size;\n            fromWireType = function(value) {\n              return value << bitshift >>> bitshift;\n            };\n          }\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n            }\n            if (value < minRange || value > maxRange) {\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n            }\n            return isUnsignedType ? value >>> 0 : value | 0;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\n        }\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\n          var TA = typeMapping[dataTypeIndex];\n          function decodeMemoryView(handle) {\n            handle = handle >> 2;\n            var heap = HEAPU32;\n            var size = heap[handle >>> 0];\n            var data = heap[handle + 1 >>> 0];\n            return new TA(buffer, data, size);\n          }\n          name2 = readLatin1String(name2);\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\n        }\n        function __embind_register_std_string(rawType, name2) {\n          name2 = readLatin1String(name2);\n          var stdStringIsUTF8 = name2 === \"std::string\";\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var str;\n            if (stdStringIsUTF8) {\n              var decodeStartPtr = value + 4;\n              for (var i = 0; i <= length; ++i) {\n                var currentBytePtr = value + 4 + i;\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\n                  var maxRead = currentBytePtr - decodeStartPtr;\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n                  if (str === void 0) {\n                    str = stringSegment;\n                  } else {\n                    str += String.fromCharCode(0);\n                    str += stringSegment;\n                  }\n                  decodeStartPtr = currentBytePtr + 1;\n                }\n              }\n            } else {\n              var a = new Array(length);\n              for (var i = 0; i < length; ++i) {\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\n              }\n              str = a.join(\"\");\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (value instanceof ArrayBuffer) {\n              value = new Uint8Array(value);\n            }\n            var getLength;\n            var valueIsOfTypeString = typeof value === \"string\";\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n              throwBindingError(\"Cannot pass non-string to std::string\");\n            }\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              getLength = function() {\n                return lengthBytesUTF8(value);\n              };\n            } else {\n              getLength = function() {\n                return value.length;\n              };\n            }\n            var length = getLength();\n            var ptr = _malloc(4 + length + 1);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length;\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\n              stringToUTF8(value, ptr + 4, length + 1);\n            } else {\n              if (valueIsOfTypeString) {\n                for (var i = 0; i < length; ++i) {\n                  var charCode = value.charCodeAt(i);\n                  if (charCode > 255) {\n                    _free(ptr);\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n                  }\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\n                }\n              } else {\n                for (var i = 0; i < length; ++i) {\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\n                }\n              }\n            }\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_std_wstring(rawType, charSize, name2) {\n          name2 = readLatin1String(name2);\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n          if (charSize === 2) {\n            decodeString = UTF16ToString;\n            encodeString = stringToUTF16;\n            lengthBytesUTF = lengthBytesUTF16;\n            getHeap = function() {\n              return HEAPU16;\n            };\n            shift = 1;\n          } else if (charSize === 4) {\n            decodeString = UTF32ToString;\n            encodeString = stringToUTF32;\n            lengthBytesUTF = lengthBytesUTF32;\n            getHeap = function() {\n              return HEAPU32;\n            };\n            shift = 2;\n          }\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\n            var length = HEAPU32[value >>> 2];\n            var HEAP = getHeap();\n            var str;\n            var decodeStartPtr = value + 4;\n            for (var i = 0; i <= length; ++i) {\n              var currentBytePtr = value + 4 + i * charSize;\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n                if (str === void 0) {\n                  str = stringSegment;\n                } else {\n                  str += String.fromCharCode(0);\n                  str += stringSegment;\n                }\n                decodeStartPtr = currentBytePtr + charSize;\n              }\n            }\n            _free(value);\n            return str;\n          }, \"toWireType\": function(destructors, value) {\n            if (!(typeof value === \"string\")) {\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\n            }\n            var length = lengthBytesUTF(value);\n            var ptr = _malloc(4 + length + charSize);\n            ptr >>>= 0;\n            HEAPU32[ptr >>> 2] = length >> shift;\n            encodeString(value, ptr + 4, length + charSize);\n            if (destructors !== null) {\n              destructors.push(_free, ptr);\n            }\n            return ptr;\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\n            _free(ptr);\n          } });\n        }\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\n        }\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\n        }\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\n        }\n        function __embind_register_void(rawType, name2) {\n          name2 = readLatin1String(name2);\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\n            return void 0;\n          }, \"toWireType\": function(destructors, o) {\n            return void 0;\n          } });\n        }\n        function requireHandle(handle) {\n          if (!handle) {\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\n          }\n          return emval_handle_array[handle].value;\n        }\n        function __emval_as(handle, returnType, destructorsRef) {\n          handle = requireHandle(handle);\n          returnType = requireRegisteredType(returnType, \"emval::as\");\n          var destructors = [];\n          var rd = __emval_register(destructors);\n          HEAP32[destructorsRef >>> 2] = rd;\n          return returnType[\"toWireType\"](destructors, handle);\n        }\n        function __emval_lookupTypes(argCount, argTypes) {\n          var a = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\n          }\n          return a;\n        }\n        function __emval_call(handle, argCount, argTypes, argv) {\n          handle = requireHandle(handle);\n          var types = __emval_lookupTypes(argCount, argTypes);\n          var args = new Array(argCount);\n          for (var i = 0; i < argCount; ++i) {\n            var type = types[i];\n            args[i] = type[\"readValueFromPointer\"](argv);\n            argv += type[\"argPackAdvance\"];\n          }\n          var rv = handle.apply(void 0, args);\n          return __emval_register(rv);\n        }\n        var emval_symbols = {};\n        function getStringOrSymbol(address) {\n          var symbol = emval_symbols[address];\n          if (symbol === void 0) {\n            return readLatin1String(address);\n          } else {\n            return symbol;\n          }\n        }\n        function emval_get_global() {\n          if (typeof globalThis === \"object\") {\n            return globalThis;\n          }\n          return function() {\n            return Function;\n          }()(\"return this\")();\n        }\n        function __emval_get_global(name2) {\n          if (name2 === 0) {\n            return __emval_register(emval_get_global());\n          } else {\n            name2 = getStringOrSymbol(name2);\n            return __emval_register(emval_get_global()[name2]);\n          }\n        }\n        function __emval_get_property(handle, key2) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          return __emval_register(handle[key2]);\n        }\n        function __emval_incref(handle) {\n          if (handle > 4) {\n            emval_handle_array[handle].refcount += 1;\n          }\n        }\n        function __emval_instanceof(object, constructor) {\n          object = requireHandle(object);\n          constructor = requireHandle(constructor);\n          return object instanceof constructor;\n        }\n        function __emval_is_number(handle) {\n          handle = requireHandle(handle);\n          return typeof handle === \"number\";\n        }\n        function __emval_new_array() {\n          return __emval_register([]);\n        }\n        function __emval_new_cstring(v) {\n          return __emval_register(getStringOrSymbol(v));\n        }\n        function __emval_new_object() {\n          return __emval_register({});\n        }\n        function __emval_run_destructors(handle) {\n          var destructors = emval_handle_array[handle].value;\n          runDestructors(destructors);\n          __emval_decref(handle);\n        }\n        function __emval_set_property(handle, key2, value) {\n          handle = requireHandle(handle);\n          key2 = requireHandle(key2);\n          value = requireHandle(value);\n          handle[key2] = value;\n        }\n        function __emval_take_value(type, argv) {\n          type = requireRegisteredType(type, \"_emval_take_value\");\n          var v = type[\"readValueFromPointer\"](argv);\n          return __emval_register(v);\n        }\n        function _abort() {\n          abort();\n        }\n        var _emscripten_get_now;\n        if (ENVIRONMENT_IS_NODE) {\n          _emscripten_get_now = function() {\n            var t = process[\"hrtime\"]();\n            return t[0] * 1e3 + t[1] / 1e6;\n          };\n        } else if (typeof dateNow !== \"undefined\") {\n          _emscripten_get_now = dateNow;\n        } else\n          _emscripten_get_now = function() {\n            return performance.now();\n          };\n        var _emscripten_get_now_is_monotonic = true;\n        function setErrNo(value) {\n          HEAP32[___errno_location() >>> 2] = value;\n          return value;\n        }\n        function _clock_gettime(clk_id, tp) {\n          var now;\n          if (clk_id === 0) {\n            now = Date.now();\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\n            now = _emscripten_get_now();\n          } else {\n            setErrNo(28);\n            return -1;\n          }\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\n          return 0;\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\n        }\n        function _emscripten_get_heap_size() {\n          return HEAPU8.length;\n        }\n        function emscripten_realloc_buffer(size) {\n          try {\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n          } catch (e) {\n          }\n        }\n        function _emscripten_resize_heap(requestedSize) {\n          requestedSize = requestedSize >>> 0;\n          var oldSize = _emscripten_get_heap_size();\n          var maxHeapSize = 4294967296;\n          if (requestedSize > maxHeapSize) {\n            return false;\n          }\n          var minHeapSize = 16777216;\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n            var replacement = emscripten_realloc_buffer(newSize);\n            if (replacement) {\n              return true;\n            }\n          }\n          return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n          return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n          if (!getEnvStrings.strings) {\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\n            for (var x in ENV) {\n              env[x] = ENV[x];\n            }\n            var strings = [];\n            for (var x in env) {\n              strings.push(x + \"=\" + env[x]);\n            }\n            getEnvStrings.strings = strings;\n          }\n          return getEnvStrings.strings;\n        }\n        function _environ_get(__environ, environ_buf) {\n          try {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n              var ptr = environ_buf + bufSize;\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\n              writeAsciiToMemory(string, ptr);\n              bufSize += string.length + 1;\n            });\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n          try {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >>> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n              bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_close(fd) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            FS.close(stream);\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var HIGH_OFFSET = 4294967296;\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\n            var DOUBLE_LIMIT = 9007199254740992;\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\n              return -61;\n            }\n            FS.llseek(stream, offset, whence);\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\n            if (stream.getdents && offset === 0 && whence === 0)\n              stream.getdents = null;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _fd_write(fd, iov, iovcnt, pnum) {\n          try {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\n            HEAP32[pnum >>> 2] = num;\n            return 0;\n          } catch (e) {\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\n              abort(e);\n            return e.errno;\n          }\n        }\n        function _pthread_mutexattr_destroy() {\n        }\n        function _pthread_mutexattr_init() {\n        }\n        function _pthread_mutexattr_settype() {\n        }\n        function _setTempRet0($i) {\n          setTempRet0($i | 0);\n        }\n        function __isLeapYear(year) {\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n          var sum = 0;\n          for (var i = 0; i <= index; sum += array[i++]) {\n          }\n          return sum;\n        }\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        function __addDays(date, days) {\n          var newDate = new Date(date.getTime());\n          while (days > 0) {\n            var leap = __isLeapYear(newDate.getFullYear());\n            var currentMonth = newDate.getMonth();\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n            if (days > daysInCurrentMonth - newDate.getDate()) {\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\n              newDate.setDate(1);\n              if (currentMonth < 11) {\n                newDate.setMonth(currentMonth + 1);\n              } else {\n                newDate.setMonth(0);\n                newDate.setFullYear(newDate.getFullYear() + 1);\n              }\n            } else {\n              newDate.setDate(newDate.getDate() + days);\n              return newDate;\n            }\n          }\n          return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n          var tm_zone = HEAP32[tm + 40 >>> 2];\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\n          var pattern = UTF8ToString(format);\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\n          for (var rule in EXPANSION_RULES_1) {\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n          }\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n          function leadingSomething(value, digits, character) {\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\n            while (str.length < digits) {\n              str = character[0] + str;\n            }\n            return str;\n          }\n          function leadingNulls(value, digits) {\n            return leadingSomething(value, digits, \"0\");\n          }\n          function compareByDay(date1, date2) {\n            function sgn(value) {\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\n            }\n            var compare;\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                compare = sgn(date1.getDate() - date2.getDate());\n              }\n            }\n            return compare;\n          }\n          function getFirstWeekStartDate(janFourth) {\n            switch (janFourth.getDay()) {\n              case 0:\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\n              case 1:\n                return janFourth;\n              case 2:\n                return new Date(janFourth.getFullYear(), 0, 3);\n              case 3:\n                return new Date(janFourth.getFullYear(), 0, 2);\n              case 4:\n                return new Date(janFourth.getFullYear(), 0, 1);\n              case 5:\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\n              case 6:\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\n            }\n          }\n          function getWeekBasedYear(date2) {\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                return thisDate.getFullYear() + 1;\n              } else {\n                return thisDate.getFullYear();\n              }\n            } else {\n              return thisDate.getFullYear() - 1;\n            }\n          }\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\n          }, \"%A\": function(date2) {\n            return WEEKDAYS[date2.tm_wday];\n          }, \"%b\": function(date2) {\n            return MONTHS[date2.tm_mon].substring(0, 3);\n          }, \"%B\": function(date2) {\n            return MONTHS[date2.tm_mon];\n          }, \"%C\": function(date2) {\n            var year = date2.tm_year + 1900;\n            return leadingNulls(year / 100 | 0, 2);\n          }, \"%d\": function(date2) {\n            return leadingNulls(date2.tm_mday, 2);\n          }, \"%e\": function(date2) {\n            return leadingSomething(date2.tm_mday, 2, \" \");\n          }, \"%g\": function(date2) {\n            return getWeekBasedYear(date2).toString().substring(2);\n          }, \"%G\": function(date2) {\n            return getWeekBasedYear(date2);\n          }, \"%H\": function(date2) {\n            return leadingNulls(date2.tm_hour, 2);\n          }, \"%I\": function(date2) {\n            var twelveHour = date2.tm_hour;\n            if (twelveHour == 0)\n              twelveHour = 12;\n            else if (twelveHour > 12)\n              twelveHour -= 12;\n            return leadingNulls(twelveHour, 2);\n          }, \"%j\": function(date2) {\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\n          }, \"%m\": function(date2) {\n            return leadingNulls(date2.tm_mon + 1, 2);\n          }, \"%M\": function(date2) {\n            return leadingNulls(date2.tm_min, 2);\n          }, \"%n\": function() {\n            return \"\\n\";\n          }, \"%p\": function(date2) {\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\n              return \"AM\";\n            } else {\n              return \"PM\";\n            }\n          }, \"%S\": function(date2) {\n            return leadingNulls(date2.tm_sec, 2);\n          }, \"%t\": function() {\n            return \"\t\";\n          }, \"%u\": function(date2) {\n            return date2.tm_wday || 7;\n          }, \"%U\": function(date2) {\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstSunday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%V\": function(date2) {\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n              return \"53\";\n            }\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n              return \"01\";\n            }\n            var daysDifference;\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\n            } else {\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\n            }\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\n          }, \"%w\": function(date2) {\n            return date2.tm_wday;\n          }, \"%W\": function(date2) {\n            var janFirst = new Date(date2.tm_year, 0, 1);\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\n            if (compareByDay(firstMonday, endDate) < 0) {\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n              return leadingNulls(Math.ceil(days / 7), 2);\n            }\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n          }, \"%y\": function(date2) {\n            return (date2.tm_year + 1900).toString().substring(2);\n          }, \"%Y\": function(date2) {\n            return date2.tm_year + 1900;\n          }, \"%z\": function(date2) {\n            var off = date2.tm_gmtoff;\n            var ahead = off >= 0;\n            off = Math.abs(off) / 60;\n            off = off / 60 * 100 + off % 60;\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n          }, \"%Z\": function(date2) {\n            return date2.tm_zone;\n          }, \"%%\": function() {\n            return \"%\";\n          } };\n          for (var rule in EXPANSION_RULES_2) {\n            if (pattern.indexOf(rule) >= 0) {\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n            }\n          }\n          var bytes = intArrayFromString(pattern, false);\n          if (bytes.length > maxsize) {\n            return 0;\n          }\n          writeArrayToMemory(bytes, s);\n          return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n          return _strftime(s, maxsize, format, tm);\n        }\n        var FSNode = function(parent, name2, mode, rdev) {\n          if (!parent) {\n            parent = this;\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name2;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n        };\n        var readMode = 292 | 73;\n        var writeMode = 146;\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\n          return (this.mode & readMode) === readMode;\n        }, set: function(val) {\n          val ? this.mode |= readMode : this.mode &= ~readMode;\n        } }, write: { get: function() {\n          return (this.mode & writeMode) === writeMode;\n        }, set: function(val) {\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\n        } }, isFolder: { get: function() {\n          return FS.isDir(this.mode);\n        } }, isDevice: { get: function() {\n          return FS.isChrdev(this.mode);\n        } } });\n        FS.FSNode = FSNode;\n        FS.staticInit();\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n        embind_init_charCodes();\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n        init_ClassHandle();\n        init_RegisteredPointer();\n        init_embind();\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\n        init_emval();\n        function intArrayFromString(stringy, dontAddNull, length) {\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n          var u8array = new Array(len);\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n          if (dontAddNull)\n            u8array.length = numBytesWritten;\n          return u8array;\n        }\n        __ATINIT__.push({ func: function() {\n          ___wasm_call_ctors();\n        } });\n        var asmLibraryArg = { \"z\": ___assert_fail, \"y\": ___cxa_allocate_exception, \"x\": ___cxa_throw, \"V\": ___sys_ioctl, \"W\": ___sys_open, \"$\": __embind_finalize_value_array, \"q\": __embind_finalize_value_object, \"Y\": __embind_register_bool, \"t\": __embind_register_class, \"s\": __embind_register_class_constructor, \"c\": __embind_register_class_function, \"X\": __embind_register_emval, \"_\": __embind_register_enum, \"v\": __embind_register_enum_value, \"F\": __embind_register_float, \"f\": __embind_register_function, \"o\": __embind_register_integer, \"k\": __embind_register_memory_view, \"G\": __embind_register_std_string, \"w\": __embind_register_std_wstring, \"aa\": __embind_register_value_array, \"h\": __embind_register_value_array_element, \"r\": __embind_register_value_object, \"e\": __embind_register_value_object_field, \"Z\": __embind_register_void, \"m\": __emval_as, \"H\": __emval_call, \"b\": __emval_decref, \"J\": __emval_get_global, \"n\": __emval_get_property, \"j\": __emval_incref, \"N\": __emval_instanceof, \"I\": __emval_is_number, \"A\": __emval_new_array, \"g\": __emval_new_cstring, \"u\": __emval_new_object, \"l\": __emval_run_destructors, \"i\": __emval_set_property, \"d\": __emval_take_value, \"C\": _abort, \"T\": _clock_gettime, \"M\": _emscripten_memcpy_big, \"p\": _emscripten_resize_heap, \"R\": _environ_get, \"S\": _environ_sizes_get, \"E\": _fd_close, \"U\": _fd_read, \"K\": _fd_seek, \"D\": _fd_write, \"a\": wasmMemory, \"B\": _pthread_mutexattr_destroy, \"P\": _pthread_mutexattr_init, \"O\": _pthread_mutexattr_settype, \"L\": _setTempRet0, \"Q\": _strftime_l };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var _main = Module[\"_main\"] = function() {\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\n        };\n        var ___errno_location = Module[\"___errno_location\"] = function() {\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"la\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments);\n        };\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"na\"]).apply(null, arguments);\n        };\n        Module[\"addRunDependency\"] = addRunDependency;\n        Module[\"removeRunDependency\"] = removeRunDependency;\n        Module[\"FS_createPath\"] = FS.createPath;\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\n        Module[\"FS_createDevice\"] = FS.createDevice;\n        Module[\"FS_unlink\"] = FS.unlink;\n        Module[\"FS\"] = FS;\n        var calledRun;\n        function ExitStatus(status) {\n          this.name = \"ExitStatus\";\n          this.message = \"Program terminated with exit(\" + status + \")\";\n          this.status = status;\n        }\n        var calledMain = false;\n        dependenciesFulfilled = function runCaller() {\n          if (!calledRun)\n            run();\n          if (!calledRun)\n            dependenciesFulfilled = runCaller;\n        };\n        function callMain(args) {\n          var entryFunction = Module[\"_main\"];\n          var argc = 0;\n          var argv = 0;\n          try {\n            var ret = entryFunction(argc, argv);\n            exit(ret, true);\n          } catch (e) {\n            if (e instanceof ExitStatus) {\n              return;\n            } else if (e == \"unwind\") {\n              noExitRuntime = true;\n              return;\n            } else {\n              var toLog = e;\n              if (e && typeof e === \"object\" && e.stack) {\n                toLog = [e, e.stack];\n              }\n              err(\"exception thrown: \" + toLog);\n              quit_(1, e);\n            }\n          } finally {\n            calledMain = true;\n          }\n        }\n        function run(args) {\n          args = args || arguments_;\n          if (runDependencies > 0) {\n            return;\n          }\n          preRun();\n          if (runDependencies > 0)\n            return;\n          function doRun() {\n            if (calledRun)\n              return;\n            calledRun = true;\n            Module[\"calledRun\"] = true;\n            if (ABORT)\n              return;\n            initRuntime();\n            preMain();\n            readyPromiseResolve(Module);\n            if (Module[\"onRuntimeInitialized\"])\n              Module[\"onRuntimeInitialized\"]();\n            if (shouldRunNow)\n              callMain(args);\n            postRun();\n          }\n          if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n              setTimeout(function() {\n                Module[\"setStatus\"](\"\");\n              }, 1);\n              doRun();\n            }, 1);\n          } else {\n            doRun();\n          }\n        }\n        Module[\"run\"] = run;\n        function exit(status, implicit) {\n          if (implicit && noExitRuntime && status === 0) {\n            return;\n          }\n          if (noExitRuntime) {\n          } else {\n            EXITSTATUS = status;\n            exitRuntime();\n            if (Module[\"onExit\"])\n              Module[\"onExit\"](status);\n            ABORT = true;\n          }\n          quit_(status, new ExitStatus(status));\n        }\n        if (Module[\"preInit\"]) {\n          if (typeof Module[\"preInit\"] == \"function\")\n            Module[\"preInit\"] = [Module[\"preInit\"]];\n          while (Module[\"preInit\"].length > 0) {\n            Module[\"preInit\"].pop()();\n          }\n        }\n        var shouldRunNow = true;\n        if (Module[\"noInitialRun\"])\n          shouldRunNow = false;\n        noExitRuntime = true;\n        run();\n        return WebIFCWasm3.ready;\n      };\n    }();\n    if (typeof exports === \"object\" && typeof module === \"object\")\n      module.exports = WebIFCWasm2;\n    else if (typeof define === \"function\" && define[\"amd\"])\n      define([], function() {\n        return WebIFCWasm2;\n      });\n    else if (typeof exports === \"object\")\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\n  }\n});\n\n// dist/ifc2x4.ts\nvar IFCACTIONREQUEST = 3821786052;\nvar IFCACTOR = 2296667514;\nvar IFCACTORROLE = 3630933823;\nvar IFCACTUATOR = 4288193352;\nvar IFCACTUATORTYPE = 2874132201;\nvar IFCADDRESS = 618182010;\nvar IFCADVANCEDBREP = 1635779807;\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\nvar IFCADVANCEDFACE = 3406155212;\nvar IFCAIRTERMINAL = 1634111441;\nvar IFCAIRTERMINALBOX = 177149247;\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\nvar IFCAIRTERMINALTYPE = 3352864051;\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\nvar IFCALARM = 3087945054;\nvar IFCALARMTYPE = 3001207471;\nvar IFCALIGNMENT = 325726236;\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\nvar IFCALIGNMENT2DVERTICAL = 53199957;\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\nvar IFCALIGNMENTCURVE = 3512275521;\nvar IFCANNOTATION = 1674181508;\nvar IFCANNOTATIONFILLAREA = 669184980;\nvar IFCAPPLICATION = 639542469;\nvar IFCAPPLIEDVALUE = 411424972;\nvar IFCAPPROVAL = 130549933;\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\nvar IFCASSET = 3460190687;\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\nvar IFCAXIS1PLACEMENT = 4261334040;\nvar IFCAXIS2PLACEMENT2D = 3125803723;\nvar IFCAXIS2PLACEMENT3D = 2740243338;\nvar IFCBSPLINECURVE = 1967976161;\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\nvar IFCBSPLINESURFACE = 2887950389;\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\nvar IFCBEAM = 753842376;\nvar IFCBEAMSTANDARDCASE = 2906023776;\nvar IFCBEAMTYPE = 819618141;\nvar IFCBEARING = 4196446775;\nvar IFCBEARINGTYPE = 3649138523;\nvar IFCBLOBTEXTURE = 616511568;\nvar IFCBLOCK = 1334484129;\nvar IFCBOILER = 32344328;\nvar IFCBOILERTYPE = 231477066;\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\nvar IFCBOOLEANRESULT = 2736907675;\nvar IFCBOUNDARYCONDITION = 4037036970;\nvar IFCBOUNDARYCURVE = 1136057603;\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\nvar IFCBOUNDARYFACECONDITION = 3367102660;\nvar IFCBOUNDARYNODECONDITION = 1387855156;\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\nvar IFCBOUNDEDCURVE = 1260505505;\nvar IFCBOUNDEDSURFACE = 4182860854;\nvar IFCBOUNDINGBOX = 2581212453;\nvar IFCBOXEDHALFSPACE = 2713105998;\nvar IFCBRIDGE = 644574406;\nvar IFCBRIDGEPART = 963979645;\nvar IFCBUILDING = 4031249490;\nvar IFCBUILDINGELEMENT = 3299480353;\nvar IFCBUILDINGELEMENTPART = 2979338954;\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\nvar IFCBUILDINGSTOREY = 3124254112;\nvar IFCBUILDINGSYSTEM = 1177604601;\nvar IFCBURNER = 2938176219;\nvar IFCBURNERTYPE = 2188180465;\nvar IFCCSHAPEPROFILEDEF = 2898889636;\nvar IFCCABLECARRIERFITTING = 635142910;\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\nvar IFCCABLECARRIERSEGMENT = 3758799889;\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\nvar IFCCABLEFITTING = 1051757585;\nvar IFCCABLEFITTINGTYPE = 2674252688;\nvar IFCCABLESEGMENT = 4217484030;\nvar IFCCABLESEGMENTTYPE = 1285652485;\nvar IFCCAISSONFOUNDATION = 3999819293;\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\nvar IFCCARTESIANPOINT = 1123145078;\nvar IFCCARTESIANPOINTLIST = 574549367;\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\nvar IFCCHILLER = 3902619387;\nvar IFCCHILLERTYPE = 2951183804;\nvar IFCCHIMNEY = 3296154744;\nvar IFCCHIMNEYTYPE = 2197970202;\nvar IFCCIRCLE = 2611217952;\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\nvar IFCCIRCLEPROFILEDEF = 1383045692;\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\nvar IFCCIVILELEMENT = 1677625105;\nvar IFCCIVILELEMENTTYPE = 3893394355;\nvar IFCCLASSIFICATION = 747523909;\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\nvar IFCCLOSEDSHELL = 2205249479;\nvar IFCCOIL = 639361253;\nvar IFCCOILTYPE = 2301859152;\nvar IFCCOLOURRGB = 776857604;\nvar IFCCOLOURRGBLIST = 3285139300;\nvar IFCCOLOURSPECIFICATION = 3264961684;\nvar IFCCOLUMN = 843113511;\nvar IFCCOLUMNSTANDARDCASE = 905975707;\nvar IFCCOLUMNTYPE = 300633059;\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\nvar IFCCOMPLEXPROPERTY = 2542286263;\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\nvar IFCCOMPOSITECURVE = 3732776249;\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\nvar IFCCOMPRESSOR = 3571504051;\nvar IFCCOMPRESSORTYPE = 3850581409;\nvar IFCCONDENSER = 2272882330;\nvar IFCCONDENSERTYPE = 2816379211;\nvar IFCCONIC = 2510884976;\nvar IFCCONNECTEDFACESET = 370225590;\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\nvar IFCCONNECTIONGEOMETRY = 2859738748;\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\nvar IFCCONSTRAINT = 1959218052;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\nvar IFCCONTEXT = 3419103109;\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\nvar IFCCONTROL = 3293443760;\nvar IFCCONTROLLER = 25142252;\nvar IFCCONTROLLERTYPE = 578613899;\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\nvar IFCCOOLEDBEAM = 4136498852;\nvar IFCCOOLEDBEAMTYPE = 335055490;\nvar IFCCOOLINGTOWER = 3640358203;\nvar IFCCOOLINGTOWERTYPE = 2954562838;\nvar IFCCOORDINATEOPERATION = 1785450214;\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\nvar IFCCOSTITEM = 3895139033;\nvar IFCCOSTSCHEDULE = 1419761937;\nvar IFCCOSTVALUE = 602808272;\nvar IFCCOVERING = 1973544240;\nvar IFCCOVERINGTYPE = 1916426348;\nvar IFCCREWRESOURCE = 3295246426;\nvar IFCCREWRESOURCETYPE = 1815067380;\nvar IFCCSGPRIMITIVE3D = 2506170314;\nvar IFCCSGSOLID = 2147822146;\nvar IFCCURRENCYRELATIONSHIP = 539742890;\nvar IFCCURTAINWALL = 3495092785;\nvar IFCCURTAINWALLTYPE = 1457835157;\nvar IFCCURVE = 2601014836;\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\nvar IFCCURVESEGMENT2D = 1186437898;\nvar IFCCURVESTYLE = 3800577675;\nvar IFCCURVESTYLEFONT = 1105321065;\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\nvar IFCCYLINDRICALSURFACE = 1213902940;\nvar IFCDAMPER = 4074379575;\nvar IFCDAMPERTYPE = 3961806047;\nvar IFCDEEPFOUNDATION = 3426335179;\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\nvar IFCDERIVEDPROFILEDEF = 3632507154;\nvar IFCDERIVEDUNIT = 1765591967;\nvar IFCDERIVEDUNITELEMENT = 1045800335;\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\nvar IFCDIRECTION = 32440307;\nvar IFCDISCRETEACCESSORY = 1335981549;\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\nvar IFCDISTANCEEXPRESSION = 1945343521;\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\nvar IFCDISTRIBUTIONPORT = 3041715199;\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\nvar IFCDOCUMENTINFORMATION = 1154170062;\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\nvar IFCDOCUMENTREFERENCE = 3732053477;\nvar IFCDOOR = 395920057;\nvar IFCDOORLININGPROPERTIES = 2963535650;\nvar IFCDOORPANELPROPERTIES = 1714330368;\nvar IFCDOORSTANDARDCASE = 3242481149;\nvar IFCDOORSTYLE = 526551008;\nvar IFCDOORTYPE = 2323601079;\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\nvar IFCDUCTFITTING = 342316401;\nvar IFCDUCTFITTINGTYPE = 869906466;\nvar IFCDUCTSEGMENT = 3518393246;\nvar IFCDUCTSEGMENTTYPE = 3760055223;\nvar IFCDUCTSILENCER = 1360408905;\nvar IFCDUCTSILENCERTYPE = 2030761528;\nvar IFCEDGE = 3900360178;\nvar IFCEDGECURVE = 476780140;\nvar IFCEDGELOOP = 1472233963;\nvar IFCELECTRICAPPLIANCE = 1904799276;\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\nvar IFCELECTRICGENERATOR = 264262732;\nvar IFCELECTRICGENERATORTYPE = 1534661035;\nvar IFCELECTRICMOTOR = 402227799;\nvar IFCELECTRICMOTORTYPE = 1217240411;\nvar IFCELECTRICTIMECONTROL = 1003880860;\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\nvar IFCELEMENT = 1758889154;\nvar IFCELEMENTASSEMBLY = 4123344466;\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\nvar IFCELEMENTCOMPONENT = 1623761950;\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\nvar IFCELEMENTQUANTITY = 1883228015;\nvar IFCELEMENTTYPE = 339256511;\nvar IFCELEMENTARYSURFACE = 2777663545;\nvar IFCELLIPSE = 1704287377;\nvar IFCELLIPSEPROFILEDEF = 2835456948;\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\nvar IFCENGINE = 2814081492;\nvar IFCENGINETYPE = 132023988;\nvar IFCEVAPORATIVECOOLER = 3747195512;\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\nvar IFCEVAPORATOR = 484807127;\nvar IFCEVAPORATORTYPE = 3390157468;\nvar IFCEVENT = 4148101412;\nvar IFCEVENTTIME = 211053100;\nvar IFCEVENTTYPE = 4024345920;\nvar IFCEXTENDEDPROPERTIES = 297599258;\nvar IFCEXTERNALINFORMATION = 4294318154;\nvar IFCEXTERNALREFERENCE = 3200245327;\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\nvar IFCEXTRUDEDAREASOLID = 477187591;\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\nvar IFCFACE = 2556980723;\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\nvar IFCFACEBOUND = 1809719519;\nvar IFCFACEOUTERBOUND = 803316827;\nvar IFCFACESURFACE = 3008276851;\nvar IFCFACETEDBREP = 807026263;\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\nvar IFCFACILITY = 24185140;\nvar IFCFACILITYPART = 1310830890;\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\nvar IFCFAN = 3415622556;\nvar IFCFANTYPE = 346874300;\nvar IFCFASTENER = 647756555;\nvar IFCFASTENERTYPE = 2489546625;\nvar IFCFEATUREELEMENT = 2827207264;\nvar IFCFEATUREELEMENTADDITION = 2143335405;\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\nvar IFCFILLAREASTYLE = 738692330;\nvar IFCFILLAREASTYLEHATCHING = 374418227;\nvar IFCFILLAREASTYLETILES = 315944413;\nvar IFCFILTER = 819412036;\nvar IFCFILTERTYPE = 1810631287;\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\nvar IFCFLOWCONTROLLER = 2058353004;\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\nvar IFCFLOWFITTING = 4278956645;\nvar IFCFLOWFITTINGTYPE = 3198132628;\nvar IFCFLOWINSTRUMENT = 182646315;\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\nvar IFCFLOWMETER = 2188021234;\nvar IFCFLOWMETERTYPE = 3815607619;\nvar IFCFLOWMOVINGDEVICE = 3132237377;\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\nvar IFCFLOWSEGMENT = 987401354;\nvar IFCFLOWSEGMENTTYPE = 1834744321;\nvar IFCFLOWSTORAGEDEVICE = 707683696;\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\nvar IFCFLOWTERMINAL = 2223149337;\nvar IFCFLOWTERMINALTYPE = 2297155007;\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\nvar IFCFOOTING = 900683007;\nvar IFCFOOTINGTYPE = 1893162501;\nvar IFCFURNISHINGELEMENT = 263784265;\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\nvar IFCFURNITURE = 1509553395;\nvar IFCFURNITURETYPE = 1268542332;\nvar IFCGEOGRAPHICELEMENT = 3493046030;\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\nvar IFCGEOMETRICCURVESET = 987898635;\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\nvar IFCGEOMETRICSET = 3590301190;\nvar IFCGRID = 3009204131;\nvar IFCGRIDAXIS = 852622518;\nvar IFCGRIDPLACEMENT = 178086475;\nvar IFCGROUP = 2706460486;\nvar IFCHALFSPACESOLID = 812098782;\nvar IFCHEATEXCHANGER = 3319311131;\nvar IFCHEATEXCHANGERTYPE = 1251058090;\nvar IFCHUMIDIFIER = 2068733104;\nvar IFCHUMIDIFIERTYPE = 1806887404;\nvar IFCISHAPEPROFILEDEF = 1484403080;\nvar IFCIMAGETEXTURE = 3905492369;\nvar IFCINDEXEDCOLOURMAP = 3570813810;\nvar IFCINDEXEDPOLYCURVE = 2571569899;\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\nvar IFCINTERCEPTOR = 4175244083;\nvar IFCINTERCEPTORTYPE = 3946677679;\nvar IFCINTERSECTIONCURVE = 3113134337;\nvar IFCINVENTORY = 2391368822;\nvar IFCIRREGULARTIMESERIES = 3741457305;\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\nvar IFCJUNCTIONBOX = 2176052936;\nvar IFCJUNCTIONBOXTYPE = 4288270099;\nvar IFCLSHAPEPROFILEDEF = 572779678;\nvar IFCLABORRESOURCE = 3827777499;\nvar IFCLABORRESOURCETYPE = 428585644;\nvar IFCLAGTIME = 1585845231;\nvar IFCLAMP = 76236018;\nvar IFCLAMPTYPE = 1051575348;\nvar IFCLIBRARYINFORMATION = 2655187982;\nvar IFCLIBRARYREFERENCE = 3452421091;\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\nvar IFCLIGHTFIXTURE = 629592764;\nvar IFCLIGHTFIXTURETYPE = 1161773419;\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\nvar IFCLIGHTSOURCE = 1402838566;\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\nvar IFCLIGHTSOURCESPOT = 3422422726;\nvar IFCLINE = 1281925730;\nvar IFCLINESEGMENT2D = 3092502836;\nvar IFCLINEARPLACEMENT = 388784114;\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\nvar IFCLOCALPLACEMENT = 2624227202;\nvar IFCLOOP = 1008929658;\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\nvar IFCMAPCONVERSION = 3057273783;\nvar IFCMAPPEDITEM = 2347385850;\nvar IFCMATERIAL = 1838606355;\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\nvar IFCMATERIALCONSTITUENT = 3708119e3;\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\nvar IFCMATERIALDEFINITION = 760658860;\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\nvar IFCMATERIALLAYER = 248100487;\nvar IFCMATERIALLAYERSET = 3303938423;\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\nvar IFCMATERIALLIST = 2199411900;\nvar IFCMATERIALPROFILE = 2235152071;\nvar IFCMATERIALPROFILESET = 164193824;\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\nvar IFCMATERIALPROPERTIES = 3265635763;\nvar IFCMATERIALRELATIONSHIP = 853536259;\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\nvar IFCMEASUREWITHUNIT = 2597039031;\nvar IFCMECHANICALFASTENER = 377706215;\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\nvar IFCMEDICALDEVICE = 1437502449;\nvar IFCMEDICALDEVICETYPE = 1114901282;\nvar IFCMEMBER = 1073191201;\nvar IFCMEMBERSTANDARDCASE = 1911478936;\nvar IFCMEMBERTYPE = 3181161470;\nvar IFCMETRIC = 3368373690;\nvar IFCMIRROREDPROFILEDEF = 2998442950;\nvar IFCMONETARYUNIT = 2706619895;\nvar IFCMOTORCONNECTION = 2474470126;\nvar IFCMOTORCONNECTIONTYPE = 977012517;\nvar IFCNAMEDUNIT = 1918398963;\nvar IFCOBJECT = 3888040117;\nvar IFCOBJECTDEFINITION = 219451334;\nvar IFCOBJECTPLACEMENT = 3701648758;\nvar IFCOBJECTIVE = 2251480897;\nvar IFCOCCUPANT = 4143007308;\nvar IFCOFFSETCURVE = 590820931;\nvar IFCOFFSETCURVE2D = 3388369263;\nvar IFCOFFSETCURVE3D = 3505215534;\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\nvar IFCOPENSHELL = 2665983363;\nvar IFCOPENINGELEMENT = 3588315303;\nvar IFCOPENINGSTANDARDCASE = 3079942009;\nvar IFCORGANIZATION = 4251960020;\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\nvar IFCORIENTATIONEXPRESSION = 643959842;\nvar IFCORIENTEDEDGE = 1029017970;\nvar IFCOUTERBOUNDARYCURVE = 144952367;\nvar IFCOUTLET = 3694346114;\nvar IFCOUTLETTYPE = 2837617999;\nvar IFCOWNERHISTORY = 1207048766;\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\nvar IFCPATH = 2519244187;\nvar IFCPCURVE = 1682466193;\nvar IFCPERFORMANCEHISTORY = 2382730787;\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\nvar IFCPERMIT = 3327091369;\nvar IFCPERSON = 2077209135;\nvar IFCPERSONANDORGANIZATION = 101040310;\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\nvar IFCPHYSICALQUANTITY = 2483315170;\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\nvar IFCPILE = 1687234759;\nvar IFCPILETYPE = 1158309216;\nvar IFCPIPEFITTING = 310824031;\nvar IFCPIPEFITTINGTYPE = 804291784;\nvar IFCPIPESEGMENT = 3612865200;\nvar IFCPIPESEGMENTTYPE = 4231323485;\nvar IFCPIXELTEXTURE = 597895409;\nvar IFCPLACEMENT = 2004835150;\nvar IFCPLANARBOX = 603570806;\nvar IFCPLANAREXTENT = 1663979128;\nvar IFCPLANE = 220341763;\nvar IFCPLATE = 3171933400;\nvar IFCPLATESTANDARDCASE = 1156407060;\nvar IFCPLATETYPE = 4017108033;\nvar IFCPOINT = 2067069095;\nvar IFCPOINTONCURVE = 4022376103;\nvar IFCPOINTONSURFACE = 1423911732;\nvar IFCPOLYLOOP = 2924175390;\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\nvar IFCPOLYGONALFACESET = 2839578677;\nvar IFCPOLYLINE = 3724593414;\nvar IFCPORT = 3740093272;\nvar IFCPOSITIONINGELEMENT = 1946335990;\nvar IFCPOSTALADDRESS = 3355820592;\nvar IFCPREDEFINEDCOLOUR = 759155922;\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\nvar IFCPREDEFINEDITEM = 3727388367;\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\nvar IFCPRESENTATIONITEM = 677532197;\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\nvar IFCPRESENTATIONSTYLE = 3119450353;\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\nvar IFCPROCEDURE = 2744685151;\nvar IFCPROCEDURETYPE = 569719735;\nvar IFCPROCESS = 2945172077;\nvar IFCPRODUCT = 4208778838;\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\nvar IFCPRODUCTREPRESENTATION = 2095639259;\nvar IFCPROFILEDEF = 3958567839;\nvar IFCPROFILEPROPERTIES = 2802850158;\nvar IFCPROJECT = 103090709;\nvar IFCPROJECTLIBRARY = 653396225;\nvar IFCPROJECTORDER = 2904328755;\nvar IFCPROJECTEDCRS = 3843373140;\nvar IFCPROJECTIONELEMENT = 3651124850;\nvar IFCPROPERTY = 2598011224;\nvar IFCPROPERTYABSTRACTION = 986844984;\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\nvar IFCPROPERTYDEFINITION = 1680319473;\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\nvar IFCPROPERTYENUMERATION = 3710013099;\nvar IFCPROPERTYLISTVALUE = 2752243245;\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\nvar IFCPROPERTYSET = 1451395588;\nvar IFCPROPERTYSETDEFINITION = 3357820518;\nvar IFCPROPERTYSETTEMPLATE = 492091185;\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\nvar IFCPROPERTYTABLEVALUE = 110355661;\nvar IFCPROPERTYTEMPLATE = 3521284610;\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\nvar IFCPROTECTIVEDEVICE = 738039164;\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\nvar IFCPROXY = 3219374653;\nvar IFCPUMP = 90941305;\nvar IFCPUMPTYPE = 2250791053;\nvar IFCQUANTITYAREA = 2044713172;\nvar IFCQUANTITYCOUNT = 2093928680;\nvar IFCQUANTITYLENGTH = 931644368;\nvar IFCQUANTITYSET = 2090586900;\nvar IFCQUANTITYTIME = 3252649465;\nvar IFCQUANTITYVOLUME = 2405470396;\nvar IFCQUANTITYWEIGHT = 825690147;\nvar IFCRAILING = 2262370178;\nvar IFCRAILINGTYPE = 2893384427;\nvar IFCRAMP = 3024970846;\nvar IFCRAMPFLIGHT = 3283111854;\nvar IFCRAMPFLIGHTTYPE = 2324767716;\nvar IFCRAMPTYPE = 1469900589;\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\nvar IFCRECTANGULARPYRAMID = 2798486643;\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\nvar IFCRECURRENCEPATTERN = 3915482550;\nvar IFCREFERENCE = 2433181523;\nvar IFCREFERENT = 4021432810;\nvar IFCREGULARTIMESERIES = 3413951693;\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\nvar IFCREINFORCINGBAR = 979691226;\nvar IFCREINFORCINGBARTYPE = 2572171363;\nvar IFCREINFORCINGELEMENT = 3027567501;\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\nvar IFCREINFORCINGMESH = 2320036040;\nvar IFCREINFORCINGMESHTYPE = 2310774935;\nvar IFCRELAGGREGATES = 160246688;\nvar IFCRELASSIGNS = 3939117080;\nvar IFCRELASSIGNSTOACTOR = 1683148259;\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\nvar IFCRELASSIGNSTOGROUP = 1307041759;\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\nvar IFCRELASSIGNSTORESOURCE = 205026976;\nvar IFCRELASSOCIATES = 1865459582;\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\nvar IFCRELCONNECTS = 826625072;\nvar IFCRELCONNECTSELEMENTS = 1204542856;\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\nvar IFCRELCONNECTSPORTS = 3190031847;\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\nvar IFCRELCOVERSSPACES = 2802773753;\nvar IFCRELDECLARES = 2565941209;\nvar IFCRELDECOMPOSES = 2551354335;\nvar IFCRELDEFINES = 693640335;\nvar IFCRELDEFINESBYOBJECT = 1462361463;\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\nvar IFCRELDEFINESBYTYPE = 781010003;\nvar IFCRELFILLSELEMENT = 3940055652;\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\nvar IFCRELINTERFERESELEMENTS = 427948657;\nvar IFCRELNESTS = 3268803585;\nvar IFCRELPOSITIONS = 1441486842;\nvar IFCRELPROJECTSELEMENT = 750771296;\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\nvar IFCRELSEQUENCE = 4122056220;\nvar IFCRELSERVICESBUILDINGS = 366585022;\nvar IFCRELSPACEBOUNDARY = 3451746338;\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\nvar IFCRELVOIDSELEMENT = 1401173127;\nvar IFCRELATIONSHIP = 478536968;\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\nvar IFCREPRESENTATION = 1076942058;\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\nvar IFCREPRESENTATIONITEM = 3008791417;\nvar IFCREPRESENTATIONMAP = 1660063152;\nvar IFCRESOURCE = 2914609552;\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\nvar IFCRESOURCETIME = 1042787934;\nvar IFCREVOLVEDAREASOLID = 1856042241;\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\nvar IFCRIGHTCIRCULARCONE = 4158566097;\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\nvar IFCROOF = 2016517767;\nvar IFCROOFTYPE = 2781568857;\nvar IFCROOT = 2341007311;\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\nvar IFCSIUNIT = 448429030;\nvar IFCSANITARYTERMINAL = 3053780830;\nvar IFCSANITARYTERMINALTYPE = 1768891740;\nvar IFCSCHEDULINGTIME = 1054537805;\nvar IFCSEAMCURVE = 2157484638;\nvar IFCSECTIONPROPERTIES = 2042790032;\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\nvar IFCSECTIONEDSOLID = 1862484736;\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\nvar IFCSECTIONEDSPINE = 1509187699;\nvar IFCSENSOR = 4086658281;\nvar IFCSENSORTYPE = 1783015770;\nvar IFCSHADINGDEVICE = 1329646415;\nvar IFCSHADINGDEVICETYPE = 4074543187;\nvar IFCSHAPEASPECT = 867548509;\nvar IFCSHAPEMODEL = 3982875396;\nvar IFCSHAPEREPRESENTATION = 4240577450;\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\nvar IFCSIMPLEPROPERTY = 3692461612;\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\nvar IFCSITE = 4097777520;\nvar IFCSLAB = 1529196076;\nvar IFCSLABELEMENTEDCASE = 3127900445;\nvar IFCSLABSTANDARDCASE = 3027962421;\nvar IFCSLABTYPE = 2533589738;\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\nvar IFCSOLARDEVICE = 3420628829;\nvar IFCSOLARDEVICETYPE = 1072016465;\nvar IFCSOLIDMODEL = 723233188;\nvar IFCSPACE = 3856911033;\nvar IFCSPACEHEATER = 1999602285;\nvar IFCSPACEHEATERTYPE = 1305183839;\nvar IFCSPACETYPE = 3812236995;\nvar IFCSPATIALELEMENT = 1412071761;\nvar IFCSPATIALELEMENTTYPE = 710998568;\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\nvar IFCSPATIALZONE = 463610769;\nvar IFCSPATIALZONETYPE = 2481509218;\nvar IFCSPHERE = 451544542;\nvar IFCSPHERICALSURFACE = 4015995234;\nvar IFCSTACKTERMINAL = 1404847402;\nvar IFCSTACKTERMINALTYPE = 3112655638;\nvar IFCSTAIR = 331165859;\nvar IFCSTAIRFLIGHT = 4252922144;\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\nvar IFCSTAIRTYPE = 338393293;\nvar IFCSTRUCTURALACTION = 682877961;\nvar IFCSTRUCTURALACTIVITY = 3544373492;\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\nvar IFCSTRUCTURALCONNECTION = 1179482911;\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\nvar IFCSTRUCTURALITEM = 3136571912;\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\nvar IFCSTRUCTURALLOAD = 2162789131;\nvar IFCSTRUCTURALLOADCASE = 385403989;\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\nvar IFCSTRUCTURALMEMBER = 530289379;\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\nvar IFCSTRUCTURALREACTION = 3689010777;\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\nvar IFCSTYLEMODEL = 2830218821;\nvar IFCSTYLEDITEM = 3958052878;\nvar IFCSTYLEDREPRESENTATION = 3049322572;\nvar IFCSUBCONTRACTRESOURCE = 148013059;\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\nvar IFCSUBEDGE = 2233826070;\nvar IFCSURFACE = 2513912981;\nvar IFCSURFACECURVE = 699246055;\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\nvar IFCSURFACEFEATURE = 3101698114;\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\nvar IFCSURFACEOFREVOLUTION = 4124788165;\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\nvar IFCSURFACESTYLE = 1300840506;\nvar IFCSURFACESTYLELIGHTING = 3303107099;\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\nvar IFCSURFACESTYLERENDERING = 1878645084;\nvar IFCSURFACESTYLESHADING = 846575682;\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\nvar IFCSURFACETEXTURE = 626085974;\nvar IFCSWEPTAREASOLID = 2247615214;\nvar IFCSWEPTDISKSOLID = 1260650574;\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\nvar IFCSWEPTSURFACE = 230924584;\nvar IFCSWITCHINGDEVICE = 1162798199;\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\nvar IFCSYSTEM = 2254336722;\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\nvar IFCTSHAPEPROFILEDEF = 3071757647;\nvar IFCTABLE = 985171141;\nvar IFCTABLECOLUMN = 2043862942;\nvar IFCTABLEROW = 531007025;\nvar IFCTANK = 812556717;\nvar IFCTANKTYPE = 5716631;\nvar IFCTASK = 3473067441;\nvar IFCTASKTIME = 1549132990;\nvar IFCTASKTIMERECURRING = 2771591690;\nvar IFCTASKTYPE = 3206491090;\nvar IFCTELECOMADDRESS = 912023232;\nvar IFCTENDON = 3824725483;\nvar IFCTENDONANCHOR = 2347447852;\nvar IFCTENDONANCHORTYPE = 3081323446;\nvar IFCTENDONCONDUIT = 3663046924;\nvar IFCTENDONCONDUITTYPE = 2281632017;\nvar IFCTENDONTYPE = 2415094496;\nvar IFCTESSELLATEDFACESET = 2387106220;\nvar IFCTESSELLATEDITEM = 901063453;\nvar IFCTEXTLITERAL = 4282788508;\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\nvar IFCTEXTSTYLE = 1447204868;\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\nvar IFCTEXTURECOORDINATE = 280115917;\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\nvar IFCTEXTUREMAP = 2552916305;\nvar IFCTEXTUREVERTEX = 1210645708;\nvar IFCTEXTUREVERTEXLIST = 3611470254;\nvar IFCTIMEPERIOD = 1199560280;\nvar IFCTIMESERIES = 3101149627;\nvar IFCTIMESERIESVALUE = 581633288;\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\nvar IFCTOROIDALSURFACE = 1935646853;\nvar IFCTRANSFORMER = 3825984169;\nvar IFCTRANSFORMERTYPE = 1692211062;\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\nvar IFCTRANSPORTELEMENT = 1620046519;\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\nvar IFCTRIANGULATEDFACESET = 2916149573;\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\nvar IFCTRIMMEDCURVE = 3593883385;\nvar IFCTUBEBUNDLE = 3026737570;\nvar IFCTUBEBUNDLETYPE = 1600972822;\nvar IFCTYPEOBJECT = 1628702193;\nvar IFCTYPEPROCESS = 3736923433;\nvar IFCTYPEPRODUCT = 2347495698;\nvar IFCTYPERESOURCE = 3698973494;\nvar IFCUSHAPEPROFILEDEF = 427810014;\nvar IFCUNITASSIGNMENT = 180925521;\nvar IFCUNITARYCONTROLELEMENT = 630975310;\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\nvar IFCUNITARYEQUIPMENT = 4292641817;\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\nvar IFCVALVE = 4207607924;\nvar IFCVALVETYPE = 728799441;\nvar IFCVECTOR = 1417489154;\nvar IFCVERTEX = 2799835756;\nvar IFCVERTEXLOOP = 2759199220;\nvar IFCVERTEXPOINT = 1907098498;\nvar IFCVIBRATIONDAMPER = 1530820697;\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\nvar IFCVIBRATIONISOLATOR = 2391383451;\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\nvar IFCVIRTUALELEMENT = 2769231204;\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\nvar IFCVOIDINGFEATURE = 926996030;\nvar IFCWALL = 2391406946;\nvar IFCWALLELEMENTEDCASE = 4156078855;\nvar IFCWALLSTANDARDCASE = 3512223829;\nvar IFCWALLTYPE = 1898987631;\nvar IFCWASTETERMINAL = 4237592921;\nvar IFCWASTETERMINALTYPE = 1133259667;\nvar IFCWINDOW = 3304561284;\nvar IFCWINDOWLININGPROPERTIES = 336235671;\nvar IFCWINDOWPANELPROPERTIES = 512836454;\nvar IFCWINDOWSTANDARDCASE = 486154966;\nvar IFCWINDOWSTYLE = 1299126871;\nvar IFCWINDOWTYPE = 4009809668;\nvar IFCWORKCALENDAR = 4088093105;\nvar IFCWORKCONTROL = 1028945134;\nvar IFCWORKPLAN = 4218914973;\nvar IFCWORKSCHEDULE = 3342526732;\nvar IFCWORKTIME = 1236880293;\nvar IFCZSHAPEPROFILEDEF = 2543172580;\nvar IFCZONE = 1033361043;\nvar IfcElements = [\n  IFCACTUATOR,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCALARM,\n  IFCALIGNMENT,\n  IFCANNOTATION,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEARING,\n  IFCBOILER,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGSTOREY,\n  IFCBURNER,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLEFITTING,\n  IFCCABLESEGMENT,\n  IFCCAISSONFOUNDATION,\n  IFCCHILLER,\n  IFCCHIMNEY,\n  IFCCIVILELEMENT,\n  IFCCOIL,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMPRESSOR,\n  IFCCONDENSER,\n  IFCCONTROLLER,\n  IFCCOOLEDBEAM,\n  IFCCOOLINGTOWER,\n  IFCCOVERING,\n  IFCCURTAINWALL,\n  IFCDAMPER,\n  IFCDEEPFOUNDATION,\n  IFCDISCRETEACCESSORY,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONPORT,\n  IFCDOOR,\n  IFCDOORSTANDARDCASE,\n  IFCDUCTFITTING,\n  IFCDUCTSEGMENT,\n  IFCDUCTSILENCER,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICMOTOR,\n  IFCELECTRICTIMECONTROL,\n  IFCELEMENT,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTCOMPONENT,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENGINE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATOR,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAN,\n  IFCFASTENER,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILTER,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFLOWCONTROLLER,\n  IFCFLOWFITTING,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWMETER,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFOOTING,\n  IFCFURNISHINGELEMENT,\n  IFCFURNITURE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGRID,\n  IFCHEATEXCHANGER,\n  IFCHUMIDIFIER,\n  IFCINTERCEPTOR,\n  IFCJUNCTIONBOX,\n  IFCLAMP,\n  IFCLIGHTFIXTURE,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCMECHANICALFASTENER,\n  IFCMEDICALDEVICE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMOTORCONNECTION,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOUTLET,\n  IFCPILE,\n  IFCPIPEFITTING,\n  IFCPIPESEGMENT,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPROJECTIONELEMENT,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROXY,\n  IFCPUMP,\n  IFCRAILING,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCREFERENT,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGMESH,\n  IFCROOF,\n  IFCSANITARYTERMINAL,\n  IFCSENSOR,\n  IFCSHADINGDEVICE,\n  IFCSITE,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSOLARDEVICE,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPATIALELEMENT,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALZONE,\n  IFCSTACKTERMINAL,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSURFACEFEATURE,\n  IFCSWITCHINGDEVICE,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCTANK,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONCONDUIT,\n  IFCTRANSFORMER,\n  IFCTRANSPORTELEMENT,\n  IFCTUBEBUNDLE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYEQUIPMENT,\n  IFCVALVE,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONISOLATOR,\n  IFCVIRTUALELEMENT,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWASTETERMINAL,\n  IFCWINDOW,\n  IFCWINDOWSTANDARDCASE\n];\n\n// dist/ifc2x4_helper.ts\nvar FromRawLineData = {};\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTOR] = (d) => {\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTORROLE] = (d) => {\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATOR] = (d) => {\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADDRESS] = (d) => {\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARM] = (d) => {\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALARMTYPE] = (d) => {\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT] = (d) => {\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATION] = (d) => {\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLICATION] = (d) => {\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVAL] = (d) => {\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASSET] = (d) => {\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAM] = (d) => {\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEAMTYPE] = (d) => {\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARING] = (d) => {\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBLOCK] = (d) => {\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILER] = (d) => {\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOILERTYPE] = (d) => {\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGE] = (d) => {\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBRIDGEPART] = (d) => {\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDING] = (d) => {\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNER] = (d) => {\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCBURNERTYPE] = (d) => {\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTING] = (d) => {\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLER] = (d) => {\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEY] = (d) => {\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLE] = (d) => {\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOIL] = (d) => {\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOILTYPE] = (d) => {\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGB] = (d) => {\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMN] = (d) => {\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSER] = (d) => {\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONIC] = (d) => {\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRAINT] = (d) => {\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXT] = (d) => {\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROL] = (d) => {\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLER] = (d) => {\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTITEM] = (d) => {\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOSTVALUE] = (d) => {\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERING] = (d) => {\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCSGSOLID] = (d) => {\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALL] = (d) => {\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVE] = (d) => {\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLE] = (d) => {\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPER] = (d) => {\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDIRECTION] = (d) => {\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOOR] = (d) => {\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORSTYLE] = (d) => {\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDOORTYPE] = (d) => {\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTING] = (d) => {\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGE] = (d) => {\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGECURVE] = (d) => {\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEDGELOOP] = (d) => {\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENT] = (d) => {\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSE] = (d) => {\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINE] = (d) => {\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCENGINETYPE] = (d) => {\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATOR] = (d) => {\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENT] = (d) => {\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTIME] = (d) => {\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEVENTTYPE] = (d) => {\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACE] = (d) => {\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEBOUND] = (d) => {\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACESURFACE] = (d) => {\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREP] = (d) => {\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITY] = (d) => {\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFACILITYPART] = (d) => {\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFAN] = (d) => {\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFANTYPE] = (d) => {\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENER] = (d) => {\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTER] = (d) => {\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFILTERTYPE] = (d) => {\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTING] = (d) => {\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETER] = (d) => {\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTING] = (d) => {\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURE] = (d) => {\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRID] = (d) => {\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDAXIS] = (d) => {\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCGROUP] = (d) => {\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCINVENTORY] = (d) => {\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAGTIME] = (d) => {\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMP] = (d) => {\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLAMPTYPE] = (d) => {\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINE] = (d) => {\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCLOOP] = (d) => {\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIAL] = (d) => {\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALLIST] = (d) => {\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBER] = (d) => {\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMETRIC] = (d) => {\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECT] = (d) => {\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOBJECTIVE] = (d) => {\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOCCUPANT] = (d) => {\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENSHELL] = (d) => {\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATION] = (d) => {\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLET] = (d) => {\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPATH] = (d) => {\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPCURVE] = (d) => {\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERMIT] = (d) => {\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSON] = (d) => {\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILE] = (d) => {\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPILETYPE] = (d) => {\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTING] = (d) => {\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLACEMENT] = (d) => {\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANARBOX] = (d) => {\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLANE] = (d) => {\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATE] = (d) => {\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPLATETYPE] = (d) => {\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINT] = (d) => {\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLOOP] = (d) => {\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOLYLINE] = (d) => {\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPORT] = (d) => {\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURE] = (d) => {\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROCESS] = (d) => {\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCT] = (d) => {\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEDEF] = (d) => {\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECT] = (d) => {\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTORDER] = (d) => {\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTY] = (d) => {\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSET] = (d) => {\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPROXY] = (d) => {\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMP] = (d) => {\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCPUMPTYPE] = (d) => {\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYSET] = (d) => {\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILING] = (d) => {\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMP] = (d) => {\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRAMPTYPE] = (d) => {\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENCE] = (d) => {\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREFERENT] = (d) => {\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNS] = (d) => {\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTS] = (d) => {\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECLARES] = (d) => {\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINES] = (d) => {\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELNESTS] = (d) => {\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATION] = (d) => {\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCE] = (d) => {\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRESOURCETIME] = (d) => {\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOF] = (d) => {\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOFTYPE] = (d) => {\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROOT] = (d) => {\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIUNIT] = (d) => {\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSEAMCURVE] = (d) => {\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSOR] = (d) => {\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSENSORTYPE] = (d) => {\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSITE] = (d) => {\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLAB] = (d) => {\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLABTYPE] = (d) => {\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACE] = (d) => {\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATER] = (d) => {\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPACETYPE] = (d) => {\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONE] = (d) => {\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERE] = (d) => {\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIR] = (d) => {\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSUBEDGE] = (d) => {\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACE] = (d) => {\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVE] = (d) => {\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEM] = (d) => {\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLE] = (d) => {\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTABLEROW] = (d) => {\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANK] = (d) => {\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTANKTYPE] = (d) => {\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASK] = (d) => {\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIME] = (d) => {\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTASKTYPE] = (d) => {\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDON] = (d) => {\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTENDONTYPE] = (d) => {\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIES] = (d) => {\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMER] = (d) => {\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVE] = (d) => {\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVALVETYPE] = (d) => {\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVECTOR] = (d) => {\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEX] = (d) => {\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALL] = (d) => {\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWALLTYPE] = (d) => {\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOW] = (d) => {\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKCONTROL] = (d) => {\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKPLAN] = (d) => {\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCWORKTIME] = (d) => {\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\n};\nFromRawLineData[IFCZONE] = (d) => {\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\n};\nvar Handle = class {\n  constructor(id) {\n    this.value = id;\n  }\n  toTape(args) {\n    args.push({ type: 5, value: this.value });\n  }\n};\nfunction Value(type, value) {\n  return { t: type, v: value };\n}\nvar IfcAbsorbedDoseMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAccelerationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAmountOfSubstanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAngularVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcAreaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBinary = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoolean = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcBoxAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCardinalPointReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcContextDependentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCountMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcCurvatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDate = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDateTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInMonthNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDayInWeekNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDescriptiveMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDimensionCount = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDoseEquivalentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDuration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcDynamicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCapacitanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricChargeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricConductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricCurrentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcElectricVoltageMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcEnergyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontVariant = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFontWeight = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcGloballyUniqueId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcHeatingValueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIdentifier = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIlluminanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInductanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIntegerCountRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIonConcentrationMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcIsothermalMoistureCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcKinematicViscosityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLabel = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLanguageId = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLinearVelocityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLogical = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityDistributionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcLuminousIntensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMagneticFluxMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassDensityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMassPerLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfElasticityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcModulusOfSubgradeReactionMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMoistureDiffusivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMolecularWeightMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMomentOfInertiaMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonetaryMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcMonthInYearNumber = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNonNegativeLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNormalisedRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcNumericMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPHMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcParameterValue = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlanarForceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveInteger = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveLengthMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositivePlaneAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPositiveRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPresentableText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRadioActivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRatioMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcReal = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalFrequencyMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalMassMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcRotationalStiffnessMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSectionalAreaIntegralMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcShearModulusMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSolidAngleMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPowerMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureLevelMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSoundPressureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecificHeatCapacityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularExponent = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcSpecularRoughness = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureGradientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTemperatureRateOfChangeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcText = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextAlignment = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextDecoration = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextFontName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTextTransformation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalAdmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalConductivityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalExpansionCoefficientMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalResistanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermalTransmittanceMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcThermodynamicTemperatureMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTime = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTimeStamp = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcTorqueMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcURIReference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVaporPermeabilityMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumeMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcVolumetricFlowRateMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingConstantMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcWarpingMomentMeasure = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nvar IfcActionRequestTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\nIfcActionRequestTypeEnum.FAX = \"FAX\";\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\nIfcActionRequestTypeEnum.POST = \"POST\";\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionSourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\nIfcActionSourceTypeEnum.ICE = \"ICE\";\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActuatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAddressTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\nIfcAddressTypeEnum.SITE = \"SITE\";\nIfcAddressTypeEnum.HOME = \"HOME\";\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcAirTerminalBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlarmTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlarmTypeEnum.BELL = \"BELL\";\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAlignmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisModelTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAnalysisTheoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcArithmeticOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\nvar IfcAssemblyPlaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcAudioVisualApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBSplineCurveForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBSplineSurfaceForm = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBeamTypeEnum.BEAM = \"BEAM\";\nIfcBeamTypeEnum.JOIST = \"JOIST\";\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeDisplacementEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBearingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\nIfcBearingTypeEnum.POT = \"POT\";\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\nIfcBearingTypeEnum.DISK = \"DISK\";\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBenchmarkEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\nvar IfcBoilerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBoilerTypeEnum.WATER = \"WATER\";\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBooleanOperator = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBooleanOperator.UNION = \"UNION\";\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\nvar IfcBridgePartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcBridgePartTypeEnum.DECK = \"DECK\";\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBridgePartTypeEnum.PIER = \"PIER\";\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBridgeTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementPartTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingElementProxyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBuildingSystemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcBurnerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableCarrierSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCableSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCaissonFoundationTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChangeActionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\nIfcChangeActionEnum.ADDED = \"ADDED\";\nIfcChangeActionEnum.DELETED = \"DELETED\";\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChillerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcChimneyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoilTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcColumnTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCommunicationsApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcComplexPropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\nvar IfcCompressorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCondenserTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstraintEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstraintEnum.HARD = \"HARD\";\nIfcConstraintEnum.SOFT = \"SOFT\";\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionEquipmentResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcConstructionMaterialResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcConstructionProductResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcControllerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCooledBeamTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoolingTowerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostItemTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCostScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCoveringTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\nIfcCoveringTypeEnum.COPING = \"COPING\";\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCrewResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurtainWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcCurveInterpolationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDataOriginEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDerivedUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcDirectionSenseEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\nvar IfcDiscreteAccessoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionChamberElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionPortTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDistributionSystemEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\nIfcDistributionSystemEnum.DATA = \"DATA\";\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\nIfcDistributionSystemEnum.GAS = \"GAS\";\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\nIfcDistributionSystemEnum.OIL = \"OIL\";\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\nIfcDistributionSystemEnum.TV = \"TV\";\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\nIfcDistributionSystemEnum.VENT = \"VENT\";\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentConfidentialityEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDocumentStatusEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeEnum.DOOR = \"DOOR\";\nIfcDoorTypeEnum.GATE = \"GATE\";\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDoorTypeOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcDuctSilencerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricApplianceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricDistributionBoardTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricGeneratorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricMotorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricMotorTypeEnum.DC = \"DC\";\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElectricTimeControlTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementAssemblyTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcElementCompositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\nvar IfcEngineTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporativeCoolerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEvaporatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTriggerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcEventTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcExternalSpatialElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\nIfcFastenerTypeEnum.WELD = \"WELD\";\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFilterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFireSuppressionTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\nIfcFlowDirectionEnum.SINK = \"SINK\";\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowInstrumentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFlowMeterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFootingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcFurnitureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\nIfcFurnitureTypeEnum.DESK = \"DESK\";\nIfcFurnitureTypeEnum.BED = \"BED\";\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeographicElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGeometricProjectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcGlobalOrLocalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\nvar IfcGridTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHeatExchangerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcHumidifierTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInterceptorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\nIfcInterceptorTypeEnum.OIL = \"OIL\";\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInternalOrExternalEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcInventoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcJunctionBoxTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcKnotType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcLaborResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLampTypeEnum.LED = \"LED\";\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\nIfcLampTypeEnum.OLED = \"OLED\";\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLayerSetDirectionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\nvar IfcLightDistributionCurveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightEmissionSourceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLightFixtureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLoadGroupTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcLogicalOperatorEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\nvar IfcMechanicalFastenerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMedicalDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMemberTypeEnum.BRACE = \"BRACE\";\nIfcMemberTypeEnum.CHORD = \"CHORD\";\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\nIfcMemberTypeEnum.MULLION = \"MULLION\";\nIfcMemberTypeEnum.PLATE = \"PLATE\";\nIfcMemberTypeEnum.POST = \"POST\";\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\nIfcMemberTypeEnum.STRUT = \"STRUT\";\nIfcMemberTypeEnum.STUD = \"STUD\";\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcMotorConnectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcNullStyle = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcNullStyle.NULL = \"NULL\";\nvar IfcObjectTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\nIfcObjectTypeEnum.GROUP = \"GROUP\";\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcObjectiveEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOccupantTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOpeningElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcOutletTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPerformanceHistoryTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermeableCoveringOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPermitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\nIfcPermitTypeEnum.WORK = \"WORK\";\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPhysicalOrVirtualEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPileTypeEnum.BORED = \"BORED\";\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\nIfcPileTypeEnum.COHESION = \"COHESION\";\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeFittingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPipeSegmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPlateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\nIfcPlateTypeEnum.SHEET = \"SHEET\";\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPreferredSurfaceCurveRepresentation = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\nvar IfcProcedureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProfileTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProfileTypeEnum.CURVE = \"CURVE\";\nIfcProfileTypeEnum.AREA = \"AREA\";\nvar IfcProjectOrderTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProjectedOrTrueLengthEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\nvar IfcProjectionElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPropertySetTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcProtectiveDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcPumpTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRailingTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRampTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRecurrenceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\nvar IfcReferentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\nIfcReferentTypeEnum.STATION = \"STATION\";\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReflectanceMethodEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\nIfcReflectanceMethodEnum.MATT = \"MATT\";\nIfcReflectanceMethodEnum.METAL = \"METAL\";\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\nIfcReinforcingBarRoleEnum.RING = \"RING\";\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingBarSurfaceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\nvar IfcReinforcingBarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\nIfcReinforcingBarTypeEnum.RING = \"RING\";\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcReinforcingMeshTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcRoleEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\nIfcRoleEnum.CLIENT = \"CLIENT\";\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\nIfcRoleEnum.OWNER = \"OWNER\";\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\nIfcRoleEnum.RESELLER = \"RESELLER\";\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcRoofTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSIPrefix = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIPrefix.EXA = \"EXA\";\nIfcSIPrefix.PETA = \"PETA\";\nIfcSIPrefix.TERA = \"TERA\";\nIfcSIPrefix.GIGA = \"GIGA\";\nIfcSIPrefix.MEGA = \"MEGA\";\nIfcSIPrefix.KILO = \"KILO\";\nIfcSIPrefix.HECTO = \"HECTO\";\nIfcSIPrefix.DECA = \"DECA\";\nIfcSIPrefix.DECI = \"DECI\";\nIfcSIPrefix.CENTI = \"CENTI\";\nIfcSIPrefix.MILLI = \"MILLI\";\nIfcSIPrefix.MICRO = \"MICRO\";\nIfcSIPrefix.NANO = \"NANO\";\nIfcSIPrefix.PICO = \"PICO\";\nIfcSIPrefix.FEMTO = \"FEMTO\";\nIfcSIPrefix.ATTO = \"ATTO\";\nvar IfcSIUnitName = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSIUnitName.AMPERE = \"AMPERE\";\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\nIfcSIUnitName.CANDELA = \"CANDELA\";\nIfcSIUnitName.COULOMB = \"COULOMB\";\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\nIfcSIUnitName.FARAD = \"FARAD\";\nIfcSIUnitName.GRAM = \"GRAM\";\nIfcSIUnitName.GRAY = \"GRAY\";\nIfcSIUnitName.HENRY = \"HENRY\";\nIfcSIUnitName.HERTZ = \"HERTZ\";\nIfcSIUnitName.JOULE = \"JOULE\";\nIfcSIUnitName.KELVIN = \"KELVIN\";\nIfcSIUnitName.LUMEN = \"LUMEN\";\nIfcSIUnitName.LUX = \"LUX\";\nIfcSIUnitName.METRE = \"METRE\";\nIfcSIUnitName.MOLE = \"MOLE\";\nIfcSIUnitName.NEWTON = \"NEWTON\";\nIfcSIUnitName.OHM = \"OHM\";\nIfcSIUnitName.PASCAL = \"PASCAL\";\nIfcSIUnitName.RADIAN = \"RADIAN\";\nIfcSIUnitName.SECOND = \"SECOND\";\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\nIfcSIUnitName.TESLA = \"TESLA\";\nIfcSIUnitName.VOLT = \"VOLT\";\nIfcSIUnitName.WATT = \"WATT\";\nIfcSIUnitName.WEBER = \"WEBER\";\nvar IfcSanitaryTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSectionTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\nvar IfcSensorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSequenceEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSequenceEnum.START_START = \"START_START\";\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcShadingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSimplePropertyTemplateTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\nvar IfcSlabTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\nIfcSlabTypeEnum.ROOF = \"ROOF\";\nIfcSlabTypeEnum.LANDING = \"LANDING\";\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\nIfcSlabTypeEnum.PAVING = \"PAVING\";\nIfcSlabTypeEnum.WEARING = \"WEARING\";\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSolarDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceHeaterTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpaceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\nIfcSpaceTypeEnum.GFA = \"GFA\";\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSpatialZoneTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStackTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairFlightTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStairTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStateEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStateEnum.READWRITE = \"READWRITE\";\nIfcStateEnum.READONLY = \"READONLY\";\nIfcStateEnum.LOCKED = \"LOCKED\";\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\nvar IfcStructuralCurveActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralCurveMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceActivityTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcStructuralSurfaceMemberTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSubContractResourceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSurfaceSide = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\nIfcSurfaceSide.BOTH = \"BOTH\";\nvar IfcSwitchingDeviceTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcSystemFurnitureElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTankTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTankTypeEnum.BASIN = \"BASIN\";\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskDurationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTaskTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\nIfcTaskTypeEnum.MOVE = \"MOVE\";\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonAnchorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonConduitTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTendonTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTendonTypeEnum.BAR = \"BAR\";\nIfcTendonTypeEnum.COATED = \"COATED\";\nIfcTendonTypeEnum.STRAND = \"STRAND\";\nIfcTendonTypeEnum.WIRE = \"WIRE\";\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTextPath = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTextPath.LEFT = \"LEFT\";\nIfcTextPath.RIGHT = \"RIGHT\";\nIfcTextPath.UP = \"UP\";\nIfcTextPath.DOWN = \"DOWN\";\nvar IfcTimeSeriesDataTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransformerTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTransitionCode = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\nvar IfcTransitionCurveType = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\nvar IfcTransportElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcTrimmingPreference = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\nvar IfcTubeBundleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\nvar IfcUnitaryControlElementTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcUnitaryEquipmentTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcValveTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\nIfcValveTypeEnum.CHECK = \"CHECK\";\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\nIfcValveTypeEnum.MIXING = \"MIXING\";\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationDamperTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVibrationIsolatorTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcVoidingFeatureTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWallTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWasteTerminalTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowPanelPositionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleConstructionEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowStyleOperationEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWindowTypePartitioningEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkCalendarTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkPlanTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcWorkScheduleTypeEnum = class {\n  constructor(v) {\n    this.value = v;\n  }\n};\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\nvar IfcActionRequest = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    return args;\n  }\n};\nvar IfcActorRole = class {\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Role = Role;\n    this.UserDefinedRole = UserDefinedRole;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Role = tape[ptr++];\n    let UserDefinedRole = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Role);\n    ;\n    args.push(this.UserDefinedRole);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcActuator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcActuatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcAdvancedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcAdvancedFace = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecovery = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAirToAirHeatRecoveryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarm = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlarmType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontal = class {\n  constructor(expressID, type, StartDistAlong, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartDistAlong = StartDistAlong;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartDistAlong = tape[ptr++];\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DHorizontalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.CurveGeometry = CurveGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let CurveGeometry = tape[ptr++];\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.CurveGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegCircularArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.Radius = Radius;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegLine = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerSegParabolicArc = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n    this.ParabolaConstant = ParabolaConstant;\n    this.IsConvex = IsConvex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    let ParabolaConstant = tape[ptr++];\n    let IsConvex = tape[ptr++];\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    args.push(this.ParabolaConstant);\n    ;\n    args.push(this.IsConvex);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVertical = class {\n  constructor(expressID, type, Segments) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    return new IfcAlignment2DVertical(expressID, type, Segments);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    return args;\n  }\n};\nvar IfcAlignment2DVerticalSegment = class {\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TangentialContinuity = TangentialContinuity;\n    this.StartTag = StartTag;\n    this.EndTag = EndTag;\n    this.StartDistAlong = StartDistAlong;\n    this.HorizontalLength = HorizontalLength;\n    this.StartHeight = StartHeight;\n    this.StartGradient = StartGradient;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TangentialContinuity = tape[ptr++];\n    let StartTag = tape[ptr++];\n    let EndTag = tape[ptr++];\n    let StartDistAlong = tape[ptr++];\n    let HorizontalLength = tape[ptr++];\n    let StartHeight = tape[ptr++];\n    let StartGradient = tape[ptr++];\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TangentialContinuity);\n    ;\n    args.push(this.StartTag);\n    ;\n    args.push(this.EndTag);\n    ;\n    args.push(this.StartDistAlong);\n    ;\n    args.push(this.HorizontalLength);\n    ;\n    args.push(this.StartHeight);\n    ;\n    args.push(this.StartGradient);\n    ;\n    return args;\n  }\n};\nvar IfcAlignmentCurve = class {\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Horizontal = Horizontal;\n    this.Vertical = Vertical;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Horizontal = tape[ptr++];\n    let Vertical = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Horizontal);\n    ;\n    args.push(this.Vertical);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcAnnotationFillArea = class {\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcApplication = class {\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ApplicationDeveloper = ApplicationDeveloper;\n    this.Version = Version;\n    this.ApplicationFullName = ApplicationFullName;\n    this.ApplicationIdentifier = ApplicationIdentifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ApplicationDeveloper = tape[ptr++];\n    let Version = tape[ptr++];\n    let ApplicationFullName = tape[ptr++];\n    let ApplicationIdentifier = tape[ptr++];\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ApplicationDeveloper);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.ApplicationFullName);\n    ;\n    args.push(this.ApplicationIdentifier);\n    ;\n    return args;\n  }\n};\nvar IfcAppliedValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcApproval = class {\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.TimeOfApproval = TimeOfApproval;\n    this.Status = Status;\n    this.Level = Level;\n    this.Qualifier = Qualifier;\n    this.RequestingApproval = RequestingApproval;\n    this.GivingApproval = GivingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TimeOfApproval = tape[ptr++];\n    let Status = tape[ptr++];\n    let Level = tape[ptr++];\n    let Qualifier = tape[ptr++];\n    let RequestingApproval = tape[ptr++];\n    let GivingApproval = tape[ptr++];\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TimeOfApproval);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.Level);\n    ;\n    args.push(this.Qualifier);\n    ;\n    args.push(this.RequestingApproval);\n    ;\n    args.push(this.GivingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingApproval = RelatingApproval;\n    this.RelatedApprovals = RelatedApprovals;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    let RelatedApprovals = tape[ptr++];\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    args.push(this.RelatedApprovals);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryClosedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryOpenProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    return args;\n  }\n};\nvar IfcArbitraryProfileDefWithVoids = class {\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.OuterCurve = OuterCurve;\n    this.InnerCurves = InnerCurves;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let OuterCurve = tape[ptr++];\n    let InnerCurves = tape[ptr++];\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.OuterCurve);\n    ;\n    args.push(this.InnerCurves);\n    ;\n    return args;\n  }\n};\nvar IfcAsset = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.OriginalValue = OriginalValue;\n    this.CurrentValue = CurrentValue;\n    this.TotalReplacementCost = TotalReplacementCost;\n    this.Owner = Owner;\n    this.User = User;\n    this.ResponsiblePerson = ResponsiblePerson;\n    this.IncorporationDate = IncorporationDate;\n    this.DepreciatedValue = DepreciatedValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let TotalReplacementCost = tape[ptr++];\n    let Owner = tape[ptr++];\n    let User = tape[ptr++];\n    let ResponsiblePerson = tape[ptr++];\n    let IncorporationDate = tape[ptr++];\n    let DepreciatedValue = tape[ptr++];\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.TotalReplacementCost);\n    ;\n    args.push(this.Owner);\n    ;\n    args.push(this.User);\n    ;\n    args.push(this.ResponsiblePerson);\n    ;\n    args.push(this.IncorporationDate);\n    ;\n    args.push(this.DepreciatedValue);\n    ;\n    return args;\n  }\n};\nvar IfcAsymmetricIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomFlangeWidth = BottomFlangeWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.BottomFlangeThickness = BottomFlangeThickness;\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\n    this.TopFlangeWidth = TopFlangeWidth;\n    this.TopFlangeThickness = TopFlangeThickness;\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\n    this.BottomFlangeSlope = BottomFlangeSlope;\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\n    this.TopFlangeSlope = TopFlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomFlangeWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let BottomFlangeThickness = tape[ptr++];\n    let BottomFlangeFilletRadius = tape[ptr++];\n    let TopFlangeWidth = tape[ptr++];\n    let TopFlangeThickness = tape[ptr++];\n    let TopFlangeFilletRadius = tape[ptr++];\n    let BottomFlangeEdgeRadius = tape[ptr++];\n    let BottomFlangeSlope = tape[ptr++];\n    let TopFlangeEdgeRadius = tape[ptr++];\n    let TopFlangeSlope = tape[ptr++];\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomFlangeWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.BottomFlangeThickness);\n    ;\n    args.push(this.BottomFlangeFilletRadius);\n    ;\n    args.push(this.TopFlangeWidth);\n    ;\n    args.push(this.TopFlangeThickness);\n    ;\n    args.push(this.TopFlangeFilletRadius);\n    ;\n    args.push(this.BottomFlangeEdgeRadius);\n    ;\n    args.push(this.BottomFlangeSlope);\n    ;\n    args.push(this.TopFlangeEdgeRadius);\n    ;\n    args.push(this.TopFlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAudioVisualApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcAxis1Placement = class {\n  constructor(expressID, type, Location, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement2D = class {\n  constructor(expressID, type, Location, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcAxis2Placement3D = class {\n  constructor(expressID, type, Location, Axis, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Axis = Axis;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Axis = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurve = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurface = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    return args;\n  }\n};\nvar IfcBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBearingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBlobTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.RasterFormat = RasterFormat;\n    this.RasterCode = RasterCode;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let RasterFormat = tape[ptr++];\n    let RasterCode = tape[ptr++];\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.RasterFormat);\n    ;\n    args.push(this.RasterCode);\n    ;\n    return args;\n  }\n};\nvar IfcBlock = class {\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.ZLength = ZLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let ZLength = tape[ptr++];\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.ZLength);\n    ;\n    return args;\n  }\n};\nvar IfcBoiler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBoilerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanClippingResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBooleanResult = class {\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Operator = Operator;\n    this.FirstOperand = FirstOperand;\n    this.SecondOperand = SecondOperand;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Operator = tape[ptr++];\n    let FirstOperand = tape[ptr++];\n    let SecondOperand = tape[ptr++];\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Operator);\n    ;\n    args.push(this.FirstOperand);\n    ;\n    args.push(this.SecondOperand);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcBoundaryCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryEdgeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByLengthX = tape[ptr++];\n    let TranslationalStiffnessByLengthY = tape[ptr++];\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\n    let RotationalStiffnessByLengthX = tape[ptr++];\n    let RotationalStiffnessByLengthY = tape[ptr++];\n    let RotationalStiffnessByLengthZ = tape[ptr++];\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByLengthX);\n    ;\n    args.push(this.TranslationalStiffnessByLengthY);\n    ;\n    args.push(this.TranslationalStiffnessByLengthZ);\n    ;\n    args.push(this.RotationalStiffnessByLengthX);\n    ;\n    args.push(this.RotationalStiffnessByLengthY);\n    ;\n    args.push(this.RotationalStiffnessByLengthZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryFaceCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessByAreaX = tape[ptr++];\n    let TranslationalStiffnessByAreaY = tape[ptr++];\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessByAreaX);\n    ;\n    args.push(this.TranslationalStiffnessByAreaY);\n    ;\n    args.push(this.TranslationalStiffnessByAreaZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeCondition = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    return args;\n  }\n};\nvar IfcBoundaryNodeConditionWarping = class {\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\n    this.RotationalStiffnessX = RotationalStiffnessX;\n    this.RotationalStiffnessY = RotationalStiffnessY;\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\n    this.WarpingStiffness = WarpingStiffness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TranslationalStiffnessX = tape[ptr++];\n    let TranslationalStiffnessY = tape[ptr++];\n    let TranslationalStiffnessZ = tape[ptr++];\n    let RotationalStiffnessX = tape[ptr++];\n    let RotationalStiffnessY = tape[ptr++];\n    let RotationalStiffnessZ = tape[ptr++];\n    let WarpingStiffness = tape[ptr++];\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TranslationalStiffnessX);\n    ;\n    args.push(this.TranslationalStiffnessY);\n    ;\n    args.push(this.TranslationalStiffnessZ);\n    ;\n    args.push(this.RotationalStiffnessX);\n    ;\n    args.push(this.RotationalStiffnessY);\n    ;\n    args.push(this.RotationalStiffnessZ);\n    ;\n    args.push(this.WarpingStiffness);\n    ;\n    return args;\n  }\n};\nvar IfcBoundedCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundedSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcBoundedSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcBoundingBox = class {\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Corner = Corner;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.ZDim = ZDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Corner = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let ZDim = tape[ptr++];\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Corner);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.ZDim);\n    ;\n    return args;\n  }\n};\nvar IfcBoxedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Enclosure = Enclosure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Enclosure = tape[ptr++];\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Enclosure);\n    ;\n    return args;\n  }\n};\nvar IfcBridge = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBridgePart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuilding = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\n    this.ElevationOfTerrain = ElevationOfTerrain;\n    this.BuildingAddress = BuildingAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let ElevationOfRefHeight = tape[ptr++];\n    let ElevationOfTerrain = tape[ptr++];\n    let BuildingAddress = tape[ptr++];\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.ElevationOfRefHeight);\n    ;\n    args.push(this.ElevationOfTerrain);\n    ;\n    args.push(this.BuildingAddress);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementPartType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementProxyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingStorey = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.Elevation = Elevation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let Elevation = tape[ptr++];\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.Elevation);\n    ;\n    return args;\n  }\n};\nvar IfcBuildingSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcBurner = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcBurnerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.WallThickness = WallThickness;\n    this.Girth = Girth;\n    this.InternalFilletRadius = InternalFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let Girth = tape[ptr++];\n    let InternalFilletRadius = tape[ptr++];\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.Girth);\n    ;\n    args.push(this.InternalFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableCarrierSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCableSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCaissonFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPoint = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcCartesianPoint(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCartesianPointList(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCartesianPointList2D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianPointList3D = class {\n  constructor(expressID, type, CoordList, TagList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordList = CoordList;\n    this.TagList = TagList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordList = tape[ptr++];\n    let TagList = tape[ptr++];\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordList);\n    ;\n    args.push(this.TagList);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator2DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Scale2 = Scale2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Scale2);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3D = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    return args;\n  }\n};\nvar IfcCartesianTransformationOperator3DnonUniform = class {\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Axis1 = Axis1;\n    this.Axis2 = Axis2;\n    this.LocalOrigin = LocalOrigin;\n    this.Scale = Scale;\n    this.Axis3 = Axis3;\n    this.Scale2 = Scale2;\n    this.Scale3 = Scale3;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Axis1 = tape[ptr++];\n    let Axis2 = tape[ptr++];\n    let LocalOrigin = tape[ptr++];\n    let Scale = tape[ptr++];\n    let Axis3 = tape[ptr++];\n    let Scale2 = tape[ptr++];\n    let Scale3 = tape[ptr++];\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Axis1);\n    ;\n    args.push(this.Axis2);\n    ;\n    args.push(this.LocalOrigin);\n    ;\n    args.push(this.Scale);\n    ;\n    args.push(this.Axis3);\n    ;\n    args.push(this.Scale2);\n    ;\n    args.push(this.Scale3);\n    ;\n    return args;\n  }\n};\nvar IfcCenterLineProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Curve = Curve;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Curve = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Curve);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcChiller = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChillerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimney = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcChimneyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCircle = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircle(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.WallThickness = WallThickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.WallThickness);\n    ;\n    return args;\n  }\n};\nvar IfcCircleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcCircularArcSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.Radius = Radius;\n    this.IsCCW = IsCCW;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let Radius = tape[ptr++];\n    let IsCCW = tape[ptr++];\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.IsCCW);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcCivilElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcClassification = class {\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Source = Source;\n    this.Edition = Edition;\n    this.EditionDate = EditionDate;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.ReferenceTokens = ReferenceTokens;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Source = tape[ptr++];\n    let Edition = tape[ptr++];\n    let EditionDate = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let ReferenceTokens = tape[ptr++];\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Source);\n    ;\n    args.push(this.Edition);\n    ;\n    args.push(this.EditionDate);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.ReferenceTokens);\n    ;\n    return args;\n  }\n};\nvar IfcClassificationReference = class {\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.ReferencedSource = ReferencedSource;\n    this.Description = Description;\n    this.Sort = Sort;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let ReferencedSource = tape[ptr++];\n    let Description = tape[ptr++];\n    let Sort = tape[ptr++];\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ReferencedSource);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Sort);\n    ;\n    return args;\n  }\n};\nvar IfcClosedShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcClosedShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcCoil = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoilType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgb = class {\n  constructor(expressID, type, Name, Red, Green, Blue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Red = Red;\n    this.Green = Green;\n    this.Blue = Blue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Red = tape[ptr++];\n    let Green = tape[ptr++];\n    let Blue = tape[ptr++];\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Red);\n    ;\n    args.push(this.Green);\n    ;\n    args.push(this.Blue);\n    ;\n    return args;\n  }\n};\nvar IfcColourRgbList = class {\n  constructor(expressID, type, ColourList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ColourList = ColourList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ColourList = tape[ptr++];\n    return new IfcColourRgbList(expressID, type, ColourList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ColourList);\n    ;\n    return args;\n  }\n};\nvar IfcColourSpecification = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcColourSpecification(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcColumn = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcColumnType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCommunicationsApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcComplexProperty = class {\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcComplexPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.TemplateType = TemplateType;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveOnSurface = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    return args;\n  }\n};\nvar IfcCompositeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Profiles = Profiles;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Profiles = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Profiles);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcCompressor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCompressorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenser = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCondenserType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConic = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcConic(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcConnectedFaceSet = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionCurveGeometry = class {\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CurveOnRelatingElement = tape[ptr++];\n    let CurveOnRelatedElement = tape[ptr++];\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CurveOnRelatingElement);\n    ;\n    args.push(this.CurveOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionGeometry = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcConnectionGeometry(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcConnectionPointEccentricity = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n    this.EccentricityInX = EccentricityInX;\n    this.EccentricityInY = EccentricityInY;\n    this.EccentricityInZ = EccentricityInZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    let EccentricityInX = tape[ptr++];\n    let EccentricityInY = tape[ptr++];\n    let EccentricityInZ = tape[ptr++];\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    args.push(this.EccentricityInX);\n    ;\n    args.push(this.EccentricityInY);\n    ;\n    args.push(this.EccentricityInZ);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionPointGeometry = class {\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PointOnRelatingElement = PointOnRelatingElement;\n    this.PointOnRelatedElement = PointOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PointOnRelatingElement = tape[ptr++];\n    let PointOnRelatedElement = tape[ptr++];\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PointOnRelatingElement);\n    ;\n    args.push(this.PointOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionSurfaceGeometry = class {\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceOnRelatingElement = tape[ptr++];\n    let SurfaceOnRelatedElement = tape[ptr++];\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceOnRelatingElement);\n    ;\n    args.push(this.SurfaceOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConnectionVolumeGeometry = class {\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VolumeOnRelatingElement = tape[ptr++];\n    let VolumeOnRelatedElement = tape[ptr++];\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VolumeOnRelatingElement);\n    ;\n    args.push(this.VolumeOnRelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcConstraint = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionEquipmentResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionMaterialResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionProductResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcConstructionResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    return args;\n  }\n};\nvar IfcContext = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcContextDependentUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    return args;\n  }\n};\nvar IfcController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcConversionBasedUnitWithOffset = class {\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Name = Name;\n    this.ConversionFactor = ConversionFactor;\n    this.ConversionOffset = ConversionOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Name = tape[ptr++];\n    let ConversionFactor = tape[ptr++];\n    let ConversionOffset = tape[ptr++];\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.ConversionFactor);\n    ;\n    args.push(this.ConversionOffset);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeam = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCooledBeamType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTower = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoolingTowerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateOperation = class {\n  constructor(expressID, type, SourceCRS, TargetCRS) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    return args;\n  }\n};\nvar IfcCoordinateReferenceSystem = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    return args;\n  }\n};\nvar IfcCostItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.CostValues = CostValues;\n    this.CostQuantities = CostQuantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let CostValues = tape[ptr++];\n    let CostQuantities = tape[ptr++];\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.CostValues);\n    ;\n    args.push(this.CostQuantities);\n    ;\n    return args;\n  }\n};\nvar IfcCostSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.SubmittedOn = SubmittedOn;\n    this.UpdateDate = UpdateDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let SubmittedOn = tape[ptr++];\n    let UpdateDate = tape[ptr++];\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.SubmittedOn);\n    ;\n    args.push(this.UpdateDate);\n    ;\n    return args;\n  }\n};\nvar IfcCostValue = class {\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AppliedValue = AppliedValue;\n    this.UnitBasis = UnitBasis;\n    this.ApplicableDate = ApplicableDate;\n    this.FixedUntilDate = FixedUntilDate;\n    this.Category = Category;\n    this.Condition = Condition;\n    this.ArithmeticOperator = ArithmeticOperator;\n    this.Components = Components;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AppliedValue = tape[ptr++];\n    let UnitBasis = tape[ptr++];\n    let ApplicableDate = tape[ptr++];\n    let FixedUntilDate = tape[ptr++];\n    let Category = tape[ptr++];\n    let Condition = tape[ptr++];\n    let ArithmeticOperator = tape[ptr++];\n    let Components = tape[ptr++];\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AppliedValue);\n    ;\n    args.push(this.UnitBasis);\n    ;\n    args.push(this.ApplicableDate);\n    ;\n    args.push(this.FixedUntilDate);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Condition);\n    ;\n    args.push(this.ArithmeticOperator);\n    ;\n    args.push(this.Components);\n    ;\n    return args;\n  }\n};\nvar IfcCovering = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCoveringType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCrewResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCsgPrimitive3D = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcCsgPrimitive3D(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcCsgSolid = class {\n  constructor(expressID, type, TreeRootExpression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TreeRootExpression = TreeRootExpression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TreeRootExpression = tape[ptr++];\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TreeRootExpression);\n    ;\n    return args;\n  }\n};\nvar IfcCurrencyRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\n    this.ExchangeRate = ExchangeRate;\n    this.RateDateTime = RateDateTime;\n    this.RateSource = RateSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMonetaryUnit = tape[ptr++];\n    let RelatedMonetaryUnit = tape[ptr++];\n    let ExchangeRate = tape[ptr++];\n    let RateDateTime = tape[ptr++];\n    let RateSource = tape[ptr++];\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMonetaryUnit);\n    ;\n    args.push(this.RelatedMonetaryUnit);\n    ;\n    args.push(this.ExchangeRate);\n    ;\n    args.push(this.RateDateTime);\n    ;\n    args.push(this.RateSource);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurtainWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcCurve = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcCurve(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcCurveBoundedPlane = class {\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.OuterBoundary = OuterBoundary;\n    this.InnerBoundaries = InnerBoundaries;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let OuterBoundary = tape[ptr++];\n    let InnerBoundaries = tape[ptr++];\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.OuterBoundary);\n    ;\n    args.push(this.InnerBoundaries);\n    ;\n    return args;\n  }\n};\nvar IfcCurveBoundedSurface = class {\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.Boundaries = Boundaries;\n    this.ImplicitOuter = ImplicitOuter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let Boundaries = tape[ptr++];\n    let ImplicitOuter = tape[ptr++];\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.Boundaries);\n    ;\n    args.push(this.ImplicitOuter);\n    ;\n    return args;\n  }\n};\nvar IfcCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyle = class {\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveWidth = CurveWidth;\n    this.CurveColour = CurveColour;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveWidth = tape[ptr++];\n    let CurveColour = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveWidth);\n    ;\n    args.push(this.CurveColour);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFont = class {\n  constructor(expressID, type, Name, PatternList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PatternList = PatternList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PatternList = tape[ptr++];\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PatternList);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontAndScaling = class {\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.CurveFont = CurveFont;\n    this.CurveFontScaling = CurveFontScaling;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let CurveFont = tape[ptr++];\n    let CurveFontScaling = tape[ptr++];\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.CurveFont);\n    ;\n    args.push(this.CurveFontScaling);\n    ;\n    return args;\n  }\n};\nvar IfcCurveStyleFontPattern = class {\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VisibleSegmentLength = VisibleSegmentLength;\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VisibleSegmentLength = tape[ptr++];\n    let InvisibleSegmentLength = tape[ptr++];\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VisibleSegmentLength);\n    ;\n    args.push(this.InvisibleSegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcCylindricalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundation = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDeepFoundationType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnit = class {\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n    this.UnitType = UnitType;\n    this.UserDefinedType = UserDefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let UserDefinedType = tape[ptr++];\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.UserDefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDerivedUnitElement = class {\n  constructor(expressID, type, Unit, Exponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Unit = Unit;\n    this.Exponent = Exponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Unit = tape[ptr++];\n    let Exponent = tape[ptr++];\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Unit);\n    ;\n    args.push(this.Exponent);\n    ;\n    return args;\n  }\n};\nvar IfcDimensionalExponents = class {\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LengthExponent = LengthExponent;\n    this.MassExponent = MassExponent;\n    this.TimeExponent = TimeExponent;\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LengthExponent = tape[ptr++];\n    let MassExponent = tape[ptr++];\n    let TimeExponent = tape[ptr++];\n    let ElectricCurrentExponent = tape[ptr++];\n    let ThermodynamicTemperatureExponent = tape[ptr++];\n    let AmountOfSubstanceExponent = tape[ptr++];\n    let LuminousIntensityExponent = tape[ptr++];\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LengthExponent);\n    ;\n    args.push(this.MassExponent);\n    ;\n    args.push(this.TimeExponent);\n    ;\n    args.push(this.ElectricCurrentExponent);\n    ;\n    args.push(this.ThermodynamicTemperatureExponent);\n    ;\n    args.push(this.AmountOfSubstanceExponent);\n    ;\n    args.push(this.LuminousIntensityExponent);\n    ;\n    return args;\n  }\n};\nvar IfcDirection = class {\n  constructor(expressID, type, DirectionRatios) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DirectionRatios = DirectionRatios;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DirectionRatios = tape[ptr++];\n    return new IfcDirection(expressID, type, DirectionRatios);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DirectionRatios);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDiscreteAccessoryType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistanceExpression = class {\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DistanceAlong = DistanceAlong;\n    this.OffsetLateral = OffsetLateral;\n    this.OffsetVertical = OffsetVertical;\n    this.OffsetLongitudinal = OffsetLongitudinal;\n    this.AlongHorizontal = AlongHorizontal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DistanceAlong = tape[ptr++];\n    let OffsetLateral = tape[ptr++];\n    let OffsetVertical = tape[ptr++];\n    let OffsetLongitudinal = tape[ptr++];\n    let AlongHorizontal = tape[ptr++];\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DistanceAlong);\n    ;\n    args.push(this.OffsetLateral);\n    ;\n    args.push(this.OffsetVertical);\n    ;\n    args.push(this.OffsetLongitudinal);\n    ;\n    args.push(this.AlongHorizontal);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionChamberElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionCircuit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionFlowElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.FlowDirection = FlowDirection;\n    this.PredefinedType = PredefinedType;\n    this.SystemType = SystemType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let FlowDirection = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let SystemType = tape[ptr++];\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.FlowDirection);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.SystemType);\n    ;\n    return args;\n  }\n};\nvar IfcDistributionSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformation = class {\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Location = Location;\n    this.Purpose = Purpose;\n    this.IntendedUse = IntendedUse;\n    this.Scope = Scope;\n    this.Revision = Revision;\n    this.DocumentOwner = DocumentOwner;\n    this.Editors = Editors;\n    this.CreationTime = CreationTime;\n    this.LastRevisionTime = LastRevisionTime;\n    this.ElectronicFormat = ElectronicFormat;\n    this.ValidFrom = ValidFrom;\n    this.ValidUntil = ValidUntil;\n    this.Confidentiality = Confidentiality;\n    this.Status = Status;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Location = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let IntendedUse = tape[ptr++];\n    let Scope = tape[ptr++];\n    let Revision = tape[ptr++];\n    let DocumentOwner = tape[ptr++];\n    let Editors = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let LastRevisionTime = tape[ptr++];\n    let ElectronicFormat = tape[ptr++];\n    let ValidFrom = tape[ptr++];\n    let ValidUntil = tape[ptr++];\n    let Confidentiality = tape[ptr++];\n    let Status = tape[ptr++];\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.IntendedUse);\n    ;\n    args.push(this.Scope);\n    ;\n    args.push(this.Revision);\n    ;\n    args.push(this.DocumentOwner);\n    ;\n    args.push(this.Editors);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.LastRevisionTime);\n    ;\n    args.push(this.ElectronicFormat);\n    ;\n    args.push(this.ValidFrom);\n    ;\n    args.push(this.ValidUntil);\n    ;\n    args.push(this.Confidentiality);\n    ;\n    args.push(this.Status);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentInformationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingDocument = RelatingDocument;\n    this.RelatedDocuments = RelatedDocuments;\n    this.RelationshipType = RelationshipType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    let RelatedDocuments = tape[ptr++];\n    let RelationshipType = tape[ptr++];\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    args.push(this.RelatedDocuments);\n    ;\n    args.push(this.RelationshipType);\n    ;\n    return args;\n  }\n};\nvar IfcDocumentReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.ReferencedDocument = ReferencedDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ReferencedDocument = tape[ptr++];\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ReferencedDocument);\n    ;\n    return args;\n  }\n};\nvar IfcDoor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.ThresholdDepth = ThresholdDepth;\n    this.ThresholdThickness = ThresholdThickness;\n    this.TransomThickness = TransomThickness;\n    this.TransomOffset = TransomOffset;\n    this.LiningOffset = LiningOffset;\n    this.ThresholdOffset = ThresholdOffset;\n    this.CasingThickness = CasingThickness;\n    this.CasingDepth = CasingDepth;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let ThresholdDepth = tape[ptr++];\n    let ThresholdThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let TransomOffset = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let ThresholdOffset = tape[ptr++];\n    let CasingThickness = tape[ptr++];\n    let CasingDepth = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.ThresholdDepth);\n    ;\n    args.push(this.ThresholdThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.TransomOffset);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.ThresholdOffset);\n    ;\n    args.push(this.CasingThickness);\n    ;\n    args.push(this.CasingDepth);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcDoorPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.PanelDepth = PanelDepth;\n    this.PanelOperation = PanelOperation;\n    this.PanelWidth = PanelWidth;\n    this.PanelPosition = PanelPosition;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let PanelDepth = tape[ptr++];\n    let PanelOperation = tape[ptr++];\n    let PanelWidth = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.PanelDepth);\n    ;\n    args.push(this.PanelOperation);\n    ;\n    args.push(this.PanelWidth);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDoorStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.OperationType = OperationType;\n    this.ConstructionType = ConstructionType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcDoorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedOperationType = UserDefinedOperationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedOperationType = tape[ptr++];\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedOperationType);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDraughtingPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcDuctSilencerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeCurve = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeGeometry = EdgeGeometry;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeGeometry = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeGeometry);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcEdgeLoop = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcEdgeLoop(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcElectricAppliance = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricApplianceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoard = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricDistributionBoardType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGenerator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricGeneratorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricMotorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElectricTimeControlType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssembly = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementAssemblyType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcElementComponentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementQuantity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.MethodOfMeasurement = MethodOfMeasurement;\n    this.Quantities = Quantities;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MethodOfMeasurement = tape[ptr++];\n    let Quantities = tape[ptr++];\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MethodOfMeasurement);\n    ;\n    args.push(this.Quantities);\n    ;\n    return args;\n  }\n};\nvar IfcElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcElementarySurface = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcElementarySurface(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcEllipse = class {\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEllipseProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.SemiAxis1 = SemiAxis1;\n    this.SemiAxis2 = SemiAxis2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let SemiAxis1 = tape[ptr++];\n    let SemiAxis2 = tape[ptr++];\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.SemiAxis1);\n    ;\n    args.push(this.SemiAxis2);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcEnergyConversionDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcEngine = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEngineType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCooler = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporativeCoolerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvaporatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcEvent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n    this.EventOccurenceTime = EventOccurenceTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    let EventOccurenceTime = tape[ptr++];\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    args.push(this.EventOccurenceTime);\n    ;\n    return args;\n  }\n};\nvar IfcEventTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ActualDate = ActualDate;\n    this.EarlyDate = EarlyDate;\n    this.LateDate = LateDate;\n    this.ScheduleDate = ScheduleDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ActualDate = tape[ptr++];\n    let EarlyDate = tape[ptr++];\n    let LateDate = tape[ptr++];\n    let ScheduleDate = tape[ptr++];\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ActualDate);\n    ;\n    args.push(this.EarlyDate);\n    ;\n    args.push(this.LateDate);\n    ;\n    args.push(this.ScheduleDate);\n    ;\n    return args;\n  }\n};\nvar IfcEventType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.EventTriggerType = EventTriggerType;\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let EventTriggerType = tape[ptr++];\n    let UserDefinedEventTriggerType = tape[ptr++];\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.EventTriggerType);\n    ;\n    args.push(this.UserDefinedEventTriggerType);\n    ;\n    return args;\n  }\n};\nvar IfcExtendedProperties = class {\n  constructor(expressID, type, Name, Description, Properties2) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties2);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    return args;\n  }\n};\nvar IfcExternalInformation = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcExternalInformation(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcExternalReference = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternalReferenceRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingReference = RelatingReference;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingReference = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingReference);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcExternalSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedHatchStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedSurfaceStyle = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExternallyDefinedTextFont = class {\n  constructor(expressID, type, Location, Identification, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcExtrudedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcFace = class {\n  constructor(expressID, type, Bounds) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    return new IfcFace(expressID, type, Bounds);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBasedSurfaceModel = class {\n  constructor(expressID, type, FbsmFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.FbsmFaces = FbsmFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let FbsmFaces = tape[ptr++];\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.FbsmFaces);\n    ;\n    return args;\n  }\n};\nvar IfcFaceBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceOuterBound = class {\n  constructor(expressID, type, Bound, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bound = Bound;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bound = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bound);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcFaceSurface = class {\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Bounds = Bounds;\n    this.FaceSurface = FaceSurface;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Bounds = tape[ptr++];\n    let FaceSurface = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Bounds);\n    ;\n    args.push(this.FaceSurface);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcFacetedBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcFacetedBrepWithVoids = class {\n  constructor(expressID, type, Outer, Voids) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n    this.Voids = Voids;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    let Voids = tape[ptr++];\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    args.push(this.Voids);\n    ;\n    return args;\n  }\n};\nvar IfcFacility = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFacilityPart = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcFailureConnectionCondition = class {\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TensionFailureX = TensionFailureX;\n    this.TensionFailureY = TensionFailureY;\n    this.TensionFailureZ = TensionFailureZ;\n    this.CompressionFailureX = CompressionFailureX;\n    this.CompressionFailureY = CompressionFailureY;\n    this.CompressionFailureZ = CompressionFailureZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TensionFailureX = tape[ptr++];\n    let TensionFailureY = tape[ptr++];\n    let TensionFailureZ = tape[ptr++];\n    let CompressionFailureX = tape[ptr++];\n    let CompressionFailureY = tape[ptr++];\n    let CompressionFailureZ = tape[ptr++];\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TensionFailureX);\n    ;\n    args.push(this.TensionFailureY);\n    ;\n    args.push(this.TensionFailureZ);\n    ;\n    args.push(this.CompressionFailureX);\n    ;\n    args.push(this.CompressionFailureY);\n    ;\n    args.push(this.CompressionFailureZ);\n    ;\n    return args;\n  }\n};\nvar IfcFan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFanType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementAddition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFeatureElementSubtraction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyle = class {\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FillStyles = FillStyles;\n    this.ModelorDraughting = ModelorDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FillStyles = tape[ptr++];\n    let ModelorDraughting = tape[ptr++];\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FillStyles);\n    ;\n    args.push(this.ModelorDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleHatching = class {\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.HatchLineAppearance = HatchLineAppearance;\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\n    this.PatternStart = PatternStart;\n    this.HatchLineAngle = HatchLineAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let HatchLineAppearance = tape[ptr++];\n    let StartOfNextHatchLine = tape[ptr++];\n    let PointOfReferenceHatchLine = tape[ptr++];\n    let PatternStart = tape[ptr++];\n    let HatchLineAngle = tape[ptr++];\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.HatchLineAppearance);\n    ;\n    args.push(this.StartOfNextHatchLine);\n    ;\n    args.push(this.PointOfReferenceHatchLine);\n    ;\n    args.push(this.PatternStart);\n    ;\n    args.push(this.HatchLineAngle);\n    ;\n    return args;\n  }\n};\nvar IfcFillAreaStyleTiles = class {\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TilingPattern = TilingPattern;\n    this.Tiles = Tiles;\n    this.TilingScale = TilingScale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TilingPattern = tape[ptr++];\n    let Tiles = tape[ptr++];\n    let TilingScale = tape[ptr++];\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TilingPattern);\n    ;\n    args.push(this.Tiles);\n    ;\n    args.push(this.TilingScale);\n    ;\n    return args;\n  }\n};\nvar IfcFilter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFilterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFireSuppressionTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFixedReferenceSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FixedReference = FixedReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FixedReference = tape[ptr++];\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FixedReference);\n    ;\n    return args;\n  }\n};\nvar IfcFlowController = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowControllerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowInstrumentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeter = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMeterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowMovingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowStorageDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFlowTreatmentDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFooting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFootingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcFurnishingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcFurniture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcFurnitureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.AssemblyPlace = AssemblyPlace;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let AssemblyPlace = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.AssemblyPlace);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeographicElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricCurveSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricCurveSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcGeometricRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcGeometricRepresentationSubContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\n    this.Precision = Precision;\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\n    this.TrueNorth = TrueNorth;\n    this.ParentContext = ParentContext;\n    this.TargetScale = TargetScale;\n    this.TargetView = TargetView;\n    this.UserDefinedTargetView = UserDefinedTargetView;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    let CoordinateSpaceDimension = tape[ptr++];\n    let Precision = tape[ptr++];\n    let WorldCoordinateSystem = tape[ptr++];\n    let TrueNorth = tape[ptr++];\n    let ParentContext = tape[ptr++];\n    let TargetScale = tape[ptr++];\n    let TargetView = tape[ptr++];\n    let UserDefinedTargetView = tape[ptr++];\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    args.push(this.CoordinateSpaceDimension);\n    ;\n    args.push(this.Precision);\n    ;\n    args.push(this.WorldCoordinateSystem);\n    ;\n    args.push(this.TrueNorth);\n    ;\n    args.push(this.ParentContext);\n    ;\n    args.push(this.TargetScale);\n    ;\n    args.push(this.TargetView);\n    ;\n    args.push(this.UserDefinedTargetView);\n    ;\n    return args;\n  }\n};\nvar IfcGeometricSet = class {\n  constructor(expressID, type, Elements) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Elements = Elements;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Elements = tape[ptr++];\n    return new IfcGeometricSet(expressID, type, Elements);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Elements);\n    ;\n    return args;\n  }\n};\nvar IfcGrid = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.UAxes = UAxes;\n    this.VAxes = VAxes;\n    this.WAxes = WAxes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let UAxes = tape[ptr++];\n    let VAxes = tape[ptr++];\n    let WAxes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.UAxes);\n    ;\n    args.push(this.VAxes);\n    ;\n    args.push(this.WAxes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcGridAxis = class {\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.AxisTag = AxisTag;\n    this.AxisCurve = AxisCurve;\n    this.SameSense = SameSense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let AxisTag = tape[ptr++];\n    let AxisCurve = tape[ptr++];\n    let SameSense = tape[ptr++];\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.AxisTag);\n    ;\n    args.push(this.AxisCurve);\n    ;\n    args.push(this.SameSense);\n    ;\n    return args;\n  }\n};\nvar IfcGridPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementLocation = PlacementLocation;\n    this.PlacementRefDirection = PlacementRefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementLocation = tape[ptr++];\n    let PlacementRefDirection = tape[ptr++];\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementLocation);\n    ;\n    args.push(this.PlacementRefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcHalfSpaceSolid = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchanger = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHeatExchangerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifier = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcHumidifierType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.OverallWidth = OverallWidth;\n    this.OverallDepth = OverallDepth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let OverallDepth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.OverallDepth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcImageTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.URLReference = URLReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let URLReference = tape[ptr++];\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.URLReference);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedColourMap = class {\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappedTo = MappedTo;\n    this.Opacity = Opacity;\n    this.Colours = Colours;\n    this.ColourIndex = ColourIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappedTo = tape[ptr++];\n    let Opacity = tape[ptr++];\n    let Colours = tape[ptr++];\n    let ColourIndex = tape[ptr++];\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappedTo);\n    ;\n    args.push(this.Opacity);\n    ;\n    args.push(this.Colours);\n    ;\n    args.push(this.ColourIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolyCurve = class {\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFace = class {\n  constructor(expressID, type, CoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedPolygonalFaceWithVoids = class {\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CoordIndex = CoordIndex;\n    this.InnerCoordIndices = InnerCoordIndices;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CoordIndex = tape[ptr++];\n    let InnerCoordIndices = tape[ptr++];\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.InnerCoordIndices);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    return args;\n  }\n};\nvar IfcIndexedTriangleTextureMap = class {\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.MappedTo = MappedTo;\n    this.TexCoords = TexCoords;\n    this.TexCoordIndex = TexCoordIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    let TexCoords = tape[ptr++];\n    let TexCoordIndex = tape[ptr++];\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.MappedTo);\n    ;\n    args.push(this.TexCoords);\n    ;\n    args.push(this.TexCoordIndex);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcInterceptorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcIntersectionCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcInventory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.Jurisdiction = Jurisdiction;\n    this.ResponsiblePersons = ResponsiblePersons;\n    this.LastUpdateDate = LastUpdateDate;\n    this.CurrentValue = CurrentValue;\n    this.OriginalValue = OriginalValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Jurisdiction = tape[ptr++];\n    let ResponsiblePersons = tape[ptr++];\n    let LastUpdateDate = tape[ptr++];\n    let CurrentValue = tape[ptr++];\n    let OriginalValue = tape[ptr++];\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Jurisdiction);\n    ;\n    args.push(this.ResponsiblePersons);\n    ;\n    args.push(this.LastUpdateDate);\n    ;\n    args.push(this.CurrentValue);\n    ;\n    args.push(this.OriginalValue);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcIrregularTimeSeriesValue = class {\n  constructor(expressID, type, TimeStamp, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TimeStamp = TimeStamp;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TimeStamp = tape[ptr++];\n    let ListValues = tape[ptr++];\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TimeStamp);\n    ;\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBox = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcJunctionBoxType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.Width = Width;\n    this.Thickness = Thickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.LegSlope = LegSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let Width = tape[ptr++];\n    let Thickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let LegSlope = tape[ptr++];\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Thickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.LegSlope);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLaborResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLagTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.LagValue = LagValue;\n    this.DurationType = DurationType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let LagValue = tape[ptr++];\n    let DurationType = tape[ptr++];\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.LagValue);\n    ;\n    args.push(this.DurationType);\n    ;\n    return args;\n  }\n};\nvar IfcLamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryInformation = class {\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Version = Version;\n    this.Publisher = Publisher;\n    this.VersionDate = VersionDate;\n    this.Location = Location;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Version = tape[ptr++];\n    let Publisher = tape[ptr++];\n    let VersionDate = tape[ptr++];\n    let Location = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Version);\n    ;\n    args.push(this.Publisher);\n    ;\n    args.push(this.VersionDate);\n    ;\n    args.push(this.Location);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcLibraryReference = class {\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Language = Language;\n    this.ReferencedLibrary = ReferencedLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Language = tape[ptr++];\n    let ReferencedLibrary = tape[ptr++];\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Language);\n    ;\n    args.push(this.ReferencedLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcLightDistributionData = class {\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MainPlaneAngle = MainPlaneAngle;\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\n    this.LuminousIntensity = LuminousIntensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MainPlaneAngle = tape[ptr++];\n    let SecondaryPlaneAngle = tape[ptr++];\n    let LuminousIntensity = tape[ptr++];\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MainPlaneAngle);\n    ;\n    args.push(this.SecondaryPlaneAngle);\n    ;\n    args.push(this.LuminousIntensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixture = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightFixtureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcLightIntensityDistribution = class {\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LightDistributionCurve = LightDistributionCurve;\n    this.DistributionData = DistributionData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LightDistributionCurve = tape[ptr++];\n    let DistributionData = tape[ptr++];\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LightDistributionCurve);\n    ;\n    args.push(this.DistributionData);\n    ;\n    return args;\n  }\n};\nvar IfcLightSource = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceAmbient = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceDirectional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceGoniometric = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.ColourAppearance = ColourAppearance;\n    this.ColourTemperature = ColourTemperature;\n    this.LuminousFlux = LuminousFlux;\n    this.LightEmissionSource = LightEmissionSource;\n    this.LightDistributionDataSource = LightDistributionDataSource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let ColourAppearance = tape[ptr++];\n    let ColourTemperature = tape[ptr++];\n    let LuminousFlux = tape[ptr++];\n    let LightEmissionSource = tape[ptr++];\n    let LightDistributionDataSource = tape[ptr++];\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ColourAppearance);\n    ;\n    args.push(this.ColourTemperature);\n    ;\n    args.push(this.LuminousFlux);\n    ;\n    args.push(this.LightEmissionSource);\n    ;\n    args.push(this.LightDistributionDataSource);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourcePositional = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    return args;\n  }\n};\nvar IfcLightSourceSpot = class {\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LightColour = LightColour;\n    this.AmbientIntensity = AmbientIntensity;\n    this.Intensity = Intensity;\n    this.Position = Position;\n    this.Radius = Radius;\n    this.ConstantAttenuation = ConstantAttenuation;\n    this.DistanceAttenuation = DistanceAttenuation;\n    this.QuadricAttenuation = QuadricAttenuation;\n    this.Orientation = Orientation;\n    this.ConcentrationExponent = ConcentrationExponent;\n    this.SpreadAngle = SpreadAngle;\n    this.BeamWidthAngle = BeamWidthAngle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LightColour = tape[ptr++];\n    let AmbientIntensity = tape[ptr++];\n    let Intensity = tape[ptr++];\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    let ConstantAttenuation = tape[ptr++];\n    let DistanceAttenuation = tape[ptr++];\n    let QuadricAttenuation = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let ConcentrationExponent = tape[ptr++];\n    let SpreadAngle = tape[ptr++];\n    let BeamWidthAngle = tape[ptr++];\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LightColour);\n    ;\n    args.push(this.AmbientIntensity);\n    ;\n    args.push(this.Intensity);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.ConstantAttenuation);\n    ;\n    args.push(this.DistanceAttenuation);\n    ;\n    args.push(this.QuadricAttenuation);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.ConcentrationExponent);\n    ;\n    args.push(this.SpreadAngle);\n    ;\n    args.push(this.BeamWidthAngle);\n    ;\n    return args;\n  }\n};\nvar IfcLine = class {\n  constructor(expressID, type, Pnt, Dir) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Pnt = Pnt;\n    this.Dir = Dir;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Pnt = tape[ptr++];\n    let Dir = tape[ptr++];\n    return new IfcLine(expressID, type, Pnt, Dir);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Pnt);\n    ;\n    args.push(this.Dir);\n    ;\n    return args;\n  }\n};\nvar IfcLineSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPlacement = class {\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\n    this.Distance = Distance;\n    this.Orientation = Orientation;\n    this.CartesianPosition = CartesianPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let PlacementMeasuredAlong = tape[ptr++];\n    let Distance = tape[ptr++];\n    let Orientation = tape[ptr++];\n    let CartesianPosition = tape[ptr++];\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.PlacementMeasuredAlong);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.Orientation);\n    ;\n    args.push(this.CartesianPosition);\n    ;\n    return args;\n  }\n};\nvar IfcLinearPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcLocalPlacement = class {\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n    this.RelativePlacement = RelativePlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    let RelativePlacement = tape[ptr++];\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    args.push(this.RelativePlacement);\n    ;\n    return args;\n  }\n};\nvar IfcLoop = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcLoop(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcManifoldSolidBrep = class {\n  constructor(expressID, type, Outer) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Outer = Outer;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Outer = tape[ptr++];\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Outer);\n    ;\n    return args;\n  }\n};\nvar IfcMapConversion = class {\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SourceCRS = SourceCRS;\n    this.TargetCRS = TargetCRS;\n    this.Eastings = Eastings;\n    this.Northings = Northings;\n    this.OrthogonalHeight = OrthogonalHeight;\n    this.XAxisAbscissa = XAxisAbscissa;\n    this.XAxisOrdinate = XAxisOrdinate;\n    this.Scale = Scale;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SourceCRS = tape[ptr++];\n    let TargetCRS = tape[ptr++];\n    let Eastings = tape[ptr++];\n    let Northings = tape[ptr++];\n    let OrthogonalHeight = tape[ptr++];\n    let XAxisAbscissa = tape[ptr++];\n    let XAxisOrdinate = tape[ptr++];\n    let Scale = tape[ptr++];\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SourceCRS);\n    ;\n    args.push(this.TargetCRS);\n    ;\n    args.push(this.Eastings);\n    ;\n    args.push(this.Northings);\n    ;\n    args.push(this.OrthogonalHeight);\n    ;\n    args.push(this.XAxisAbscissa);\n    ;\n    args.push(this.XAxisOrdinate);\n    ;\n    args.push(this.Scale);\n    ;\n    return args;\n  }\n};\nvar IfcMappedItem = class {\n  constructor(expressID, type, MappingSource, MappingTarget) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingSource = MappingSource;\n    this.MappingTarget = MappingTarget;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingSource = tape[ptr++];\n    let MappingTarget = tape[ptr++];\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingSource);\n    ;\n    args.push(this.MappingTarget);\n    ;\n    return args;\n  }\n};\nvar IfcMaterial = class {\n  constructor(expressID, type, Name, Description, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterial(expressID, type, Name, Description, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialClassificationRelationship = class {\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialClassifications = MaterialClassifications;\n    this.ClassifiedMaterial = ClassifiedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialClassifications = tape[ptr++];\n    let ClassifiedMaterial = tape[ptr++];\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialClassifications);\n    ;\n    args.push(this.ClassifiedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituent = class {\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Fraction = Fraction;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Fraction = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Fraction);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialConstituentSet = class {\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialConstituents = MaterialConstituents;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialConstituents = tape[ptr++];\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialConstituents);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMaterialDefinitionRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n    this.RepresentedMaterial = RepresentedMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    let RepresentedMaterial = tape[ptr++];\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    args.push(this.RepresentedMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayer = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSet = class {\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MaterialLayers = MaterialLayers;\n    this.LayerSetName = LayerSetName;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MaterialLayers = tape[ptr++];\n    let LayerSetName = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MaterialLayers);\n    ;\n    args.push(this.LayerSetName);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerSetUsage = class {\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForLayerSet = ForLayerSet;\n    this.LayerSetDirection = LayerSetDirection;\n    this.DirectionSense = DirectionSense;\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForLayerSet = tape[ptr++];\n    let LayerSetDirection = tape[ptr++];\n    let DirectionSense = tape[ptr++];\n    let OffsetFromReferenceLine = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForLayerSet);\n    ;\n    args.push(this.LayerSetDirection);\n    ;\n    args.push(this.DirectionSense);\n    ;\n    args.push(this.OffsetFromReferenceLine);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialLayerWithOffsets = class {\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Material = Material;\n    this.LayerThickness = LayerThickness;\n    this.IsVentilated = IsVentilated;\n    this.Name = Name;\n    this.Description = Description;\n    this.Category = Category;\n    this.Priority = Priority;\n    this.OffsetDirection = OffsetDirection;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Material = tape[ptr++];\n    let LayerThickness = tape[ptr++];\n    let IsVentilated = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Category = tape[ptr++];\n    let Priority = tape[ptr++];\n    let OffsetDirection = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Material);\n    ;\n    args.push(this.LayerThickness);\n    ;\n    args.push(this.IsVentilated);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.OffsetDirection);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialList = class {\n  constructor(expressID, type, Materials) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Materials = Materials;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Materials = tape[ptr++];\n    return new IfcMaterialList(expressID, type, Materials);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Materials);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfile = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSet = class {\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.MaterialProfiles = MaterialProfiles;\n    this.CompositeProfile = CompositeProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let MaterialProfiles = tape[ptr++];\n    let CompositeProfile = tape[ptr++];\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.MaterialProfiles);\n    ;\n    args.push(this.CompositeProfile);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsage = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileSetUsageTapering = class {\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ForProfileSet = ForProfileSet;\n    this.CardinalPoint = CardinalPoint;\n    this.ReferenceExtent = ReferenceExtent;\n    this.ForProfileEndSet = ForProfileEndSet;\n    this.CardinalEndPoint = CardinalEndPoint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ForProfileSet = tape[ptr++];\n    let CardinalPoint = tape[ptr++];\n    let ReferenceExtent = tape[ptr++];\n    let ForProfileEndSet = tape[ptr++];\n    let CardinalEndPoint = tape[ptr++];\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ForProfileSet);\n    ;\n    args.push(this.CardinalPoint);\n    ;\n    args.push(this.ReferenceExtent);\n    ;\n    args.push(this.ForProfileEndSet);\n    ;\n    args.push(this.CardinalEndPoint);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProfileWithOffsets = class {\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Material = Material;\n    this.Profile = Profile;\n    this.Priority = Priority;\n    this.Category = Category;\n    this.OffsetValues = OffsetValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Material = tape[ptr++];\n    let Profile = tape[ptr++];\n    let Priority = tape[ptr++];\n    let Category = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Material);\n    ;\n    args.push(this.Profile);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.Category);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, Material) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.Material = Material;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let Material = tape[ptr++];\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties2, Material);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.Material);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingMaterial = RelatingMaterial;\n    this.RelatedMaterials = RelatedMaterials;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    let RelatedMaterials = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    args.push(this.RelatedMaterials);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcMaterialUsageDefinition = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcMaterialUsageDefinition(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcMeasureWithUnit = class {\n  constructor(expressID, type, ValueComponent, UnitComponent) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ValueComponent = ValueComponent;\n    this.UnitComponent = UnitComponent;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ValueComponent = tape[ptr++];\n    let UnitComponent = tape[ptr++];\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ValueComponent);\n    ;\n    args.push(this.UnitComponent);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastener = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMechanicalFastenerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.NominalLength = NominalLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let NominalLength = tape[ptr++];\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.NominalLength);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMedicalDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMemberType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMetric = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.Benchmark = Benchmark;\n    this.ValueSource = ValueSource;\n    this.DataValue = DataValue;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let Benchmark = tape[ptr++];\n    let ValueSource = tape[ptr++];\n    let DataValue = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.Benchmark);\n    ;\n    args.push(this.ValueSource);\n    ;\n    args.push(this.DataValue);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcMirroredProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.ParentProfile = ParentProfile;\n    this.Operator = Operator;\n    this.Label = Label;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let ParentProfile = tape[ptr++];\n    let Operator = tape[ptr++];\n    let Label = tape[ptr++];\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.ParentProfile);\n    ;\n    args.push(this.Operator);\n    ;\n    args.push(this.Label);\n    ;\n    return args;\n  }\n};\nvar IfcMonetaryUnit = class {\n  constructor(expressID, type, Currency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Currency = Currency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Currency = tape[ptr++];\n    return new IfcMonetaryUnit(expressID, type, Currency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Currency);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcMotorConnectionType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcNamedUnit = class {\n  constructor(expressID, type, Dimensions, UnitType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    return args;\n  }\n};\nvar IfcObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcObjectDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcObjectPlacement = class {\n  constructor(expressID, type, PlacementRelTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.PlacementRelTo = PlacementRelTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let PlacementRelTo = tape[ptr++];\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.PlacementRelTo);\n    ;\n    return args;\n  }\n};\nvar IfcObjective = class {\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConstraintGrade = ConstraintGrade;\n    this.ConstraintSource = ConstraintSource;\n    this.CreatingActor = CreatingActor;\n    this.CreationTime = CreationTime;\n    this.UserDefinedGrade = UserDefinedGrade;\n    this.BenchmarkValues = BenchmarkValues;\n    this.LogicalAggregator = LogicalAggregator;\n    this.ObjectiveQualifier = ObjectiveQualifier;\n    this.UserDefinedQualifier = UserDefinedQualifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConstraintGrade = tape[ptr++];\n    let ConstraintSource = tape[ptr++];\n    let CreatingActor = tape[ptr++];\n    let CreationTime = tape[ptr++];\n    let UserDefinedGrade = tape[ptr++];\n    let BenchmarkValues = tape[ptr++];\n    let LogicalAggregator = tape[ptr++];\n    let ObjectiveQualifier = tape[ptr++];\n    let UserDefinedQualifier = tape[ptr++];\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConstraintGrade);\n    ;\n    args.push(this.ConstraintSource);\n    ;\n    args.push(this.CreatingActor);\n    ;\n    args.push(this.CreationTime);\n    ;\n    args.push(this.UserDefinedGrade);\n    ;\n    args.push(this.BenchmarkValues);\n    ;\n    args.push(this.LogicalAggregator);\n    ;\n    args.push(this.ObjectiveQualifier);\n    ;\n    args.push(this.UserDefinedQualifier);\n    ;\n    return args;\n  }\n};\nvar IfcOccupant = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheActor = TheActor;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheActor = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheActor);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve = class {\n  constructor(expressID, type, BasisCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve2D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurve3D = class {\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Distance = Distance;\n    this.SelfIntersect = SelfIntersect;\n    this.RefDirection = RefDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Distance = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let RefDirection = tape[ptr++];\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Distance);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.RefDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOffsetCurveByDistances = class {\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.OffsetValues = OffsetValues;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let OffsetValues = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.OffsetValues);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcOpenShell = class {\n  constructor(expressID, type, CfsFaces) {\n    this.expressID = expressID;\n    this.type = type;\n    this.CfsFaces = CfsFaces;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let CfsFaces = tape[ptr++];\n    return new IfcOpenShell(expressID, type, CfsFaces);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.CfsFaces);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOpeningStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOrganization = class {\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.Name = Name;\n    this.Description = Description;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcOrganizationRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOrganization = RelatingOrganization;\n    this.RelatedOrganizations = RelatedOrganizations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOrganization = tape[ptr++];\n    let RelatedOrganizations = tape[ptr++];\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOrganization);\n    ;\n    args.push(this.RelatedOrganizations);\n    ;\n    return args;\n  }\n};\nvar IfcOrientationExpression = class {\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LateralAxisDirection = LateralAxisDirection;\n    this.VerticalAxisDirection = VerticalAxisDirection;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LateralAxisDirection = tape[ptr++];\n    let VerticalAxisDirection = tape[ptr++];\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LateralAxisDirection);\n    ;\n    args.push(this.VerticalAxisDirection);\n    ;\n    return args;\n  }\n};\nvar IfcOrientedEdge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.EdgeElement = EdgeElement;\n    this.Orientation = Orientation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let EdgeElement = tape[ptr++];\n    let Orientation = tape[ptr++];\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.EdgeElement);\n    ;\n    args.push(this.Orientation);\n    ;\n    return args;\n  }\n};\nvar IfcOuterBoundaryCurve = class {\n  constructor(expressID, type, Segments, SelfIntersect) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Segments = Segments;\n    this.SelfIntersect = SelfIntersect;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Segments = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Segments);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    return args;\n  }\n};\nvar IfcOutlet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOutletType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcOwnerHistory = class {\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.OwningUser = OwningUser;\n    this.OwningApplication = OwningApplication;\n    this.State = State;\n    this.ChangeAction = ChangeAction;\n    this.LastModifiedDate = LastModifiedDate;\n    this.LastModifyingUser = LastModifyingUser;\n    this.LastModifyingApplication = LastModifyingApplication;\n    this.CreationDate = CreationDate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let OwningUser = tape[ptr++];\n    let OwningApplication = tape[ptr++];\n    let State = tape[ptr++];\n    let ChangeAction = tape[ptr++];\n    let LastModifiedDate = tape[ptr++];\n    let LastModifyingUser = tape[ptr++];\n    let LastModifyingApplication = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.OwningUser);\n    ;\n    args.push(this.OwningApplication);\n    ;\n    args.push(this.State);\n    ;\n    args.push(this.ChangeAction);\n    ;\n    args.push(this.LastModifiedDate);\n    ;\n    args.push(this.LastModifyingUser);\n    ;\n    args.push(this.LastModifyingApplication);\n    ;\n    args.push(this.CreationDate);\n    ;\n    return args;\n  }\n};\nvar IfcParameterizedProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPath = class {\n  constructor(expressID, type, EdgeList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeList = EdgeList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeList = tape[ptr++];\n    return new IfcPath(expressID, type, EdgeList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeList);\n    ;\n    return args;\n  }\n};\nvar IfcPcurve = class {\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.ReferenceCurve = ReferenceCurve;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let ReferenceCurve = tape[ptr++];\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.ReferenceCurve);\n    ;\n    return args;\n  }\n};\nvar IfcPerformanceHistory = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LifeCyclePhase = LifeCyclePhase;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LifeCyclePhase = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LifeCyclePhase);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPermeableCoveringProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcPermit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcPerson = class {\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identification = Identification;\n    this.FamilyName = FamilyName;\n    this.GivenName = GivenName;\n    this.MiddleNames = MiddleNames;\n    this.PrefixTitles = PrefixTitles;\n    this.SuffixTitles = SuffixTitles;\n    this.Roles = Roles;\n    this.Addresses = Addresses;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identification = tape[ptr++];\n    let FamilyName = tape[ptr++];\n    let GivenName = tape[ptr++];\n    let MiddleNames = tape[ptr++];\n    let PrefixTitles = tape[ptr++];\n    let SuffixTitles = tape[ptr++];\n    let Roles = tape[ptr++];\n    let Addresses = tape[ptr++];\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identification);\n    ;\n    args.push(this.FamilyName);\n    ;\n    args.push(this.GivenName);\n    ;\n    args.push(this.MiddleNames);\n    ;\n    args.push(this.PrefixTitles);\n    ;\n    args.push(this.SuffixTitles);\n    ;\n    args.push(this.Roles);\n    ;\n    args.push(this.Addresses);\n    ;\n    return args;\n  }\n};\nvar IfcPersonAndOrganization = class {\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ThePerson = ThePerson;\n    this.TheOrganization = TheOrganization;\n    this.Roles = Roles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ThePerson = tape[ptr++];\n    let TheOrganization = tape[ptr++];\n    let Roles = tape[ptr++];\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ThePerson);\n    ;\n    args.push(this.TheOrganization);\n    ;\n    args.push(this.Roles);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalComplexQuantity = class {\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasQuantities = HasQuantities;\n    this.Discrimination = Discrimination;\n    this.Quality = Quality;\n    this.Usage = Usage;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasQuantities = tape[ptr++];\n    let Discrimination = tape[ptr++];\n    let Quality = tape[ptr++];\n    let Usage = tape[ptr++];\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasQuantities);\n    ;\n    args.push(this.Discrimination);\n    ;\n    args.push(this.Quality);\n    ;\n    args.push(this.Usage);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalQuantity = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPhysicalSimpleQuantity = class {\n  constructor(expressID, type, Name, Description, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPile = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n    this.ConstructionType = ConstructionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    return args;\n  }\n};\nvar IfcPileType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFitting = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeFittingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPipeSegmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPixelTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n    this.Width = Width;\n    this.Height = Height;\n    this.ColourComponents = ColourComponents;\n    this.Pixel = Pixel;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    let Width = tape[ptr++];\n    let Height = tape[ptr++];\n    let ColourComponents = tape[ptr++];\n    let Pixel = tape[ptr++];\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    args.push(this.Width);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.ColourComponents);\n    ;\n    args.push(this.Pixel);\n    ;\n    return args;\n  }\n};\nvar IfcPlacement = class {\n  constructor(expressID, type, Location) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Location = Location;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Location = tape[ptr++];\n    return new IfcPlacement(expressID, type, Location);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Location);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarBox = class {\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n    this.Placement = Placement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    let Placement = tape[ptr++];\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    args.push(this.Placement);\n    ;\n    return args;\n  }\n};\nvar IfcPlanarExtent = class {\n  constructor(expressID, type, SizeInX, SizeInY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SizeInX = SizeInX;\n    this.SizeInY = SizeInY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SizeInX = tape[ptr++];\n    let SizeInY = tape[ptr++];\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SizeInX);\n    ;\n    args.push(this.SizeInY);\n    ;\n    return args;\n  }\n};\nvar IfcPlane = class {\n  constructor(expressID, type, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    return new IfcPlane(expressID, type, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcPlate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPlateType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPoint = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPoint(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPointOnCurve = class {\n  constructor(expressID, type, BasisCurve, PointParameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.PointParameter = PointParameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let PointParameter = tape[ptr++];\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.PointParameter);\n    ;\n    return args;\n  }\n};\nvar IfcPointOnSurface = class {\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.PointParameterU = PointParameterU;\n    this.PointParameterV = PointParameterV;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let PointParameterU = tape[ptr++];\n    let PointParameterV = tape[ptr++];\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.PointParameterU);\n    ;\n    args.push(this.PointParameterV);\n    ;\n    return args;\n  }\n};\nvar IfcPolyLoop = class {\n  constructor(expressID, type, Polygon) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Polygon = Polygon;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Polygon = tape[ptr++];\n    return new IfcPolyLoop(expressID, type, Polygon);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Polygon);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalBoundedHalfSpace = class {\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BaseSurface = BaseSurface;\n    this.AgreementFlag = AgreementFlag;\n    this.Position = Position;\n    this.PolygonalBoundary = PolygonalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BaseSurface = tape[ptr++];\n    let AgreementFlag = tape[ptr++];\n    let Position = tape[ptr++];\n    let PolygonalBoundary = tape[ptr++];\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BaseSurface);\n    ;\n    args.push(this.AgreementFlag);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.PolygonalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcPolygonalFaceSet = class {\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Closed = Closed;\n    this.Faces = Faces;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Closed = tape[ptr++];\n    let Faces = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.Faces);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcPolyline = class {\n  constructor(expressID, type, Points) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Points = Points;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Points = tape[ptr++];\n    return new IfcPolyline(expressID, type, Points);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Points);\n    ;\n    return args;\n  }\n};\nvar IfcPort = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPositioningElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcPostalAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.InternalLocation = InternalLocation;\n    this.AddressLines = AddressLines;\n    this.PostalBox = PostalBox;\n    this.Town = Town;\n    this.Region = Region;\n    this.PostalCode = PostalCode;\n    this.Country = Country;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let InternalLocation = tape[ptr++];\n    let AddressLines = tape[ptr++];\n    let PostalBox = tape[ptr++];\n    let Town = tape[ptr++];\n    let Region = tape[ptr++];\n    let PostalCode = tape[ptr++];\n    let Country = tape[ptr++];\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.InternalLocation);\n    ;\n    args.push(this.AddressLines);\n    ;\n    args.push(this.PostalBox);\n    ;\n    args.push(this.Town);\n    ;\n    args.push(this.Region);\n    ;\n    args.push(this.PostalCode);\n    ;\n    args.push(this.Country);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedColour = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedColour(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedCurveFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedItem = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedItem(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedProperties = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPreDefinedProperties(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPreDefinedPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPreDefinedTextFont = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPreDefinedTextFont(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPresentationLayerAssignment = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationLayerWithStyle = class {\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.AssignedItems = AssignedItems;\n    this.Identifier = Identifier;\n    this.LayerOn = LayerOn;\n    this.LayerFrozen = LayerFrozen;\n    this.LayerBlocked = LayerBlocked;\n    this.LayerStyles = LayerStyles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let AssignedItems = tape[ptr++];\n    let Identifier = tape[ptr++];\n    let LayerOn = tape[ptr++];\n    let LayerFrozen = tape[ptr++];\n    let LayerBlocked = tape[ptr++];\n    let LayerStyles = tape[ptr++];\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.AssignedItems);\n    ;\n    args.push(this.Identifier);\n    ;\n    args.push(this.LayerOn);\n    ;\n    args.push(this.LayerFrozen);\n    ;\n    args.push(this.LayerBlocked);\n    ;\n    args.push(this.LayerStyles);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyle = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcPresentationStyle(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcPresentationStyleAssignment = class {\n  constructor(expressID, type, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Styles = tape[ptr++];\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcProcedure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcedureType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcProductDefinitionShape = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProductRepresentation = class {\n  constructor(expressID, type, Name, Description, Representations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Representations = Representations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Representations = tape[ptr++];\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Representations);\n    ;\n    return args;\n  }\n};\nvar IfcProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    return args;\n  }\n};\nvar IfcProfileProperties = class {\n  constructor(expressID, type, Name, Description, Properties2, ProfileDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Properties = Properties2;\n    this.ProfileDefinition = ProfileDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Properties2 = tape[ptr++];\n    let ProfileDefinition = tape[ptr++];\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties2, ProfileDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Properties);\n    ;\n    args.push(this.ProfileDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcProject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n    this.Phase = Phase;\n    this.RepresentationContexts = RepresentationContexts;\n    this.UnitsInContext = UnitsInContext;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    let Phase = tape[ptr++];\n    let RepresentationContexts = tape[ptr++];\n    let UnitsInContext = tape[ptr++];\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.Phase);\n    ;\n    args.push(this.RepresentationContexts);\n    ;\n    args.push(this.UnitsInContext);\n    ;\n    return args;\n  }\n};\nvar IfcProjectOrder = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.PredefinedType = PredefinedType;\n    this.Status = Status;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Status = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcProjectedCRS = class {\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.GeodeticDatum = GeodeticDatum;\n    this.VerticalDatum = VerticalDatum;\n    this.MapProjection = MapProjection;\n    this.MapZone = MapZone;\n    this.MapUnit = MapUnit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let GeodeticDatum = tape[ptr++];\n    let VerticalDatum = tape[ptr++];\n    let MapProjection = tape[ptr++];\n    let MapZone = tape[ptr++];\n    let MapUnit = tape[ptr++];\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.GeodeticDatum);\n    ;\n    args.push(this.VerticalDatum);\n    ;\n    args.push(this.MapProjection);\n    ;\n    args.push(this.MapZone);\n    ;\n    args.push(this.MapUnit);\n    ;\n    return args;\n  }\n};\nvar IfcProjectionElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyAbstraction = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcPropertyAbstraction(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcPropertyBoundedValue = class {\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UpperBoundValue = UpperBoundValue;\n    this.LowerBoundValue = LowerBoundValue;\n    this.Unit = Unit;\n    this.SetPointValue = SetPointValue;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UpperBoundValue = tape[ptr++];\n    let LowerBoundValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    let SetPointValue = tape[ptr++];\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UpperBoundValue);\n    ;\n    args.push(this.LowerBoundValue);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.SetPointValue);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyDependencyRelationship = class {\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DependingProperty = DependingProperty;\n    this.DependantProperty = DependantProperty;\n    this.Expression = Expression;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DependingProperty = tape[ptr++];\n    let DependantProperty = tape[ptr++];\n    let Expression = tape[ptr++];\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DependingProperty);\n    ;\n    args.push(this.DependantProperty);\n    ;\n    args.push(this.Expression);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeratedValue = class {\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.EnumerationValues = EnumerationValues;\n    this.EnumerationReference = EnumerationReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let EnumerationReference = tape[ptr++];\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.EnumerationReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyEnumeration = class {\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.EnumerationValues = EnumerationValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let EnumerationValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.EnumerationValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyListValue = class {\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.ListValues = ListValues;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ListValues = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ListValues);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyReferenceValue = class {\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.UsageName = UsageName;\n    this.PropertyReference = PropertyReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let UsageName = tape[ptr++];\n    let PropertyReference = tape[ptr++];\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UsageName);\n    ;\n    args.push(this.PropertyReference);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.HasProperties = HasProperties;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let HasProperties = tape[ptr++];\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.HasProperties);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySetTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.ApplicableEntity = ApplicableEntity;\n    this.HasPropertyTemplates = HasPropertyTemplates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let ApplicableEntity = tape[ptr++];\n    let HasPropertyTemplates = tape[ptr++];\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.ApplicableEntity);\n    ;\n    args.push(this.HasPropertyTemplates);\n    ;\n    return args;\n  }\n};\nvar IfcPropertySingleValue = class {\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.NominalValue = NominalValue;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let NominalValue = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.NominalValue);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTableValue = class {\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefiningValues = DefiningValues;\n    this.DefinedValues = DefinedValues;\n    this.Expression = Expression;\n    this.DefiningUnit = DefiningUnit;\n    this.DefinedUnit = DefinedUnit;\n    this.CurveInterpolation = CurveInterpolation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefiningValues = tape[ptr++];\n    let DefinedValues = tape[ptr++];\n    let Expression = tape[ptr++];\n    let DefiningUnit = tape[ptr++];\n    let DefinedUnit = tape[ptr++];\n    let CurveInterpolation = tape[ptr++];\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefiningValues);\n    ;\n    args.push(this.DefinedValues);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.DefiningUnit);\n    ;\n    args.push(this.DefinedUnit);\n    ;\n    args.push(this.CurveInterpolation);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcPropertyTemplateDefinition = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceTrippingUnitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProtectiveDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcProxy = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.ProxyType = ProxyType;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let ProxyType = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.ProxyType);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcPump = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcPumpType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityArea = class {\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.AreaValue = AreaValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let AreaValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.AreaValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityCount = class {\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.CountValue = CountValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let CountValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.CountValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityLength = class {\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.LengthValue = LengthValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let LengthValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.LengthValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantitySet = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityTime = class {\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.TimeValue = TimeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityVolume = class {\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.VolumeValue = VolumeValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let VolumeValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.VolumeValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcQuantityWeight = class {\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.WeightValue = WeightValue;\n    this.Formula = Formula;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let WeightValue = tape[ptr++];\n    let Formula = tape[ptr++];\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.WeightValue);\n    ;\n    args.push(this.Formula);\n    ;\n    return args;\n  }\n};\nvar IfcRailing = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRailingType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRamp = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRampType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineCurveWithKnots = class {\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Degree = Degree;\n    this.ControlPointsList = ControlPointsList;\n    this.CurveForm = CurveForm;\n    this.ClosedCurve = ClosedCurve;\n    this.SelfIntersect = SelfIntersect;\n    this.KnotMultiplicities = KnotMultiplicities;\n    this.Knots = Knots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Degree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let CurveForm = tape[ptr++];\n    let ClosedCurve = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let KnotMultiplicities = tape[ptr++];\n    let Knots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Degree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.CurveForm);\n    ;\n    args.push(this.ClosedCurve);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.KnotMultiplicities);\n    ;\n    args.push(this.Knots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRationalBSplineSurfaceWithKnots = class {\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\n    this.expressID = expressID;\n    this.type = type;\n    this.UDegree = UDegree;\n    this.VDegree = VDegree;\n    this.ControlPointsList = ControlPointsList;\n    this.SurfaceForm = SurfaceForm;\n    this.UClosed = UClosed;\n    this.VClosed = VClosed;\n    this.SelfIntersect = SelfIntersect;\n    this.UMultiplicities = UMultiplicities;\n    this.VMultiplicities = VMultiplicities;\n    this.UKnots = UKnots;\n    this.VKnots = VKnots;\n    this.KnotSpec = KnotSpec;\n    this.WeightsData = WeightsData;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let UDegree = tape[ptr++];\n    let VDegree = tape[ptr++];\n    let ControlPointsList = tape[ptr++];\n    let SurfaceForm = tape[ptr++];\n    let UClosed = tape[ptr++];\n    let VClosed = tape[ptr++];\n    let SelfIntersect = tape[ptr++];\n    let UMultiplicities = tape[ptr++];\n    let VMultiplicities = tape[ptr++];\n    let UKnots = tape[ptr++];\n    let VKnots = tape[ptr++];\n    let KnotSpec = tape[ptr++];\n    let WeightsData = tape[ptr++];\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.UDegree);\n    ;\n    args.push(this.VDegree);\n    ;\n    args.push(this.ControlPointsList);\n    ;\n    args.push(this.SurfaceForm);\n    ;\n    args.push(this.UClosed);\n    ;\n    args.push(this.VClosed);\n    ;\n    args.push(this.SelfIntersect);\n    ;\n    args.push(this.UMultiplicities);\n    ;\n    args.push(this.VMultiplicities);\n    ;\n    args.push(this.UKnots);\n    ;\n    args.push(this.VKnots);\n    ;\n    args.push(this.KnotSpec);\n    ;\n    args.push(this.WeightsData);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleHollowProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.WallThickness = WallThickness;\n    this.InnerFilletRadius = InnerFilletRadius;\n    this.OuterFilletRadius = OuterFilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let WallThickness = tape[ptr++];\n    let InnerFilletRadius = tape[ptr++];\n    let OuterFilletRadius = tape[ptr++];\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.WallThickness);\n    ;\n    args.push(this.InnerFilletRadius);\n    ;\n    args.push(this.OuterFilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularPyramid = class {\n  constructor(expressID, type, Position, XLength, YLength, Height) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.XLength = XLength;\n    this.YLength = YLength;\n    this.Height = Height;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let XLength = tape[ptr++];\n    let YLength = tape[ptr++];\n    let Height = tape[ptr++];\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.XLength);\n    ;\n    args.push(this.YLength);\n    ;\n    args.push(this.Height);\n    ;\n    return args;\n  }\n};\nvar IfcRectangularTrimmedSurface = class {\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisSurface = BasisSurface;\n    this.U1 = U1;\n    this.V1 = V1;\n    this.U2 = U2;\n    this.V2 = V2;\n    this.Usense = Usense;\n    this.Vsense = Vsense;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisSurface = tape[ptr++];\n    let U1 = tape[ptr++];\n    let V1 = tape[ptr++];\n    let U2 = tape[ptr++];\n    let V2 = tape[ptr++];\n    let Usense = tape[ptr++];\n    let Vsense = tape[ptr++];\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisSurface);\n    ;\n    args.push(this.U1);\n    ;\n    args.push(this.V1);\n    ;\n    args.push(this.U2);\n    ;\n    args.push(this.V2);\n    ;\n    args.push(this.Usense);\n    ;\n    args.push(this.Vsense);\n    ;\n    return args;\n  }\n};\nvar IfcRecurrencePattern = class {\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RecurrenceType = RecurrenceType;\n    this.DayComponent = DayComponent;\n    this.WeekdayComponent = WeekdayComponent;\n    this.MonthComponent = MonthComponent;\n    this.Position = Position;\n    this.Interval = Interval;\n    this.Occurrences = Occurrences;\n    this.TimePeriods = TimePeriods;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RecurrenceType = tape[ptr++];\n    let DayComponent = tape[ptr++];\n    let WeekdayComponent = tape[ptr++];\n    let MonthComponent = tape[ptr++];\n    let Position = tape[ptr++];\n    let Interval = tape[ptr++];\n    let Occurrences = tape[ptr++];\n    let TimePeriods = tape[ptr++];\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RecurrenceType);\n    ;\n    args.push(this.DayComponent);\n    ;\n    args.push(this.WeekdayComponent);\n    ;\n    args.push(this.MonthComponent);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Interval);\n    ;\n    args.push(this.Occurrences);\n    ;\n    args.push(this.TimePeriods);\n    ;\n    return args;\n  }\n};\nvar IfcReference = class {\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TypeIdentifier = TypeIdentifier;\n    this.AttributeIdentifier = AttributeIdentifier;\n    this.InstanceName = InstanceName;\n    this.ListPositions = ListPositions;\n    this.InnerReference = InnerReference;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TypeIdentifier = tape[ptr++];\n    let AttributeIdentifier = tape[ptr++];\n    let InstanceName = tape[ptr++];\n    let ListPositions = tape[ptr++];\n    let InnerReference = tape[ptr++];\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TypeIdentifier);\n    ;\n    args.push(this.AttributeIdentifier);\n    ;\n    args.push(this.InstanceName);\n    ;\n    args.push(this.ListPositions);\n    ;\n    args.push(this.InnerReference);\n    ;\n    return args;\n  }\n};\nvar IfcReferent = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.RestartDistance = RestartDistance;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let RestartDistance = tape[ptr++];\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.RestartDistance);\n    ;\n    return args;\n  }\n};\nvar IfcRegularTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n    this.TimeStep = TimeStep;\n    this.Values = Values;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    let TimeStep = tape[ptr++];\n    let Values = tape[ptr++];\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.TimeStep);\n    ;\n    args.push(this.Values);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementBarProperties = class {\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\n    this.SteelGrade = SteelGrade;\n    this.BarSurface = BarSurface;\n    this.EffectiveDepth = EffectiveDepth;\n    this.NominalBarDiameter = NominalBarDiameter;\n    this.BarCount = BarCount;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TotalCrossSectionArea = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let EffectiveDepth = tape[ptr++];\n    let NominalBarDiameter = tape[ptr++];\n    let BarCount = tape[ptr++];\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TotalCrossSectionArea);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.EffectiveDepth);\n    ;\n    args.push(this.NominalBarDiameter);\n    ;\n    args.push(this.BarCount);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcementDefinitionProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.DefinitionType = DefinitionType;\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let DefinitionType = tape[ptr++];\n    let ReinforcementSectionDefinitions = tape[ptr++];\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.DefinitionType);\n    ;\n    args.push(this.ReinforcementSectionDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.PredefinedType = PredefinedType;\n    this.BarSurface = BarSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.BarSurface);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingBarType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.BarLength = BarLength;\n    this.BarSurface = BarSurface;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let BarLength = tape[ptr++];\n    let BarSurface = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.BarLength);\n    ;\n    args.push(this.BarSurface);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMesh = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcReinforcingMeshType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.MeshLength = MeshLength;\n    this.MeshWidth = MeshWidth;\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\n    this.TransverseBarSpacing = TransverseBarSpacing;\n    this.BendingShapeCode = BendingShapeCode;\n    this.BendingParameters = BendingParameters;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let MeshLength = tape[ptr++];\n    let MeshWidth = tape[ptr++];\n    let LongitudinalBarNominalDiameter = tape[ptr++];\n    let TransverseBarNominalDiameter = tape[ptr++];\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\n    let TransverseBarCrossSectionArea = tape[ptr++];\n    let LongitudinalBarSpacing = tape[ptr++];\n    let TransverseBarSpacing = tape[ptr++];\n    let BendingShapeCode = tape[ptr++];\n    let BendingParameters = tape[ptr++];\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.MeshLength);\n    ;\n    args.push(this.MeshWidth);\n    ;\n    args.push(this.LongitudinalBarNominalDiameter);\n    ;\n    args.push(this.TransverseBarNominalDiameter);\n    ;\n    args.push(this.LongitudinalBarCrossSectionArea);\n    ;\n    args.push(this.TransverseBarCrossSectionArea);\n    ;\n    args.push(this.LongitudinalBarSpacing);\n    ;\n    args.push(this.TransverseBarSpacing);\n    ;\n    args.push(this.BendingShapeCode);\n    ;\n    args.push(this.BendingParameters);\n    ;\n    return args;\n  }\n};\nvar IfcRelAggregates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssigns = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToActor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingActor = RelatingActor;\n    this.ActingRole = ActingRole;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingActor = tape[ptr++];\n    let ActingRole = tape[ptr++];\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingActor);\n    ;\n    args.push(this.ActingRole);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingControl = RelatingControl;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingControl = tape[ptr++];\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingControl);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToGroupByFactor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingGroup = RelatingGroup;\n    this.Factor = Factor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingGroup = tape[ptr++];\n    let Factor = tape[ptr++];\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingGroup);\n    ;\n    args.push(this.Factor);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProcess = RelatingProcess;\n    this.QuantityInProcess = QuantityInProcess;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let QuantityInProcess = tape[ptr++];\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.QuantityInProcess);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingProduct = RelatingProduct;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingProduct = tape[ptr++];\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingProduct);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssignsToResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatedObjectsType = RelatedObjectsType;\n    this.RelatingResource = RelatingResource;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatedObjectsType = tape[ptr++];\n    let RelatingResource = tape[ptr++];\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatedObjectsType);\n    ;\n    args.push(this.RelatingResource);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociates = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesApproval = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesClassification = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingClassification = RelatingClassification;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingClassification = tape[ptr++];\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingClassification);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesConstraint = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.Intent = Intent;\n    this.RelatingConstraint = RelatingConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let Intent = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.Intent);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesDocument = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingDocument = RelatingDocument;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingDocument = tape[ptr++];\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingDocument);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesLibrary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingLibrary = RelatingLibrary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingLibrary = tape[ptr++];\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingLibrary);\n    ;\n    return args;\n  }\n};\nvar IfcRelAssociatesMaterial = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingMaterial = RelatingMaterial;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingMaterial = tape[ptr++];\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingMaterial);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnects = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPathElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RelatingPriorities = RelatingPriorities;\n    this.RelatedPriorities = RelatedPriorities;\n    this.RelatedConnectionType = RelatedConnectionType;\n    this.RelatingConnectionType = RelatingConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RelatingPriorities = tape[ptr++];\n    let RelatedPriorities = tape[ptr++];\n    let RelatedConnectionType = tape[ptr++];\n    let RelatingConnectionType = tape[ptr++];\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RelatingPriorities);\n    ;\n    args.push(this.RelatedPriorities);\n    ;\n    args.push(this.RelatedConnectionType);\n    ;\n    args.push(this.RelatingConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPortToElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedElement = RelatedElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsPorts = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPort = RelatingPort;\n    this.RelatedPort = RelatedPort;\n    this.RealizingElement = RealizingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPort = tape[ptr++];\n    let RelatedPort = tape[ptr++];\n    let RealizingElement = tape[ptr++];\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPort);\n    ;\n    args.push(this.RelatedPort);\n    ;\n    args.push(this.RealizingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedStructuralActivity = tape[ptr++];\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedStructuralActivity);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithEccentricity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingStructuralMember = RelatingStructuralMember;\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\n    this.AppliedCondition = AppliedCondition;\n    this.AdditionalConditions = AdditionalConditions;\n    this.SupportedLength = SupportedLength;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n    this.ConnectionConstraint = ConnectionConstraint;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingStructuralMember = tape[ptr++];\n    let RelatedStructuralConnection = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let AdditionalConditions = tape[ptr++];\n    let SupportedLength = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    let ConnectionConstraint = tape[ptr++];\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingStructuralMember);\n    ;\n    args.push(this.RelatedStructuralConnection);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.AdditionalConditions);\n    ;\n    args.push(this.SupportedLength);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    args.push(this.ConnectionConstraint);\n    ;\n    return args;\n  }\n};\nvar IfcRelConnectsWithRealizingElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.RealizingElements = RealizingElements;\n    this.ConnectionType = ConnectionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let RealizingElements = tape[ptr++];\n    let ConnectionType = tape[ptr++];\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.RealizingElements);\n    ;\n    args.push(this.ConnectionType);\n    ;\n    return args;\n  }\n};\nvar IfcRelContainedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversBldgElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelCoversSpaces = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedCoverings = RelatedCoverings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedCoverings = tape[ptr++];\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedCoverings);\n    ;\n    return args;\n  }\n};\nvar IfcRelDeclares = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingContext = RelatingContext;\n    this.RelatedDefinitions = RelatedDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingContext = tape[ptr++];\n    let RelatedDefinitions = tape[ptr++];\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingContext);\n    ;\n    args.push(this.RelatedDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcRelDecomposes = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefines = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingObject = RelatingObject;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingPropertyDefinition = tape[ptr++];\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingPropertyDefinition);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedPropertySets = RelatedPropertySets;\n    this.RelatingTemplate = RelatingTemplate;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedPropertySets = tape[ptr++];\n    let RelatingTemplate = tape[ptr++];\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedPropertySets);\n    ;\n    args.push(this.RelatingTemplate);\n    ;\n    return args;\n  }\n};\nvar IfcRelDefinesByType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedObjects = RelatedObjects;\n    this.RelatingType = RelatingType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    let RelatingType = tape[ptr++];\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    args.push(this.RelatingType);\n    ;\n    return args;\n  }\n};\nvar IfcRelFillsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingOpeningElement = RelatingOpeningElement;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingOpeningElement = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingOpeningElement);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelFlowControlElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedControlElements = RelatedControlElements;\n    this.RelatingFlowElement = RelatingFlowElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedControlElements = tape[ptr++];\n    let RelatingFlowElement = tape[ptr++];\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedControlElements);\n    ;\n    args.push(this.RelatingFlowElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelInterferesElements = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedElement = RelatedElement;\n    this.InterferenceGeometry = InterferenceGeometry;\n    this.InterferenceType = InterferenceType;\n    this.ImpliedOrder = ImpliedOrder;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedElement = tape[ptr++];\n    let InterferenceGeometry = tape[ptr++];\n    let InterferenceType = tape[ptr++];\n    let ImpliedOrder = tape[ptr++];\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedElement);\n    ;\n    args.push(this.InterferenceGeometry);\n    ;\n    args.push(this.InterferenceType);\n    ;\n    args.push(this.ImpliedOrder);\n    ;\n    return args;\n  }\n};\nvar IfcRelNests = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingObject = RelatingObject;\n    this.RelatedObjects = RelatedObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingObject = tape[ptr++];\n    let RelatedObjects = tape[ptr++];\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingObject);\n    ;\n    args.push(this.RelatedObjects);\n    ;\n    return args;\n  }\n};\nvar IfcRelPositions = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingPositioningElement = RelatingPositioningElement;\n    this.RelatedProducts = RelatedProducts;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingPositioningElement = tape[ptr++];\n    let RelatedProducts = tape[ptr++];\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingPositioningElement);\n    ;\n    args.push(this.RelatedProducts);\n    ;\n    return args;\n  }\n};\nvar IfcRelProjectsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingElement = RelatingElement;\n    this.RelatedFeatureElement = RelatedFeatureElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingElement = tape[ptr++];\n    let RelatedFeatureElement = tape[ptr++];\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingElement);\n    ;\n    args.push(this.RelatedFeatureElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelReferencedInSpatialStructure = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedElements = RelatedElements;\n    this.RelatingStructure = RelatingStructure;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedElements = tape[ptr++];\n    let RelatingStructure = tape[ptr++];\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedElements);\n    ;\n    args.push(this.RelatingStructure);\n    ;\n    return args;\n  }\n};\nvar IfcRelSequence = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingProcess = RelatingProcess;\n    this.RelatedProcess = RelatedProcess;\n    this.TimeLag = TimeLag;\n    this.SequenceType = SequenceType;\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingProcess = tape[ptr++];\n    let RelatedProcess = tape[ptr++];\n    let TimeLag = tape[ptr++];\n    let SequenceType = tape[ptr++];\n    let UserDefinedSequenceType = tape[ptr++];\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingProcess);\n    ;\n    args.push(this.RelatedProcess);\n    ;\n    args.push(this.TimeLag);\n    ;\n    args.push(this.SequenceType);\n    ;\n    args.push(this.UserDefinedSequenceType);\n    ;\n    return args;\n  }\n};\nvar IfcRelServicesBuildings = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSystem = RelatingSystem;\n    this.RelatedBuildings = RelatedBuildings;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSystem = tape[ptr++];\n    let RelatedBuildings = tape[ptr++];\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSystem);\n    ;\n    args.push(this.RelatedBuildings);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary1stLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelSpaceBoundary2ndLevel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingSpace = RelatingSpace;\n    this.RelatedBuildingElement = RelatedBuildingElement;\n    this.ConnectionGeometry = ConnectionGeometry;\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\n    this.ParentBoundary = ParentBoundary;\n    this.CorrespondingBoundary = CorrespondingBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingSpace = tape[ptr++];\n    let RelatedBuildingElement = tape[ptr++];\n    let ConnectionGeometry = tape[ptr++];\n    let PhysicalOrVirtualBoundary = tape[ptr++];\n    let InternalOrExternalBoundary = tape[ptr++];\n    let ParentBoundary = tape[ptr++];\n    let CorrespondingBoundary = tape[ptr++];\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingSpace);\n    ;\n    args.push(this.RelatedBuildingElement);\n    ;\n    args.push(this.ConnectionGeometry);\n    ;\n    args.push(this.PhysicalOrVirtualBoundary);\n    ;\n    args.push(this.InternalOrExternalBoundary);\n    ;\n    args.push(this.ParentBoundary);\n    ;\n    args.push(this.CorrespondingBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcRelVoidsElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingBuildingElement = RelatingBuildingElement;\n    this.RelatedOpeningElement = RelatedOpeningElement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingBuildingElement = tape[ptr++];\n    let RelatedOpeningElement = tape[ptr++];\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingBuildingElement);\n    ;\n    args.push(this.RelatedOpeningElement);\n    ;\n    return args;\n  }\n};\nvar IfcRelationship = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcReparametrisedCompositeCurveSegment = class {\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Transition = Transition;\n    this.SameSense = SameSense;\n    this.ParentCurve = ParentCurve;\n    this.ParamLength = ParamLength;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Transition = tape[ptr++];\n    let SameSense = tape[ptr++];\n    let ParentCurve = tape[ptr++];\n    let ParamLength = tape[ptr++];\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Transition);\n    ;\n    args.push(this.SameSense);\n    ;\n    args.push(this.ParentCurve);\n    ;\n    args.push(this.ParamLength);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationContext = class {\n  constructor(expressID, type, ContextIdentifier, ContextType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextIdentifier = ContextIdentifier;\n    this.ContextType = ContextType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextIdentifier = tape[ptr++];\n    let ContextType = tape[ptr++];\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextIdentifier);\n    ;\n    args.push(this.ContextType);\n    ;\n    return args;\n  }\n};\nvar IfcRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcRepresentationMap = class {\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.MappingOrigin = MappingOrigin;\n    this.MappedRepresentation = MappedRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let MappingOrigin = tape[ptr++];\n    let MappedRepresentation = tape[ptr++];\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.MappingOrigin);\n    ;\n    args.push(this.MappedRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    return args;\n  }\n};\nvar IfcResourceApprovalRelationship = class {\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n    this.RelatingApproval = RelatingApproval;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    let RelatingApproval = tape[ptr++];\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    args.push(this.RelatingApproval);\n    ;\n    return args;\n  }\n};\nvar IfcResourceConstraintRelationship = class {\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.RelatingConstraint = RelatingConstraint;\n    this.RelatedResourceObjects = RelatedResourceObjects;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let RelatingConstraint = tape[ptr++];\n    let RelatedResourceObjects = tape[ptr++];\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.RelatingConstraint);\n    ;\n    args.push(this.RelatedResourceObjects);\n    ;\n    return args;\n  }\n};\nvar IfcResourceLevelRelationship = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcResourceTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.ScheduleWork = ScheduleWork;\n    this.ScheduleUsage = ScheduleUsage;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.ScheduleContour = ScheduleContour;\n    this.LevelingDelay = LevelingDelay;\n    this.IsOverAllocated = IsOverAllocated;\n    this.StatusTime = StatusTime;\n    this.ActualWork = ActualWork;\n    this.ActualUsage = ActualUsage;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingWork = RemainingWork;\n    this.RemainingUsage = RemainingUsage;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let ScheduleWork = tape[ptr++];\n    let ScheduleUsage = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let ScheduleContour = tape[ptr++];\n    let LevelingDelay = tape[ptr++];\n    let IsOverAllocated = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualWork = tape[ptr++];\n    let ActualUsage = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingWork = tape[ptr++];\n    let RemainingUsage = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.ScheduleWork);\n    ;\n    args.push(this.ScheduleUsage);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.ScheduleContour);\n    ;\n    args.push(this.LevelingDelay);\n    ;\n    args.push(this.IsOverAllocated);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualWork);\n    ;\n    args.push(this.ActualUsage);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingWork);\n    ;\n    args.push(this.RemainingUsage);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    return args;\n  }\n};\nvar IfcRevolvedAreaSolidTapered = class {\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Axis = Axis;\n    this.Angle = Angle;\n    this.EndSweptArea = EndSweptArea;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Axis = tape[ptr++];\n    let Angle = tape[ptr++];\n    let EndSweptArea = tape[ptr++];\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Axis);\n    ;\n    args.push(this.Angle);\n    ;\n    args.push(this.EndSweptArea);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCone = class {\n  constructor(expressID, type, Position, Height, BottomRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.BottomRadius = BottomRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let BottomRadius = tape[ptr++];\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.BottomRadius);\n    ;\n    return args;\n  }\n};\nvar IfcRightCircularCylinder = class {\n  constructor(expressID, type, Position, Height, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Height = Height;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Height = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Height);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcRoof = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoofType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcRoot = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcRoundedRectangleProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.XDim = XDim;\n    this.YDim = YDim;\n    this.RoundingRadius = RoundingRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let XDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let RoundingRadius = tape[ptr++];\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.XDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.RoundingRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSIUnit = class {\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Dimensions = Dimensions;\n    this.UnitType = UnitType;\n    this.Prefix = Prefix;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Dimensions = tape[ptr++];\n    let UnitType = tape[ptr++];\n    let Prefix = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Dimensions);\n    ;\n    args.push(this.UnitType);\n    ;\n    args.push(this.Prefix);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSanitaryTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSchedulingTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    return args;\n  }\n};\nvar IfcSeamCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSectionProperties = class {\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SectionType = SectionType;\n    this.StartProfile = StartProfile;\n    this.EndProfile = EndProfile;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SectionType = tape[ptr++];\n    let StartProfile = tape[ptr++];\n    let EndProfile = tape[ptr++];\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SectionType);\n    ;\n    args.push(this.StartProfile);\n    ;\n    args.push(this.EndProfile);\n    ;\n    return args;\n  }\n};\nvar IfcSectionReinforcementProperties = class {\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\n    this.TransversePosition = TransversePosition;\n    this.ReinforcementRole = ReinforcementRole;\n    this.SectionDefinition = SectionDefinition;\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LongitudinalStartPosition = tape[ptr++];\n    let LongitudinalEndPosition = tape[ptr++];\n    let TransversePosition = tape[ptr++];\n    let ReinforcementRole = tape[ptr++];\n    let SectionDefinition = tape[ptr++];\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LongitudinalStartPosition);\n    ;\n    args.push(this.LongitudinalEndPosition);\n    ;\n    args.push(this.TransversePosition);\n    ;\n    args.push(this.ReinforcementRole);\n    ;\n    args.push(this.SectionDefinition);\n    ;\n    args.push(this.CrossSectionReinforcementDefinitions);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolid = class {\n  constructor(expressID, type, Directrix, CrossSections) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSolidHorizontal = class {\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n    this.FixedAxisVertical = FixedAxisVertical;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    let FixedAxisVertical = tape[ptr++];\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    args.push(this.FixedAxisVertical);\n    ;\n    return args;\n  }\n};\nvar IfcSectionedSpine = class {\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SpineCurve = SpineCurve;\n    this.CrossSections = CrossSections;\n    this.CrossSectionPositions = CrossSectionPositions;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SpineCurve = tape[ptr++];\n    let CrossSections = tape[ptr++];\n    let CrossSectionPositions = tape[ptr++];\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SpineCurve);\n    ;\n    args.push(this.CrossSections);\n    ;\n    args.push(this.CrossSectionPositions);\n    ;\n    return args;\n  }\n};\nvar IfcSensor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSensorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShadingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcShapeAspect = class {\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ShapeRepresentations = ShapeRepresentations;\n    this.Name = Name;\n    this.Description = Description;\n    this.ProductDefinitional = ProductDefinitional;\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ShapeRepresentations = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ProductDefinitional = tape[ptr++];\n    let PartOfProductDefinitionShape = tape[ptr++];\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ShapeRepresentations);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ProductDefinitional);\n    ;\n    args.push(this.PartOfProductDefinitionShape);\n    ;\n    return args;\n  }\n};\nvar IfcShapeModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShapeRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcShellBasedSurfaceModel = class {\n  constructor(expressID, type, SbsmBoundary) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SbsmBoundary = SbsmBoundary;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SbsmBoundary = tape[ptr++];\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SbsmBoundary);\n    ;\n    return args;\n  }\n};\nvar IfcSimpleProperty = class {\n  constructor(expressID, type, Name, Description) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    return new IfcSimpleProperty(expressID, type, Name, Description);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    return args;\n  }\n};\nvar IfcSimplePropertyTemplate = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.TemplateType = TemplateType;\n    this.PrimaryMeasureType = PrimaryMeasureType;\n    this.SecondaryMeasureType = SecondaryMeasureType;\n    this.Enumerators = Enumerators;\n    this.PrimaryUnit = PrimaryUnit;\n    this.SecondaryUnit = SecondaryUnit;\n    this.Expression = Expression;\n    this.AccessState = AccessState;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let TemplateType = tape[ptr++];\n    let PrimaryMeasureType = tape[ptr++];\n    let SecondaryMeasureType = tape[ptr++];\n    let Enumerators = tape[ptr++];\n    let PrimaryUnit = tape[ptr++];\n    let SecondaryUnit = tape[ptr++];\n    let Expression = tape[ptr++];\n    let AccessState = tape[ptr++];\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.TemplateType);\n    ;\n    args.push(this.PrimaryMeasureType);\n    ;\n    args.push(this.SecondaryMeasureType);\n    ;\n    args.push(this.Enumerators);\n    ;\n    args.push(this.PrimaryUnit);\n    ;\n    args.push(this.SecondaryUnit);\n    ;\n    args.push(this.Expression);\n    ;\n    args.push(this.AccessState);\n    ;\n    return args;\n  }\n};\nvar IfcSite = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.RefLatitude = RefLatitude;\n    this.RefLongitude = RefLongitude;\n    this.RefElevation = RefElevation;\n    this.LandTitleNumber = LandTitleNumber;\n    this.SiteAddress = SiteAddress;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let RefLatitude = tape[ptr++];\n    let RefLongitude = tape[ptr++];\n    let RefElevation = tape[ptr++];\n    let LandTitleNumber = tape[ptr++];\n    let SiteAddress = tape[ptr++];\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.RefLatitude);\n    ;\n    args.push(this.RefLongitude);\n    ;\n    args.push(this.RefElevation);\n    ;\n    args.push(this.LandTitleNumber);\n    ;\n    args.push(this.SiteAddress);\n    ;\n    return args;\n  }\n};\nvar IfcSlab = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlabType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSlippageConnectionCondition = class {\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SlippageX = SlippageX;\n    this.SlippageY = SlippageY;\n    this.SlippageZ = SlippageZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SlippageX = tape[ptr++];\n    let SlippageY = tape[ptr++];\n    let SlippageZ = tape[ptr++];\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SlippageX);\n    ;\n    args.push(this.SlippageY);\n    ;\n    args.push(this.SlippageZ);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolarDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSolidModel = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSolidModel(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSpace = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n    this.PredefinedType = PredefinedType;\n    this.ElevationWithFlooring = ElevationWithFlooring;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ElevationWithFlooring = tape[ptr++];\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ElevationWithFlooring);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeater = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceHeaterType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpaceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.CompositionType = CompositionType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let CompositionType = tape[ptr++];\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.CompositionType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialStructureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.LongName = LongName;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let LongName = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.LongName);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSpatialZoneType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\nvar IfcSphere = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphere(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcSphericalSurface = class {\n  constructor(expressID, type, Position, Radius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.Radius = Radius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let Radius = tape[ptr++];\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.Radius);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStackTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStair = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlight = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.NumberOfRisers = NumberOfRisers;\n    this.NumberOfTreads = NumberOfTreads;\n    this.RiserHeight = RiserHeight;\n    this.TreadLength = TreadLength;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let NumberOfRisers = tape[ptr++];\n    let NumberOfTreads = tape[ptr++];\n    let RiserHeight = tape[ptr++];\n    let TreadLength = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.NumberOfRisers);\n    ;\n    args.push(this.NumberOfTreads);\n    ;\n    args.push(this.RiserHeight);\n    ;\n    args.push(this.TreadLength);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairFlightType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStairType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralActivity = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralAnalysisModel = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\n    this.LoadedBy = LoadedBy;\n    this.HasResults = HasResults;\n    this.SharedPlacement = SharedPlacement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let OrientationOf2DPlane = tape[ptr++];\n    let LoadedBy = tape[ptr++];\n    let HasResults = tape[ptr++];\n    let SharedPlacement = tape[ptr++];\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.OrientationOf2DPlane);\n    ;\n    args.push(this.LoadedBy);\n    ;\n    args.push(this.HasResults);\n    ;\n    args.push(this.SharedPlacement);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralConnectionCondition = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Axis = Axis;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Axis = tape[ptr++];\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Axis);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralCurveReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralItem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLinearAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoad = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoad(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let SelfWeightCoefficients = tape[ptr++];\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.SelfWeightCoefficients);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadConfiguration = class {\n  constructor(expressID, type, Name, Values, Locations) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Values = Values;\n    this.Locations = Locations;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Values = tape[ptr++];\n    let Locations = tape[ptr++];\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Values);\n    ;\n    args.push(this.Locations);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.PredefinedType = PredefinedType;\n    this.ActionType = ActionType;\n    this.ActionSource = ActionSource;\n    this.Coefficient = Coefficient;\n    this.Purpose = Purpose;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let ActionType = tape[ptr++];\n    let ActionSource = tape[ptr++];\n    let Coefficient = tape[ptr++];\n    let Purpose = tape[ptr++];\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.ActionType);\n    ;\n    args.push(this.ActionSource);\n    ;\n    args.push(this.Coefficient);\n    ;\n    args.push(this.Purpose);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadLinearForce = class {\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.LinearForceX = LinearForceX;\n    this.LinearForceY = LinearForceY;\n    this.LinearForceZ = LinearForceZ;\n    this.LinearMomentX = LinearMomentX;\n    this.LinearMomentY = LinearMomentY;\n    this.LinearMomentZ = LinearMomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let LinearForceX = tape[ptr++];\n    let LinearForceY = tape[ptr++];\n    let LinearForceZ = tape[ptr++];\n    let LinearMomentX = tape[ptr++];\n    let LinearMomentY = tape[ptr++];\n    let LinearMomentZ = tape[ptr++];\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.LinearForceX);\n    ;\n    args.push(this.LinearForceY);\n    ;\n    args.push(this.LinearForceZ);\n    ;\n    args.push(this.LinearMomentX);\n    ;\n    args.push(this.LinearMomentY);\n    ;\n    args.push(this.LinearMomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadOrResult = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadPlanarForce = class {\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.PlanarForceX = PlanarForceX;\n    this.PlanarForceY = PlanarForceY;\n    this.PlanarForceZ = PlanarForceZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let PlanarForceX = tape[ptr++];\n    let PlanarForceY = tape[ptr++];\n    let PlanarForceZ = tape[ptr++];\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.PlanarForceX);\n    ;\n    args.push(this.PlanarForceY);\n    ;\n    args.push(this.PlanarForceZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacement = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DisplacementX = DisplacementX;\n    this.DisplacementY = DisplacementY;\n    this.DisplacementZ = DisplacementZ;\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\n    this.Distortion = Distortion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DisplacementX = tape[ptr++];\n    let DisplacementY = tape[ptr++];\n    let DisplacementZ = tape[ptr++];\n    let RotationalDisplacementRX = tape[ptr++];\n    let RotationalDisplacementRY = tape[ptr++];\n    let RotationalDisplacementRZ = tape[ptr++];\n    let Distortion = tape[ptr++];\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DisplacementX);\n    ;\n    args.push(this.DisplacementY);\n    ;\n    args.push(this.DisplacementZ);\n    ;\n    args.push(this.RotationalDisplacementRX);\n    ;\n    args.push(this.RotationalDisplacementRY);\n    ;\n    args.push(this.RotationalDisplacementRZ);\n    ;\n    args.push(this.Distortion);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForce = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadSingleForceWarping = class {\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.ForceX = ForceX;\n    this.ForceY = ForceY;\n    this.ForceZ = ForceZ;\n    this.MomentX = MomentX;\n    this.MomentY = MomentY;\n    this.MomentZ = MomentZ;\n    this.WarpingMoment = WarpingMoment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let ForceX = tape[ptr++];\n    let ForceY = tape[ptr++];\n    let ForceZ = tape[ptr++];\n    let MomentX = tape[ptr++];\n    let MomentY = tape[ptr++];\n    let MomentZ = tape[ptr++];\n    let WarpingMoment = tape[ptr++];\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.ForceX);\n    ;\n    args.push(this.ForceY);\n    ;\n    args.push(this.ForceZ);\n    ;\n    args.push(this.MomentX);\n    ;\n    args.push(this.MomentY);\n    ;\n    args.push(this.MomentZ);\n    ;\n    args.push(this.WarpingMoment);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadStatic = class {\n  constructor(expressID, type, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    return new IfcStructuralLoadStatic(expressID, type, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralLoadTemperature = class {\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DeltaTConstant = DeltaTConstant;\n    this.DeltaTY = DeltaTY;\n    this.DeltaTZ = DeltaTZ;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DeltaTConstant = tape[ptr++];\n    let DeltaTY = tape[ptr++];\n    let DeltaTZ = tape[ptr++];\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DeltaTConstant);\n    ;\n    args.push(this.DeltaTY);\n    ;\n    args.push(this.DeltaTZ);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPlanarAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    let ConditionCoordinateSystem = tape[ptr++];\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    args.push(this.ConditionCoordinateSystem);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralPointReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralResultGroup = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.TheoryType = TheoryType;\n    this.ResultForLoadGroup = ResultForLoadGroup;\n    this.IsLinear = IsLinear;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let TheoryType = tape[ptr++];\n    let ResultForLoadGroup = tape[ptr++];\n    let IsLinear = tape[ptr++];\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.TheoryType);\n    ;\n    args.push(this.ResultForLoadGroup);\n    ;\n    args.push(this.IsLinear);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceAction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.DestabilizingLoad = DestabilizingLoad;\n    this.ProjectedOrTrue = ProjectedOrTrue;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let DestabilizingLoad = tape[ptr++];\n    let ProjectedOrTrue = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.DestabilizingLoad);\n    ;\n    args.push(this.ProjectedOrTrue);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceConnection = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedCondition = AppliedCondition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedCondition = tape[ptr++];\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedCondition);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMember = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceMemberVarying = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.PredefinedType = PredefinedType;\n    this.Thickness = Thickness;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let Thickness = tape[ptr++];\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.Thickness);\n    ;\n    return args;\n  }\n};\nvar IfcStructuralSurfaceReaction = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.AppliedLoad = AppliedLoad;\n    this.GlobalOrLocal = GlobalOrLocal;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let AppliedLoad = tape[ptr++];\n    let GlobalOrLocal = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.AppliedLoad);\n    ;\n    args.push(this.GlobalOrLocal);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcStyleModel = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcStyledItem = class {\n  constructor(expressID, type, Item, Styles, Name) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Item = Item;\n    this.Styles = Styles;\n    this.Name = Name;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Item = tape[ptr++];\n    let Styles = tape[ptr++];\n    let Name = tape[ptr++];\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Item);\n    ;\n    args.push(this.Styles);\n    ;\n    args.push(this.Name);\n    ;\n    return args;\n  }\n};\nvar IfcStyledRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Usage = Usage;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Usage = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Usage);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubContractResourceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n    this.BaseCosts = BaseCosts;\n    this.BaseQuantity = BaseQuantity;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    let BaseCosts = tape[ptr++];\n    let BaseQuantity = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    args.push(this.BaseCosts);\n    ;\n    args.push(this.BaseQuantity);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSubedge = class {\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\n    this.expressID = expressID;\n    this.type = type;\n    this.EdgeStart = EdgeStart;\n    this.EdgeEnd = EdgeEnd;\n    this.ParentEdge = ParentEdge;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let EdgeStart = tape[ptr++];\n    let EdgeEnd = tape[ptr++];\n    let ParentEdge = tape[ptr++];\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.EdgeStart);\n    ;\n    args.push(this.EdgeEnd);\n    ;\n    args.push(this.ParentEdge);\n    ;\n    return args;\n  }\n};\nvar IfcSurface = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcSurface(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcSurfaceCurve = class {\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Curve3D = Curve3D;\n    this.AssociatedGeometry = AssociatedGeometry;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Curve3D = tape[ptr++];\n    let AssociatedGeometry = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Curve3D);\n    ;\n    args.push(this.AssociatedGeometry);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceCurveSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n    this.Directrix = Directrix;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.ReferenceSurface = ReferenceSurface;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    let Directrix = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let ReferenceSurface = tape[ptr++];\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Directrix);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.ReferenceSurface);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfLinearExtrusion = class {\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.ExtrudedDirection = ExtrudedDirection;\n    this.Depth = Depth;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let ExtrudedDirection = tape[ptr++];\n    let Depth = tape[ptr++];\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.ExtrudedDirection);\n    ;\n    args.push(this.Depth);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceOfRevolution = class {\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n    this.AxisPosition = AxisPosition;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    let AxisPosition = tape[ptr++];\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.AxisPosition);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceReinforcementArea = class {\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\n    this.ShearReinforcement = ShearReinforcement;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let SurfaceReinforcement1 = tape[ptr++];\n    let SurfaceReinforcement2 = tape[ptr++];\n    let ShearReinforcement = tape[ptr++];\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.SurfaceReinforcement1);\n    ;\n    args.push(this.SurfaceReinforcement2);\n    ;\n    args.push(this.ShearReinforcement);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyle = class {\n  constructor(expressID, type, Name, Side, Styles) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Side = Side;\n    this.Styles = Styles;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Side = tape[ptr++];\n    let Styles = tape[ptr++];\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Side);\n    ;\n    args.push(this.Styles);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleLighting = class {\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\n    this.TransmissionColour = TransmissionColour;\n    this.ReflectanceColour = ReflectanceColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let DiffuseTransmissionColour = tape[ptr++];\n    let DiffuseReflectionColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let ReflectanceColour = tape[ptr++];\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.DiffuseReflectionColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.ReflectanceColour);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRefraction = class {\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RefractionIndex = RefractionIndex;\n    this.DispersionFactor = DispersionFactor;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RefractionIndex = tape[ptr++];\n    let DispersionFactor = tape[ptr++];\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RefractionIndex);\n    ;\n    args.push(this.DispersionFactor);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleRendering = class {\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n    this.DiffuseColour = DiffuseColour;\n    this.TransmissionColour = TransmissionColour;\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\n    this.ReflectionColour = ReflectionColour;\n    this.SpecularColour = SpecularColour;\n    this.SpecularHighlight = SpecularHighlight;\n    this.ReflectanceMethod = ReflectanceMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    let DiffuseColour = tape[ptr++];\n    let TransmissionColour = tape[ptr++];\n    let DiffuseTransmissionColour = tape[ptr++];\n    let ReflectionColour = tape[ptr++];\n    let SpecularColour = tape[ptr++];\n    let SpecularHighlight = tape[ptr++];\n    let ReflectanceMethod = tape[ptr++];\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    args.push(this.DiffuseColour);\n    ;\n    args.push(this.TransmissionColour);\n    ;\n    args.push(this.DiffuseTransmissionColour);\n    ;\n    args.push(this.ReflectionColour);\n    ;\n    args.push(this.SpecularColour);\n    ;\n    args.push(this.SpecularHighlight);\n    ;\n    args.push(this.ReflectanceMethod);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleShading = class {\n  constructor(expressID, type, SurfaceColour, Transparency) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SurfaceColour = SurfaceColour;\n    this.Transparency = Transparency;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SurfaceColour = tape[ptr++];\n    let Transparency = tape[ptr++];\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SurfaceColour);\n    ;\n    args.push(this.Transparency);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceStyleWithTextures = class {\n  constructor(expressID, type, Textures) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Textures = Textures;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Textures = tape[ptr++];\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Textures);\n    ;\n    return args;\n  }\n};\nvar IfcSurfaceTexture = class {\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RepeatS = RepeatS;\n    this.RepeatT = RepeatT;\n    this.Mode = Mode;\n    this.TextureTransform = TextureTransform;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RepeatS = tape[ptr++];\n    let RepeatT = tape[ptr++];\n    let Mode = tape[ptr++];\n    let TextureTransform = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RepeatS);\n    ;\n    args.push(this.RepeatT);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.TextureTransform);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcSweptAreaSolid = class {\n  constructor(expressID, type, SweptArea, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptArea = SweptArea;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptArea = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptArea);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolid = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    return args;\n  }\n};\nvar IfcSweptDiskSolidPolygonal = class {\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Directrix = Directrix;\n    this.Radius = Radius;\n    this.InnerRadius = InnerRadius;\n    this.StartParam = StartParam;\n    this.EndParam = EndParam;\n    this.FilletRadius = FilletRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Directrix = tape[ptr++];\n    let Radius = tape[ptr++];\n    let InnerRadius = tape[ptr++];\n    let StartParam = tape[ptr++];\n    let EndParam = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Directrix);\n    ;\n    args.push(this.Radius);\n    ;\n    args.push(this.InnerRadius);\n    ;\n    args.push(this.StartParam);\n    ;\n    args.push(this.EndParam);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    return args;\n  }\n};\nvar IfcSweptSurface = class {\n  constructor(expressID, type, SweptCurve, Position) {\n    this.expressID = expressID;\n    this.type = type;\n    this.SweptCurve = SweptCurve;\n    this.Position = Position;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let SweptCurve = tape[ptr++];\n    let Position = tape[ptr++];\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.SweptCurve);\n    ;\n    args.push(this.Position);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDevice = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSwitchingDeviceType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystem = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcSystemFurnitureElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\n    this.WebEdgeRadius = WebEdgeRadius;\n    this.WebSlope = WebSlope;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let FlangeEdgeRadius = tape[ptr++];\n    let WebEdgeRadius = tape[ptr++];\n    let WebSlope = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.FlangeEdgeRadius);\n    ;\n    args.push(this.WebEdgeRadius);\n    ;\n    args.push(this.WebSlope);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcTable = class {\n  constructor(expressID, type, Name, Rows, Columns) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Rows = Rows;\n    this.Columns = Columns;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Rows = tape[ptr++];\n    let Columns = tape[ptr++];\n    return new IfcTable(expressID, type, Name, Rows, Columns);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Rows);\n    ;\n    args.push(this.Columns);\n    ;\n    return args;\n  }\n};\nvar IfcTableColumn = class {\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Identifier = Identifier;\n    this.Name = Name;\n    this.Description = Description;\n    this.Unit = Unit;\n    this.ReferencePath = ReferencePath;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Identifier = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let Unit = tape[ptr++];\n    let ReferencePath = tape[ptr++];\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Identifier);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.Unit);\n    ;\n    args.push(this.ReferencePath);\n    ;\n    return args;\n  }\n};\nvar IfcTableRow = class {\n  constructor(expressID, type, RowCells, IsHeading) {\n    this.expressID = expressID;\n    this.type = type;\n    this.RowCells = RowCells;\n    this.IsHeading = IsHeading;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let RowCells = tape[ptr++];\n    let IsHeading = tape[ptr++];\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.RowCells);\n    ;\n    args.push(this.IsHeading);\n    ;\n    return args;\n  }\n};\nvar IfcTank = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTankType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTask = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.Status = Status;\n    this.WorkMethod = WorkMethod;\n    this.IsMilestone = IsMilestone;\n    this.Priority = Priority;\n    this.TaskTime = TaskTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let Status = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    let IsMilestone = tape[ptr++];\n    let Priority = tape[ptr++];\n    let TaskTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.Status);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    args.push(this.IsMilestone);\n    ;\n    args.push(this.Priority);\n    ;\n    args.push(this.TaskTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    return args;\n  }\n};\nvar IfcTaskTimeRecurring = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.DurationType = DurationType;\n    this.ScheduleDuration = ScheduleDuration;\n    this.ScheduleStart = ScheduleStart;\n    this.ScheduleFinish = ScheduleFinish;\n    this.EarlyStart = EarlyStart;\n    this.EarlyFinish = EarlyFinish;\n    this.LateStart = LateStart;\n    this.LateFinish = LateFinish;\n    this.FreeFloat = FreeFloat;\n    this.TotalFloat = TotalFloat;\n    this.IsCritical = IsCritical;\n    this.StatusTime = StatusTime;\n    this.ActualDuration = ActualDuration;\n    this.ActualStart = ActualStart;\n    this.ActualFinish = ActualFinish;\n    this.RemainingTime = RemainingTime;\n    this.Completion = Completion;\n    this.Recurrence = Recurrence;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let DurationType = tape[ptr++];\n    let ScheduleDuration = tape[ptr++];\n    let ScheduleStart = tape[ptr++];\n    let ScheduleFinish = tape[ptr++];\n    let EarlyStart = tape[ptr++];\n    let EarlyFinish = tape[ptr++];\n    let LateStart = tape[ptr++];\n    let LateFinish = tape[ptr++];\n    let FreeFloat = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let IsCritical = tape[ptr++];\n    let StatusTime = tape[ptr++];\n    let ActualDuration = tape[ptr++];\n    let ActualStart = tape[ptr++];\n    let ActualFinish = tape[ptr++];\n    let RemainingTime = tape[ptr++];\n    let Completion = tape[ptr++];\n    let Recurrence = tape[ptr++];\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.DurationType);\n    ;\n    args.push(this.ScheduleDuration);\n    ;\n    args.push(this.ScheduleStart);\n    ;\n    args.push(this.ScheduleFinish);\n    ;\n    args.push(this.EarlyStart);\n    ;\n    args.push(this.EarlyFinish);\n    ;\n    args.push(this.LateStart);\n    ;\n    args.push(this.LateFinish);\n    ;\n    args.push(this.FreeFloat);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.IsCritical);\n    ;\n    args.push(this.StatusTime);\n    ;\n    args.push(this.ActualDuration);\n    ;\n    args.push(this.ActualStart);\n    ;\n    args.push(this.ActualFinish);\n    ;\n    args.push(this.RemainingTime);\n    ;\n    args.push(this.Completion);\n    ;\n    args.push(this.Recurrence);\n    ;\n    return args;\n  }\n};\nvar IfcTaskType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n    this.PredefinedType = PredefinedType;\n    this.WorkMethod = WorkMethod;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let WorkMethod = tape[ptr++];\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.WorkMethod);\n    ;\n    return args;\n  }\n};\nvar IfcTelecomAddress = class {\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Purpose = Purpose;\n    this.Description = Description;\n    this.UserDefinedPurpose = UserDefinedPurpose;\n    this.TelephoneNumbers = TelephoneNumbers;\n    this.FacsimileNumbers = FacsimileNumbers;\n    this.PagerNumber = PagerNumber;\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\n    this.WWWHomePageURL = WWWHomePageURL;\n    this.MessagingIDs = MessagingIDs;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Purpose = tape[ptr++];\n    let Description = tape[ptr++];\n    let UserDefinedPurpose = tape[ptr++];\n    let TelephoneNumbers = tape[ptr++];\n    let FacsimileNumbers = tape[ptr++];\n    let PagerNumber = tape[ptr++];\n    let ElectronicMailAddresses = tape[ptr++];\n    let WWWHomePageURL = tape[ptr++];\n    let MessagingIDs = tape[ptr++];\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Purpose);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.UserDefinedPurpose);\n    ;\n    args.push(this.TelephoneNumbers);\n    ;\n    args.push(this.FacsimileNumbers);\n    ;\n    args.push(this.PagerNumber);\n    ;\n    args.push(this.ElectronicMailAddresses);\n    ;\n    args.push(this.WWWHomePageURL);\n    ;\n    args.push(this.MessagingIDs);\n    ;\n    return args;\n  }\n};\nvar IfcTendon = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.TensionForce = TensionForce;\n    this.PreStress = PreStress;\n    this.FrictionCoefficient = FrictionCoefficient;\n    this.AnchorageSlip = AnchorageSlip;\n    this.MinCurvatureRadius = MinCurvatureRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let TensionForce = tape[ptr++];\n    let PreStress = tape[ptr++];\n    let FrictionCoefficient = tape[ptr++];\n    let AnchorageSlip = tape[ptr++];\n    let MinCurvatureRadius = tape[ptr++];\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.TensionForce);\n    ;\n    args.push(this.PreStress);\n    ;\n    args.push(this.FrictionCoefficient);\n    ;\n    args.push(this.AnchorageSlip);\n    ;\n    args.push(this.MinCurvatureRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchor = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonAnchorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduit = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.SteelGrade = SteelGrade;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let SteelGrade = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.SteelGrade);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonConduitType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTendonType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.NominalDiameter = NominalDiameter;\n    this.CrossSectionArea = CrossSectionArea;\n    this.SheathDiameter = SheathDiameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let NominalDiameter = tape[ptr++];\n    let CrossSectionArea = tape[ptr++];\n    let SheathDiameter = tape[ptr++];\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.NominalDiameter);\n    ;\n    args.push(this.CrossSectionArea);\n    ;\n    args.push(this.SheathDiameter);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedFaceSet = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTessellatedItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTessellatedItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTextLiteral = class {\n  constructor(expressID, type, Literal, Placement, Path) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    return args;\n  }\n};\nvar IfcTextLiteralWithExtent = class {\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Literal = Literal;\n    this.Placement = Placement;\n    this.Path = Path;\n    this.Extent = Extent;\n    this.BoxAlignment = BoxAlignment;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Literal = tape[ptr++];\n    let Placement = tape[ptr++];\n    let Path = tape[ptr++];\n    let Extent = tape[ptr++];\n    let BoxAlignment = tape[ptr++];\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Literal);\n    ;\n    args.push(this.Placement);\n    ;\n    args.push(this.Path);\n    ;\n    args.push(this.Extent);\n    ;\n    args.push(this.BoxAlignment);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyle = class {\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.TextCharacterAppearance = TextCharacterAppearance;\n    this.TextStyle = TextStyle;\n    this.TextFontStyle = TextFontStyle;\n    this.ModelOrDraughting = ModelOrDraughting;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let TextCharacterAppearance = tape[ptr++];\n    let TextStyle = tape[ptr++];\n    let TextFontStyle = tape[ptr++];\n    let ModelOrDraughting = tape[ptr++];\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.TextCharacterAppearance);\n    ;\n    args.push(this.TextStyle);\n    ;\n    args.push(this.TextFontStyle);\n    ;\n    args.push(this.ModelOrDraughting);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleFontModel = class {\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.FontFamily = FontFamily;\n    this.FontStyle = FontStyle;\n    this.FontVariant = FontVariant;\n    this.FontWeight = FontWeight;\n    this.FontSize = FontSize;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let FontFamily = tape[ptr++];\n    let FontStyle = tape[ptr++];\n    let FontVariant = tape[ptr++];\n    let FontWeight = tape[ptr++];\n    let FontSize = tape[ptr++];\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.FontFamily);\n    ;\n    args.push(this.FontStyle);\n    ;\n    args.push(this.FontVariant);\n    ;\n    args.push(this.FontWeight);\n    ;\n    args.push(this.FontSize);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleForDefinedFont = class {\n  constructor(expressID, type, Colour, BackgroundColour) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Colour = Colour;\n    this.BackgroundColour = BackgroundColour;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Colour = tape[ptr++];\n    let BackgroundColour = tape[ptr++];\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Colour);\n    ;\n    args.push(this.BackgroundColour);\n    ;\n    return args;\n  }\n};\nvar IfcTextStyleTextModel = class {\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TextIndent = TextIndent;\n    this.TextAlign = TextAlign;\n    this.TextDecoration = TextDecoration;\n    this.LetterSpacing = LetterSpacing;\n    this.WordSpacing = WordSpacing;\n    this.TextTransform = TextTransform;\n    this.LineHeight = LineHeight;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TextIndent = tape[ptr++];\n    let TextAlign = tape[ptr++];\n    let TextDecoration = tape[ptr++];\n    let LetterSpacing = tape[ptr++];\n    let WordSpacing = tape[ptr++];\n    let TextTransform = tape[ptr++];\n    let LineHeight = tape[ptr++];\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TextIndent);\n    ;\n    args.push(this.TextAlign);\n    ;\n    args.push(this.TextDecoration);\n    ;\n    args.push(this.LetterSpacing);\n    ;\n    args.push(this.WordSpacing);\n    ;\n    args.push(this.TextTransform);\n    ;\n    args.push(this.LineHeight);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinate = class {\n  constructor(expressID, type, Maps) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    return new IfcTextureCoordinate(expressID, type, Maps);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    return args;\n  }\n};\nvar IfcTextureCoordinateGenerator = class {\n  constructor(expressID, type, Maps, Mode, Parameter) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Mode = Mode;\n    this.Parameter = Parameter;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Mode = tape[ptr++];\n    let Parameter = tape[ptr++];\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Mode);\n    ;\n    args.push(this.Parameter);\n    ;\n    return args;\n  }\n};\nvar IfcTextureMap = class {\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Maps = Maps;\n    this.Vertices = Vertices;\n    this.MappedTo = MappedTo;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Maps = tape[ptr++];\n    let Vertices = tape[ptr++];\n    let MappedTo = tape[ptr++];\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Maps);\n    ;\n    args.push(this.Vertices);\n    ;\n    args.push(this.MappedTo);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertex = class {\n  constructor(expressID, type, Coordinates) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    return new IfcTextureVertex(expressID, type, Coordinates);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    return args;\n  }\n};\nvar IfcTextureVertexList = class {\n  constructor(expressID, type, TexCoordsList) {\n    this.expressID = expressID;\n    this.type = type;\n    this.TexCoordsList = TexCoordsList;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let TexCoordsList = tape[ptr++];\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.TexCoordsList);\n    ;\n    return args;\n  }\n};\nvar IfcTimePeriod = class {\n  constructor(expressID, type, StartTime, EndTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeries = class {\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.Description = Description;\n    this.StartTime = StartTime;\n    this.EndTime = EndTime;\n    this.TimeSeriesDataType = TimeSeriesDataType;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.Unit = Unit;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let EndTime = tape[ptr++];\n    let TimeSeriesDataType = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let Unit = tape[ptr++];\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.EndTime);\n    ;\n    args.push(this.TimeSeriesDataType);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.Unit);\n    ;\n    return args;\n  }\n};\nvar IfcTimeSeriesValue = class {\n  constructor(expressID, type, ListValues) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ListValues = ListValues;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ListValues = tape[ptr++];\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ListValues);\n    ;\n    return args;\n  }\n};\nvar IfcTopologicalRepresentationItem = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcTopologicalRepresentationItem(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcTopologyRepresentation = class {\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ContextOfItems = ContextOfItems;\n    this.RepresentationIdentifier = RepresentationIdentifier;\n    this.RepresentationType = RepresentationType;\n    this.Items = Items;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ContextOfItems = tape[ptr++];\n    let RepresentationIdentifier = tape[ptr++];\n    let RepresentationType = tape[ptr++];\n    let Items = tape[ptr++];\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ContextOfItems);\n    ;\n    args.push(this.RepresentationIdentifier);\n    ;\n    args.push(this.RepresentationType);\n    ;\n    args.push(this.Items);\n    ;\n    return args;\n  }\n};\nvar IfcToroidalSurface = class {\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Position = Position;\n    this.MajorRadius = MajorRadius;\n    this.MinorRadius = MinorRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Position = tape[ptr++];\n    let MajorRadius = tape[ptr++];\n    let MinorRadius = tape[ptr++];\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Position);\n    ;\n    args.push(this.MajorRadius);\n    ;\n    args.push(this.MinorRadius);\n    ;\n    return args;\n  }\n};\nvar IfcTransformer = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransformerType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransitionCurveSegment2D = class {\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.StartPoint = StartPoint;\n    this.StartDirection = StartDirection;\n    this.SegmentLength = SegmentLength;\n    this.StartRadius = StartRadius;\n    this.EndRadius = EndRadius;\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\n    this.TransitionCurveType = TransitionCurveType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let StartPoint = tape[ptr++];\n    let StartDirection = tape[ptr++];\n    let SegmentLength = tape[ptr++];\n    let StartRadius = tape[ptr++];\n    let EndRadius = tape[ptr++];\n    let IsStartRadiusCCW = tape[ptr++];\n    let IsEndRadiusCCW = tape[ptr++];\n    let TransitionCurveType = tape[ptr++];\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.StartPoint);\n    ;\n    args.push(this.StartDirection);\n    ;\n    args.push(this.SegmentLength);\n    ;\n    args.push(this.StartRadius);\n    ;\n    args.push(this.EndRadius);\n    ;\n    args.push(this.IsStartRadiusCCW);\n    ;\n    args.push(this.IsEndRadiusCCW);\n    ;\n    args.push(this.TransitionCurveType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTransportElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTrapeziumProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.BottomXDim = BottomXDim;\n    this.TopXDim = TopXDim;\n    this.YDim = YDim;\n    this.TopXOffset = TopXOffset;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let BottomXDim = tape[ptr++];\n    let TopXDim = tape[ptr++];\n    let YDim = tape[ptr++];\n    let TopXOffset = tape[ptr++];\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.BottomXDim);\n    ;\n    args.push(this.TopXDim);\n    ;\n    args.push(this.YDim);\n    ;\n    args.push(this.TopXOffset);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedFaceSet = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    return args;\n  }\n};\nvar IfcTriangulatedIrregularNetwork = class {\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Coordinates = Coordinates;\n    this.Normals = Normals;\n    this.Closed = Closed;\n    this.CoordIndex = CoordIndex;\n    this.PnIndex = PnIndex;\n    this.Flags = Flags;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Coordinates = tape[ptr++];\n    let Normals = tape[ptr++];\n    let Closed = tape[ptr++];\n    let CoordIndex = tape[ptr++];\n    let PnIndex = tape[ptr++];\n    let Flags = tape[ptr++];\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Coordinates);\n    ;\n    args.push(this.Normals);\n    ;\n    args.push(this.Closed);\n    ;\n    args.push(this.CoordIndex);\n    ;\n    args.push(this.PnIndex);\n    ;\n    args.push(this.Flags);\n    ;\n    return args;\n  }\n};\nvar IfcTrimmedCurve = class {\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\n    this.expressID = expressID;\n    this.type = type;\n    this.BasisCurve = BasisCurve;\n    this.Trim1 = Trim1;\n    this.Trim2 = Trim2;\n    this.SenseAgreement = SenseAgreement;\n    this.MasterRepresentation = MasterRepresentation;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let BasisCurve = tape[ptr++];\n    let Trim1 = tape[ptr++];\n    let Trim2 = tape[ptr++];\n    let SenseAgreement = tape[ptr++];\n    let MasterRepresentation = tape[ptr++];\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.BasisCurve);\n    ;\n    args.push(this.Trim1);\n    ;\n    args.push(this.Trim2);\n    ;\n    args.push(this.SenseAgreement);\n    ;\n    args.push(this.MasterRepresentation);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTubeBundleType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeObject = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProcess = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ProcessType = ProcessType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ProcessType = tape[ptr++];\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ProcessType);\n    ;\n    return args;\n  }\n};\nvar IfcTypeProduct = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcTypeResource = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.Identification = Identification;\n    this.LongDescription = LongDescription;\n    this.ResourceType = ResourceType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let Identification = tape[ptr++];\n    let LongDescription = tape[ptr++];\n    let ResourceType = tape[ptr++];\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.LongDescription);\n    ;\n    args.push(this.ResourceType);\n    ;\n    return args;\n  }\n};\nvar IfcUShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n    this.FlangeSlope = FlangeSlope;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    let FlangeSlope = tape[ptr++];\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    args.push(this.FlangeSlope);\n    ;\n    return args;\n  }\n};\nvar IfcUnitAssignment = class {\n  constructor(expressID, type, Units) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Units = Units;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Units = tape[ptr++];\n    return new IfcUnitAssignment(expressID, type, Units);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Units);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryControlElementType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipment = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcUnitaryEquipmentType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValve = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcValveType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVector = class {\n  constructor(expressID, type, Orientation, Magnitude) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Orientation = Orientation;\n    this.Magnitude = Magnitude;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Orientation = tape[ptr++];\n    let Magnitude = tape[ptr++];\n    return new IfcVector(expressID, type, Orientation, Magnitude);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Orientation);\n    ;\n    args.push(this.Magnitude);\n    ;\n    return args;\n  }\n};\nvar IfcVertex = class {\n  constructor(expressID, type) {\n    this.expressID = expressID;\n    this.type = type;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    return new IfcVertex(expressID, type);\n  }\n  ToTape() {\n    let args = [];\n    return args;\n  }\n};\nvar IfcVertexLoop = class {\n  constructor(expressID, type, LoopVertex) {\n    this.expressID = expressID;\n    this.type = type;\n    this.LoopVertex = LoopVertex;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let LoopVertex = tape[ptr++];\n    return new IfcVertexLoop(expressID, type, LoopVertex);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.LoopVertex);\n    ;\n    return args;\n  }\n};\nvar IfcVertexPoint = class {\n  constructor(expressID, type, VertexGeometry) {\n    this.expressID = expressID;\n    this.type = type;\n    this.VertexGeometry = VertexGeometry;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let VertexGeometry = tape[ptr++];\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.VertexGeometry);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamper = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationDamperType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolator = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVibrationIsolatorType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualElement = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    return args;\n  }\n};\nvar IfcVirtualGridIntersection = class {\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\n    this.expressID = expressID;\n    this.type = type;\n    this.IntersectingAxes = IntersectingAxes;\n    this.OffsetDistances = OffsetDistances;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let IntersectingAxes = tape[ptr++];\n    let OffsetDistances = tape[ptr++];\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.IntersectingAxes);\n    ;\n    args.push(this.OffsetDistances);\n    ;\n    return args;\n  }\n};\nvar IfcVoidingFeature = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWall = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallElementedCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWallType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminal = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWasteTerminalType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWindow = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowLiningProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.LiningDepth = LiningDepth;\n    this.LiningThickness = LiningThickness;\n    this.TransomThickness = TransomThickness;\n    this.MullionThickness = MullionThickness;\n    this.FirstTransomOffset = FirstTransomOffset;\n    this.SecondTransomOffset = SecondTransomOffset;\n    this.FirstMullionOffset = FirstMullionOffset;\n    this.SecondMullionOffset = SecondMullionOffset;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n    this.LiningOffset = LiningOffset;\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let LiningDepth = tape[ptr++];\n    let LiningThickness = tape[ptr++];\n    let TransomThickness = tape[ptr++];\n    let MullionThickness = tape[ptr++];\n    let FirstTransomOffset = tape[ptr++];\n    let SecondTransomOffset = tape[ptr++];\n    let FirstMullionOffset = tape[ptr++];\n    let SecondMullionOffset = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    let LiningOffset = tape[ptr++];\n    let LiningToPanelOffsetX = tape[ptr++];\n    let LiningToPanelOffsetY = tape[ptr++];\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.LiningDepth);\n    ;\n    args.push(this.LiningThickness);\n    ;\n    args.push(this.TransomThickness);\n    ;\n    args.push(this.MullionThickness);\n    ;\n    args.push(this.FirstTransomOffset);\n    ;\n    args.push(this.SecondTransomOffset);\n    ;\n    args.push(this.FirstMullionOffset);\n    ;\n    args.push(this.SecondMullionOffset);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    args.push(this.LiningOffset);\n    ;\n    args.push(this.LiningToPanelOffsetX);\n    ;\n    args.push(this.LiningToPanelOffsetY);\n    ;\n    return args;\n  }\n};\nvar IfcWindowPanelProperties = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.OperationType = OperationType;\n    this.PanelPosition = PanelPosition;\n    this.FrameDepth = FrameDepth;\n    this.FrameThickness = FrameThickness;\n    this.ShapeAspectStyle = ShapeAspectStyle;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let PanelPosition = tape[ptr++];\n    let FrameDepth = tape[ptr++];\n    let FrameThickness = tape[ptr++];\n    let ShapeAspectStyle = tape[ptr++];\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.PanelPosition);\n    ;\n    args.push(this.FrameDepth);\n    ;\n    args.push(this.FrameThickness);\n    ;\n    args.push(this.ShapeAspectStyle);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStandardCase = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.ObjectPlacement = ObjectPlacement;\n    this.Representation = Representation;\n    this.Tag = Tag;\n    this.OverallHeight = OverallHeight;\n    this.OverallWidth = OverallWidth;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let ObjectPlacement = tape[ptr++];\n    let Representation = tape[ptr++];\n    let Tag = tape[ptr++];\n    let OverallHeight = tape[ptr++];\n    let OverallWidth = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.ObjectPlacement);\n    ;\n    args.push(this.Representation);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.OverallHeight);\n    ;\n    args.push(this.OverallWidth);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWindowStyle = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ConstructionType = ConstructionType;\n    this.OperationType = OperationType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.Sizeable = Sizeable;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ConstructionType = tape[ptr++];\n    let OperationType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let Sizeable = tape[ptr++];\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ConstructionType);\n    ;\n    args.push(this.OperationType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.Sizeable);\n    ;\n    return args;\n  }\n};\nvar IfcWindowType = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ApplicableOccurrence = ApplicableOccurrence;\n    this.HasPropertySets = HasPropertySets;\n    this.RepresentationMaps = RepresentationMaps;\n    this.Tag = Tag;\n    this.ElementType = ElementType;\n    this.PredefinedType = PredefinedType;\n    this.PartitioningType = PartitioningType;\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ApplicableOccurrence = tape[ptr++];\n    let HasPropertySets = tape[ptr++];\n    let RepresentationMaps = tape[ptr++];\n    let Tag = tape[ptr++];\n    let ElementType = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    let PartitioningType = tape[ptr++];\n    let ParameterTakesPrecedence = tape[ptr++];\n    let UserDefinedPartitioningType = tape[ptr++];\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ApplicableOccurrence);\n    ;\n    args.push(this.HasPropertySets);\n    ;\n    args.push(this.RepresentationMaps);\n    ;\n    args.push(this.Tag);\n    ;\n    args.push(this.ElementType);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    args.push(this.PartitioningType);\n    ;\n    args.push(this.ParameterTakesPrecedence);\n    ;\n    args.push(this.UserDefinedPartitioningType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkCalendar = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.WorkingTimes = WorkingTimes;\n    this.ExceptionTimes = ExceptionTimes;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let WorkingTimes = tape[ptr++];\n    let ExceptionTimes = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.WorkingTimes);\n    ;\n    args.push(this.ExceptionTimes);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkControl = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    return args;\n  }\n};\nvar IfcWorkPlan = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkSchedule = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.Identification = Identification;\n    this.CreationDate = CreationDate;\n    this.Creators = Creators;\n    this.Purpose = Purpose;\n    this.Duration = Duration;\n    this.TotalFloat = TotalFloat;\n    this.StartTime = StartTime;\n    this.FinishTime = FinishTime;\n    this.PredefinedType = PredefinedType;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let Identification = tape[ptr++];\n    let CreationDate = tape[ptr++];\n    let Creators = tape[ptr++];\n    let Purpose = tape[ptr++];\n    let Duration = tape[ptr++];\n    let TotalFloat = tape[ptr++];\n    let StartTime = tape[ptr++];\n    let FinishTime = tape[ptr++];\n    let PredefinedType = tape[ptr++];\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.Identification);\n    ;\n    args.push(this.CreationDate);\n    ;\n    args.push(this.Creators);\n    ;\n    args.push(this.Purpose);\n    ;\n    args.push(this.Duration);\n    ;\n    args.push(this.TotalFloat);\n    ;\n    args.push(this.StartTime);\n    ;\n    args.push(this.FinishTime);\n    ;\n    args.push(this.PredefinedType);\n    ;\n    return args;\n  }\n};\nvar IfcWorkTime = class {\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\n    this.expressID = expressID;\n    this.type = type;\n    this.Name = Name;\n    this.DataOrigin = DataOrigin;\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\n    this.RecurrencePattern = RecurrencePattern;\n    this.Start = Start;\n    this.Finish = Finish;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let Name = tape[ptr++];\n    let DataOrigin = tape[ptr++];\n    let UserDefinedDataOrigin = tape[ptr++];\n    let RecurrencePattern = tape[ptr++];\n    let Start = tape[ptr++];\n    let Finish = tape[ptr++];\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.Name);\n    ;\n    args.push(this.DataOrigin);\n    ;\n    args.push(this.UserDefinedDataOrigin);\n    ;\n    args.push(this.RecurrencePattern);\n    ;\n    args.push(this.Start);\n    ;\n    args.push(this.Finish);\n    ;\n    return args;\n  }\n};\nvar IfcZShapeProfileDef = class {\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\n    this.expressID = expressID;\n    this.type = type;\n    this.ProfileType = ProfileType;\n    this.ProfileName = ProfileName;\n    this.Position = Position;\n    this.Depth = Depth;\n    this.FlangeWidth = FlangeWidth;\n    this.WebThickness = WebThickness;\n    this.FlangeThickness = FlangeThickness;\n    this.FilletRadius = FilletRadius;\n    this.EdgeRadius = EdgeRadius;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let ProfileType = tape[ptr++];\n    let ProfileName = tape[ptr++];\n    let Position = tape[ptr++];\n    let Depth = tape[ptr++];\n    let FlangeWidth = tape[ptr++];\n    let WebThickness = tape[ptr++];\n    let FlangeThickness = tape[ptr++];\n    let FilletRadius = tape[ptr++];\n    let EdgeRadius = tape[ptr++];\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.ProfileType);\n    ;\n    args.push(this.ProfileName);\n    ;\n    args.push(this.Position);\n    ;\n    args.push(this.Depth);\n    ;\n    args.push(this.FlangeWidth);\n    ;\n    args.push(this.WebThickness);\n    ;\n    args.push(this.FlangeThickness);\n    ;\n    args.push(this.FilletRadius);\n    ;\n    args.push(this.EdgeRadius);\n    ;\n    return args;\n  }\n};\nvar IfcZone = class {\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\n    this.expressID = expressID;\n    this.type = type;\n    this.GlobalId = GlobalId;\n    this.OwnerHistory = OwnerHistory;\n    this.Name = Name;\n    this.Description = Description;\n    this.ObjectType = ObjectType;\n    this.LongName = LongName;\n  }\n  static FromTape(expressID, type, tape) {\n    let ptr = 0;\n    let GlobalId = tape[ptr++];\n    let OwnerHistory = tape[ptr++];\n    let Name = tape[ptr++];\n    let Description = tape[ptr++];\n    let ObjectType = tape[ptr++];\n    let LongName = tape[ptr++];\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\n  }\n  ToTape() {\n    let args = [];\n    args.push(this.GlobalId);\n    ;\n    args.push(this.OwnerHistory);\n    ;\n    args.push(this.Name);\n    ;\n    args.push(this.Description);\n    ;\n    args.push(this.ObjectType);\n    ;\n    args.push(this.LongName);\n    ;\n    return args;\n  }\n};\n\n// dist/helpers/ifc-elements.ts\nvar IfcElements2 = {\n  103090709: \"IFCPROJECT\",\n  4097777520: \"IFCSITE\",\n  4031249490: \"IFCBUILDING\",\n  3124254112: \"IFCBUILDINGSTOREY\",\n  3856911033: \"IFCSPACE\",\n  1674181508: \"IFCANNOTATION\",\n  25142252: \"IFCCONTROLLER\",\n  32344328: \"IFCBOILER\",\n  76236018: \"IFCLAMP\",\n  90941305: \"IFCPUMP\",\n  177149247: \"IFCAIRTERMINALBOX\",\n  182646315: \"IFCFLOWINSTRUMENT\",\n  263784265: \"IFCFURNISHINGELEMENT\",\n  264262732: \"IFCELECTRICGENERATOR\",\n  277319702: \"IFCAUDIOVISUALAPPLIANCE\",\n  310824031: \"IFCPIPEFITTING\",\n  331165859: \"IFCSTAIR\",\n  342316401: \"IFCDUCTFITTING\",\n  377706215: \"IFCMECHANICALFASTENER\",\n  395920057: \"IFCDOOR\",\n  402227799: \"IFCELECTRICMOTOR\",\n  413509423: \"IFCSYSTEMFURNITUREELEMENT\",\n  484807127: \"IFCEVAPORATOR\",\n  486154966: \"IFCWINDOWSTANDARDCASE\",\n  629592764: \"IFCLIGHTFIXTURE\",\n  630975310: \"IFCUNITARYCONTROLELEMENT\",\n  635142910: \"IFCCABLECARRIERFITTING\",\n  639361253: \"IFCCOIL\",\n  647756555: \"IFCFASTENER\",\n  707683696: \"IFCFLOWSTORAGEDEVICE\",\n  738039164: \"IFCPROTECTIVEDEVICE\",\n  753842376: \"IFCBEAM\",\n  812556717: \"IFCTANK\",\n  819412036: \"IFCFILTER\",\n  843113511: \"IFCCOLUMN\",\n  862014818: \"IFCELECTRICDISTRIBUTIONBOARD\",\n  900683007: \"IFCFOOTING\",\n  905975707: \"IFCCOLUMNSTANDARDCASE\",\n  926996030: \"IFCVOIDINGFEATURE\",\n  979691226: \"IFCREINFORCINGBAR\",\n  987401354: \"IFCFLOWSEGMENT\",\n  1003880860: \"IFCELECTRICTIMECONTROL\",\n  1051757585: \"IFCCABLEFITTING\",\n  1052013943: \"IFCDISTRIBUTIONCHAMBERELEMENT\",\n  1062813311: \"IFCDISTRIBUTIONCONTROLELEMENT\",\n  1073191201: \"IFCMEMBER\",\n  1095909175: \"IFCBUILDINGELEMENTPROXY\",\n  1156407060: \"IFCPLATESTANDARDCASE\",\n  1162798199: \"IFCSWITCHINGDEVICE\",\n  1329646415: \"IFCSHADINGDEVICE\",\n  1335981549: \"IFCDISCRETEACCESSORY\",\n  1360408905: \"IFCDUCTSILENCER\",\n  1404847402: \"IFCSTACKTERMINAL\",\n  1426591983: \"IFCFIRESUPPRESSIONTERMINAL\",\n  1437502449: \"IFCMEDICALDEVICE\",\n  1509553395: \"IFCFURNITURE\",\n  1529196076: \"IFCSLAB\",\n  1620046519: \"IFCTRANSPORTELEMENT\",\n  1634111441: \"IFCAIRTERMINAL\",\n  1658829314: \"IFCENERGYCONVERSIONDEVICE\",\n  1677625105: \"IFCCIVILELEMENT\",\n  1687234759: \"IFCPILE\",\n  1904799276: \"IFCELECTRICAPPLIANCE\",\n  1911478936: \"IFCMEMBERSTANDARDCASE\",\n  1945004755: \"IFCDISTRIBUTIONELEMENT\",\n  1973544240: \"IFCCOVERING\",\n  1999602285: \"IFCSPACEHEATER\",\n  2016517767: \"IFCROOF\",\n  2056796094: \"IFCAIRTOAIRHEATRECOVERY\",\n  2058353004: \"IFCFLOWCONTROLLER\",\n  2068733104: \"IFCHUMIDIFIER\",\n  2176052936: \"IFCJUNCTIONBOX\",\n  2188021234: \"IFCFLOWMETER\",\n  2223149337: \"IFCFLOWTERMINAL\",\n  2262370178: \"IFCRAILING\",\n  2272882330: \"IFCCONDENSER\",\n  2295281155: \"IFCPROTECTIVEDEVICETRIPPINGUNIT\",\n  2320036040: \"IFCREINFORCINGMESH\",\n  2347447852: \"IFCTENDONANCHOR\",\n  2391383451: \"IFCVIBRATIONISOLATOR\",\n  2391406946: \"IFCWALL\",\n  2474470126: \"IFCMOTORCONNECTION\",\n  2769231204: \"IFCVIRTUALELEMENT\",\n  2814081492: \"IFCENGINE\",\n  2906023776: \"IFCBEAMSTANDARDCASE\",\n  2938176219: \"IFCBURNER\",\n  2979338954: \"IFCBUILDINGELEMENTPART\",\n  3024970846: \"IFCRAMP\",\n  3026737570: \"IFCTUBEBUNDLE\",\n  3027962421: \"IFCSLABSTANDARDCASE\",\n  3040386961: \"IFCDISTRIBUTIONFLOWELEMENT\",\n  3053780830: \"IFCSANITARYTERMINAL\",\n  3079942009: \"IFCOPENINGSTANDARDCASE\",\n  3087945054: \"IFCALARM\",\n  3101698114: \"IFCSURFACEFEATURE\",\n  3127900445: \"IFCSLABELEMENTEDCASE\",\n  3132237377: \"IFCFLOWMOVINGDEVICE\",\n  3171933400: \"IFCPLATE\",\n  3221913625: \"IFCCOMMUNICATIONSAPPLIANCE\",\n  3242481149: \"IFCDOORSTANDARDCASE\",\n  3283111854: \"IFCRAMPFLIGHT\",\n  3296154744: \"IFCCHIMNEY\",\n  3304561284: \"IFCWINDOW\",\n  3310460725: \"IFCELECTRICFLOWSTORAGEDEVICE\",\n  3319311131: \"IFCHEATEXCHANGER\",\n  3415622556: \"IFCFAN\",\n  3420628829: \"IFCSOLARDEVICE\",\n  3493046030: \"IFCGEOGRAPHICELEMENT\",\n  3495092785: \"IFCCURTAINWALL\",\n  3508470533: \"IFCFLOWTREATMENTDEVICE\",\n  3512223829: \"IFCWALLSTANDARDCASE\",\n  3518393246: \"IFCDUCTSEGMENT\",\n  3571504051: \"IFCCOMPRESSOR\",\n  3588315303: \"IFCOPENINGELEMENT\",\n  3612865200: \"IFCPIPESEGMENT\",\n  3640358203: \"IFCCOOLINGTOWER\",\n  3651124850: \"IFCPROJECTIONELEMENT\",\n  3694346114: \"IFCOUTLET\",\n  3747195512: \"IFCEVAPORATIVECOOLER\",\n  3758799889: \"IFCCABLECARRIERSEGMENT\",\n  3824725483: \"IFCTENDON\",\n  3825984169: \"IFCTRANSFORMER\",\n  3902619387: \"IFCCHILLER\",\n  4074379575: \"IFCDAMPER\",\n  4086658281: \"IFCSENSOR\",\n  4123344466: \"IFCELEMENTASSEMBLY\",\n  4136498852: \"IFCCOOLEDBEAM\",\n  4156078855: \"IFCWALLELEMENTEDCASE\",\n  4175244083: \"IFCINTERCEPTOR\",\n  4207607924: \"IFCVALVE\",\n  4217484030: \"IFCCABLESEGMENT\",\n  4237592921: \"IFCWASTETERMINAL\",\n  4252922144: \"IFCSTAIRFLIGHT\",\n  4278956645: \"IFCFLOWFITTING\",\n  4288193352: \"IFCACTUATOR\",\n  4292641817: \"IFCUNITARYEQUIPMENT\",\n  3009204131: \"IFCGRID\"\n};\n\n// dist/helpers/properties.ts\nvar PropsNames = {\n  aggregates: {\n    name: IFCRELAGGREGATES,\n    relating: \"RelatingObject\",\n    related: \"RelatedObjects\",\n    key: \"children\"\n  },\n  spatial: {\n    name: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    relating: \"RelatingStructure\",\n    related: \"RelatedElements\",\n    key: \"children\"\n  },\n  psets: {\n    name: IFCRELDEFINESBYPROPERTIES,\n    relating: \"RelatingPropertyDefinition\",\n    related: \"RelatedObjects\",\n    key: \"hasPsets\"\n  },\n  materials: {\n    name: IFCRELASSOCIATESMATERIAL,\n    relating: \"RelatingMaterial\",\n    related: \"RelatedObjects\",\n    key: \"hasMaterial\"\n  },\n  type: {\n    name: IFCRELDEFINESBYTYPE,\n    relating: \"RelatingType\",\n    related: \"RelatedObjects\",\n    key: \"hasType\"\n  }\n};\nvar Properties = class {\n  constructor(api) {\n    this.api = api;\n  }\n  getItemProperties(modelID, id, recursive = false) {\n    return __async(this, null, function* () {\n      return this.api.GetLine(modelID, id, recursive);\n    });\n  }\n  getPropertySets(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.psets);\n    });\n  }\n  getTypeProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.type);\n    });\n  }\n  getMaterialsProperties(modelID, elementID, recursive = false) {\n    return __async(this, null, function* () {\n      return yield this.getProperty(modelID, elementID, recursive, PropsNames.materials);\n    });\n  }\n  getSpatialStructure(modelID, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getAllTypesOfModel(modelID);\n      const chunks = yield this.getSpatialTreeChunks(modelID);\n      const allLines = yield this.api.GetLineIDsWithType(modelID, IFCPROJECT);\n      const projectID = allLines.get(0);\n      const project = Properties.newIfcProject(projectID);\n      yield this.getSpatialNode(modelID, project, chunks, includeProperties);\n      this.cleanupTypes();\n      return project;\n    });\n  }\n  getAllItemsOfType(modelID, type, verbose) {\n    return __async(this, null, function* () {\n      let items = [];\n      const lines = yield this.api.GetLineIDsWithType(modelID, type);\n      for (let i = 0; i < lines.size(); i++)\n        items.push(lines.get(i));\n      if (!verbose)\n        return items;\n      const result = [];\n      for (let i = 0; i < items.length; i++) {\n        result.push(yield this.api.GetLine(modelID, items[i]));\n      }\n      return result;\n    });\n  }\n  getProperty(modelID, elementID, recursive = false, propName) {\n    return __async(this, null, function* () {\n      const propSetIds = yield this.getAllRelatedItemsOfType(modelID, elementID, propName);\n      const result = [];\n      for (let i = 0; i < propSetIds.length; i++) {\n        result.push(yield this.api.GetLine(modelID, propSetIds[i], recursive));\n      }\n      return result;\n    });\n  }\n  getChunks(modelID, chunks, propNames) {\n    return __async(this, null, function* () {\n      const relation = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      for (let i = 0; i < relation.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, relation.get(i), false);\n        this.saveChunk(chunks, propNames, rel);\n      }\n    });\n  }\n  static isRelated(id, rel, propNames) {\n    const relatedItems = rel[propNames.related];\n    if (Array.isArray(relatedItems)) {\n      const values = relatedItems.map((item) => item.value);\n      return values.includes(id);\n    }\n    return relatedItems.value === id;\n  }\n  static newIfcProject(id) {\n    return {\n      expressID: id,\n      type: \"IFCPROJECT\",\n      children: []\n    };\n  }\n  getSpatialNode(modelID, node, treeChunks, includeProperties) {\n    return __async(this, null, function* () {\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.aggregates, includeProperties);\n      yield this.getChildren(modelID, node, treeChunks, PropsNames.spatial, includeProperties);\n    });\n  }\n  getChildren(modelID, node, treeChunks, propNames, includeProperties) {\n    return __async(this, null, function* () {\n      const children = treeChunks[node.expressID];\n      if (children == void 0)\n        return;\n      const prop = propNames.key;\n      const nodes = [];\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n        let node2 = this.newNode(child);\n        if (includeProperties) {\n          const properties = yield this.getItemProperties(modelID, node2.expressID);\n          node2 = __spreadValues(__spreadValues({}, properties), node2);\n        }\n        yield this.getSpatialNode(modelID, node2, treeChunks, includeProperties);\n        nodes.push(node2);\n      }\n      node[prop] = nodes;\n    });\n  }\n  newNode(id) {\n    const typeName = this.getNodeType(id);\n    return {\n      expressID: id,\n      type: typeName,\n      children: []\n    };\n  }\n  getNodeType(id) {\n    const typeID = this.types[id];\n    return IfcElements2[typeID];\n  }\n  getSpatialTreeChunks(modelID) {\n    return __async(this, null, function* () {\n      const treeChunks = {};\n      yield this.getChunks(modelID, treeChunks, PropsNames.aggregates);\n      yield this.getChunks(modelID, treeChunks, PropsNames.spatial);\n      return treeChunks;\n    });\n  }\n  saveChunk(chunks, propNames, rel) {\n    const relating = rel[propNames.relating].value;\n    const related = rel[propNames.related].map((r) => r.value);\n    if (chunks[relating] == void 0) {\n      chunks[relating] = related;\n    } else {\n      chunks[relating] = chunks[relating].concat(related);\n    }\n  }\n  getRelated(rel, propNames, IDs) {\n    const element = rel[propNames.relating];\n    if (!Array.isArray(element))\n      IDs.push(element.value);\n    else\n      element.forEach((ele) => IDs.push(ele.value));\n  }\n  getAllRelatedItemsOfType(modelID, id, propNames) {\n    return __async(this, null, function* () {\n      const lines = yield this.api.GetLineIDsWithType(modelID, propNames.name);\n      const IDs = [];\n      for (let i = 0; i < lines.size(); i++) {\n        const rel = yield this.api.GetLine(modelID, lines.get(i));\n        const isRelated = Properties.isRelated(id, rel, propNames);\n        if (isRelated)\n          this.getRelated(rel, propNames, IDs);\n      }\n      return IDs;\n    });\n  }\n  cleanupTypes() {\n    this.types = {};\n  }\n  getAllTypesOfModel(modelID) {\n    return __async(this, null, function* () {\n      const result = {};\n      const elements = Object.keys(IfcElements2).map((e) => parseInt(e));\n      for (let i = 0; i < elements.length; i++) {\n        const element = elements[i];\n        const lines = yield this.api.GetLineIDsWithType(modelID, element);\n        const size = lines.size();\n        for (let i2 = 0; i2 < size; i2++)\n          result[lines.get(i2)] = element;\n      }\n      this.types = result;\n    });\n  }\n};\n\n// dist/web-ifc-api.ts\nvar WebIFCWasm;\nif (typeof self !== \"undefined\" && self.crossOriginIsolated) {\n  WebIFCWasm = require_web_ifc_mt();\n} else {\n  WebIFCWasm = require_web_ifc();\n}\nvar UNKNOWN = 0;\nvar STRING = 1;\nvar LABEL = 2;\nvar ENUM = 3;\nvar REAL = 4;\nvar REF = 5;\nvar EMPTY = 6;\nvar SET_BEGIN = 7;\nvar SET_END = 8;\nvar LINE_END = 9;\nfunction ms() {\n  return new Date().getTime();\n}\nvar IfcAPI2 = class {\n  constructor() {\n    this.wasmModule = void 0;\n    this.fs = void 0;\n    this.wasmPath = \"\";\n    this.ifcGuidMap = new Map();\n    this.properties = new Properties(this);\n  }\n  Init(customLocateFileHandler) {\n    return __async(this, null, function* () {\n      if (WebIFCWasm) {\n        let locateFileHandler = (path, prefix) => {\n          if (path.endsWith(\".wasm\")) {\n            return prefix + this.wasmPath + path;\n          }\n          return prefix + path;\n        };\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true, locateFile: customLocateFileHandler || locateFileHandler });\n        this.fs = this.wasmModule.FS;\n      } else {\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\n      }\n    });\n  }\n  OpenModel(data, settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let offsetInSrc = 0;\n    let result = this.wasmModule.OpenModel(s, (destPtr, destSize) => {\n      let srcSize = Math.min(data.byteLength - offsetInSrc, destSize);\n      let dest = this.wasmModule.HEAPU8.subarray(destPtr, destPtr + destSize);\n      let src = data.subarray(offsetInSrc, offsetInSrc + srcSize);\n      dest.set(src);\n      offsetInSrc += srcSize;\n      return srcSize;\n    });\n    return result;\n  }\n  CreateModel(settings) {\n    let s = __spreadValues({\n      COORDINATE_TO_ORIGIN: false,\n      USE_FAST_BOOLS: false,\n      CIRCLE_SEGMENTS_LOW: 5,\n      CIRCLE_SEGMENTS_MEDIUM: 8,\n      CIRCLE_SEGMENTS_HIGH: 12,\n      BOOL_ABORT_THRESHOLD: 1e4\n    }, settings);\n    let result = this.wasmModule.CreateModel(s);\n    return result;\n  }\n  ExportFileAsIFC(modelID) {\n    this.wasmModule.ExportFileAsIFC(modelID);\n    let result = this.fs.readFile(\"/export.ifc\");\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\n    return result;\n  }\n  GetGeometry(modelID, geometryExpressID) {\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\n  }\n  GetLine(modelID, expressID, flatten = false) {\n    let rawLineData = this.GetRawLineData(modelID, expressID);\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\n    if (flatten) {\n      this.FlattenLine(modelID, lineData);\n    }\n    return lineData;\n  }\n  GetAndClearErrors(modelID) {\n    return this.wasmModule.GetAndClearErrors(modelID);\n  }\n  WriteLine(modelID, lineObject) {\n    Object.keys(lineObject).forEach((propertyName) => {\n      let property = lineObject[propertyName];\n      if (property && property.expressID !== void 0) {\n        this.WriteLine(modelID, property);\n        lineObject[propertyName] = {\n          type: 5,\n          value: property.expressID\n        };\n      } else if (Array.isArray(property) && property.length > 0) {\n        for (let i = 0; i < property.length; i++) {\n          if (property[i].expressID !== void 0) {\n            this.WriteLine(modelID, property[i]);\n            lineObject[propertyName][i] = {\n              type: 5,\n              value: property[i].expressID\n            };\n          }\n        }\n      }\n    });\n    let rawLineData = {\n      ID: lineObject.expressID,\n      type: lineObject.type,\n      arguments: lineObject.ToTape()\n    };\n    this.WriteRawLineData(modelID, rawLineData);\n  }\n  FlattenLine(modelID, line) {\n    Object.keys(line).forEach((propertyName) => {\n      let property = line[propertyName];\n      if (property && property.type === 5) {\n        line[propertyName] = this.GetLine(modelID, property.value, true);\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\n        for (let i = 0; i < property.length; i++) {\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\n        }\n      }\n    });\n  }\n  GetRawLineData(modelID, expressID) {\n    return this.wasmModule.GetLine(modelID, expressID);\n  }\n  WriteRawLineData(modelID, data) {\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\n  }\n  GetLineIDsWithType(modelID, type) {\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\n  }\n  GetAllLines(modelID) {\n    return this.wasmModule.GetAllLines(modelID);\n  }\n  SetGeometryTransformation(modelID, transformationMatrix) {\n    if (transformationMatrix.length != 16) {\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\n      return;\n    }\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\n  }\n  GetCoordinationMatrix(modelID) {\n    return this.wasmModule.GetCoordinationMatrix(modelID);\n  }\n  GetVertexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\n  }\n  GetIndexArray(ptr, size) {\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\n  }\n  getSubArray(heap, startPtr, sizeBytes) {\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\n  }\n  CloseModel(modelID) {\n    this.ifcGuidMap.delete(modelID);\n    this.wasmModule.CloseModel(modelID);\n  }\n  StreamAllMeshes(modelID, meshCallback) {\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\n  }\n  StreamAllMeshesWithTypes(modelID, types, meshCallback) {\n    this.wasmModule.StreamAllMeshesWithTypes(modelID, types, meshCallback);\n  }\n  IsModelOpen(modelID) {\n    return this.wasmModule.IsModelOpen(modelID);\n  }\n  LoadAllGeometry(modelID) {\n    return this.wasmModule.LoadAllGeometry(modelID);\n  }\n  GetFlatMesh(modelID, expressID) {\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\n  }\n  CreateIfcGuidToExpressIdMapping(modelID) {\n    const map = new Map();\n    for (let x = 0; x < IfcElements.length; x++) {\n      const type = IfcElements[x];\n      const lines = this.GetLineIDsWithType(modelID, type);\n      const size = lines.size();\n      for (let y = 0; y < size; y++) {\n        const expressID = lines.get(y);\n        const info = this.GetLine(modelID, expressID);\n        const globalID = info.GlobalId.value;\n        map.set(expressID, globalID);\n        map.set(globalID, expressID);\n      }\n    }\n    this.ifcGuidMap.set(modelID, map);\n  }\n  SetWasmPath(path) {\n    this.wasmPath = path;\n  }\n};\nexport {\n  EMPTY,\n  ENUM,\n  FromRawLineData,\n  Handle,\n  IFCACTIONREQUEST,\n  IFCACTOR,\n  IFCACTORROLE,\n  IFCACTUATOR,\n  IFCACTUATORTYPE,\n  IFCADDRESS,\n  IFCADVANCEDBREP,\n  IFCADVANCEDBREPWITHVOIDS,\n  IFCADVANCEDFACE,\n  IFCAIRTERMINAL,\n  IFCAIRTERMINALBOX,\n  IFCAIRTERMINALBOXTYPE,\n  IFCAIRTERMINALTYPE,\n  IFCAIRTOAIRHEATRECOVERY,\n  IFCAIRTOAIRHEATRECOVERYTYPE,\n  IFCALARM,\n  IFCALARMTYPE,\n  IFCALIGNMENT,\n  IFCALIGNMENT2DHORIZONTAL,\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\n  IFCALIGNMENT2DSEGMENT,\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\n  IFCALIGNMENT2DVERSEGLINE,\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\n  IFCALIGNMENT2DVERTICAL,\n  IFCALIGNMENT2DVERTICALSEGMENT,\n  IFCALIGNMENTCURVE,\n  IFCANNOTATION,\n  IFCANNOTATIONFILLAREA,\n  IFCAPPLICATION,\n  IFCAPPLIEDVALUE,\n  IFCAPPROVAL,\n  IFCAPPROVALRELATIONSHIP,\n  IFCARBITRARYCLOSEDPROFILEDEF,\n  IFCARBITRARYOPENPROFILEDEF,\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\n  IFCASSET,\n  IFCASYMMETRICISHAPEPROFILEDEF,\n  IFCAUDIOVISUALAPPLIANCE,\n  IFCAUDIOVISUALAPPLIANCETYPE,\n  IFCAXIS1PLACEMENT,\n  IFCAXIS2PLACEMENT2D,\n  IFCAXIS2PLACEMENT3D,\n  IFCBEAM,\n  IFCBEAMSTANDARDCASE,\n  IFCBEAMTYPE,\n  IFCBEARING,\n  IFCBEARINGTYPE,\n  IFCBLOBTEXTURE,\n  IFCBLOCK,\n  IFCBOILER,\n  IFCBOILERTYPE,\n  IFCBOOLEANCLIPPINGRESULT,\n  IFCBOOLEANRESULT,\n  IFCBOUNDARYCONDITION,\n  IFCBOUNDARYCURVE,\n  IFCBOUNDARYEDGECONDITION,\n  IFCBOUNDARYFACECONDITION,\n  IFCBOUNDARYNODECONDITION,\n  IFCBOUNDARYNODECONDITIONWARPING,\n  IFCBOUNDEDCURVE,\n  IFCBOUNDEDSURFACE,\n  IFCBOUNDINGBOX,\n  IFCBOXEDHALFSPACE,\n  IFCBRIDGE,\n  IFCBRIDGEPART,\n  IFCBSPLINECURVE,\n  IFCBSPLINECURVEWITHKNOTS,\n  IFCBSPLINESURFACE,\n  IFCBSPLINESURFACEWITHKNOTS,\n  IFCBUILDING,\n  IFCBUILDINGELEMENT,\n  IFCBUILDINGELEMENTPART,\n  IFCBUILDINGELEMENTPARTTYPE,\n  IFCBUILDINGELEMENTPROXY,\n  IFCBUILDINGELEMENTPROXYTYPE,\n  IFCBUILDINGELEMENTTYPE,\n  IFCBUILDINGSTOREY,\n  IFCBUILDINGSYSTEM,\n  IFCBURNER,\n  IFCBURNERTYPE,\n  IFCCABLECARRIERFITTING,\n  IFCCABLECARRIERFITTINGTYPE,\n  IFCCABLECARRIERSEGMENT,\n  IFCCABLECARRIERSEGMENTTYPE,\n  IFCCABLEFITTING,\n  IFCCABLEFITTINGTYPE,\n  IFCCABLESEGMENT,\n  IFCCABLESEGMENTTYPE,\n  IFCCAISSONFOUNDATION,\n  IFCCAISSONFOUNDATIONTYPE,\n  IFCCARTESIANPOINT,\n  IFCCARTESIANPOINTLIST,\n  IFCCARTESIANPOINTLIST2D,\n  IFCCARTESIANPOINTLIST3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\n  IFCCENTERLINEPROFILEDEF,\n  IFCCHILLER,\n  IFCCHILLERTYPE,\n  IFCCHIMNEY,\n  IFCCHIMNEYTYPE,\n  IFCCIRCLE,\n  IFCCIRCLEHOLLOWPROFILEDEF,\n  IFCCIRCLEPROFILEDEF,\n  IFCCIRCULARARCSEGMENT2D,\n  IFCCIVILELEMENT,\n  IFCCIVILELEMENTTYPE,\n  IFCCLASSIFICATION,\n  IFCCLASSIFICATIONREFERENCE,\n  IFCCLOSEDSHELL,\n  IFCCOIL,\n  IFCCOILTYPE,\n  IFCCOLOURRGB,\n  IFCCOLOURRGBLIST,\n  IFCCOLOURSPECIFICATION,\n  IFCCOLUMN,\n  IFCCOLUMNSTANDARDCASE,\n  IFCCOLUMNTYPE,\n  IFCCOMMUNICATIONSAPPLIANCE,\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\n  IFCCOMPLEXPROPERTY,\n  IFCCOMPLEXPROPERTYTEMPLATE,\n  IFCCOMPOSITECURVE,\n  IFCCOMPOSITECURVEONSURFACE,\n  IFCCOMPOSITECURVESEGMENT,\n  IFCCOMPOSITEPROFILEDEF,\n  IFCCOMPRESSOR,\n  IFCCOMPRESSORTYPE,\n  IFCCONDENSER,\n  IFCCONDENSERTYPE,\n  IFCCONIC,\n  IFCCONNECTEDFACESET,\n  IFCCONNECTIONCURVEGEOMETRY,\n  IFCCONNECTIONGEOMETRY,\n  IFCCONNECTIONPOINTECCENTRICITY,\n  IFCCONNECTIONPOINTGEOMETRY,\n  IFCCONNECTIONSURFACEGEOMETRY,\n  IFCCONNECTIONVOLUMEGEOMETRY,\n  IFCCONSTRAINT,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\n  IFCCONSTRUCTIONMATERIALRESOURCE,\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\n  IFCCONSTRUCTIONRESOURCE,\n  IFCCONSTRUCTIONRESOURCETYPE,\n  IFCCONTEXT,\n  IFCCONTEXTDEPENDENTUNIT,\n  IFCCONTROL,\n  IFCCONTROLLER,\n  IFCCONTROLLERTYPE,\n  IFCCONVERSIONBASEDUNIT,\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\n  IFCCOOLEDBEAM,\n  IFCCOOLEDBEAMTYPE,\n  IFCCOOLINGTOWER,\n  IFCCOOLINGTOWERTYPE,\n  IFCCOORDINATEOPERATION,\n  IFCCOORDINATEREFERENCESYSTEM,\n  IFCCOSTITEM,\n  IFCCOSTSCHEDULE,\n  IFCCOSTVALUE,\n  IFCCOVERING,\n  IFCCOVERINGTYPE,\n  IFCCREWRESOURCE,\n  IFCCREWRESOURCETYPE,\n  IFCCSGPRIMITIVE3D,\n  IFCCSGSOLID,\n  IFCCSHAPEPROFILEDEF,\n  IFCCURRENCYRELATIONSHIP,\n  IFCCURTAINWALL,\n  IFCCURTAINWALLTYPE,\n  IFCCURVE,\n  IFCCURVEBOUNDEDPLANE,\n  IFCCURVEBOUNDEDSURFACE,\n  IFCCURVESEGMENT2D,\n  IFCCURVESTYLE,\n  IFCCURVESTYLEFONT,\n  IFCCURVESTYLEFONTANDSCALING,\n  IFCCURVESTYLEFONTPATTERN,\n  IFCCYLINDRICALSURFACE,\n  IFCDAMPER,\n  IFCDAMPERTYPE,\n  IFCDEEPFOUNDATION,\n  IFCDEEPFOUNDATIONTYPE,\n  IFCDERIVEDPROFILEDEF,\n  IFCDERIVEDUNIT,\n  IFCDERIVEDUNITELEMENT,\n  IFCDIMENSIONALEXPONENTS,\n  IFCDIRECTION,\n  IFCDISCRETEACCESSORY,\n  IFCDISCRETEACCESSORYTYPE,\n  IFCDISTANCEEXPRESSION,\n  IFCDISTRIBUTIONCHAMBERELEMENT,\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\n  IFCDISTRIBUTIONCIRCUIT,\n  IFCDISTRIBUTIONCONTROLELEMENT,\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\n  IFCDISTRIBUTIONELEMENT,\n  IFCDISTRIBUTIONELEMENTTYPE,\n  IFCDISTRIBUTIONFLOWELEMENT,\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\n  IFCDISTRIBUTIONPORT,\n  IFCDISTRIBUTIONSYSTEM,\n  IFCDOCUMENTINFORMATION,\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\n  IFCDOCUMENTREFERENCE,\n  IFCDOOR,\n  IFCDOORLININGPROPERTIES,\n  IFCDOORPANELPROPERTIES,\n  IFCDOORSTANDARDCASE,\n  IFCDOORSTYLE,\n  IFCDOORTYPE,\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\n  IFCDUCTFITTING,\n  IFCDUCTFITTINGTYPE,\n  IFCDUCTSEGMENT,\n  IFCDUCTSEGMENTTYPE,\n  IFCDUCTSILENCER,\n  IFCDUCTSILENCERTYPE,\n  IFCEDGE,\n  IFCEDGECURVE,\n  IFCEDGELOOP,\n  IFCELECTRICAPPLIANCE,\n  IFCELECTRICAPPLIANCETYPE,\n  IFCELECTRICDISTRIBUTIONBOARD,\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\n  IFCELECTRICFLOWSTORAGEDEVICE,\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\n  IFCELECTRICGENERATOR,\n  IFCELECTRICGENERATORTYPE,\n  IFCELECTRICMOTOR,\n  IFCELECTRICMOTORTYPE,\n  IFCELECTRICTIMECONTROL,\n  IFCELECTRICTIMECONTROLTYPE,\n  IFCELEMENT,\n  IFCELEMENTARYSURFACE,\n  IFCELEMENTASSEMBLY,\n  IFCELEMENTASSEMBLYTYPE,\n  IFCELEMENTCOMPONENT,\n  IFCELEMENTCOMPONENTTYPE,\n  IFCELEMENTQUANTITY,\n  IFCELEMENTTYPE,\n  IFCELLIPSE,\n  IFCELLIPSEPROFILEDEF,\n  IFCENERGYCONVERSIONDEVICE,\n  IFCENERGYCONVERSIONDEVICETYPE,\n  IFCENGINE,\n  IFCENGINETYPE,\n  IFCEVAPORATIVECOOLER,\n  IFCEVAPORATIVECOOLERTYPE,\n  IFCEVAPORATOR,\n  IFCEVAPORATORTYPE,\n  IFCEVENT,\n  IFCEVENTTIME,\n  IFCEVENTTYPE,\n  IFCEXTENDEDPROPERTIES,\n  IFCEXTERNALINFORMATION,\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\n  IFCEXTERNALLYDEFINEDTEXTFONT,\n  IFCEXTERNALREFERENCE,\n  IFCEXTERNALREFERENCERELATIONSHIP,\n  IFCEXTERNALSPATIALELEMENT,\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\n  IFCEXTRUDEDAREASOLID,\n  IFCEXTRUDEDAREASOLIDTAPERED,\n  IFCFACE,\n  IFCFACEBASEDSURFACEMODEL,\n  IFCFACEBOUND,\n  IFCFACEOUTERBOUND,\n  IFCFACESURFACE,\n  IFCFACETEDBREP,\n  IFCFACETEDBREPWITHVOIDS,\n  IFCFACILITY,\n  IFCFACILITYPART,\n  IFCFAILURECONNECTIONCONDITION,\n  IFCFAN,\n  IFCFANTYPE,\n  IFCFASTENER,\n  IFCFASTENERTYPE,\n  IFCFEATUREELEMENT,\n  IFCFEATUREELEMENTADDITION,\n  IFCFEATUREELEMENTSUBTRACTION,\n  IFCFILLAREASTYLE,\n  IFCFILLAREASTYLEHATCHING,\n  IFCFILLAREASTYLETILES,\n  IFCFILTER,\n  IFCFILTERTYPE,\n  IFCFIRESUPPRESSIONTERMINAL,\n  IFCFIRESUPPRESSIONTERMINALTYPE,\n  IFCFIXEDREFERENCESWEPTAREASOLID,\n  IFCFLOWCONTROLLER,\n  IFCFLOWCONTROLLERTYPE,\n  IFCFLOWFITTING,\n  IFCFLOWFITTINGTYPE,\n  IFCFLOWINSTRUMENT,\n  IFCFLOWINSTRUMENTTYPE,\n  IFCFLOWMETER,\n  IFCFLOWMETERTYPE,\n  IFCFLOWMOVINGDEVICE,\n  IFCFLOWMOVINGDEVICETYPE,\n  IFCFLOWSEGMENT,\n  IFCFLOWSEGMENTTYPE,\n  IFCFLOWSTORAGEDEVICE,\n  IFCFLOWSTORAGEDEVICETYPE,\n  IFCFLOWTERMINAL,\n  IFCFLOWTERMINALTYPE,\n  IFCFLOWTREATMENTDEVICE,\n  IFCFLOWTREATMENTDEVICETYPE,\n  IFCFOOTING,\n  IFCFOOTINGTYPE,\n  IFCFURNISHINGELEMENT,\n  IFCFURNISHINGELEMENTTYPE,\n  IFCFURNITURE,\n  IFCFURNITURETYPE,\n  IFCGEOGRAPHICELEMENT,\n  IFCGEOGRAPHICELEMENTTYPE,\n  IFCGEOMETRICCURVESET,\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\n  IFCGEOMETRICREPRESENTATIONITEM,\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\n  IFCGEOMETRICSET,\n  IFCGRID,\n  IFCGRIDAXIS,\n  IFCGRIDPLACEMENT,\n  IFCGROUP,\n  IFCHALFSPACESOLID,\n  IFCHEATEXCHANGER,\n  IFCHEATEXCHANGERTYPE,\n  IFCHUMIDIFIER,\n  IFCHUMIDIFIERTYPE,\n  IFCIMAGETEXTURE,\n  IFCINDEXEDCOLOURMAP,\n  IFCINDEXEDPOLYCURVE,\n  IFCINDEXEDPOLYGONALFACE,\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\n  IFCINDEXEDTEXTUREMAP,\n  IFCINDEXEDTRIANGLETEXTUREMAP,\n  IFCINTERCEPTOR,\n  IFCINTERCEPTORTYPE,\n  IFCINTERSECTIONCURVE,\n  IFCINVENTORY,\n  IFCIRREGULARTIMESERIES,\n  IFCIRREGULARTIMESERIESVALUE,\n  IFCISHAPEPROFILEDEF,\n  IFCJUNCTIONBOX,\n  IFCJUNCTIONBOXTYPE,\n  IFCLABORRESOURCE,\n  IFCLABORRESOURCETYPE,\n  IFCLAGTIME,\n  IFCLAMP,\n  IFCLAMPTYPE,\n  IFCLIBRARYINFORMATION,\n  IFCLIBRARYREFERENCE,\n  IFCLIGHTDISTRIBUTIONDATA,\n  IFCLIGHTFIXTURE,\n  IFCLIGHTFIXTURETYPE,\n  IFCLIGHTINTENSITYDISTRIBUTION,\n  IFCLIGHTSOURCE,\n  IFCLIGHTSOURCEAMBIENT,\n  IFCLIGHTSOURCEDIRECTIONAL,\n  IFCLIGHTSOURCEGONIOMETRIC,\n  IFCLIGHTSOURCEPOSITIONAL,\n  IFCLIGHTSOURCESPOT,\n  IFCLINE,\n  IFCLINEARPLACEMENT,\n  IFCLINEARPOSITIONINGELEMENT,\n  IFCLINESEGMENT2D,\n  IFCLOCALPLACEMENT,\n  IFCLOOP,\n  IFCLSHAPEPROFILEDEF,\n  IFCMANIFOLDSOLIDBREP,\n  IFCMAPCONVERSION,\n  IFCMAPPEDITEM,\n  IFCMATERIAL,\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\n  IFCMATERIALCONSTITUENT,\n  IFCMATERIALCONSTITUENTSET,\n  IFCMATERIALDEFINITION,\n  IFCMATERIALDEFINITIONREPRESENTATION,\n  IFCMATERIALLAYER,\n  IFCMATERIALLAYERSET,\n  IFCMATERIALLAYERSETUSAGE,\n  IFCMATERIALLAYERWITHOFFSETS,\n  IFCMATERIALLIST,\n  IFCMATERIALPROFILE,\n  IFCMATERIALPROFILESET,\n  IFCMATERIALPROFILESETUSAGE,\n  IFCMATERIALPROFILESETUSAGETAPERING,\n  IFCMATERIALPROFILEWITHOFFSETS,\n  IFCMATERIALPROPERTIES,\n  IFCMATERIALRELATIONSHIP,\n  IFCMATERIALUSAGEDEFINITION,\n  IFCMEASUREWITHUNIT,\n  IFCMECHANICALFASTENER,\n  IFCMECHANICALFASTENERTYPE,\n  IFCMEDICALDEVICE,\n  IFCMEDICALDEVICETYPE,\n  IFCMEMBER,\n  IFCMEMBERSTANDARDCASE,\n  IFCMEMBERTYPE,\n  IFCMETRIC,\n  IFCMIRROREDPROFILEDEF,\n  IFCMONETARYUNIT,\n  IFCMOTORCONNECTION,\n  IFCMOTORCONNECTIONTYPE,\n  IFCNAMEDUNIT,\n  IFCOBJECT,\n  IFCOBJECTDEFINITION,\n  IFCOBJECTIVE,\n  IFCOBJECTPLACEMENT,\n  IFCOCCUPANT,\n  IFCOFFSETCURVE,\n  IFCOFFSETCURVE2D,\n  IFCOFFSETCURVE3D,\n  IFCOFFSETCURVEBYDISTANCES,\n  IFCOPENINGELEMENT,\n  IFCOPENINGSTANDARDCASE,\n  IFCOPENSHELL,\n  IFCORGANIZATION,\n  IFCORGANIZATIONRELATIONSHIP,\n  IFCORIENTATIONEXPRESSION,\n  IFCORIENTEDEDGE,\n  IFCOUTERBOUNDARYCURVE,\n  IFCOUTLET,\n  IFCOUTLETTYPE,\n  IFCOWNERHISTORY,\n  IFCPARAMETERIZEDPROFILEDEF,\n  IFCPATH,\n  IFCPCURVE,\n  IFCPERFORMANCEHISTORY,\n  IFCPERMEABLECOVERINGPROPERTIES,\n  IFCPERMIT,\n  IFCPERSON,\n  IFCPERSONANDORGANIZATION,\n  IFCPHYSICALCOMPLEXQUANTITY,\n  IFCPHYSICALQUANTITY,\n  IFCPHYSICALSIMPLEQUANTITY,\n  IFCPILE,\n  IFCPILETYPE,\n  IFCPIPEFITTING,\n  IFCPIPEFITTINGTYPE,\n  IFCPIPESEGMENT,\n  IFCPIPESEGMENTTYPE,\n  IFCPIXELTEXTURE,\n  IFCPLACEMENT,\n  IFCPLANARBOX,\n  IFCPLANAREXTENT,\n  IFCPLANE,\n  IFCPLATE,\n  IFCPLATESTANDARDCASE,\n  IFCPLATETYPE,\n  IFCPOINT,\n  IFCPOINTONCURVE,\n  IFCPOINTONSURFACE,\n  IFCPOLYGONALBOUNDEDHALFSPACE,\n  IFCPOLYGONALFACESET,\n  IFCPOLYLINE,\n  IFCPOLYLOOP,\n  IFCPORT,\n  IFCPOSITIONINGELEMENT,\n  IFCPOSTALADDRESS,\n  IFCPREDEFINEDCOLOUR,\n  IFCPREDEFINEDCURVEFONT,\n  IFCPREDEFINEDITEM,\n  IFCPREDEFINEDPROPERTIES,\n  IFCPREDEFINEDPROPERTYSET,\n  IFCPREDEFINEDTEXTFONT,\n  IFCPRESENTATIONITEM,\n  IFCPRESENTATIONLAYERASSIGNMENT,\n  IFCPRESENTATIONLAYERWITHSTYLE,\n  IFCPRESENTATIONSTYLE,\n  IFCPRESENTATIONSTYLEASSIGNMENT,\n  IFCPROCEDURE,\n  IFCPROCEDURETYPE,\n  IFCPROCESS,\n  IFCPRODUCT,\n  IFCPRODUCTDEFINITIONSHAPE,\n  IFCPRODUCTREPRESENTATION,\n  IFCPROFILEDEF,\n  IFCPROFILEPROPERTIES,\n  IFCPROJECT,\n  IFCPROJECTEDCRS,\n  IFCPROJECTIONELEMENT,\n  IFCPROJECTLIBRARY,\n  IFCPROJECTORDER,\n  IFCPROPERTY,\n  IFCPROPERTYABSTRACTION,\n  IFCPROPERTYBOUNDEDVALUE,\n  IFCPROPERTYDEFINITION,\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\n  IFCPROPERTYENUMERATEDVALUE,\n  IFCPROPERTYENUMERATION,\n  IFCPROPERTYLISTVALUE,\n  IFCPROPERTYREFERENCEVALUE,\n  IFCPROPERTYSET,\n  IFCPROPERTYSETDEFINITION,\n  IFCPROPERTYSETTEMPLATE,\n  IFCPROPERTYSINGLEVALUE,\n  IFCPROPERTYTABLEVALUE,\n  IFCPROPERTYTEMPLATE,\n  IFCPROPERTYTEMPLATEDEFINITION,\n  IFCPROTECTIVEDEVICE,\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\n  IFCPROTECTIVEDEVICETYPE,\n  IFCPROXY,\n  IFCPUMP,\n  IFCPUMPTYPE,\n  IFCQUANTITYAREA,\n  IFCQUANTITYCOUNT,\n  IFCQUANTITYLENGTH,\n  IFCQUANTITYSET,\n  IFCQUANTITYTIME,\n  IFCQUANTITYVOLUME,\n  IFCQUANTITYWEIGHT,\n  IFCRAILING,\n  IFCRAILINGTYPE,\n  IFCRAMP,\n  IFCRAMPFLIGHT,\n  IFCRAMPFLIGHTTYPE,\n  IFCRAMPTYPE,\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\n  IFCRECTANGLEHOLLOWPROFILEDEF,\n  IFCRECTANGLEPROFILEDEF,\n  IFCRECTANGULARPYRAMID,\n  IFCRECTANGULARTRIMMEDSURFACE,\n  IFCRECURRENCEPATTERN,\n  IFCREFERENCE,\n  IFCREFERENT,\n  IFCREGULARTIMESERIES,\n  IFCREINFORCEMENTBARPROPERTIES,\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\n  IFCREINFORCINGBAR,\n  IFCREINFORCINGBARTYPE,\n  IFCREINFORCINGELEMENT,\n  IFCREINFORCINGELEMENTTYPE,\n  IFCREINFORCINGMESH,\n  IFCREINFORCINGMESHTYPE,\n  IFCRELAGGREGATES,\n  IFCRELASSIGNS,\n  IFCRELASSIGNSTOACTOR,\n  IFCRELASSIGNSTOCONTROL,\n  IFCRELASSIGNSTOGROUP,\n  IFCRELASSIGNSTOGROUPBYFACTOR,\n  IFCRELASSIGNSTOPROCESS,\n  IFCRELASSIGNSTOPRODUCT,\n  IFCRELASSIGNSTORESOURCE,\n  IFCRELASSOCIATES,\n  IFCRELASSOCIATESAPPROVAL,\n  IFCRELASSOCIATESCLASSIFICATION,\n  IFCRELASSOCIATESCONSTRAINT,\n  IFCRELASSOCIATESDOCUMENT,\n  IFCRELASSOCIATESLIBRARY,\n  IFCRELASSOCIATESMATERIAL,\n  IFCRELATIONSHIP,\n  IFCRELCONNECTS,\n  IFCRELCONNECTSELEMENTS,\n  IFCRELCONNECTSPATHELEMENTS,\n  IFCRELCONNECTSPORTS,\n  IFCRELCONNECTSPORTTOELEMENT,\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\n  IFCRELCONNECTSSTRUCTURALMEMBER,\n  IFCRELCONNECTSWITHECCENTRICITY,\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\n  IFCRELCOVERSBLDGELEMENTS,\n  IFCRELCOVERSSPACES,\n  IFCRELDECLARES,\n  IFCRELDECOMPOSES,\n  IFCRELDEFINES,\n  IFCRELDEFINESBYOBJECT,\n  IFCRELDEFINESBYPROPERTIES,\n  IFCRELDEFINESBYTEMPLATE,\n  IFCRELDEFINESBYTYPE,\n  IFCRELFILLSELEMENT,\n  IFCRELFLOWCONTROLELEMENTS,\n  IFCRELINTERFERESELEMENTS,\n  IFCRELNESTS,\n  IFCRELPOSITIONS,\n  IFCRELPROJECTSELEMENT,\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\n  IFCRELSEQUENCE,\n  IFCRELSERVICESBUILDINGS,\n  IFCRELSPACEBOUNDARY,\n  IFCRELSPACEBOUNDARY1STLEVEL,\n  IFCRELSPACEBOUNDARY2NDLEVEL,\n  IFCRELVOIDSELEMENT,\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\n  IFCREPRESENTATION,\n  IFCREPRESENTATIONCONTEXT,\n  IFCREPRESENTATIONITEM,\n  IFCREPRESENTATIONMAP,\n  IFCRESOURCE,\n  IFCRESOURCEAPPROVALRELATIONSHIP,\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\n  IFCRESOURCELEVELRELATIONSHIP,\n  IFCRESOURCETIME,\n  IFCREVOLVEDAREASOLID,\n  IFCREVOLVEDAREASOLIDTAPERED,\n  IFCRIGHTCIRCULARCONE,\n  IFCRIGHTCIRCULARCYLINDER,\n  IFCROOF,\n  IFCROOFTYPE,\n  IFCROOT,\n  IFCROUNDEDRECTANGLEPROFILEDEF,\n  IFCSANITARYTERMINAL,\n  IFCSANITARYTERMINALTYPE,\n  IFCSCHEDULINGTIME,\n  IFCSEAMCURVE,\n  IFCSECTIONEDSOLID,\n  IFCSECTIONEDSOLIDHORIZONTAL,\n  IFCSECTIONEDSPINE,\n  IFCSECTIONPROPERTIES,\n  IFCSECTIONREINFORCEMENTPROPERTIES,\n  IFCSENSOR,\n  IFCSENSORTYPE,\n  IFCSHADINGDEVICE,\n  IFCSHADINGDEVICETYPE,\n  IFCSHAPEASPECT,\n  IFCSHAPEMODEL,\n  IFCSHAPEREPRESENTATION,\n  IFCSHELLBASEDSURFACEMODEL,\n  IFCSIMPLEPROPERTY,\n  IFCSIMPLEPROPERTYTEMPLATE,\n  IFCSITE,\n  IFCSIUNIT,\n  IFCSLAB,\n  IFCSLABELEMENTEDCASE,\n  IFCSLABSTANDARDCASE,\n  IFCSLABTYPE,\n  IFCSLIPPAGECONNECTIONCONDITION,\n  IFCSOLARDEVICE,\n  IFCSOLARDEVICETYPE,\n  IFCSOLIDMODEL,\n  IFCSPACE,\n  IFCSPACEHEATER,\n  IFCSPACEHEATERTYPE,\n  IFCSPACETYPE,\n  IFCSPATIALELEMENT,\n  IFCSPATIALELEMENTTYPE,\n  IFCSPATIALSTRUCTUREELEMENT,\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\n  IFCSPATIALZONE,\n  IFCSPATIALZONETYPE,\n  IFCSPHERE,\n  IFCSPHERICALSURFACE,\n  IFCSTACKTERMINAL,\n  IFCSTACKTERMINALTYPE,\n  IFCSTAIR,\n  IFCSTAIRFLIGHT,\n  IFCSTAIRFLIGHTTYPE,\n  IFCSTAIRTYPE,\n  IFCSTRUCTURALACTION,\n  IFCSTRUCTURALACTIVITY,\n  IFCSTRUCTURALANALYSISMODEL,\n  IFCSTRUCTURALCONNECTION,\n  IFCSTRUCTURALCONNECTIONCONDITION,\n  IFCSTRUCTURALCURVEACTION,\n  IFCSTRUCTURALCURVECONNECTION,\n  IFCSTRUCTURALCURVEMEMBER,\n  IFCSTRUCTURALCURVEMEMBERVARYING,\n  IFCSTRUCTURALCURVEREACTION,\n  IFCSTRUCTURALITEM,\n  IFCSTRUCTURALLINEARACTION,\n  IFCSTRUCTURALLOAD,\n  IFCSTRUCTURALLOADCASE,\n  IFCSTRUCTURALLOADCONFIGURATION,\n  IFCSTRUCTURALLOADGROUP,\n  IFCSTRUCTURALLOADLINEARFORCE,\n  IFCSTRUCTURALLOADORRESULT,\n  IFCSTRUCTURALLOADPLANARFORCE,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\n  IFCSTRUCTURALLOADSINGLEFORCE,\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\n  IFCSTRUCTURALLOADSTATIC,\n  IFCSTRUCTURALLOADTEMPERATURE,\n  IFCSTRUCTURALMEMBER,\n  IFCSTRUCTURALPLANARACTION,\n  IFCSTRUCTURALPOINTACTION,\n  IFCSTRUCTURALPOINTCONNECTION,\n  IFCSTRUCTURALPOINTREACTION,\n  IFCSTRUCTURALREACTION,\n  IFCSTRUCTURALRESULTGROUP,\n  IFCSTRUCTURALSURFACEACTION,\n  IFCSTRUCTURALSURFACECONNECTION,\n  IFCSTRUCTURALSURFACEMEMBER,\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\n  IFCSTRUCTURALSURFACEREACTION,\n  IFCSTYLEDITEM,\n  IFCSTYLEDREPRESENTATION,\n  IFCSTYLEMODEL,\n  IFCSUBCONTRACTRESOURCE,\n  IFCSUBCONTRACTRESOURCETYPE,\n  IFCSUBEDGE,\n  IFCSURFACE,\n  IFCSURFACECURVE,\n  IFCSURFACECURVESWEPTAREASOLID,\n  IFCSURFACEFEATURE,\n  IFCSURFACEOFLINEAREXTRUSION,\n  IFCSURFACEOFREVOLUTION,\n  IFCSURFACEREINFORCEMENTAREA,\n  IFCSURFACESTYLE,\n  IFCSURFACESTYLELIGHTING,\n  IFCSURFACESTYLEREFRACTION,\n  IFCSURFACESTYLERENDERING,\n  IFCSURFACESTYLESHADING,\n  IFCSURFACESTYLEWITHTEXTURES,\n  IFCSURFACETEXTURE,\n  IFCSWEPTAREASOLID,\n  IFCSWEPTDISKSOLID,\n  IFCSWEPTDISKSOLIDPOLYGONAL,\n  IFCSWEPTSURFACE,\n  IFCSWITCHINGDEVICE,\n  IFCSWITCHINGDEVICETYPE,\n  IFCSYSTEM,\n  IFCSYSTEMFURNITUREELEMENT,\n  IFCSYSTEMFURNITUREELEMENTTYPE,\n  IFCTABLE,\n  IFCTABLECOLUMN,\n  IFCTABLEROW,\n  IFCTANK,\n  IFCTANKTYPE,\n  IFCTASK,\n  IFCTASKTIME,\n  IFCTASKTIMERECURRING,\n  IFCTASKTYPE,\n  IFCTELECOMADDRESS,\n  IFCTENDON,\n  IFCTENDONANCHOR,\n  IFCTENDONANCHORTYPE,\n  IFCTENDONCONDUIT,\n  IFCTENDONCONDUITTYPE,\n  IFCTENDONTYPE,\n  IFCTESSELLATEDFACESET,\n  IFCTESSELLATEDITEM,\n  IFCTEXTLITERAL,\n  IFCTEXTLITERALWITHEXTENT,\n  IFCTEXTSTYLE,\n  IFCTEXTSTYLEFONTMODEL,\n  IFCTEXTSTYLEFORDEFINEDFONT,\n  IFCTEXTSTYLETEXTMODEL,\n  IFCTEXTURECOORDINATE,\n  IFCTEXTURECOORDINATEGENERATOR,\n  IFCTEXTUREMAP,\n  IFCTEXTUREVERTEX,\n  IFCTEXTUREVERTEXLIST,\n  IFCTIMEPERIOD,\n  IFCTIMESERIES,\n  IFCTIMESERIESVALUE,\n  IFCTOPOLOGICALREPRESENTATIONITEM,\n  IFCTOPOLOGYREPRESENTATION,\n  IFCTOROIDALSURFACE,\n  IFCTRANSFORMER,\n  IFCTRANSFORMERTYPE,\n  IFCTRANSITIONCURVESEGMENT2D,\n  IFCTRANSPORTELEMENT,\n  IFCTRANSPORTELEMENTTYPE,\n  IFCTRAPEZIUMPROFILEDEF,\n  IFCTRIANGULATEDFACESET,\n  IFCTRIANGULATEDIRREGULARNETWORK,\n  IFCTRIMMEDCURVE,\n  IFCTSHAPEPROFILEDEF,\n  IFCTUBEBUNDLE,\n  IFCTUBEBUNDLETYPE,\n  IFCTYPEOBJECT,\n  IFCTYPEPROCESS,\n  IFCTYPEPRODUCT,\n  IFCTYPERESOURCE,\n  IFCUNITARYCONTROLELEMENT,\n  IFCUNITARYCONTROLELEMENTTYPE,\n  IFCUNITARYEQUIPMENT,\n  IFCUNITARYEQUIPMENTTYPE,\n  IFCUNITASSIGNMENT,\n  IFCUSHAPEPROFILEDEF,\n  IFCVALVE,\n  IFCVALVETYPE,\n  IFCVECTOR,\n  IFCVERTEX,\n  IFCVERTEXLOOP,\n  IFCVERTEXPOINT,\n  IFCVIBRATIONDAMPER,\n  IFCVIBRATIONDAMPERTYPE,\n  IFCVIBRATIONISOLATOR,\n  IFCVIBRATIONISOLATORTYPE,\n  IFCVIRTUALELEMENT,\n  IFCVIRTUALGRIDINTERSECTION,\n  IFCVOIDINGFEATURE,\n  IFCWALL,\n  IFCWALLELEMENTEDCASE,\n  IFCWALLSTANDARDCASE,\n  IFCWALLTYPE,\n  IFCWASTETERMINAL,\n  IFCWASTETERMINALTYPE,\n  IFCWINDOW,\n  IFCWINDOWLININGPROPERTIES,\n  IFCWINDOWPANELPROPERTIES,\n  IFCWINDOWSTANDARDCASE,\n  IFCWINDOWSTYLE,\n  IFCWINDOWTYPE,\n  IFCWORKCALENDAR,\n  IFCWORKCONTROL,\n  IFCWORKPLAN,\n  IFCWORKSCHEDULE,\n  IFCWORKTIME,\n  IFCZONE,\n  IFCZSHAPEPROFILEDEF,\n  IfcAPI2 as IfcAPI,\n  IfcAbsorbedDoseMeasure,\n  IfcAccelerationMeasure,\n  IfcActionRequest,\n  IfcActionRequestTypeEnum,\n  IfcActionSourceTypeEnum,\n  IfcActionTypeEnum,\n  IfcActor,\n  IfcActorRole,\n  IfcActuator,\n  IfcActuatorType,\n  IfcActuatorTypeEnum,\n  IfcAddress,\n  IfcAddressTypeEnum,\n  IfcAdvancedBrep,\n  IfcAdvancedBrepWithVoids,\n  IfcAdvancedFace,\n  IfcAirTerminal,\n  IfcAirTerminalBox,\n  IfcAirTerminalBoxType,\n  IfcAirTerminalBoxTypeEnum,\n  IfcAirTerminalType,\n  IfcAirTerminalTypeEnum,\n  IfcAirToAirHeatRecovery,\n  IfcAirToAirHeatRecoveryType,\n  IfcAirToAirHeatRecoveryTypeEnum,\n  IfcAlarm,\n  IfcAlarmType,\n  IfcAlarmTypeEnum,\n  IfcAlignment,\n  IfcAlignment2DHorizontal,\n  IfcAlignment2DHorizontalSegment,\n  IfcAlignment2DSegment,\n  IfcAlignment2DVerSegCircularArc,\n  IfcAlignment2DVerSegLine,\n  IfcAlignment2DVerSegParabolicArc,\n  IfcAlignment2DVertical,\n  IfcAlignment2DVerticalSegment,\n  IfcAlignmentCurve,\n  IfcAlignmentTypeEnum,\n  IfcAmountOfSubstanceMeasure,\n  IfcAnalysisModelTypeEnum,\n  IfcAnalysisTheoryTypeEnum,\n  IfcAngularVelocityMeasure,\n  IfcAnnotation,\n  IfcAnnotationFillArea,\n  IfcApplication,\n  IfcAppliedValue,\n  IfcApproval,\n  IfcApprovalRelationship,\n  IfcArbitraryClosedProfileDef,\n  IfcArbitraryOpenProfileDef,\n  IfcArbitraryProfileDefWithVoids,\n  IfcAreaDensityMeasure,\n  IfcAreaMeasure,\n  IfcArithmeticOperatorEnum,\n  IfcAssemblyPlaceEnum,\n  IfcAsset,\n  IfcAsymmetricIShapeProfileDef,\n  IfcAudioVisualAppliance,\n  IfcAudioVisualApplianceType,\n  IfcAudioVisualApplianceTypeEnum,\n  IfcAxis1Placement,\n  IfcAxis2Placement2D,\n  IfcAxis2Placement3D,\n  IfcBSplineCurve,\n  IfcBSplineCurveForm,\n  IfcBSplineCurveWithKnots,\n  IfcBSplineSurface,\n  IfcBSplineSurfaceForm,\n  IfcBSplineSurfaceWithKnots,\n  IfcBeam,\n  IfcBeamStandardCase,\n  IfcBeamType,\n  IfcBeamTypeEnum,\n  IfcBearing,\n  IfcBearingType,\n  IfcBearingTypeDisplacementEnum,\n  IfcBearingTypeEnum,\n  IfcBenchmarkEnum,\n  IfcBinary,\n  IfcBlobTexture,\n  IfcBlock,\n  IfcBoiler,\n  IfcBoilerType,\n  IfcBoilerTypeEnum,\n  IfcBoolean,\n  IfcBooleanClippingResult,\n  IfcBooleanOperator,\n  IfcBooleanResult,\n  IfcBoundaryCondition,\n  IfcBoundaryCurve,\n  IfcBoundaryEdgeCondition,\n  IfcBoundaryFaceCondition,\n  IfcBoundaryNodeCondition,\n  IfcBoundaryNodeConditionWarping,\n  IfcBoundedCurve,\n  IfcBoundedSurface,\n  IfcBoundingBox,\n  IfcBoxAlignment,\n  IfcBoxedHalfSpace,\n  IfcBridge,\n  IfcBridgePart,\n  IfcBridgePartTypeEnum,\n  IfcBridgeTypeEnum,\n  IfcBuilding,\n  IfcBuildingElement,\n  IfcBuildingElementPart,\n  IfcBuildingElementPartType,\n  IfcBuildingElementPartTypeEnum,\n  IfcBuildingElementProxy,\n  IfcBuildingElementProxyType,\n  IfcBuildingElementProxyTypeEnum,\n  IfcBuildingElementType,\n  IfcBuildingStorey,\n  IfcBuildingSystem,\n  IfcBuildingSystemTypeEnum,\n  IfcBurner,\n  IfcBurnerType,\n  IfcBurnerTypeEnum,\n  IfcCShapeProfileDef,\n  IfcCableCarrierFitting,\n  IfcCableCarrierFittingType,\n  IfcCableCarrierFittingTypeEnum,\n  IfcCableCarrierSegment,\n  IfcCableCarrierSegmentType,\n  IfcCableCarrierSegmentTypeEnum,\n  IfcCableFitting,\n  IfcCableFittingType,\n  IfcCableFittingTypeEnum,\n  IfcCableSegment,\n  IfcCableSegmentType,\n  IfcCableSegmentTypeEnum,\n  IfcCaissonFoundation,\n  IfcCaissonFoundationType,\n  IfcCaissonFoundationTypeEnum,\n  IfcCardinalPointReference,\n  IfcCartesianPoint,\n  IfcCartesianPointList,\n  IfcCartesianPointList2D,\n  IfcCartesianPointList3D,\n  IfcCartesianTransformationOperator,\n  IfcCartesianTransformationOperator2D,\n  IfcCartesianTransformationOperator2DnonUniform,\n  IfcCartesianTransformationOperator3D,\n  IfcCartesianTransformationOperator3DnonUniform,\n  IfcCenterLineProfileDef,\n  IfcChangeActionEnum,\n  IfcChiller,\n  IfcChillerType,\n  IfcChillerTypeEnum,\n  IfcChimney,\n  IfcChimneyType,\n  IfcChimneyTypeEnum,\n  IfcCircle,\n  IfcCircleHollowProfileDef,\n  IfcCircleProfileDef,\n  IfcCircularArcSegment2D,\n  IfcCivilElement,\n  IfcCivilElementType,\n  IfcClassification,\n  IfcClassificationReference,\n  IfcClosedShell,\n  IfcCoil,\n  IfcCoilType,\n  IfcCoilTypeEnum,\n  IfcColourRgb,\n  IfcColourRgbList,\n  IfcColourSpecification,\n  IfcColumn,\n  IfcColumnStandardCase,\n  IfcColumnType,\n  IfcColumnTypeEnum,\n  IfcCommunicationsAppliance,\n  IfcCommunicationsApplianceType,\n  IfcCommunicationsApplianceTypeEnum,\n  IfcComplexProperty,\n  IfcComplexPropertyTemplate,\n  IfcComplexPropertyTemplateTypeEnum,\n  IfcCompositeCurve,\n  IfcCompositeCurveOnSurface,\n  IfcCompositeCurveSegment,\n  IfcCompositeProfileDef,\n  IfcCompressor,\n  IfcCompressorType,\n  IfcCompressorTypeEnum,\n  IfcCondenser,\n  IfcCondenserType,\n  IfcCondenserTypeEnum,\n  IfcConic,\n  IfcConnectedFaceSet,\n  IfcConnectionCurveGeometry,\n  IfcConnectionGeometry,\n  IfcConnectionPointEccentricity,\n  IfcConnectionPointGeometry,\n  IfcConnectionSurfaceGeometry,\n  IfcConnectionTypeEnum,\n  IfcConnectionVolumeGeometry,\n  IfcConstraint,\n  IfcConstraintEnum,\n  IfcConstructionEquipmentResource,\n  IfcConstructionEquipmentResourceType,\n  IfcConstructionEquipmentResourceTypeEnum,\n  IfcConstructionMaterialResource,\n  IfcConstructionMaterialResourceType,\n  IfcConstructionMaterialResourceTypeEnum,\n  IfcConstructionProductResource,\n  IfcConstructionProductResourceType,\n  IfcConstructionProductResourceTypeEnum,\n  IfcConstructionResource,\n  IfcConstructionResourceType,\n  IfcContext,\n  IfcContextDependentMeasure,\n  IfcContextDependentUnit,\n  IfcControl,\n  IfcController,\n  IfcControllerType,\n  IfcControllerTypeEnum,\n  IfcConversionBasedUnit,\n  IfcConversionBasedUnitWithOffset,\n  IfcCooledBeam,\n  IfcCooledBeamType,\n  IfcCooledBeamTypeEnum,\n  IfcCoolingTower,\n  IfcCoolingTowerType,\n  IfcCoolingTowerTypeEnum,\n  IfcCoordinateOperation,\n  IfcCoordinateReferenceSystem,\n  IfcCostItem,\n  IfcCostItemTypeEnum,\n  IfcCostSchedule,\n  IfcCostScheduleTypeEnum,\n  IfcCostValue,\n  IfcCountMeasure,\n  IfcCovering,\n  IfcCoveringType,\n  IfcCoveringTypeEnum,\n  IfcCrewResource,\n  IfcCrewResourceType,\n  IfcCrewResourceTypeEnum,\n  IfcCsgPrimitive3D,\n  IfcCsgSolid,\n  IfcCurrencyRelationship,\n  IfcCurtainWall,\n  IfcCurtainWallType,\n  IfcCurtainWallTypeEnum,\n  IfcCurvatureMeasure,\n  IfcCurve,\n  IfcCurveBoundedPlane,\n  IfcCurveBoundedSurface,\n  IfcCurveInterpolationEnum,\n  IfcCurveSegment2D,\n  IfcCurveStyle,\n  IfcCurveStyleFont,\n  IfcCurveStyleFontAndScaling,\n  IfcCurveStyleFontPattern,\n  IfcCylindricalSurface,\n  IfcDamper,\n  IfcDamperType,\n  IfcDamperTypeEnum,\n  IfcDataOriginEnum,\n  IfcDate,\n  IfcDateTime,\n  IfcDayInMonthNumber,\n  IfcDayInWeekNumber,\n  IfcDeepFoundation,\n  IfcDeepFoundationType,\n  IfcDerivedProfileDef,\n  IfcDerivedUnit,\n  IfcDerivedUnitElement,\n  IfcDerivedUnitEnum,\n  IfcDescriptiveMeasure,\n  IfcDimensionCount,\n  IfcDimensionalExponents,\n  IfcDirection,\n  IfcDirectionSenseEnum,\n  IfcDiscreteAccessory,\n  IfcDiscreteAccessoryType,\n  IfcDiscreteAccessoryTypeEnum,\n  IfcDistanceExpression,\n  IfcDistributionChamberElement,\n  IfcDistributionChamberElementType,\n  IfcDistributionChamberElementTypeEnum,\n  IfcDistributionCircuit,\n  IfcDistributionControlElement,\n  IfcDistributionControlElementType,\n  IfcDistributionElement,\n  IfcDistributionElementType,\n  IfcDistributionFlowElement,\n  IfcDistributionFlowElementType,\n  IfcDistributionPort,\n  IfcDistributionPortTypeEnum,\n  IfcDistributionSystem,\n  IfcDistributionSystemEnum,\n  IfcDocumentConfidentialityEnum,\n  IfcDocumentInformation,\n  IfcDocumentInformationRelationship,\n  IfcDocumentReference,\n  IfcDocumentStatusEnum,\n  IfcDoor,\n  IfcDoorLiningProperties,\n  IfcDoorPanelOperationEnum,\n  IfcDoorPanelPositionEnum,\n  IfcDoorPanelProperties,\n  IfcDoorStandardCase,\n  IfcDoorStyle,\n  IfcDoorStyleConstructionEnum,\n  IfcDoorStyleOperationEnum,\n  IfcDoorType,\n  IfcDoorTypeEnum,\n  IfcDoorTypeOperationEnum,\n  IfcDoseEquivalentMeasure,\n  IfcDraughtingPreDefinedColour,\n  IfcDraughtingPreDefinedCurveFont,\n  IfcDuctFitting,\n  IfcDuctFittingType,\n  IfcDuctFittingTypeEnum,\n  IfcDuctSegment,\n  IfcDuctSegmentType,\n  IfcDuctSegmentTypeEnum,\n  IfcDuctSilencer,\n  IfcDuctSilencerType,\n  IfcDuctSilencerTypeEnum,\n  IfcDuration,\n  IfcDynamicViscosityMeasure,\n  IfcEdge,\n  IfcEdgeCurve,\n  IfcEdgeLoop,\n  IfcElectricAppliance,\n  IfcElectricApplianceType,\n  IfcElectricApplianceTypeEnum,\n  IfcElectricCapacitanceMeasure,\n  IfcElectricChargeMeasure,\n  IfcElectricConductanceMeasure,\n  IfcElectricCurrentMeasure,\n  IfcElectricDistributionBoard,\n  IfcElectricDistributionBoardType,\n  IfcElectricDistributionBoardTypeEnum,\n  IfcElectricFlowStorageDevice,\n  IfcElectricFlowStorageDeviceType,\n  IfcElectricFlowStorageDeviceTypeEnum,\n  IfcElectricGenerator,\n  IfcElectricGeneratorType,\n  IfcElectricGeneratorTypeEnum,\n  IfcElectricMotor,\n  IfcElectricMotorType,\n  IfcElectricMotorTypeEnum,\n  IfcElectricResistanceMeasure,\n  IfcElectricTimeControl,\n  IfcElectricTimeControlType,\n  IfcElectricTimeControlTypeEnum,\n  IfcElectricVoltageMeasure,\n  IfcElement,\n  IfcElementAssembly,\n  IfcElementAssemblyType,\n  IfcElementAssemblyTypeEnum,\n  IfcElementComponent,\n  IfcElementComponentType,\n  IfcElementCompositionEnum,\n  IfcElementQuantity,\n  IfcElementType,\n  IfcElementarySurface,\n  IfcElements,\n  IfcEllipse,\n  IfcEllipseProfileDef,\n  IfcEnergyConversionDevice,\n  IfcEnergyConversionDeviceType,\n  IfcEnergyMeasure,\n  IfcEngine,\n  IfcEngineType,\n  IfcEngineTypeEnum,\n  IfcEvaporativeCooler,\n  IfcEvaporativeCoolerType,\n  IfcEvaporativeCoolerTypeEnum,\n  IfcEvaporator,\n  IfcEvaporatorType,\n  IfcEvaporatorTypeEnum,\n  IfcEvent,\n  IfcEventTime,\n  IfcEventTriggerTypeEnum,\n  IfcEventType,\n  IfcEventTypeEnum,\n  IfcExtendedProperties,\n  IfcExternalInformation,\n  IfcExternalReference,\n  IfcExternalReferenceRelationship,\n  IfcExternalSpatialElement,\n  IfcExternalSpatialElementTypeEnum,\n  IfcExternalSpatialStructureElement,\n  IfcExternallyDefinedHatchStyle,\n  IfcExternallyDefinedSurfaceStyle,\n  IfcExternallyDefinedTextFont,\n  IfcExtrudedAreaSolid,\n  IfcExtrudedAreaSolidTapered,\n  IfcFace,\n  IfcFaceBasedSurfaceModel,\n  IfcFaceBound,\n  IfcFaceOuterBound,\n  IfcFaceSurface,\n  IfcFacetedBrep,\n  IfcFacetedBrepWithVoids,\n  IfcFacility,\n  IfcFacilityPart,\n  IfcFailureConnectionCondition,\n  IfcFan,\n  IfcFanType,\n  IfcFanTypeEnum,\n  IfcFastener,\n  IfcFastenerType,\n  IfcFastenerTypeEnum,\n  IfcFeatureElement,\n  IfcFeatureElementAddition,\n  IfcFeatureElementSubtraction,\n  IfcFillAreaStyle,\n  IfcFillAreaStyleHatching,\n  IfcFillAreaStyleTiles,\n  IfcFilter,\n  IfcFilterType,\n  IfcFilterTypeEnum,\n  IfcFireSuppressionTerminal,\n  IfcFireSuppressionTerminalType,\n  IfcFireSuppressionTerminalTypeEnum,\n  IfcFixedReferenceSweptAreaSolid,\n  IfcFlowController,\n  IfcFlowControllerType,\n  IfcFlowDirectionEnum,\n  IfcFlowFitting,\n  IfcFlowFittingType,\n  IfcFlowInstrument,\n  IfcFlowInstrumentType,\n  IfcFlowInstrumentTypeEnum,\n  IfcFlowMeter,\n  IfcFlowMeterType,\n  IfcFlowMeterTypeEnum,\n  IfcFlowMovingDevice,\n  IfcFlowMovingDeviceType,\n  IfcFlowSegment,\n  IfcFlowSegmentType,\n  IfcFlowStorageDevice,\n  IfcFlowStorageDeviceType,\n  IfcFlowTerminal,\n  IfcFlowTerminalType,\n  IfcFlowTreatmentDevice,\n  IfcFlowTreatmentDeviceType,\n  IfcFontStyle,\n  IfcFontVariant,\n  IfcFontWeight,\n  IfcFooting,\n  IfcFootingType,\n  IfcFootingTypeEnum,\n  IfcForceMeasure,\n  IfcFrequencyMeasure,\n  IfcFurnishingElement,\n  IfcFurnishingElementType,\n  IfcFurniture,\n  IfcFurnitureType,\n  IfcFurnitureTypeEnum,\n  IfcGeographicElement,\n  IfcGeographicElementType,\n  IfcGeographicElementTypeEnum,\n  IfcGeometricCurveSet,\n  IfcGeometricProjectionEnum,\n  IfcGeometricRepresentationContext,\n  IfcGeometricRepresentationItem,\n  IfcGeometricRepresentationSubContext,\n  IfcGeometricSet,\n  IfcGlobalOrLocalEnum,\n  IfcGloballyUniqueId,\n  IfcGrid,\n  IfcGridAxis,\n  IfcGridPlacement,\n  IfcGridTypeEnum,\n  IfcGroup,\n  IfcHalfSpaceSolid,\n  IfcHeatExchanger,\n  IfcHeatExchangerType,\n  IfcHeatExchangerTypeEnum,\n  IfcHeatFluxDensityMeasure,\n  IfcHeatingValueMeasure,\n  IfcHumidifier,\n  IfcHumidifierType,\n  IfcHumidifierTypeEnum,\n  IfcIShapeProfileDef,\n  IfcIdentifier,\n  IfcIlluminanceMeasure,\n  IfcImageTexture,\n  IfcIndexedColourMap,\n  IfcIndexedPolyCurve,\n  IfcIndexedPolygonalFace,\n  IfcIndexedPolygonalFaceWithVoids,\n  IfcIndexedTextureMap,\n  IfcIndexedTriangleTextureMap,\n  IfcInductanceMeasure,\n  IfcInteger,\n  IfcIntegerCountRateMeasure,\n  IfcInterceptor,\n  IfcInterceptorType,\n  IfcInterceptorTypeEnum,\n  IfcInternalOrExternalEnum,\n  IfcIntersectionCurve,\n  IfcInventory,\n  IfcInventoryTypeEnum,\n  IfcIonConcentrationMeasure,\n  IfcIrregularTimeSeries,\n  IfcIrregularTimeSeriesValue,\n  IfcIsothermalMoistureCapacityMeasure,\n  IfcJunctionBox,\n  IfcJunctionBoxType,\n  IfcJunctionBoxTypeEnum,\n  IfcKinematicViscosityMeasure,\n  IfcKnotType,\n  IfcLShapeProfileDef,\n  IfcLabel,\n  IfcLaborResource,\n  IfcLaborResourceType,\n  IfcLaborResourceTypeEnum,\n  IfcLagTime,\n  IfcLamp,\n  IfcLampType,\n  IfcLampTypeEnum,\n  IfcLanguageId,\n  IfcLayerSetDirectionEnum,\n  IfcLengthMeasure,\n  IfcLibraryInformation,\n  IfcLibraryReference,\n  IfcLightDistributionCurveEnum,\n  IfcLightDistributionData,\n  IfcLightEmissionSourceEnum,\n  IfcLightFixture,\n  IfcLightFixtureType,\n  IfcLightFixtureTypeEnum,\n  IfcLightIntensityDistribution,\n  IfcLightSource,\n  IfcLightSourceAmbient,\n  IfcLightSourceDirectional,\n  IfcLightSourceGoniometric,\n  IfcLightSourcePositional,\n  IfcLightSourceSpot,\n  IfcLine,\n  IfcLineSegment2D,\n  IfcLinearForceMeasure,\n  IfcLinearMomentMeasure,\n  IfcLinearPlacement,\n  IfcLinearPositioningElement,\n  IfcLinearStiffnessMeasure,\n  IfcLinearVelocityMeasure,\n  IfcLoadGroupTypeEnum,\n  IfcLocalPlacement,\n  IfcLogical,\n  IfcLogicalOperatorEnum,\n  IfcLoop,\n  IfcLuminousFluxMeasure,\n  IfcLuminousIntensityDistributionMeasure,\n  IfcLuminousIntensityMeasure,\n  IfcMagneticFluxDensityMeasure,\n  IfcMagneticFluxMeasure,\n  IfcManifoldSolidBrep,\n  IfcMapConversion,\n  IfcMappedItem,\n  IfcMassDensityMeasure,\n  IfcMassFlowRateMeasure,\n  IfcMassMeasure,\n  IfcMassPerLengthMeasure,\n  IfcMaterial,\n  IfcMaterialClassificationRelationship,\n  IfcMaterialConstituent,\n  IfcMaterialConstituentSet,\n  IfcMaterialDefinition,\n  IfcMaterialDefinitionRepresentation,\n  IfcMaterialLayer,\n  IfcMaterialLayerSet,\n  IfcMaterialLayerSetUsage,\n  IfcMaterialLayerWithOffsets,\n  IfcMaterialList,\n  IfcMaterialProfile,\n  IfcMaterialProfileSet,\n  IfcMaterialProfileSetUsage,\n  IfcMaterialProfileSetUsageTapering,\n  IfcMaterialProfileWithOffsets,\n  IfcMaterialProperties,\n  IfcMaterialRelationship,\n  IfcMaterialUsageDefinition,\n  IfcMeasureWithUnit,\n  IfcMechanicalFastener,\n  IfcMechanicalFastenerType,\n  IfcMechanicalFastenerTypeEnum,\n  IfcMedicalDevice,\n  IfcMedicalDeviceType,\n  IfcMedicalDeviceTypeEnum,\n  IfcMember,\n  IfcMemberStandardCase,\n  IfcMemberType,\n  IfcMemberTypeEnum,\n  IfcMetric,\n  IfcMirroredProfileDef,\n  IfcModulusOfElasticityMeasure,\n  IfcModulusOfLinearSubgradeReactionMeasure,\n  IfcModulusOfRotationalSubgradeReactionMeasure,\n  IfcModulusOfSubgradeReactionMeasure,\n  IfcMoistureDiffusivityMeasure,\n  IfcMolecularWeightMeasure,\n  IfcMomentOfInertiaMeasure,\n  IfcMonetaryMeasure,\n  IfcMonetaryUnit,\n  IfcMonthInYearNumber,\n  IfcMotorConnection,\n  IfcMotorConnectionType,\n  IfcMotorConnectionTypeEnum,\n  IfcNamedUnit,\n  IfcNonNegativeLengthMeasure,\n  IfcNormalisedRatioMeasure,\n  IfcNullStyle,\n  IfcNumericMeasure,\n  IfcObject,\n  IfcObjectDefinition,\n  IfcObjectPlacement,\n  IfcObjectTypeEnum,\n  IfcObjective,\n  IfcObjectiveEnum,\n  IfcOccupant,\n  IfcOccupantTypeEnum,\n  IfcOffsetCurve,\n  IfcOffsetCurve2D,\n  IfcOffsetCurve3D,\n  IfcOffsetCurveByDistances,\n  IfcOpenShell,\n  IfcOpeningElement,\n  IfcOpeningElementTypeEnum,\n  IfcOpeningStandardCase,\n  IfcOrganization,\n  IfcOrganizationRelationship,\n  IfcOrientationExpression,\n  IfcOrientedEdge,\n  IfcOuterBoundaryCurve,\n  IfcOutlet,\n  IfcOutletType,\n  IfcOutletTypeEnum,\n  IfcOwnerHistory,\n  IfcPHMeasure,\n  IfcParameterValue,\n  IfcParameterizedProfileDef,\n  IfcPath,\n  IfcPcurve,\n  IfcPerformanceHistory,\n  IfcPerformanceHistoryTypeEnum,\n  IfcPermeableCoveringOperationEnum,\n  IfcPermeableCoveringProperties,\n  IfcPermit,\n  IfcPermitTypeEnum,\n  IfcPerson,\n  IfcPersonAndOrganization,\n  IfcPhysicalComplexQuantity,\n  IfcPhysicalOrVirtualEnum,\n  IfcPhysicalQuantity,\n  IfcPhysicalSimpleQuantity,\n  IfcPile,\n  IfcPileConstructionEnum,\n  IfcPileType,\n  IfcPileTypeEnum,\n  IfcPipeFitting,\n  IfcPipeFittingType,\n  IfcPipeFittingTypeEnum,\n  IfcPipeSegment,\n  IfcPipeSegmentType,\n  IfcPipeSegmentTypeEnum,\n  IfcPixelTexture,\n  IfcPlacement,\n  IfcPlanarBox,\n  IfcPlanarExtent,\n  IfcPlanarForceMeasure,\n  IfcPlane,\n  IfcPlaneAngleMeasure,\n  IfcPlate,\n  IfcPlateStandardCase,\n  IfcPlateType,\n  IfcPlateTypeEnum,\n  IfcPoint,\n  IfcPointOnCurve,\n  IfcPointOnSurface,\n  IfcPolyLoop,\n  IfcPolygonalBoundedHalfSpace,\n  IfcPolygonalFaceSet,\n  IfcPolyline,\n  IfcPort,\n  IfcPositioningElement,\n  IfcPositiveInteger,\n  IfcPositiveLengthMeasure,\n  IfcPositivePlaneAngleMeasure,\n  IfcPositiveRatioMeasure,\n  IfcPostalAddress,\n  IfcPowerMeasure,\n  IfcPreDefinedColour,\n  IfcPreDefinedCurveFont,\n  IfcPreDefinedItem,\n  IfcPreDefinedProperties,\n  IfcPreDefinedPropertySet,\n  IfcPreDefinedTextFont,\n  IfcPreferredSurfaceCurveRepresentation,\n  IfcPresentableText,\n  IfcPresentationItem,\n  IfcPresentationLayerAssignment,\n  IfcPresentationLayerWithStyle,\n  IfcPresentationStyle,\n  IfcPresentationStyleAssignment,\n  IfcPressureMeasure,\n  IfcProcedure,\n  IfcProcedureType,\n  IfcProcedureTypeEnum,\n  IfcProcess,\n  IfcProduct,\n  IfcProductDefinitionShape,\n  IfcProductRepresentation,\n  IfcProfileDef,\n  IfcProfileProperties,\n  IfcProfileTypeEnum,\n  IfcProject,\n  IfcProjectLibrary,\n  IfcProjectOrder,\n  IfcProjectOrderTypeEnum,\n  IfcProjectedCRS,\n  IfcProjectedOrTrueLengthEnum,\n  IfcProjectionElement,\n  IfcProjectionElementTypeEnum,\n  IfcProperty,\n  IfcPropertyAbstraction,\n  IfcPropertyBoundedValue,\n  IfcPropertyDefinition,\n  IfcPropertyDependencyRelationship,\n  IfcPropertyEnumeratedValue,\n  IfcPropertyEnumeration,\n  IfcPropertyListValue,\n  IfcPropertyReferenceValue,\n  IfcPropertySet,\n  IfcPropertySetDefinition,\n  IfcPropertySetTemplate,\n  IfcPropertySetTemplateTypeEnum,\n  IfcPropertySingleValue,\n  IfcPropertyTableValue,\n  IfcPropertyTemplate,\n  IfcPropertyTemplateDefinition,\n  IfcProtectiveDevice,\n  IfcProtectiveDeviceTrippingUnit,\n  IfcProtectiveDeviceTrippingUnitType,\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\n  IfcProtectiveDeviceType,\n  IfcProtectiveDeviceTypeEnum,\n  IfcProxy,\n  IfcPump,\n  IfcPumpType,\n  IfcPumpTypeEnum,\n  IfcQuantityArea,\n  IfcQuantityCount,\n  IfcQuantityLength,\n  IfcQuantitySet,\n  IfcQuantityTime,\n  IfcQuantityVolume,\n  IfcQuantityWeight,\n  IfcRadioActivityMeasure,\n  IfcRailing,\n  IfcRailingType,\n  IfcRailingTypeEnum,\n  IfcRamp,\n  IfcRampFlight,\n  IfcRampFlightType,\n  IfcRampFlightTypeEnum,\n  IfcRampType,\n  IfcRampTypeEnum,\n  IfcRatioMeasure,\n  IfcRationalBSplineCurveWithKnots,\n  IfcRationalBSplineSurfaceWithKnots,\n  IfcReal,\n  IfcRectangleHollowProfileDef,\n  IfcRectangleProfileDef,\n  IfcRectangularPyramid,\n  IfcRectangularTrimmedSurface,\n  IfcRecurrencePattern,\n  IfcRecurrenceTypeEnum,\n  IfcReference,\n  IfcReferent,\n  IfcReferentTypeEnum,\n  IfcReflectanceMethodEnum,\n  IfcRegularTimeSeries,\n  IfcReinforcementBarProperties,\n  IfcReinforcementDefinitionProperties,\n  IfcReinforcingBar,\n  IfcReinforcingBarRoleEnum,\n  IfcReinforcingBarSurfaceEnum,\n  IfcReinforcingBarType,\n  IfcReinforcingBarTypeEnum,\n  IfcReinforcingElement,\n  IfcReinforcingElementType,\n  IfcReinforcingMesh,\n  IfcReinforcingMeshType,\n  IfcReinforcingMeshTypeEnum,\n  IfcRelAggregates,\n  IfcRelAssigns,\n  IfcRelAssignsToActor,\n  IfcRelAssignsToControl,\n  IfcRelAssignsToGroup,\n  IfcRelAssignsToGroupByFactor,\n  IfcRelAssignsToProcess,\n  IfcRelAssignsToProduct,\n  IfcRelAssignsToResource,\n  IfcRelAssociates,\n  IfcRelAssociatesApproval,\n  IfcRelAssociatesClassification,\n  IfcRelAssociatesConstraint,\n  IfcRelAssociatesDocument,\n  IfcRelAssociatesLibrary,\n  IfcRelAssociatesMaterial,\n  IfcRelConnects,\n  IfcRelConnectsElements,\n  IfcRelConnectsPathElements,\n  IfcRelConnectsPortToElement,\n  IfcRelConnectsPorts,\n  IfcRelConnectsStructuralActivity,\n  IfcRelConnectsStructuralMember,\n  IfcRelConnectsWithEccentricity,\n  IfcRelConnectsWithRealizingElements,\n  IfcRelContainedInSpatialStructure,\n  IfcRelCoversBldgElements,\n  IfcRelCoversSpaces,\n  IfcRelDeclares,\n  IfcRelDecomposes,\n  IfcRelDefines,\n  IfcRelDefinesByObject,\n  IfcRelDefinesByProperties,\n  IfcRelDefinesByTemplate,\n  IfcRelDefinesByType,\n  IfcRelFillsElement,\n  IfcRelFlowControlElements,\n  IfcRelInterferesElements,\n  IfcRelNests,\n  IfcRelPositions,\n  IfcRelProjectsElement,\n  IfcRelReferencedInSpatialStructure,\n  IfcRelSequence,\n  IfcRelServicesBuildings,\n  IfcRelSpaceBoundary,\n  IfcRelSpaceBoundary1stLevel,\n  IfcRelSpaceBoundary2ndLevel,\n  IfcRelVoidsElement,\n  IfcRelationship,\n  IfcReparametrisedCompositeCurveSegment,\n  IfcRepresentation,\n  IfcRepresentationContext,\n  IfcRepresentationItem,\n  IfcRepresentationMap,\n  IfcResource,\n  IfcResourceApprovalRelationship,\n  IfcResourceConstraintRelationship,\n  IfcResourceLevelRelationship,\n  IfcResourceTime,\n  IfcRevolvedAreaSolid,\n  IfcRevolvedAreaSolidTapered,\n  IfcRightCircularCone,\n  IfcRightCircularCylinder,\n  IfcRoleEnum,\n  IfcRoof,\n  IfcRoofType,\n  IfcRoofTypeEnum,\n  IfcRoot,\n  IfcRotationalFrequencyMeasure,\n  IfcRotationalMassMeasure,\n  IfcRotationalStiffnessMeasure,\n  IfcRoundedRectangleProfileDef,\n  IfcSIPrefix,\n  IfcSIUnit,\n  IfcSIUnitName,\n  IfcSanitaryTerminal,\n  IfcSanitaryTerminalType,\n  IfcSanitaryTerminalTypeEnum,\n  IfcSchedulingTime,\n  IfcSeamCurve,\n  IfcSectionModulusMeasure,\n  IfcSectionProperties,\n  IfcSectionReinforcementProperties,\n  IfcSectionTypeEnum,\n  IfcSectionalAreaIntegralMeasure,\n  IfcSectionedSolid,\n  IfcSectionedSolidHorizontal,\n  IfcSectionedSpine,\n  IfcSensor,\n  IfcSensorType,\n  IfcSensorTypeEnum,\n  IfcSequenceEnum,\n  IfcShadingDevice,\n  IfcShadingDeviceType,\n  IfcShadingDeviceTypeEnum,\n  IfcShapeAspect,\n  IfcShapeModel,\n  IfcShapeRepresentation,\n  IfcShearModulusMeasure,\n  IfcShellBasedSurfaceModel,\n  IfcSimpleProperty,\n  IfcSimplePropertyTemplate,\n  IfcSimplePropertyTemplateTypeEnum,\n  IfcSite,\n  IfcSlab,\n  IfcSlabElementedCase,\n  IfcSlabStandardCase,\n  IfcSlabType,\n  IfcSlabTypeEnum,\n  IfcSlippageConnectionCondition,\n  IfcSolarDevice,\n  IfcSolarDeviceType,\n  IfcSolarDeviceTypeEnum,\n  IfcSolidAngleMeasure,\n  IfcSolidModel,\n  IfcSoundPowerLevelMeasure,\n  IfcSoundPowerMeasure,\n  IfcSoundPressureLevelMeasure,\n  IfcSoundPressureMeasure,\n  IfcSpace,\n  IfcSpaceHeater,\n  IfcSpaceHeaterType,\n  IfcSpaceHeaterTypeEnum,\n  IfcSpaceType,\n  IfcSpaceTypeEnum,\n  IfcSpatialElement,\n  IfcSpatialElementType,\n  IfcSpatialStructureElement,\n  IfcSpatialStructureElementType,\n  IfcSpatialZone,\n  IfcSpatialZoneType,\n  IfcSpatialZoneTypeEnum,\n  IfcSpecificHeatCapacityMeasure,\n  IfcSpecularExponent,\n  IfcSpecularRoughness,\n  IfcSphere,\n  IfcSphericalSurface,\n  IfcStackTerminal,\n  IfcStackTerminalType,\n  IfcStackTerminalTypeEnum,\n  IfcStair,\n  IfcStairFlight,\n  IfcStairFlightType,\n  IfcStairFlightTypeEnum,\n  IfcStairType,\n  IfcStairTypeEnum,\n  IfcStateEnum,\n  IfcStructuralAction,\n  IfcStructuralActivity,\n  IfcStructuralAnalysisModel,\n  IfcStructuralConnection,\n  IfcStructuralConnectionCondition,\n  IfcStructuralCurveAction,\n  IfcStructuralCurveActivityTypeEnum,\n  IfcStructuralCurveConnection,\n  IfcStructuralCurveMember,\n  IfcStructuralCurveMemberTypeEnum,\n  IfcStructuralCurveMemberVarying,\n  IfcStructuralCurveReaction,\n  IfcStructuralItem,\n  IfcStructuralLinearAction,\n  IfcStructuralLoad,\n  IfcStructuralLoadCase,\n  IfcStructuralLoadConfiguration,\n  IfcStructuralLoadGroup,\n  IfcStructuralLoadLinearForce,\n  IfcStructuralLoadOrResult,\n  IfcStructuralLoadPlanarForce,\n  IfcStructuralLoadSingleDisplacement,\n  IfcStructuralLoadSingleDisplacementDistortion,\n  IfcStructuralLoadSingleForce,\n  IfcStructuralLoadSingleForceWarping,\n  IfcStructuralLoadStatic,\n  IfcStructuralLoadTemperature,\n  IfcStructuralMember,\n  IfcStructuralPlanarAction,\n  IfcStructuralPointAction,\n  IfcStructuralPointConnection,\n  IfcStructuralPointReaction,\n  IfcStructuralReaction,\n  IfcStructuralResultGroup,\n  IfcStructuralSurfaceAction,\n  IfcStructuralSurfaceActivityTypeEnum,\n  IfcStructuralSurfaceConnection,\n  IfcStructuralSurfaceMember,\n  IfcStructuralSurfaceMemberTypeEnum,\n  IfcStructuralSurfaceMemberVarying,\n  IfcStructuralSurfaceReaction,\n  IfcStyleModel,\n  IfcStyledItem,\n  IfcStyledRepresentation,\n  IfcSubContractResource,\n  IfcSubContractResourceType,\n  IfcSubContractResourceTypeEnum,\n  IfcSubedge,\n  IfcSurface,\n  IfcSurfaceCurve,\n  IfcSurfaceCurveSweptAreaSolid,\n  IfcSurfaceFeature,\n  IfcSurfaceFeatureTypeEnum,\n  IfcSurfaceOfLinearExtrusion,\n  IfcSurfaceOfRevolution,\n  IfcSurfaceReinforcementArea,\n  IfcSurfaceSide,\n  IfcSurfaceStyle,\n  IfcSurfaceStyleLighting,\n  IfcSurfaceStyleRefraction,\n  IfcSurfaceStyleRendering,\n  IfcSurfaceStyleShading,\n  IfcSurfaceStyleWithTextures,\n  IfcSurfaceTexture,\n  IfcSweptAreaSolid,\n  IfcSweptDiskSolid,\n  IfcSweptDiskSolidPolygonal,\n  IfcSweptSurface,\n  IfcSwitchingDevice,\n  IfcSwitchingDeviceType,\n  IfcSwitchingDeviceTypeEnum,\n  IfcSystem,\n  IfcSystemFurnitureElement,\n  IfcSystemFurnitureElementType,\n  IfcSystemFurnitureElementTypeEnum,\n  IfcTShapeProfileDef,\n  IfcTable,\n  IfcTableColumn,\n  IfcTableRow,\n  IfcTank,\n  IfcTankType,\n  IfcTankTypeEnum,\n  IfcTask,\n  IfcTaskDurationEnum,\n  IfcTaskTime,\n  IfcTaskTimeRecurring,\n  IfcTaskType,\n  IfcTaskTypeEnum,\n  IfcTelecomAddress,\n  IfcTemperatureGradientMeasure,\n  IfcTemperatureRateOfChangeMeasure,\n  IfcTendon,\n  IfcTendonAnchor,\n  IfcTendonAnchorType,\n  IfcTendonAnchorTypeEnum,\n  IfcTendonConduit,\n  IfcTendonConduitType,\n  IfcTendonConduitTypeEnum,\n  IfcTendonType,\n  IfcTendonTypeEnum,\n  IfcTessellatedFaceSet,\n  IfcTessellatedItem,\n  IfcText,\n  IfcTextAlignment,\n  IfcTextDecoration,\n  IfcTextFontName,\n  IfcTextLiteral,\n  IfcTextLiteralWithExtent,\n  IfcTextPath,\n  IfcTextStyle,\n  IfcTextStyleFontModel,\n  IfcTextStyleForDefinedFont,\n  IfcTextStyleTextModel,\n  IfcTextTransformation,\n  IfcTextureCoordinate,\n  IfcTextureCoordinateGenerator,\n  IfcTextureMap,\n  IfcTextureVertex,\n  IfcTextureVertexList,\n  IfcThermalAdmittanceMeasure,\n  IfcThermalConductivityMeasure,\n  IfcThermalExpansionCoefficientMeasure,\n  IfcThermalResistanceMeasure,\n  IfcThermalTransmittanceMeasure,\n  IfcThermodynamicTemperatureMeasure,\n  IfcTime,\n  IfcTimeMeasure,\n  IfcTimePeriod,\n  IfcTimeSeries,\n  IfcTimeSeriesDataTypeEnum,\n  IfcTimeSeriesValue,\n  IfcTimeStamp,\n  IfcTopologicalRepresentationItem,\n  IfcTopologyRepresentation,\n  IfcToroidalSurface,\n  IfcTorqueMeasure,\n  IfcTransformer,\n  IfcTransformerType,\n  IfcTransformerTypeEnum,\n  IfcTransitionCode,\n  IfcTransitionCurveSegment2D,\n  IfcTransitionCurveType,\n  IfcTransportElement,\n  IfcTransportElementType,\n  IfcTransportElementTypeEnum,\n  IfcTrapeziumProfileDef,\n  IfcTriangulatedFaceSet,\n  IfcTriangulatedIrregularNetwork,\n  IfcTrimmedCurve,\n  IfcTrimmingPreference,\n  IfcTubeBundle,\n  IfcTubeBundleType,\n  IfcTubeBundleTypeEnum,\n  IfcTypeObject,\n  IfcTypeProcess,\n  IfcTypeProduct,\n  IfcTypeResource,\n  IfcURIReference,\n  IfcUShapeProfileDef,\n  IfcUnitAssignment,\n  IfcUnitEnum,\n  IfcUnitaryControlElement,\n  IfcUnitaryControlElementType,\n  IfcUnitaryControlElementTypeEnum,\n  IfcUnitaryEquipment,\n  IfcUnitaryEquipmentType,\n  IfcUnitaryEquipmentTypeEnum,\n  IfcValve,\n  IfcValveType,\n  IfcValveTypeEnum,\n  IfcVaporPermeabilityMeasure,\n  IfcVector,\n  IfcVertex,\n  IfcVertexLoop,\n  IfcVertexPoint,\n  IfcVibrationDamper,\n  IfcVibrationDamperType,\n  IfcVibrationDamperTypeEnum,\n  IfcVibrationIsolator,\n  IfcVibrationIsolatorType,\n  IfcVibrationIsolatorTypeEnum,\n  IfcVirtualElement,\n  IfcVirtualGridIntersection,\n  IfcVoidingFeature,\n  IfcVoidingFeatureTypeEnum,\n  IfcVolumeMeasure,\n  IfcVolumetricFlowRateMeasure,\n  IfcWall,\n  IfcWallElementedCase,\n  IfcWallStandardCase,\n  IfcWallType,\n  IfcWallTypeEnum,\n  IfcWarpingConstantMeasure,\n  IfcWarpingMomentMeasure,\n  IfcWasteTerminal,\n  IfcWasteTerminalType,\n  IfcWasteTerminalTypeEnum,\n  IfcWindow,\n  IfcWindowLiningProperties,\n  IfcWindowPanelOperationEnum,\n  IfcWindowPanelPositionEnum,\n  IfcWindowPanelProperties,\n  IfcWindowStandardCase,\n  IfcWindowStyle,\n  IfcWindowStyleConstructionEnum,\n  IfcWindowStyleOperationEnum,\n  IfcWindowType,\n  IfcWindowTypeEnum,\n  IfcWindowTypePartitioningEnum,\n  IfcWorkCalendar,\n  IfcWorkCalendarTypeEnum,\n  IfcWorkControl,\n  IfcWorkPlan,\n  IfcWorkPlanTypeEnum,\n  IfcWorkSchedule,\n  IfcWorkScheduleTypeEnum,\n  IfcWorkTime,\n  IfcZShapeProfileDef,\n  IfcZone,\n  LABEL,\n  LINE_END,\n  REAL,\n  REF,\n  SET_BEGIN,\n  SET_END,\n  STRING,\n  UNKNOWN,\n  Value,\n  ms\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  Object.defineProperty(subClass, \"prototype\", {\n    value: Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    }),\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export function defaultURIBuilder(globalId: string) {\n    return `inst:${encodeURIComponent(globalId)}`;\n}\n\nexport function relativeURIBuilder(globalId: string) {\n    return `#${encodeURIComponent(globalId)}`;\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { defaultURIBuilder } from \"./uri-builder\";\n\nimport {\n    IFCRELSPACEBOUNDARY,\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    IFCRELVOIDSELEMENT,\n    IFCRELAGGREGATES,\n    IFCBUILDING,\n    IFCSITE,\n    IFCBUILDINGSTOREY,\n    IFCSPACE,\n    IFCELEMENT\n} from 'web-ifc';\n\nexport class Input{\n    ifcAPI: WebIFC.IfcAPI;\n    modelID: number;\n    ifcRelationship: number;        // Eg. IFCRELCONNECTSPORTS\n    ifcSubjectRel: string;          // Eg. RelatedPort\n    ifcTargetRel: string;           // Eg. RelatingPort\n    rdfRelationship?: string;       // Eg. fso:connectedPort\n    oppoiteRelationship?: string;   // Optional - used to establish a relationship in the other direction. For bidirectional relationships, use the same value as for rdfRelationship\n    ifcSubjectClassIn?: number[];   // Optional - used to limit bindings to cases where the subject is included in this list\n    ifcTargetClassIn?: number[];    // Optional - used to limit bindings to cases where the target is included in this list\n    includeInterface?: boolean;     // Used to also include the ifcRelationship as a bot:Interface\n}\n\n// ifcAPI: WebIFC.IfcAPI, modelID: number = 0, relationshipType: number, subjectRef: string, targetRef: string, rdfRelationship: string, includeInterface: boolean = false, biderectional: boolean = false\nexport async function buildRelOneToOne(d: Input): Promise<any>{\n\n    if(d.includeInterface == undefined) d.includeInterface = false;\n    if(d.ifcSubjectClassIn == undefined) d.ifcSubjectClassIn = [];\n    if(d.ifcTargetClassIn == undefined) d.ifcTargetClassIn = [];\n\n    if(d.ifcSubjectClassIn.length) console.log(\"ifcSubjectClassIn not yet supported for buildRelOneToOne\");\n    if(d.ifcTargetClassIn.length) console.log(\"ifcTargetClassIn not yet supported for buildRelOneToOne\");\n\n    if(d.rdfRelationship == undefined && d.oppoiteRelationship == undefined){\n        console.error(\"Specify either an 'rdfRelationship' or an 'oppoiteRelationship'\");\n        return [];\n    }\n\n    const graph = [];\n\n    const rels = await d.ifcAPI.properties.getAllItemsOfType(d.modelID, d.ifcRelationship, false);\n\n    for (let i = 0; i < rels.length; i++) {\n\n        const relID = rels[i];\n\n        const relProps = await d.ifcAPI.properties.getItemProperties(d.modelID, relID);\n\n        // Only continue if the interface is between an element and a space\n        if(!relProps[d.ifcSubjectRel] || !relProps[d.ifcTargetRel]) { continue; }\n\n        // Get properties of related and relating\n        const [subject, target] = await Promise.all([\n            d.ifcAPI.properties.getItemProperties(d.modelID, relProps[d.ifcSubjectRel].value),\n            d.ifcAPI.properties.getItemProperties(d.modelID, relProps[d.ifcTargetRel].value)\n        ]);\n\n        if(subject.GlobalId.value == \"0dG4XB8Mj2QhLcDnrkJh$F\"){\n            console.log(\"subject\");\n        }\n\n        if(target.GlobalId.value == \"0dG4XB8Mj2QhLcDnrkJh$F\"){\n            console.log(\"target\");\n        }\n\n        const subjectURI = defaultURIBuilder(subject.GlobalId.value);\n        const targetURI = defaultURIBuilder(target.GlobalId.value);\n        const interfaceURI = defaultURIBuilder(relProps.GlobalId.value);\n\n        // Push relationships\n        if(d.rdfRelationship != undefined){\n            graph.push({\n                \"@id\": subjectURI,\n                [d.rdfRelationship]: {\"@id\": targetURI}\n            });\n        }\n\n        // Push relationships in opposite direction\n        if(d.oppoiteRelationship != undefined){\n            graph.push({\n                \"@id\": targetURI,\n                [d.oppoiteRelationship]: {\"@id\": subjectURI}\n            });\n        }\n\n        // Optionally, also include the interface\n        if(d.includeInterface){\n            graph.push({\n                \"@id\": interfaceURI,\n                \"@type\": \"bot:Interface\",\n                \"ex:expressID\": relProps.expressID,\n                \"bot:interfaceOf\": [\n                    {\"@id\": subjectURI},\n                    {\"@id\": targetURI}\n                ]\n            });\n        }\n\n    }\n\n    return graph;\n\n}\n\n// ifcAPI: WebIFC.IfcAPI, modelID: number = 0, relationshipType: number, subjectRef: string, targetRef: string, rdfRelationship: string, subjectClassConstraint?: number, targetClassConstraint?: number\nexport async function buildRelOneToMany(d: Input): Promise<any>{\n\n    if(d.includeInterface == undefined) d.includeInterface = false;\n    if(d.ifcSubjectClassIn == undefined) d.ifcSubjectClassIn = [];\n    if(d.ifcTargetClassIn == undefined) d.ifcTargetClassIn = [];\n\n    if(d.includeInterface) console.log(\"Include interface not yet supported for buildRelOneToMany\");\n\n    if(d.rdfRelationship == undefined && d.oppoiteRelationship == undefined){\n        console.error(\"Specify either an 'rdfRelationship' or an 'oppoiteRelationship'\");\n        return [];\n    }\n\n    const graph = [];\n\n    const rels = await d.ifcAPI.properties.getAllItemsOfType(d.modelID, d.ifcRelationship, false);\n\n    for (let i = 0; i < rels.length; i++) {\n\n        const relID = rels[i];\n\n        const relProps = await d.ifcAPI.properties.getItemProperties(d.modelID, relID);\n\n        // Only continue if the interface is between an element and a space\n        if(!relProps[d.ifcSubjectRel] || !relProps[d.ifcTargetRel]) { continue; }\n\n        const subject = await d.ifcAPI.properties.getItemProperties(d.modelID, relProps[d.ifcSubjectRel].value);\n\n        if(d.ifcSubjectClassIn.length && d.ifcSubjectClassIn.indexOf(subject.type) == -1) { continue; }\n\n        const targetPromises: any = [];\n        for (let i = 0; i < relProps[d.ifcTargetRel].length; i++) {\n            targetPromises.push(d.ifcAPI.properties.getItemProperties(d.modelID, relProps[d.ifcTargetRel][i].value));\n        }\n        const targets = await Promise.all(targetPromises);\n\n        let types = new Set();\n        const targetObjects = targets\n            .filter((t: any) => {\n                // It might be that we are only interested in relationship where the target fulfills the constraint\n                types.add(t.type);\n                if(d.ifcTargetClassIn.length && d.ifcTargetClassIn.indexOf(t.type) == -1) return false;\n                return true;\n            })\n            .map((t: any) => {\n                const targetURI = defaultURIBuilder(t.GlobalId.value);\n                return {\"@id\": targetURI}\n            });\n\n        // Skip if no target objects\n        if(!targetObjects.length) { continue; }\n\n        const subjectURI = defaultURIBuilder(subject.GlobalId.value);\n\n        // Push relationships\n        if(d.rdfRelationship != undefined){\n            graph.push({\n                \"@id\": subjectURI,\n                [d.rdfRelationship]: targetObjects\n            });\n        }\n\n        // Push relationships in opposite direction\n        if(d.oppoiteRelationship != undefined){\n            targetObjects.forEach(item => {\n                const obj = JSON.parse(JSON.stringify(item));\n                graph.push(Object.assign(obj, {[d.oppoiteRelationship]: {\"@id\": subjectURI}}));\n            })\n        }\n\n    }\n\n    return graph;\n\n}","import { TreeNode } from \"./BaseDefinitions\";\n\nexport const IfcTypesTree: TreeNode = {\n\t\"children\": [\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcProject\",\n\t\t\t\t\t\t\t\"id\": 103090709\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcProjectLibrary\",\n\t\t\t\t\t\t\t\"id\": 653396225\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcContext\",\n\t\t\t\t\t\"id\": 3419103109\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcOccupant\",\n\t\t\t\t\t\t\t\t\t\"id\": 4143007308\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcActor\",\n\t\t\t\t\t\t\t\"id\": 2296667514\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcActionRequest\",\n\t\t\t\t\t\t\t\t\t\"id\": 3821786052\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcCostItem\",\n\t\t\t\t\t\t\t\t\t\"id\": 3895139033\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcCostSchedule\",\n\t\t\t\t\t\t\t\t\t\"id\": 1419761937\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPerformanceHistory\",\n\t\t\t\t\t\t\t\t\t\"id\": 2382730787\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPermit\",\n\t\t\t\t\t\t\t\t\t\"id\": 3327091369\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProjectOrder\",\n\t\t\t\t\t\t\t\t\t\"id\": 2904328755\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkCalendar\",\n\t\t\t\t\t\t\t\t\t\"id\": 4088093105\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkPlan\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4218914973\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkSchedule\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3342526732\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWorkControl\",\n\t\t\t\t\t\t\t\t\t\"id\": 1028945134\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcControl\",\n\t\t\t\t\t\t\t\"id\": 3293443760\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcAsset\",\n\t\t\t\t\t\t\t\t\t\"id\": 3460190687\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcInventory\",\n\t\t\t\t\t\t\t\t\t\"id\": 2391368822\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLoadCase\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 385403989\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLoadGroup\",\n\t\t\t\t\t\t\t\t\t\"id\": 1252848954\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralResultGroup\",\n\t\t\t\t\t\t\t\t\t\"id\": 2986769608\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingSystem\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1177604601\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionCircuit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 562808652\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionSystem\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3205830791\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralAnalysisModel\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2515109513\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcZone\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1033361043\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystem\",\n\t\t\t\t\t\t\t\t\t\"id\": 2254336722\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcGroup\",\n\t\t\t\t\t\t\t\"id\": 2706460486\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvent\",\n\t\t\t\t\t\t\t\t\t\"id\": 4148101412\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProcedure\",\n\t\t\t\t\t\t\t\t\t\"id\": 2744685151\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcTask\",\n\t\t\t\t\t\t\t\t\t\"id\": 3473067441\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcProcess\",\n\t\t\t\t\t\t\t\"id\": 2945172077\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcAnnotation\",\n\t\t\t\t\t\t\t\t\t\"id\": 1674181508\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeamStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2906023776\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeam\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 753842376\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementProxy\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1095909175\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChimney\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3296154744\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumnStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 905975707\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumn\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 843113511\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCovering\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1973544240\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCurtainWall\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3495092785\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3242481149\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 395920057\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFooting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 900683007\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMemberStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1911478936\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1073191201\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPile\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1687234759\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlateStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1156407060\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlate\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3171933400\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRailing\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2262370178\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRamp\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3024970846\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampFlight\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3283111854\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRoof\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2016517767\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcShadingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1329646415\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabElementedCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3127900445\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3027962421\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlab\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1529196076\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStair\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 331165859\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairFlight\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4252922144\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallElementedCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4156078855\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3512223829\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWall\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2391406946\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 486154966\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindow\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3304561284\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3299480353\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCivilElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1677625105\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcActuator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4288193352\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAlarm\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3087945054\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcController\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 25142252\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowInstrument\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 182646315\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceTrippingUnit\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2295281155\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSensor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4086658281\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryControlElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 630975310\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionControlElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1062813311\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionChamberElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1052013943\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirToAirHeatRecovery\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2056796094\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBoiler\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 32344328\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBurner\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2938176219\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChiller\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3902619387\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoil\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 639361253\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCondenser\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2272882330\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCooledBeam\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4136498852\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoolingTower\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3640358203\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricGenerator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 264262732\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricMotor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 402227799\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEngine\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2814081492\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporativeCooler\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3747195512\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 484807127\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHeatExchanger\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3319311131\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHumidifier\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2068733104\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMotorConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2474470126\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSolarDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3420628829\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransformer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3825984169\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTubeBundle\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3026737570\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryEquipment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4292641817\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEnergyConversionDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1658829314\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalBox\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 177149247\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDamper\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4074379575\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricDistributionBoard\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 862014818\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricTimeControl\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1003880860\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMeter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2188021234\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 738039164\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSwitchingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1162798199\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcValve\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4207607924\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowController\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2058353004\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 635142910\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1051757585\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 342316401\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcJunctionBox\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2176052936\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 310824031\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowFitting\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4278956645\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCompressor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3571504051\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFan\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3415622556\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPump\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 90941305\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMovingDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3132237377\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3758799889\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4217484030\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3518393246\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3612865200\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowSegment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 987401354\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricFlowStorageDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3310460725\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTank\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 812556717\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowStorageDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 707683696\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1634111441\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAudioVisualAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 277319702\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCommunicationsAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3221913625\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricAppliance\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1904799276\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFireSuppressionTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1426591983\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLamp\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 76236018\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLightFixture\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 629592764\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMedicalDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1437502449\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOutlet\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3694346114\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSanitaryTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3053780830\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceHeater\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1999602285\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStackTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1404847402\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWasteTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4237592921\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTerminal\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2223149337\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSilencer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1360408905\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFilter\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 819412036\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcInterceptor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4175244083\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTreatmentDevice\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3508470533\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionFlowElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3040386961\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1945004755\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementAssembly\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4123344466\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementPart\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2979338954\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDiscreteAccessory\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1335981549\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFastener\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 647756555\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMechanicalFastener\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 377706215\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingBar\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 979691226\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingMesh\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2320036040\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendon\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3824725483\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonAnchor\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2347447852\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3027567501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVibrationIsolator\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2391383451\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementComponent\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1623761950\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProjectionElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3651124850\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElementAddition\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2143335405\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOpeningStandardCase\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3079942009\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOpeningElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3588315303\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVoidingFeature\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 926996030\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElementSubtraction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1287392070\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSurfaceFeature\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3101698114\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFeatureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2827207264\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurniture\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1509553395\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystemFurnitureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 413509423\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnishingElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 263784265\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcGeographicElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3493046030\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransportElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1620046519\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVirtualElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2769231204\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElement\",\n\t\t\t\t\t\t\t\t\t\"id\": 1758889154\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcGrid\",\n\t\t\t\t\t\t\t\t\t\"id\": 3009204131\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionPort\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3041715199\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPort\",\n\t\t\t\t\t\t\t\t\t\"id\": 3740093272\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProxy\",\n\t\t\t\t\t\t\t\t\t\"id\": 3219374653\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcExternalSpatialElement\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1209101575\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcExternalSpatialStructureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2853485674\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuilding\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4031249490\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingStorey\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3124254112\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSite\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4097777520\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpace\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3856911033\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialStructureElement\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2706606064\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialZone\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 463610769\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialElement\",\n\t\t\t\t\t\t\t\t\t\"id\": 1412071761\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralLinearAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1807405624\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1004757350\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2082059205\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPlanarAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1621171031\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceAction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3657597509\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralAction\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 682877961\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2757150158\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1235345126\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 603775116\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralReaction\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3689010777\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralActivity\",\n\t\t\t\t\t\t\t\t\t\"id\": 3544373492\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4243806635\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralPointConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 734778138\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1975003073\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralConnection\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1179482911\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveMemberVarying\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2445595289\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralCurveMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 214636428\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceMemberVarying\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2218152070\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralSurfaceMember\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3979015343\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralMember\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 530289379\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcStructuralItem\",\n\t\t\t\t\t\t\t\t\t\"id\": 3136571912\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcProduct\",\n\t\t\t\t\t\t\t\"id\": 4208778838\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionEquipmentResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3898045240\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionMaterialResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1060000209\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionProductResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 488727124\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCrewResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3295246426\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLaborResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3827777499\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSubContractResource\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 148013059\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionResource\",\n\t\t\t\t\t\t\t\t\t\"id\": 2559216714\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcResource\",\n\t\t\t\t\t\t\t\"id\": 2914609552\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcObject\",\n\t\t\t\t\t\"id\": 3888040117\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcEventType\",\n\t\t\t\t\t\t\t\t\t\"id\": 4024345920\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcProcedureType\",\n\t\t\t\t\t\t\t\t\t\"id\": 569719735\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcTaskType\",\n\t\t\t\t\t\t\t\t\t\"id\": 3206491090\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeProcess\",\n\t\t\t\t\t\t\t\"id\": 3736923433\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorStyle\",\n\t\t\t\t\t\t\t\t\t\"id\": 526551008\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBeamType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 819618141\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementProxyType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1909888760\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChimneyType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2197970202\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcColumnType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 300633059\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoveringType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1916426348\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCurtainWallType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1457835157\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2323601079\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFootingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1893162501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMemberType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3181161470\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPileType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1158309216\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPlateType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4017108033\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRailingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2893384427\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampFlightType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2324767716\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRampType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1469900589\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRoofType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2781568857\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcShadingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4074543187\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSlabType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2533589738\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairFlightType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1039846685\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStairType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 338393293\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWallType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1898987631\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4009809668\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1950629157\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCivilElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3893394355\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcActuatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2874132201\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAlarmType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3001207471\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcControllerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 578613899\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowInstrumentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4037862832\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceTrippingUnitType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 655969474\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSensorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1783015770\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryControlElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3179687236\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionControlElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2063403501\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionChamberElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1599208980\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirToAirHeatRecoveryType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1871374353\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBoilerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 231477066\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBurnerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2188180465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcChillerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2951183804\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoilType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2301859152\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCondenserType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2816379211\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCooledBeamType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 335055490\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCoolingTowerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2954562838\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricGeneratorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1534661035\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricMotorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1217240411\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEngineType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 132023988\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporativeCoolerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3174744832\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEvaporatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3390157468\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHeatExchangerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1251058090\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcHumidifierType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1806887404\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMotorConnectionType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 977012517\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSolarDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1072016465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransformerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1692211062\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTubeBundleType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1600972822\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcUnitaryEquipmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1911125066\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcEnergyConversionDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2107101300\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalBoxType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1411407467\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDamperType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3961806047\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricDistributionBoardType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2417008758\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricTimeControlType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 712377611\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMeterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3815607619\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcProtectiveDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1842657554\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSwitchingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2315554128\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcValveType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 728799441\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowControllerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3907093117\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 395041908\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2674252688\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 869906466\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcJunctionBoxType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4288270099\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 804291784\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowFittingType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3198132628\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCompressorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3850581409\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFanType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 346874300\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPumpType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2250791053\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowMovingDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1482959167\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableCarrierSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3293546465\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCableSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1285652485\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3760055223\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcPipeSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4231323485\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowSegmentType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1834744321\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricFlowStorageDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3277789161\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTankType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 5716631\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowStorageDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1339347760\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAirTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3352864051\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcAudioVisualApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1532957894\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCommunicationsApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 400855858\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElectricApplianceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 663422040\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFireSuppressionTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 4222183408\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLampType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1051575348\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLightFixtureType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1161773419\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMedicalDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1114901282\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcOutletType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2837617999\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSanitaryTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1768891740\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceHeaterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1305183839\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcStackTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3112655638\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcWasteTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1133259667\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTerminalType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2297155007\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDuctSilencerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2030761528\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFilterType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1810631287\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcInterceptorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3946677679\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFlowTreatmentDeviceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3009222698\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionFlowElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3849074793\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDistributionElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3256556792\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementAssemblyType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2397081782\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcBuildingElementPartType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 39481116\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcDiscreteAccessoryType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2635815018\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFastenerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2489546625\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcMechanicalFastenerType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2108223431\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingBarType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2572171363\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingMeshType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2310774935\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonAnchorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3081323446\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTendonType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 2415094496\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 964333572\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcVibrationIsolatorType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3313531582\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementComponentType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2590856083\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnitureType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1268542332\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSystemFurnitureElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 1580310250\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcFurnishingElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4238390223\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcGeographicElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4095422895\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcTransportElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2097647324\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementType\",\n\t\t\t\t\t\t\t\t\t\"id\": 339256511\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpaceType\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"id\": 3812236995\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialStructureElementType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 3893378262\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialZoneType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2481509218\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSpatialElementType\",\n\t\t\t\t\t\t\t\t\t\"id\": 710998568\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowStyle\",\n\t\t\t\t\t\t\t\t\t\"id\": 1299126871\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeProduct\",\n\t\t\t\t\t\t\t\"id\": 2347495698\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionEquipmentResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 2185764099\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionMaterialResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4105962743\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionProductResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1525564444\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcCrewResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1815067380\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcLaborResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 428585644\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcSubContractResourceType\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 4095615324\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcConstructionResourceType\",\n\t\t\t\t\t\t\t\t\t\"id\": 2574617495\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcTypeResource\",\n\t\t\t\t\t\t\t\"id\": 3698973494\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcTypeObject\",\n\t\t\t\t\t\"id\": 1628702193\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcObjectDefinition\",\n\t\t\t\"id\": 219451334\n\t\t},\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorLiningProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 2963535650\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcDoorPanelProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 1714330368\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcPermeableCoveringProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 3566463478\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcReinforcementDefinitionProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 3765753017\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowLiningProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 336235671\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcWindowPanelProperties\",\n\t\t\t\t\t\t\t\t\t\"id\": 512836454\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcPreDefinedPropertySet\",\n\t\t\t\t\t\t\t\"id\": 3967405729\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcPropertySet\",\n\t\t\t\t\t\t\t\"id\": 1451395588\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcElementQuantity\",\n\t\t\t\t\t\t\t\t\t\"id\": 1883228015\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcQuantitySet\",\n\t\t\t\t\t\t\t\"id\": 2090586900\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcPropertySetDefinition\",\n\t\t\t\t\t\"id\": 3357820518\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcPropertySetTemplate\",\n\t\t\t\t\t\t\t\"id\": 492091185\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcComplexPropertyTemplate\",\n\t\t\t\t\t\t\t\t\t\"id\": 3875453745\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcSimplePropertyTemplate\",\n\t\t\t\t\t\t\t\t\t\"id\": 3663146110\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcPropertyTemplate\",\n\t\t\t\t\t\t\t\"id\": 3521284610\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcPropertyTemplateDefinition\",\n\t\t\t\t\t\"id\": 1482703590\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcPropertyDefinition\",\n\t\t\t\"id\": 1680319473\n\t\t},\n\t\t{\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToActor\",\n\t\t\t\t\t\t\t\"id\": 1683148259\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToControl\",\n\t\t\t\t\t\t\t\"id\": 2495723537\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToGroupByFactor\",\n\t\t\t\t\t\t\t\t\t\"id\": 1027710054\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToGroup\",\n\t\t\t\t\t\t\t\"id\": 1307041759\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToProcess\",\n\t\t\t\t\t\t\t\"id\": 4278684876\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToProduct\",\n\t\t\t\t\t\t\t\"id\": 2857406711\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssignsToResource\",\n\t\t\t\t\t\t\t\"id\": 205026976\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelAssigns\",\n\t\t\t\t\t\"id\": 3939117080\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesApproval\",\n\t\t\t\t\t\t\t\"id\": 4095574036\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesClassification\",\n\t\t\t\t\t\t\t\"id\": 919958153\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesConstraint\",\n\t\t\t\t\t\t\t\"id\": 2728634034\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesDocument\",\n\t\t\t\t\t\t\t\"id\": 982818633\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesLibrary\",\n\t\t\t\t\t\t\t\"id\": 3840914261\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAssociatesMaterial\",\n\t\t\t\t\t\t\t\"id\": 2655215786\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelAssociates\",\n\t\t\t\t\t\"id\": 1865459582\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPathElements\",\n\t\t\t\t\t\t\t\t\t\"id\": 3945020480\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsWithRealizingElements\",\n\t\t\t\t\t\t\t\t\t\"id\": 3678494232\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsElements\",\n\t\t\t\t\t\t\t\"id\": 1204542856\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPortToElement\",\n\t\t\t\t\t\t\t\"id\": 4201705270\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsPorts\",\n\t\t\t\t\t\t\t\"id\": 3190031847\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsStructuralActivity\",\n\t\t\t\t\t\t\t\"id\": 2127690289\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsWithEccentricity\",\n\t\t\t\t\t\t\t\t\t\"id\": 504942748\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelConnectsStructuralMember\",\n\t\t\t\t\t\t\t\"id\": 1638771189\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelContainedInSpatialStructure\",\n\t\t\t\t\t\t\t\"id\": 3242617779\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelCoversBldgElements\",\n\t\t\t\t\t\t\t\"id\": 886880790\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelCoversSpaces\",\n\t\t\t\t\t\t\t\"id\": 2802773753\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelFillsElement\",\n\t\t\t\t\t\t\t\"id\": 3940055652\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelFlowControlElements\",\n\t\t\t\t\t\t\t\"id\": 279856033\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelInterferesElements\",\n\t\t\t\t\t\t\t\"id\": 427948657\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelReferencedInSpatialStructure\",\n\t\t\t\t\t\t\t\"id\": 1245217292\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelSequence\",\n\t\t\t\t\t\t\t\"id\": 4122056220\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelServicesBuildings\",\n\t\t\t\t\t\t\t\"id\": 366585022\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary2ndLevel\",\n\t\t\t\t\t\t\t\t\t\t\t\"id\": 1521410863\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary1stLevel\",\n\t\t\t\t\t\t\t\t\t\"id\": 3523091289\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"name\": \"IfcRelSpaceBoundary\",\n\t\t\t\t\t\t\t\"id\": 3451746338\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelConnects\",\n\t\t\t\t\t\"id\": 826625072\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"IfcRelDeclares\",\n\t\t\t\t\t\"id\": 2565941209\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelAggregates\",\n\t\t\t\t\t\t\t\"id\": 160246688\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelNests\",\n\t\t\t\t\t\t\t\"id\": 3268803585\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelProjectsElement\",\n\t\t\t\t\t\t\t\"id\": 750771296\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelVoidsElement\",\n\t\t\t\t\t\t\t\"id\": 1401173127\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelDecomposes\",\n\t\t\t\t\t\"id\": 2551354335\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByObject\",\n\t\t\t\t\t\t\t\"id\": 1462361463\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByProperties\",\n\t\t\t\t\t\t\t\"id\": 4186316022\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByTemplate\",\n\t\t\t\t\t\t\t\"id\": 307848117\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"name\": \"IfcRelDefinesByType\",\n\t\t\t\t\t\t\t\"id\": 781010003\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\t\"name\": \"IfcRelDefines\",\n\t\t\t\t\t\"id\": 693640335\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"name\": \"IfcRelationship\",\n\t\t\t\"id\": 478536968\n\t\t}\n\t],\n\t\"name\": \"IfcRoot\",\n\t\"id\": 2341007311\n}","export interface JSONLD{\n    \"@context\": any,\n    \"@graph\": any[]\n}\n\nexport interface TreeNode{\n    \"name\": string;\n    \"id\": number;\n    \"children\"?: TreeNode[];\n}\n\nexport enum SerializationFormat{\n    NQuads=\"nquads\",\n    JSONLD=\"jsonld\"\n}\n\nexport enum Mimetype{\n    NTriples=\"application/n-triples\",\n    Turtle=\"text/turtle\",\n    NQuads=\"application/n-quads\",\n    Trig=\"application/trig\",\n    SPARQLJSON=\"application/sparql-results+json\",\n    JSONLD=\"application/ld+json\",\n    DLOG=\"application/x.datalog\"\n}\n\nexport enum N3Format{\n    NTriples=\"N-Triples\",\n    Trig=\"application/trig\",\n    NQuads=\"N-Quads\",\n    Turtle=\"Turtle\"\n}\n\nexport interface Triple{\n    subject: TripleItem,\n    predicate: TripleItem,\n    object: TripleItem,\n    graph: TripleItem\n}\n\nexport interface TripleItem{\n    termType: string;\n    value: string;\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { TreeNode } from \"./BaseDefinitions\";\nimport { IfcTypesTree } from \"./IfcTypesTree\";\n\nexport async function getAllItemsOfTypeOrSubtype(ifcAPI: WebIFC.IfcAPI, modelID: number, ifcType: number): Promise<number[]>{\n    const subTypes: number[] = getItemSubtypes(ifcType);\n    let items: any[] = [];\n    for (let i = 0; i < subTypes.length; i++) {\n        items.push(...await ifcAPI.properties.getAllItemsOfType(modelID, subTypes[i], false));\n    }\n    return items;\n}\n\nexport function getItemSubtypes(type: number): number[]{\n\n    let subTypes: number[] = [];\n\n    // Get the tree node that corresponds to the requested type\n    const treeNode = searchProductTree(IfcTypesTree, type);\n\n    if(treeNode){\n        // Get all typeIds for the node itself and its subtypes\n        collectAllIds(treeNode, subTypes);\n    }\n\n    return subTypes;\n\n    // Search IfcProductTree for the particular typeID and get the node\n    function searchProductTree(node: TreeNode, typeID: number): TreeNode|null{\n        if(node.id == typeID){\n             return node;\n        }else if (node.children != null){\n             var i;\n             var result: TreeNode|null = null;\n             for(i=0; result == null && i < node.children.length; i++){\n                  result = searchProductTree(node.children[i], typeID);\n             }\n             return result;\n        }\n        return null;\n    }\n\n    // Collect all ids of tree node and its children\n    function collectAllIds(node: TreeNode, ids: number[] = []){\n        ids.push(node.id);\n        if(node.children){\n            for (let i = 0; i < node.children.length; i++) {\n                collectAllIds(node.children[i], ids);\n            }\n        }\n    }\n\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { TreeNode } from \"./BaseDefinitions\";\nimport { getAllItemsOfTypeOrSubtype } from \"./item-search\";\nimport { defaultURIBuilder } from \"./uri-builder\";\n\nexport async function buildClassInstances(ifcAPI: WebIFC.IfcAPI, modelID: number, ifcType: number, rdfClasses: string[], includeSubTypes: boolean = false): Promise<any[]>{\n\n    let items = includeSubTypes \n        ? await getAllItemsOfTypeOrSubtype(ifcAPI, modelID, ifcType) \n        : await ifcAPI.properties.getAllItemsOfType(modelID, ifcType, false);\n\n    return buildClassInstancesFromExpressIDs(ifcAPI, modelID, items, rdfClasses);\n    \n}\n\nexport async function buildClassInstancesFromExpressIDs(ifcAPI: WebIFC.IfcAPI, modelID: number, expressIDs: number[], rdfClasses: string[]){\n\n    const graph = [];\n\n    for (let i = 0; i < expressIDs.length; i++) {\n        const expressID = expressIDs[i];\n        const { GlobalId } = await ifcAPI.properties.getItemProperties(modelID, expressID);\n        const URI = defaultURIBuilder(GlobalId.value);\n\n        // Push spaces\n        graph.push({\n            \"@id\": URI,\n            \"@type\": rdfClasses\n        });\n    }\n\n    return graph;\n\n}","export const prefixes = {\n    \"bot\": \"https://w3id.org/bot#\",\n    \"ex\": \"https://example.com/\",\n    \"fog\": \"https://w3id.org/fog#\",\n    \"fso\": \"https://w3id.org/fso#\",\n    \"ifc\": \"http://ifcowl.openbimstandards.org/IFC2X3_Final#\",\n    \"inst\": \"https://example.com/\",\n    \"kbt\": \"https://w3id.org/kobl/building-topology#\",\n    \"omg\": \"https://w3id.org/omg#\",\n    \"qudt\": \"http://qudt.org/schema/qudt/\",\n    \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\",\n    \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\",\n    \"tso\": \"https://w3id.org/tso#\",\n    \"xsd\": \"http://www.w3.org/2001/XMLSchema#\"\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlankNode = void 0;\n/**\n * A term that represents an RDF blank node with a label.\n */\nclass BlankNode {\n    constructor(value) {\n        this.termType = 'BlankNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n    }\n}\nexports.BlankNode = BlankNode;\n//# sourceMappingURL=BlankNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultGraph = void 0;\n/**\n * A singleton term instance that represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass DefaultGraph {\n    constructor() {\n        this.termType = 'DefaultGraph';\n        this.value = '';\n        // Private constructor\n    }\n    equals(other) {\n        return !!other && other.termType === 'DefaultGraph';\n    }\n}\nexports.DefaultGraph = DefaultGraph;\nDefaultGraph.INSTANCE = new DefaultGraph();\n//# sourceMappingURL=DefaultGraph.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NamedNode = void 0;\n/**\n * A term that contains an IRI.\n */\nclass NamedNode {\n    constructor(value) {\n        this.termType = 'NamedNode';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n    }\n}\nexports.NamedNode = NamedNode;\n//# sourceMappingURL=NamedNode.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Literal = void 0;\nconst NamedNode_1 = require(\"./NamedNode\");\n/**\n * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n */\nclass Literal {\n    constructor(value, languageOrDatatype) {\n        this.termType = 'Literal';\n        this.value = value;\n        if (typeof languageOrDatatype === 'string') {\n            this.language = languageOrDatatype;\n            this.datatype = Literal.RDF_LANGUAGE_STRING;\n        }\n        else if (languageOrDatatype) {\n            this.language = '';\n            this.datatype = languageOrDatatype;\n        }\n        else {\n            this.language = '';\n            this.datatype = Literal.XSD_STRING;\n        }\n    }\n    equals(other) {\n        return !!other && other.termType === 'Literal' && other.value === this.value &&\n            other.language === this.language && other.datatype.equals(this.datatype);\n    }\n}\nexports.Literal = Literal;\nLiteral.RDF_LANGUAGE_STRING = new NamedNode_1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\nLiteral.XSD_STRING = new NamedNode_1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n//# sourceMappingURL=Literal.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quad = void 0;\n/**\n * An instance of DefaultGraph represents the default graph.\n * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n */\nclass Quad {\n    constructor(subject, predicate, object, graph) {\n        this.termType = 'Quad';\n        this.value = '';\n        this.subject = subject;\n        this.predicate = predicate;\n        this.object = object;\n        this.graph = graph;\n    }\n    equals(other) {\n        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n        return !!other && (other.termType === 'Quad' || !other.termType) &&\n            this.subject.equals(other.subject) &&\n            this.predicate.equals(other.predicate) &&\n            this.object.equals(other.object) &&\n            this.graph.equals(other.graph);\n    }\n}\nexports.Quad = Quad;\n//# sourceMappingURL=Quad.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Variable = void 0;\n/**\n * A term that represents a variable.\n */\nclass Variable {\n    constructor(value) {\n        this.termType = 'Variable';\n        this.value = value;\n    }\n    equals(other) {\n        return !!other && other.termType === 'Variable' && other.value === this.value;\n    }\n}\nexports.Variable = Variable;\n//# sourceMappingURL=Variable.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DataFactory = void 0;\nconst BlankNode_1 = require(\"./BlankNode\");\nconst DefaultGraph_1 = require(\"./DefaultGraph\");\nconst Literal_1 = require(\"./Literal\");\nconst NamedNode_1 = require(\"./NamedNode\");\nconst Quad_1 = require(\"./Quad\");\nconst Variable_1 = require(\"./Variable\");\nlet dataFactoryCounter = 0;\n/**\n * A factory for instantiating RDF terms and quads.\n */\nclass DataFactory {\n    constructor(options) {\n        this.blankNodeCounter = 0;\n        options = options || {};\n        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n    }\n    /**\n     * @param value The IRI for the named node.\n     * @return A new instance of NamedNode.\n     * @see NamedNode\n     */\n    namedNode(value) {\n        return new NamedNode_1.NamedNode(value);\n    }\n    /**\n     * @param value The optional blank node identifier.\n     * @return A new instance of BlankNode.\n     *         If the `value` parameter is undefined a new identifier\n     *         for the blank node is generated for each call.\n     * @see BlankNode\n     */\n    blankNode(value) {\n        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n    }\n    /**\n     * @param value              The literal value.\n     * @param languageOrDatatype The optional language or datatype.\n     *                           If `languageOrDatatype` is a NamedNode,\n     *                           then it is used for the value of `NamedNode.datatype`.\n     *                           Otherwise `languageOrDatatype` is used for the value\n     *                           of `NamedNode.language`.\n     * @return A new instance of Literal.\n     * @see Literal\n     */\n    literal(value, languageOrDatatype) {\n        return new Literal_1.Literal(value, languageOrDatatype);\n    }\n    /**\n     * This method is optional.\n     * @param value The variable name\n     * @return A new instance of Variable.\n     * @see Variable\n     */\n    variable(value) {\n        return new Variable_1.Variable(value);\n    }\n    /**\n     * @return An instance of DefaultGraph.\n     */\n    defaultGraph() {\n        return DefaultGraph_1.DefaultGraph.INSTANCE;\n    }\n    /**\n     * @param subject   The quad subject term.\n     * @param predicate The quad predicate term.\n     * @param object    The quad object term.\n     * @param graph     The quad graph term.\n     * @return A new instance of Quad.\n     * @see Quad\n     */\n    quad(subject, predicate, object, graph) {\n        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n    }\n    /**\n     * Create a deep copy of the given term using this data factory.\n     * @param original An RDF term.\n     * @return A deep copy of the given term.\n     */\n    fromTerm(original) {\n        // TODO: remove nasty any casts when this TS bug has been fixed:\n        //  https://github.com/microsoft/TypeScript/issues/26933\n        switch (original.termType) {\n            case 'NamedNode':\n                return this.namedNode(original.value);\n            case 'BlankNode':\n                return this.blankNode(original.value);\n            case 'Literal':\n                if (original.language) {\n                    return this.literal(original.value, original.language);\n                }\n                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n                    return this.literal(original.value, this.fromTerm(original.datatype));\n                }\n                return this.literal(original.value);\n            case 'Variable':\n                return this.variable(original.value);\n            case 'DefaultGraph':\n                return this.defaultGraph();\n            case 'Quad':\n                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n        }\n    }\n    /**\n     * Create a deep copy of the given quad using this data factory.\n     * @param original An RDF quad.\n     * @return A deep copy of the given quad.\n     */\n    fromQuad(original) {\n        return this.fromTerm(original);\n    }\n    /**\n     * Reset the internal blank node counter.\n     */\n    resetBlankNodeCounter() {\n        this.blankNodeCounter = 0;\n    }\n}\nexports.DataFactory = DataFactory;\n//# sourceMappingURL=DataFactory.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./lib/BlankNode\"), exports);\n__exportStar(require(\"./lib/DataFactory\"), exports);\n__exportStar(require(\"./lib/DefaultGraph\"), exports);\n__exportStar(require(\"./lib/Literal\"), exports);\n__exportStar(require(\"./lib/NamedNode\"), exports);\n__exportStar(require(\"./lib/Quad\"), exports);\n__exportStar(require(\"./lib/Variable\"), exports);\n//# sourceMappingURL=index.js.map","import { DataFactory } from \"rdf-data-factory\";\nimport type * as RDF from '@rdfjs/types';\nimport { parseWKT } from \"./wkt-parser\";\n\nconst DF = new DataFactory();\n\nexport let extensionFunctions = {\n    'http://example.org/functions#to-upper-case'(args: RDF.Term[]) {\n        const arg = args[0];\n        if (arg.termType === 'Literal' && arg.datatype.value === 'http://www.w3.org/2001/XMLSchema#string') {\n            return DF.literal(arg.value.toUpperCase(), arg.datatype);\n        }\n        return arg;\n    },\n    'http://example.org/functions#get-id'(args: RDF.Term[]) {\n        const arg = args[0];\n        if (arg.termType === 'NamedNode') {\n            return DF.literal(getID(arg));\n        }\n        return arg;\n    },\n    'http://example.org/functions#get-namespace'(args: RDF.Term[]) {\n        const arg = args[0];\n        if (arg.termType === 'NamedNode') {\n            return DF.literal(getNamespace(arg));\n        }\n        return arg;\n    },\n    'http://example.org/functions#uri-concat'(args: RDF.Term[]) {\n        const uri1 = args[0];\n        const uri2 = args[1];\n        if (uri1.termType === 'NamedNode' && uri2.termType === 'NamedNode') {\n              const ns = getNamespace(uri1);\n              const id1 = getID(uri1);\n              const id2 = getID(uri2);\n              return DF.namedNode(ns + id1 + id2);\n        }\n        return DF.literal(\"ERROR\");\n    }\n}\n\nfunction getID(uri: RDF.Term){\n    return uri.value.indexOf(\"#\") != -1 ? uri.value.split(\"#\")[1] : uri.value.split(\"/\").pop();\n}\n\nfunction getNamespace(uri: RDF.Term){\n    if(uri.value.indexOf(\"#\") != -1){\n        return uri.value.split(\"#\")[0]+\"#\";\n    }else{\n        const arr = uri.value.split(\"/\");\n        arr.pop();\n        return arr.join(\"/\") + \"/\";\n    }\n}","import * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { IFCUNITASSIGNMENT } from 'web-ifc';\n\n// Known types that are currently unsupported\n// TIMEUNIT = 'TIMEUNIT',\n// PLANEANGLEUNIT = 'PLANEANGLEUNIT'\n\nexport enum UnitType {\n  LENGTHUNIT = 'LENGTHUNIT',\n  AREAUNIT = 'AREAUNIT',\n  VOLUMEUNIT = 'VOLUMEUNIT'\n}\n\nexport const UnitScale: { [unit: string]: number } = {\n  MILLI: 0.001,\n  CENTI: 0.01,\n  DECI: 0.1,\n  NONE: 1,\n  DECA: 10,\n  HECTO: 100,\n  KILO: 1000\n};\n\nexport const ucumPrefix: { [unit: string]: string } = {\n  \"0.001\": \"m\",\n  \"0.01\": \"c\",\n  \"0.1\": \"d\",\n  \"1\": \"\",\n  \"1000\": \"k\"\n};\n\nexport function getUCUMCode(unitType: UnitType, multiplicationFactor: number): string{\n  const pfx = ucumPrefix[multiplicationFactor];\n  if(unitType == UnitType.LENGTHUNIT) return `${pfx}m`;\n  if(unitType == UnitType.AREAUNIT) return `${pfx}m2`;\n  if(unitType == UnitType.VOLUMEUNIT) return `${pfx}m3`;\n}\n\nexport class IfcUnits {\n\n  allUnits: { [modelID: number]: any } = {};\n  private ifcAPI: WebIFC.IfcAPI;\n\n  constructor(ifcAPI: WebIFC.IfcAPI) {\n    this.ifcAPI = ifcAPI;\n  }\n\n  async getUnits(modelID: number, type: UnitType) {\n    if (!this.allUnits[modelID]) {\n      await this.getUnitsOfModel(modelID);\n    }\n    return this.allUnits[modelID][type];\n  }\n\n  async getUnitsOfModel(modelID: number) {\n    this.allUnits[modelID] = {};\n\n    const foundUnitsID = await this.ifcAPI.properties.getAllItemsOfType(modelID, IFCUNITASSIGNMENT, false);\n    const unitsID = foundUnitsID[0];\n    const unitReference = await this.ifcAPI.properties.getItemProperties(modelID, unitsID, true);\n    const units = unitReference.Units;\n\n    Object.values(UnitType).forEach((value) => {\n      const foundUnit = units.find(\n        (item: any) => item.UnitType && item.UnitType.value === value\n      );\n\n      if (foundUnit) {\n        const prefix = foundUnit.Prefix as any;\n        let scale;\n        if (prefix === null) scale = UnitScale.NONE;\n        else scale = UnitScale[prefix.value];\n        this.allUnits[modelID][value] = scale;\n      }\n    });\n\n    return this.allUnits[modelID];\n\n  }\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global[\"ifc-lbd\"] = {}));\n})(this, (function (exports) { 'use strict';\n\n\tvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\tvar rdfDataFactory = {};\n\n\tvar BlankNode$1 = {};\n\n\tObject.defineProperty(BlankNode$1, \"__esModule\", { value: true });\n\tBlankNode$1.BlankNode = void 0;\n\t/**\n\t * A term that represents an RDF blank node with a label.\n\t */\n\tclass BlankNode {\n\t    constructor(value) {\n\t        this.termType = 'BlankNode';\n\t        this.value = value;\n\t    }\n\t    equals(other) {\n\t        return !!other && other.termType === 'BlankNode' && other.value === this.value;\n\t    }\n\t}\n\tBlankNode$1.BlankNode = BlankNode;\n\n\tvar DataFactory$1 = {};\n\n\tvar DefaultGraph$1 = {};\n\n\tObject.defineProperty(DefaultGraph$1, \"__esModule\", { value: true });\n\tDefaultGraph$1.DefaultGraph = void 0;\n\t/**\n\t * A singleton term instance that represents the default graph.\n\t * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n\t */\n\tclass DefaultGraph {\n\t    constructor() {\n\t        this.termType = 'DefaultGraph';\n\t        this.value = '';\n\t        // Private constructor\n\t    }\n\t    equals(other) {\n\t        return !!other && other.termType === 'DefaultGraph';\n\t    }\n\t}\n\tDefaultGraph$1.DefaultGraph = DefaultGraph;\n\tDefaultGraph.INSTANCE = new DefaultGraph();\n\n\tvar Literal$1 = {};\n\n\tvar NamedNode$1 = {};\n\n\tObject.defineProperty(NamedNode$1, \"__esModule\", { value: true });\n\tNamedNode$1.NamedNode = void 0;\n\t/**\n\t * A term that contains an IRI.\n\t */\n\tclass NamedNode {\n\t    constructor(value) {\n\t        this.termType = 'NamedNode';\n\t        this.value = value;\n\t    }\n\t    equals(other) {\n\t        return !!other && other.termType === 'NamedNode' && other.value === this.value;\n\t    }\n\t}\n\tNamedNode$1.NamedNode = NamedNode;\n\n\tObject.defineProperty(Literal$1, \"__esModule\", { value: true });\n\tLiteral$1.Literal = void 0;\n\tconst NamedNode_1$1 = NamedNode$1;\n\t/**\n\t * A term that represents an RDF literal, containing a string with an optional language tag or datatype.\n\t */\n\tclass Literal {\n\t    constructor(value, languageOrDatatype) {\n\t        this.termType = 'Literal';\n\t        this.value = value;\n\t        if (typeof languageOrDatatype === 'string') {\n\t            this.language = languageOrDatatype;\n\t            this.datatype = Literal.RDF_LANGUAGE_STRING;\n\t        }\n\t        else if (languageOrDatatype) {\n\t            this.language = '';\n\t            this.datatype = languageOrDatatype;\n\t        }\n\t        else {\n\t            this.language = '';\n\t            this.datatype = Literal.XSD_STRING;\n\t        }\n\t    }\n\t    equals(other) {\n\t        return !!other && other.termType === 'Literal' && other.value === this.value &&\n\t            other.language === this.language && other.datatype.equals(this.datatype);\n\t    }\n\t}\n\tLiteral$1.Literal = Literal;\n\tLiteral.RDF_LANGUAGE_STRING = new NamedNode_1$1.NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString');\n\tLiteral.XSD_STRING = new NamedNode_1$1.NamedNode('http://www.w3.org/2001/XMLSchema#string');\n\n\tvar Quad$1 = {};\n\n\tObject.defineProperty(Quad$1, \"__esModule\", { value: true });\n\tQuad$1.Quad = void 0;\n\t/**\n\t * An instance of DefaultGraph represents the default graph.\n\t * It's only allowed to assign a DefaultGraph to the .graph property of a Quad.\n\t */\n\tclass Quad {\n\t    constructor(subject, predicate, object, graph) {\n\t        this.termType = 'Quad';\n\t        this.value = '';\n\t        this.subject = subject;\n\t        this.predicate = predicate;\n\t        this.object = object;\n\t        this.graph = graph;\n\t    }\n\t    equals(other) {\n\t        // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n\t        return !!other && (other.termType === 'Quad' || !other.termType) &&\n\t            this.subject.equals(other.subject) &&\n\t            this.predicate.equals(other.predicate) &&\n\t            this.object.equals(other.object) &&\n\t            this.graph.equals(other.graph);\n\t    }\n\t}\n\tQuad$1.Quad = Quad;\n\n\tvar Variable$1 = {};\n\n\tObject.defineProperty(Variable$1, \"__esModule\", { value: true });\n\tVariable$1.Variable = void 0;\n\t/**\n\t * A term that represents a variable.\n\t */\n\tclass Variable {\n\t    constructor(value) {\n\t        this.termType = 'Variable';\n\t        this.value = value;\n\t    }\n\t    equals(other) {\n\t        return !!other && other.termType === 'Variable' && other.value === this.value;\n\t    }\n\t}\n\tVariable$1.Variable = Variable;\n\n\tObject.defineProperty(DataFactory$1, \"__esModule\", { value: true });\n\tDataFactory$1.DataFactory = void 0;\n\tconst BlankNode_1 = BlankNode$1;\n\tconst DefaultGraph_1 = DefaultGraph$1;\n\tconst Literal_1 = Literal$1;\n\tconst NamedNode_1 = NamedNode$1;\n\tconst Quad_1 = Quad$1;\n\tconst Variable_1 = Variable$1;\n\tlet dataFactoryCounter = 0;\n\t/**\n\t * A factory for instantiating RDF terms and quads.\n\t */\n\tclass DataFactory {\n\t    constructor(options) {\n\t        this.blankNodeCounter = 0;\n\t        options = options || {};\n\t        this.blankNodePrefix = options.blankNodePrefix || `df_${dataFactoryCounter++}_`;\n\t    }\n\t    /**\n\t     * @param value The IRI for the named node.\n\t     * @return A new instance of NamedNode.\n\t     * @see NamedNode\n\t     */\n\t    namedNode(value) {\n\t        return new NamedNode_1.NamedNode(value);\n\t    }\n\t    /**\n\t     * @param value The optional blank node identifier.\n\t     * @return A new instance of BlankNode.\n\t     *         If the `value` parameter is undefined a new identifier\n\t     *         for the blank node is generated for each call.\n\t     * @see BlankNode\n\t     */\n\t    blankNode(value) {\n\t        return new BlankNode_1.BlankNode(value || `${this.blankNodePrefix}${this.blankNodeCounter++}`);\n\t    }\n\t    /**\n\t     * @param value              The literal value.\n\t     * @param languageOrDatatype The optional language or datatype.\n\t     *                           If `languageOrDatatype` is a NamedNode,\n\t     *                           then it is used for the value of `NamedNode.datatype`.\n\t     *                           Otherwise `languageOrDatatype` is used for the value\n\t     *                           of `NamedNode.language`.\n\t     * @return A new instance of Literal.\n\t     * @see Literal\n\t     */\n\t    literal(value, languageOrDatatype) {\n\t        return new Literal_1.Literal(value, languageOrDatatype);\n\t    }\n\t    /**\n\t     * This method is optional.\n\t     * @param value The variable name\n\t     * @return A new instance of Variable.\n\t     * @see Variable\n\t     */\n\t    variable(value) {\n\t        return new Variable_1.Variable(value);\n\t    }\n\t    /**\n\t     * @return An instance of DefaultGraph.\n\t     */\n\t    defaultGraph() {\n\t        return DefaultGraph_1.DefaultGraph.INSTANCE;\n\t    }\n\t    /**\n\t     * @param subject   The quad subject term.\n\t     * @param predicate The quad predicate term.\n\t     * @param object    The quad object term.\n\t     * @param graph     The quad graph term.\n\t     * @return A new instance of Quad.\n\t     * @see Quad\n\t     */\n\t    quad(subject, predicate, object, graph) {\n\t        return new Quad_1.Quad(subject, predicate, object, graph || this.defaultGraph());\n\t    }\n\t    /**\n\t     * Create a deep copy of the given term using this data factory.\n\t     * @param original An RDF term.\n\t     * @return A deep copy of the given term.\n\t     */\n\t    fromTerm(original) {\n\t        // TODO: remove nasty any casts when this TS bug has been fixed:\n\t        //  https://github.com/microsoft/TypeScript/issues/26933\n\t        switch (original.termType) {\n\t            case 'NamedNode':\n\t                return this.namedNode(original.value);\n\t            case 'BlankNode':\n\t                return this.blankNode(original.value);\n\t            case 'Literal':\n\t                if (original.language) {\n\t                    return this.literal(original.value, original.language);\n\t                }\n\t                if (!original.datatype.equals(Literal_1.Literal.XSD_STRING)) {\n\t                    return this.literal(original.value, this.fromTerm(original.datatype));\n\t                }\n\t                return this.literal(original.value);\n\t            case 'Variable':\n\t                return this.variable(original.value);\n\t            case 'DefaultGraph':\n\t                return this.defaultGraph();\n\t            case 'Quad':\n\t                return this.quad(this.fromTerm(original.subject), this.fromTerm(original.predicate), this.fromTerm(original.object), this.fromTerm(original.graph));\n\t        }\n\t    }\n\t    /**\n\t     * Create a deep copy of the given quad using this data factory.\n\t     * @param original An RDF quad.\n\t     * @return A deep copy of the given quad.\n\t     */\n\t    fromQuad(original) {\n\t        return this.fromTerm(original);\n\t    }\n\t    /**\n\t     * Reset the internal blank node counter.\n\t     */\n\t    resetBlankNodeCounter() {\n\t        this.blankNodeCounter = 0;\n\t    }\n\t}\n\tDataFactory$1.DataFactory = DataFactory;\n\n\t(function (exports) {\n\tvar __createBinding = (commonjsGlobal && commonjsGlobal.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n\t    if (k2 === undefined) k2 = k;\n\t    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n\t}) : (function(o, m, k, k2) {\n\t    if (k2 === undefined) k2 = k;\n\t    o[k2] = m[k];\n\t}));\n\tvar __exportStar = (commonjsGlobal && commonjsGlobal.__exportStar) || function(m, exports) {\n\t    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n\t};\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t__exportStar(BlankNode$1, exports);\n\t__exportStar(DataFactory$1, exports);\n\t__exportStar(DefaultGraph$1, exports);\n\t__exportStar(Literal$1, exports);\n\t__exportStar(NamedNode$1, exports);\n\t__exportStar(Quad$1, exports);\n\t__exportStar(Variable$1, exports);\n\n\t}(rdfDataFactory));\n\n\tvar geometryType;\n\n\t(function (geometryType) {\n\t  geometryType[\"POINT\"] = \"point\";\n\t  geometryType[\"POINTZ\"] = \"pointz\";\n\t  geometryType[\"POLYGON\"] = \"polygon\";\n\t  geometryType[\"POLYGONZ\"] = \"polygonz\";\n\t  geometryType[\"UNKNOWN\"] = \"unknown\";\n\t})(geometryType || (geometryType = {}));\n\n\tvar typeMap = {\n\t  \"point\": geometryType.POINT,\n\t  \"pointz\": geometryType.POINTZ,\n\t  \"polygon\": geometryType.POLYGON,\n\t  \"polygonz\": geometryType.POLYGONZ\n\t};\n\tfunction parseWKT(wktString) {\n\t  var type = getType(wktString);\n\n\t  if (type == geometryType.POINT || type == geometryType.POINTZ) {\n\t    var coordinates = parsePoint(wktString);\n\t    return {\n\t      value: coordinates,\n\t      type: type\n\t    };\n\t  }\n\n\t  if (type == geometryType.POLYGON) {\n\t    var _coordinates = parsePolygon(wktString);\n\n\t    return {\n\t      value: _coordinates,\n\t      type: type\n\t    };\n\t  }\n\t}\n\n\tfunction getType(wktString) {\n\t  wktString = wktString.toLocaleLowerCase();\n\t  var typeStr = wktString.split(\"(\")[0]; // get everything before the paranthesis\n\n\t  typeStr = typeStr.replace(/\\s+/, \"\"); // remove all white spaces\n\n\t  if (Object.keys(typeMap).indexOf(typeStr) != -1) {\n\t    return typeMap[typeStr];\n\t  }\n\n\t  return geometryType.UNKNOWN;\n\t}\n\n\tfunction parsePolygon(wktString) {\n\t  var polygon = []; // How many parantheses?\n\n\t  var count = wktString.split(\"(\").length; // Non-donut polygon\n\n\t  if (count == 2) {\n\t    var points = wktString.split(\"(\")[1].split(\")\")[0].trim(); // Ex [\"0 0 0\"]\n\n\t    points.split(\",\").map(function (point) {\n\t      point = point.trim();\n\t      polygon.push(parseStrCoordinate(point));\n\t    });\n\t  } // Donut polygon\n\t  else {\n\t    console.log(wktString);\n\t    console.log(\"Non-donut not yet supported!!\");\n\t  }\n\n\t  return polygon;\n\t}\n\n\tfunction parsePoint(wktString) {\n\t  var point = wktString.split(\"(\")[1].split(\")\")[0].trim(); // Ex [\"0 0 0\"]\n\n\t  return parseStrCoordinate(point);\n\t}\n\n\tfunction parseStrCoordinate(strCoordinate) {\n\t  return strCoordinate.split(\" \").map(function (p) {\n\t    return parseFloat(p);\n\t  });\n\t}\n\n\tvar pointInPolygon$1 = {exports: {}};\n\n\tvar flat = function pointInPolygonFlat (point, vs, start, end) {\n\t    var x = point[0], y = point[1];\n\t    var inside = false;\n\t    if (start === undefined) start = 0;\n\t    if (end === undefined) end = vs.length;\n\t    var len = (end-start)/2;\n\t    for (var i = 0, j = len - 1; i < len; j = i++) {\n\t        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n\t        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n\t        var intersect = ((yi > y) !== (yj > y))\n\t            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\t        if (intersect) inside = !inside;\n\t    }\n\t    return inside;\n\t};\n\n\t// ray-casting algorithm based on\n\t// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\n\tvar nested = function pointInPolygonNested (point, vs, start, end) {\n\t    var x = point[0], y = point[1];\n\t    var inside = false;\n\t    if (start === undefined) start = 0;\n\t    if (end === undefined) end = vs.length;\n\t    var len = end - start;\n\t    for (var i = 0, j = len - 1; i < len; j = i++) {\n\t        var xi = vs[i+start][0], yi = vs[i+start][1];\n\t        var xj = vs[j+start][0], yj = vs[j+start][1];\n\t        var intersect = ((yi > y) !== (yj > y))\n\t            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n\t        if (intersect) inside = !inside;\n\t    }\n\t    return inside;\n\t};\n\n\tvar pointInPolygonFlat = flat;\n\tvar pointInPolygonNested = nested;\n\n\tpointInPolygon$1.exports = function pointInPolygon (point, vs, start, end) {\n\t    if (vs.length > 0 && Array.isArray(vs[0])) {\n\t        return pointInPolygonNested(point, vs, start, end);\n\t    } else {\n\t        return pointInPolygonFlat(point, vs, start, end);\n\t    }\n\t};\n\tpointInPolygon$1.exports.nested = pointInPolygonNested;\n\tpointInPolygon$1.exports.flat = pointInPolygonFlat;\n\n\tvar pointInPolygon = pointInPolygon$1.exports;\n\n\tvar DF = new rdfDataFactory.DataFactory();\n\tvar geoSPARQLFunctions = {\n\t  // geosf:distance(p1, p2, decimals, multiplicationFactor)\n\t  'http://www.opengis.net/def/function/geosparql/distance': function httpWwwOpengisNetDefFunctionGeosparqlDistance(args) {\n\t    // Set defaults\n\t    var decimals = args[2] != undefined ? parseFloat(args[2].value) : 8;\n\t    var mf = args[3] != undefined ? parseFloat(args[3].value) : 1;\n\n\t    if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n\t      var p1 = parseWKT(args[0].value);\n\t      var p2 = parseWKT(args[1].value);\n\n\t      if (p1 && p2 && p1.value && p2.value) {\n\t        var a = p1.value[0] - p2.value[0];\n\t        var b = p1.value[1] - p2.value[1];\n\t        var d; // XY\n\n\t        if (p1.type == geometryType.POINT && p2.type == geometryType.POINT) {\n\t          d = Math.sqrt(a * a + b * b);\n\t        } // XYZ\n\n\n\t        if (p1.type == geometryType.POINTZ && p2.type == geometryType.POINTZ) {\n\t          var c = p1.value[2] - p2.value[2]; // Get z- coordinates\n\n\t          d = Math.sqrt(a * a + b * b + c * c);\n\t        } // Apply multiplication factor and round\n\n\n\t        d = d * mf;\n\t        d = round(d, decimals);\n\t        return DF.literal(d.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#decimal'));\n\t      }\n\t    }\n\n\t    return DF.literal(\"ERROR\");\n\t  },\n\t  // geosf:inside(point, polygon)\n\t  'http://www.opengis.net/def/function/geosparql/inside': function httpWwwOpengisNetDefFunctionGeosparqlInside(args) {\n\t    args[2] != undefined ? parseFloat(args[2].value) : 8;\n\n\t    if (args[0].termType === 'Literal' && args[1].termType === 'Literal') {\n\t      var point = parseWKT(args[0].value);\n\t      var polygon = parseWKT(args[1].value);\n\n\t      if (point && polygon && point.value && polygon.value.length) {\n\t        if (polygon.type == geometryType.POLYGON) {\n\t          var pg = polygon.value;\n\t          var p = point.value;\n\n\t          if (point.type == geometryType.POINTZ) {\n\t            // Pop last item to make XY instead of XYZ\n\t            p.pop();\n\t          }\n\n\t          var inside = pointInPolygon(p, pg);\n\t          return DF.literal(inside.toString(), DF.namedNode('http://www.w3.org/2001/XMLSchema#boolean'));\n\t        }\n\t      }\n\t    }\n\n\t    return DF.literal(\"ERROR\");\n\t  }\n\t};\n\n\tfunction round(num) {\n\t  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t  return Math.round(num * Math.pow(10, decimals) + Number.EPSILON) / Math.pow(10, decimals);\n\t}\n\n\texports.geoSPARQLFunctions = geoSPARQLFunctions;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=bundle.umd.js.map\n","import { JSONLD, N3Format, SerializationFormat } from \"../helpers/BaseDefinitions\";\nimport * as WebIFC from \"web-ifc/web-ifc-api.js\";\nimport { prefixes } from '../helpers/prefixes';\nimport { extensionFunctions } from '../helpers/communica-extension-functions';\nimport { toRDF, fromRDF, compact } from \"jsonld\";\nimport * as N3 from 'n3';\nimport { newEngine } from '@comunica/actor-init-sparql-rdfjs';\nimport { geoSPARQLFunctions } from \"comunica-geosparql/lib/bundles/bundle.umd\";\nimport { IfcUnits } from '../helpers/unit-tools';\n\nexport interface ModelUnits{\n    LENGTHUNIT: number;\n    AREAUNIT: number;\n    VOLUMEUNIT: number;\n}\nexport class Parser{\n\n    public jsonLDObject: JSONLD = {\"@context\": prefixes, \"@graph\": []};\n\n    public modelID: number;\n    public ifcAPI: WebIFC.IfcAPI;\n    public verbose: boolean;\n    public format: SerializationFormat;\n    public communicaEngine = newEngine();\n    public store: N3.Store = new N3.Store();\n    public extensionFunctions = {...extensionFunctions, ...geoSPARQLFunctions};\n\n    public modelUnits: ModelUnits; // Model units\n\n    private globalIdMap: any = {}; // Object that maintains idMap between expressID and GlobalId\n\n    constructor(ifcAPI: WebIFC.IfcAPI, modelID: number, format: SerializationFormat = SerializationFormat.JSONLD, verbose: boolean = false){\n        this.modelID = modelID;\n        this.ifcAPI = ifcAPI;\n        this.verbose = verbose;\n        this.format = format;\n    }\n\n    public async getGlobalId(expressID: number){\n        if(!this.idMapIncludes(expressID)){\n            const { GlobalId} = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n            this.storeGlobalId(expressID, GlobalId.value);\n            return GlobalId;\n        }else{\n            return this.globalIdMap[expressID];\n        }\n    }\n\n    public storeGlobalId(expressID: number, globalId: string){\n        this.globalIdMap[expressID] = globalId;\n    }\n\n    public async getTriples(): Promise<JSONLD|string>{\n        if(this.format == SerializationFormat.JSONLD) return this.getJSONLD();\n        if(this.format == SerializationFormat.NQuads) return this.getNQuads();\n        return \"\";\n    }\n\n    public async getTripleCount(): Promise<number>{\n        if(this.store.size > 0){\n            return this.getStoreSize();\n        }\n        const rdf: any = await toRDF(this.jsonLDObject);\n        const tripleCount = rdf.length;\n        return tripleCount;\n    }\n\n    public async loadInStore(): Promise<void>{\n        const quads: any = await toRDF(this.jsonLDObject);\n        await this.store.addQuads(quads);\n    }\n\n    public async executeUpdateQuery(query: string): Promise<void>{\n        // Initiate the update\n        const engine = newEngine();\n        const result: any = await engine.query(query, {\n            sources: [this.store],\n            extensionFunctions: this.extensionFunctions\n        });\n        \n        // Wait for the update to complete\n        await result.updateResult;\n    }\n\n    public async executeSelectQuery(query: string): Promise<void>{\n        // Initiate the update\n        const engine = newEngine();\n        const result: any = await engine.query(query, {\n            sources: [this.store],\n            extensionFunctions: this.extensionFunctions\n        });\n        \n        const { data } = await engine.resultToString(result,\n            'application/sparql-results+json');\n        data.pipe(process.stdout); // Print to standard output\n    }\n\n    public getStoreSize(): number{\n        return this.store.size;\n    }\n\n    public async getUnits(): Promise<ModelUnits>{\n\n        if(this.modelUnits == undefined){\n            const ifcUnits = new IfcUnits(this.ifcAPI);\n            this.modelUnits = await ifcUnits.getUnitsOfModel(this.modelID);\n        }\n\n        return this.modelUnits;\n    }\n\n    // Should take an IFC nominal value and convert it to a normalized one\n    public normalizeMeasurement(){\n\n    }\n\n    private idMapIncludes(expressID: number){\n        if(this.globalIdMap == undefined) return false;\n        return Object.keys(this.globalIdMap).indexOf(expressID.toString()) != -1;\n    }\n\n    private async getJSONLD(): Promise<JSONLD>{\n        // If store is up, serialize the content of the store\n        if(this.store.size > 0){\n            const nquads = this.store.getQuads(null, null, null, null);\n            const doc = await fromRDF(nquads);\n            const compacted = await compact(doc, this.jsonLDObject[\"@context\"]);\n            return compacted as JSONLD;\n        }\n        // If not, simply return the JSON-LD object\n        return this.jsonLDObject;\n    }\n\n    private async getNQuads(): Promise<any>{\n        // If store is up, serialize the content of the store\n        if(this.store.size > 0){\n            return await this.serializeStoreContent(N3Format.NQuads);\n        }\n        // If not, simply convert the JSON-LD object\n        return await toRDF(this.jsonLDObject, {format: 'application/n-quads'});\n    }\n\n    private async serializeStoreContent(format: N3Format = N3Format.Turtle): Promise<string>{\n\n        return new Promise((resolve, reject) => {\n\n            const writer = new N3.Writer({ prefixes: prefixes, format });\n            const quads = this.store.getQuads(null, null, null, null);\n\n            for (let i = 0; i < quads.length; i++) {\n                writer.addQuad(quads[i]);\n            }\n\n            writer.end((error, result) => {\n                if(error) reject(error);\n                resolve(result);\n            });\n\n        })\n        \n    }\n\n}","import { buildRelOneToMany, buildRelOneToOne, Input } from \"../helpers/path-search\";\n\nimport {\n    IFCRELSPACEBOUNDARY,\n    IFCRELCONTAINEDINSPATIALSTRUCTURE,\n    IFCRELVOIDSELEMENT,\n    IFCRELAGGREGATES,\n    IFCBUILDING,\n    IFCSITE,\n    IFCBUILDINGSTOREY,\n    IFCSPACE,\n    IFCELEMENT\n} from 'web-ifc';\nimport { buildClassInstances } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\n\nexport class BOTParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started BOT parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished BOT parsing\");\n\n        // Class assignment\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/12: Finding sites\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSites()));\n        this.verbose && console.timeEnd(\"1/12: Finding sites\");\n        this.verbose && console.time(\"2/12: Finding buildings\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildBuildings()));\n        this.verbose && console.timeEnd(\"2/12: Finding buildings\");\n        this.verbose && console.time(\"3/12: Finding storeys\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreys()));\n        this.verbose && console.timeEnd(\"3/12: Finding storeys\");\n        this.verbose && console.time(\"4/12: Finding spaces\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaces()));\n        this.verbose && console.timeEnd(\"4/12: Finding spaces\");\n        this.verbose && console.time(\"5/12: Finding elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildElements()));\n        this.verbose && console.timeEnd(\"5/12: Finding elements\");\n        this.verbose && console.log(\"\");\n\n        // Space-Element relationships\n        this.verbose && console.log(\"## STEP 2: SPACE-ELEMENT RELATIONSHIPS ##\");\n        this.verbose && console.time(\"6/12: Finding spaces' adjacent elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaceAdjacentElementRelationships()));\n        this.verbose && console.timeEnd(\"6/12: Finding spaces' adjacent elements\");\n        this.verbose && console.time(\"7/12: Finding spaces' contained elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSpaceContainedElementRelationships()));\n        this.verbose && console.timeEnd(\"7/12: Finding spaces' contained elements\");\n        this.verbose && console.time(\"8/12: Finding storeys' elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreyElementRelationships()));\n        this.verbose && console.timeEnd(\"8/12: Finding storeys' elements\");\n        this.verbose && console.log(\"\");\n\n        // Element-element relationships\n        this.verbose && console.log(\"## STEP 3: ELEMENT-ELEMENT RELATIONSHIPS ##\");\n        this.verbose && console.time(\"9/12: Finding elements' hosted elements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildHostedElementRelationships()));\n        this.verbose && console.timeEnd(\"9/12: Finding elements' hosted elements\");\n        this.verbose && console.log(\"\");\n\n        // Zone containment\n        this.verbose && console.log(\"## STEP 4: ZONE-ZONE RELATIONSHIPS ##\");\n        this.verbose && console.time(\"10/12: Finding storeys' spaces\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildStoreySpaceRelationships()));\n        this.verbose && console.timeEnd(\"10/12: Finding storeys' spaces\");\n        this.verbose && console.time(\"11/12: Finding buildings' storeys\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildBuildingStoreyRelationships()));\n        this.verbose && console.timeEnd(\"11/12: Finding buildings' storeys\");\n        this.verbose && console.time(\"12/12: Finding sties' buildings\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildSiteBuildingRelationships()));\n        this.verbose && console.timeEnd(\"12/12: Finding sties' buildings\");\n        this.verbose && console.log(\"\");\n\n        console.timeEnd(\"Finished BOT parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    /**\n     * CLASS ASSIGNMENT\n     */\n     private async buildSites(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCSITE, [\"bot:Site\"]);\n    }\n    private async buildBuildings(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCBUILDING, [\"bot:Building\"]);\n    }\n    private async buildStoreys(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCBUILDINGSTOREY, [\"bot:Storey\"]);\n    }\n    private async buildSpaces(): Promise<any[]>{\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCSPACE, [\"bot:Space\"]);\n    }\n    private async buildElements(): Promise<any[]>{\n        const includeSubTypes: boolean = true;\n        return await buildClassInstances(this.ifcAPI, this.modelID, IFCELEMENT, [\"bot:Element\"], includeSubTypes);\n    }\n\n    /**\n     * ZONE-ELEMENT-RELATIONSHIPS\n     */\n    private async buildSpaceAdjacentElementRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELSPACEBOUNDARY,\n            ifcSubjectRel: \"RelatingSpace\",\n            ifcTargetRel: \"RelatedBuildingElement\",\n            rdfRelationship: \"bot:adjacentElement\",\n            includeInterface: true\n        }\n\n        return await buildRelOneToOne(input);\n\n    }\n\n    private async buildSpaceContainedElementRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n            ifcSubjectRel: \"RelatingStructure\",\n            ifcTargetRel: \"RelatedElements\",\n            rdfRelationship: \"bot:containsElement\",\n            ifcSubjectClassIn: [IFCSPACE]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n    private async buildStoreyElementRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELCONTAINEDINSPATIALSTRUCTURE,\n            ifcSubjectRel: \"RelatingStructure\",\n            ifcTargetRel: \"RelatedElements\",\n            rdfRelationship: \"bot:hasElement\",\n            ifcSubjectClassIn: [IFCBUILDINGSTOREY]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n    /**\n     * ELEMENT-ELEMENT-RELATIONSHIPS\n     */\n\n    // NB! PROBABLY REFERS TO THE VOID AND NOT THE WINDOW!\n     private async buildHostedElementRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELVOIDSELEMENT,\n            ifcSubjectRel: \"RelatingBuildingElement\",\n            ifcTargetRel: \"RelatedOpeningElement\",\n            rdfRelationship: \"bot:hasSubElement\"\n        }\n\n        return await buildRelOneToOne(input);\n\n    }\n\n    /**\n     * ZONE-CONTAINMENT\n     */\n    private async buildStoreySpaceRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELAGGREGATES,\n            ifcSubjectRel: \"RelatingObject\",\n            ifcTargetRel: \"RelatedObjects\",\n            rdfRelationship: \"bot:hasSpace\",\n            ifcSubjectClassIn: [IFCBUILDINGSTOREY],\n            ifcTargetClassIn: [IFCSPACE]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n    private async buildBuildingStoreyRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELAGGREGATES,\n            ifcSubjectRel: \"RelatingObject\",\n            ifcTargetRel: \"RelatedObjects\",\n            rdfRelationship: \"bot:hasStorey\",\n            ifcSubjectClassIn: [IFCBUILDING],\n            ifcTargetClassIn: [IFCBUILDINGSTOREY]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n    private async buildSiteBuildingRelationships(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELAGGREGATES,\n            ifcSubjectRel: \"RelatingObject\",\n            ifcTargetRel: \"RelatedObjects\",\n            rdfRelationship: \"bot:hasBuilding\",\n            ifcSubjectClassIn: [IFCSITE],\n            ifcTargetClassIn: [IFCBUILDING]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n}","export const IfcElements: {[key: number]: string} = {\n\t\"5716631\": \"IfcTankType\",\n\t\"15328376\": \"IfcCompositeCurveOnSurface\",\n\t\"25142252\": \"IfcController\",\n\t\"32344328\": \"IfcBoiler\",\n\t\"32440307\": \"IfcDirection\",\n\t\"39481116\": \"IfcBuildingElementPartType\",\n\t\"45288368\": \"IfcConnectionPointEccentricity\",\n\t\"59481748\": \"IfcCartesianTransformationOperator\",\n\t\"76236018\": \"IfcLamp\",\n\t\"90941305\": \"IfcPump\",\n\t\"101040310\": \"IfcPersonAndOrganization\",\n\t\"103090709\": \"IfcProject\",\n\t\"110355661\": \"IfcPropertyTableValue\",\n\t\"125510826\": \"IfcLightSourceAmbient\",\n\t\"130549933\": \"IfcApproval\",\n\t\"132023988\": \"IfcEngineType\",\n\t\"144952367\": \"IfcOuterBoundaryCurve\",\n\t\"148013059\": \"IfcSubContractResource\",\n\t\"148025276\": \"IfcPropertyDependencyRelationship\",\n\t\"160246688\": \"IfcRelAggregates\",\n\t\"164193824\": \"IfcMaterialProfileSet\",\n\t\"167062518\": \"IfcBSplineSurfaceWithKnots\",\n\t\"177149247\": \"IfcAirTerminalBox\",\n\t\"178086475\": \"IfcGridPlacement\",\n\t\"178912537\": \"IfcIndexedPolygonalFace\",\n\t\"180925521\": \"IfcUnitAssignment\",\n\t\"182646315\": \"IfcFlowInstrument\",\n\t\"205026976\": \"IfcRelAssignsToResource\",\n\t\"211053100\": \"IfcEventTime\",\n\t\"214636428\": \"IfcStructuralCurveMember\",\n\t\"219451334\": \"IfcObjectDefinition\",\n\t\"220341763\": \"IfcPlane\",\n\t\"230924584\": \"IfcSweptSurface\",\n\t\"231477066\": \"IfcBoilerType\",\n\t\"248100487\": \"IfcMaterialLayer\",\n\t\"263784265\": \"IfcFurnishingElement\",\n\t\"264262732\": \"IfcElectricGenerator\",\n\t\"277319702\": \"IfcAudioVisualAppliance\",\n\t\"279856033\": \"IfcRelFlowControlElements\",\n\t\"280115917\": \"IfcTextureCoordinate\",\n\t\"297599258\": \"IfcExtendedProperties\",\n\t\"300633059\": \"IfcColumnType\",\n\t\"307848117\": \"IfcRelDefinesByTemplate\",\n\t\"310824031\": \"IfcPipeFitting\",\n\t\"315944413\": \"IfcFillAreaStyleTiles\",\n\t\"331165859\": \"IfcStair\",\n\t\"335055490\": \"IfcCooledBeamType\",\n\t\"336235671\": \"IfcWindowLiningProperties\",\n\t\"338393293\": \"IfcStairType\",\n\t\"339256511\": \"IfcElementType\",\n\t\"342316401\": \"IfcDuctFitting\",\n\t\"346874300\": \"IfcFanType\",\n\t\"366585022\": \"IfcRelServicesBuildings\",\n\t\"370225590\": \"IfcConnectedFaceSet\",\n\t\"374418227\": \"IfcFillAreaStyleHatching\",\n\t\"377706215\": \"IfcMechanicalFastener\",\n\t\"385403989\": \"IfcStructuralLoadCase\",\n\t\"395041908\": \"IfcCableCarrierFittingType\",\n\t\"395920057\": \"IfcDoor\",\n\t\"400855858\": \"IfcCommunicationsApplianceType\",\n\t\"402227799\": \"IfcElectricMotor\",\n\t\"411424972\": \"IfcAppliedValue\",\n\t\"413509423\": \"IfcSystemFurnitureElement\",\n\t\"427810014\": \"IfcUShapeProfileDef\",\n\t\"427948657\": \"IfcRelInterferesElements\",\n\t\"428585644\": \"IfcLaborResourceType\",\n\t\"445594917\": \"IfcDraughtingPreDefinedColour\",\n\t\"448429030\": \"IfcSIUnit\",\n\t\"451544542\": \"IfcSphere\",\n\t\"463610769\": \"IfcSpatialZone\",\n\t\"476780140\": \"IfcEdgeCurve\",\n\t\"477187591\": \"IfcExtrudedAreaSolid\",\n\t\"478536968\": \"IfcRelationship\",\n\t\"484807127\": \"IfcEvaporator\",\n\t\"486154966\": \"IfcWindowStandardCase\",\n\t\"488727124\": \"IfcConstructionProductResource\",\n\t\"492091185\": \"IfcPropertySetTemplate\",\n\t\"504942748\": \"IfcRelConnectsWithEccentricity\",\n\t\"512836454\": \"IfcWindowPanelProperties\",\n\t\"526551008\": \"IfcDoorStyle\",\n\t\"530289379\": \"IfcStructuralMember\",\n\t\"531007025\": \"IfcTableRow\",\n\t\"539742890\": \"IfcCurrencyRelationship\",\n\t\"552965576\": \"IfcMaterialProfileWithOffsets\",\n\t\"562808652\": \"IfcDistributionCircuit\",\n\t\"569719735\": \"IfcProcedureType\",\n\t\"572779678\": \"IfcLShapeProfileDef\",\n\t\"574549367\": \"IfcCartesianPointList\",\n\t\"578613899\": \"IfcControllerType\",\n\t\"581633288\": \"IfcTimeSeriesValue\",\n\t\"597895409\": \"IfcPixelTexture\",\n\t\"602808272\": \"IfcCostValue\",\n\t\"603570806\": \"IfcPlanarBox\",\n\t\"603775116\": \"IfcStructuralSurfaceReaction\",\n\t\"609421318\": \"IfcStructuralLoadOrResult\",\n\t\"616511568\": \"IfcBlobTexture\",\n\t\"618182010\": \"IfcAddress\",\n\t\"626085974\": \"IfcSurfaceTexture\",\n\t\"629592764\": \"IfcLightFixture\",\n\t\"630975310\": \"IfcUnitaryControlElement\",\n\t\"635142910\": \"IfcCableCarrierFitting\",\n\t\"639361253\": \"IfcCoil\",\n\t\"639542469\": \"IfcApplication\",\n\t\"647756555\": \"IfcFastener\",\n\t\"647927063\": \"IfcClassificationReference\",\n\t\"653396225\": \"IfcProjectLibrary\",\n\t\"655969474\": \"IfcProtectiveDeviceTrippingUnitType\",\n\t\"663422040\": \"IfcElectricApplianceType\",\n\t\"669184980\": \"IfcAnnotationFillArea\",\n\t\"673634403\": \"IfcProductDefinitionShape\",\n\t\"677532197\": \"IfcPresentationItem\",\n\t\"682877961\": \"IfcStructuralAction\",\n\t\"683857671\": \"IfcRationalBSplineSurfaceWithKnots\",\n\t\"693640335\": \"IfcRelDefines\",\n\t\"699246055\": \"IfcSurfaceCurve\",\n\t\"707683696\": \"IfcFlowStorageDevice\",\n\t\"710998568\": \"IfcSpatialElementType\",\n\t\"712377611\": \"IfcElectricTimeControlType\",\n\t\"723233188\": \"IfcSolidModel\",\n\t\"728799441\": \"IfcValveType\",\n\t\"734778138\": \"IfcStructuralPointConnection\",\n\t\"738039164\": \"IfcProtectiveDevice\",\n\t\"738692330\": \"IfcFillAreaStyle\",\n\t\"747523909\": \"IfcClassification\",\n\t\"750771296\": \"IfcRelProjectsElement\",\n\t\"753842376\": \"IfcBeam\",\n\t\"759155922\": \"IfcPreDefinedColour\",\n\t\"760658860\": \"IfcMaterialDefinition\",\n\t\"770865208\": \"IfcDocumentInformationRelationship\",\n\t\"775493141\": \"IfcConnectionVolumeGeometry\",\n\t\"776857604\": \"IfcColourRgb\",\n\t\"781010003\": \"IfcRelDefinesByType\",\n\t\"803316827\": \"IfcFaceOuterBound\",\n\t\"804291784\": \"IfcPipeFittingType\",\n\t\"807026263\": \"IfcFacetedBrep\",\n\t\"812098782\": \"IfcHalfSpaceSolid\",\n\t\"812556717\": \"IfcTank\",\n\t\"816062949\": \"IfcReparametrisedCompositeCurveSegment\",\n\t\"819412036\": \"IfcFilter\",\n\t\"819618141\": \"IfcBeamType\",\n\t\"825690147\": \"IfcQuantityWeight\",\n\t\"826625072\": \"IfcRelConnects\",\n\t\"843113511\": \"IfcColumn\",\n\t\"846575682\": \"IfcSurfaceStyleShading\",\n\t\"852622518\": \"IfcGridAxis\",\n\t\"853536259\": \"IfcMaterialRelationship\",\n\t\"862014818\": \"IfcElectricDistributionBoard\",\n\t\"867548509\": \"IfcShapeAspect\",\n\t\"869906466\": \"IfcDuctFittingType\",\n\t\"871118103\": \"IfcPropertyBoundedValue\",\n\t\"886880790\": \"IfcRelCoversBldgElements\",\n\t\"891718957\": \"IfcVirtualGridIntersection\",\n\t\"900683007\": \"IfcFooting\",\n\t\"901063453\": \"IfcTessellatedItem\",\n\t\"905975707\": \"IfcColumnStandardCase\",\n\t\"912023232\": \"IfcTelecomAddress\",\n\t\"919958153\": \"IfcRelAssociatesClassification\",\n\t\"926996030\": \"IfcVoidingFeature\",\n\t\"931644368\": \"IfcQuantityLength\",\n\t\"941946838\": \"IfcPropertyReferenceValue\",\n\t\"964333572\": \"IfcReinforcingElementType\",\n\t\"977012517\": \"IfcMotorConnectionType\",\n\t\"979691226\": \"IfcReinforcingBar\",\n\t\"982818633\": \"IfcRelAssociatesDocument\",\n\t\"985171141\": \"IfcTable\",\n\t\"986844984\": \"IfcPropertyAbstraction\",\n\t\"987401354\": \"IfcFlowSegment\",\n\t\"987898635\": \"IfcGeometricCurveSet\",\n\t\"1003880860\": \"IfcElectricTimeControl\",\n\t\"1004757350\": \"IfcStructuralCurveAction\",\n\t\"1008929658\": \"IfcLoop\",\n\t\"1027710054\": \"IfcRelAssignsToGroupByFactor\",\n\t\"1028945134\": \"IfcWorkControl\",\n\t\"1029017970\": \"IfcOrientedEdge\",\n\t\"1033361043\": \"IfcZone\",\n\t\"1039846685\": \"IfcStairFlightType\",\n\t\"1040185647\": \"IfcExternallyDefinedSurfaceStyle\",\n\t\"1042787934\": \"IfcResourceTime\",\n\t\"1045800335\": \"IfcDerivedUnitElement\",\n\t\"1051575348\": \"IfcLampType\",\n\t\"1051757585\": \"IfcCableFitting\",\n\t\"1052013943\": \"IfcDistributionChamberElement\",\n\t\"1054537805\": \"IfcSchedulingTime\",\n\t\"1060000209\": \"IfcConstructionMaterialResource\",\n\t\"1062813311\": \"IfcDistributionControlElement\",\n\t\"1072016465\": \"IfcSolarDeviceType\",\n\t\"1073191201\": \"IfcMember\",\n\t\"1076942058\": \"IfcRepresentation\",\n\t\"1095909175\": \"IfcBuildingElementProxy\",\n\t\"1096409881\": \"IfcSweptDiskSolidPolygonal\",\n\t\"1105321065\": \"IfcCurveStyleFont\",\n\t\"1114901282\": \"IfcMedicalDeviceType\",\n\t\"1123145078\": \"IfcCartesianPoint\",\n\t\"1133259667\": \"IfcWasteTerminalType\",\n\t\"1136057603\": \"IfcBoundaryCurve\",\n\t\"1154170062\": \"IfcDocumentInformation\",\n\t\"1156407060\": \"IfcPlateStandardCase\",\n\t\"1158309216\": \"IfcPileType\",\n\t\"1161773419\": \"IfcLightFixtureType\",\n\t\"1162798199\": \"IfcSwitchingDevice\",\n\t\"1177604601\": \"IfcBuildingSystem\",\n\t\"1179482911\": \"IfcStructuralConnection\",\n\t\"1190533807\": \"IfcStructuralLoadSingleForceWarping\",\n\t\"1199560280\": \"IfcTimePeriod\",\n\t\"1204542856\": \"IfcRelConnectsElements\",\n\t\"1207048766\": \"IfcOwnerHistory\",\n\t\"1209101575\": \"IfcExternalSpatialElement\",\n\t\"1210645708\": \"IfcTextureVertex\",\n\t\"1213902940\": \"IfcCylindricalSurface\",\n\t\"1217240411\": \"IfcElectricMotorType\",\n\t\"1232101972\": \"IfcRationalBSplineCurveWithKnots\",\n\t\"1235345126\": \"IfcStructuralPointReaction\",\n\t\"1236880293\": \"IfcWorkTime\",\n\t\"1245217292\": \"IfcRelReferencedInSpatialStructure\",\n\t\"1251058090\": \"IfcHeatExchangerType\",\n\t\"1252848954\": \"IfcStructuralLoadGroup\",\n\t\"1260505505\": \"IfcBoundedCurve\",\n\t\"1260650574\": \"IfcSweptDiskSolid\",\n\t\"1268542332\": \"IfcFurnitureType\",\n\t\"1281925730\": \"IfcLine\",\n\t\"1285652485\": \"IfcCableSegmentType\",\n\t\"1287392070\": \"IfcFeatureElementSubtraction\",\n\t\"1299126871\": \"IfcWindowStyle\",\n\t\"1300840506\": \"IfcSurfaceStyle\",\n\t\"1303795690\": \"IfcMaterialLayerSetUsage\",\n\t\"1304840413\": \"IfcPresentationLayerWithStyle\",\n\t\"1305183839\": \"IfcSpaceHeaterType\",\n\t\"1307041759\": \"IfcRelAssignsToGroup\",\n\t\"1310608509\": \"IfcArbitraryOpenProfileDef\",\n\t\"1329646415\": \"IfcShadingDevice\",\n\t\"1334484129\": \"IfcBlock\",\n\t\"1335981549\": \"IfcDiscreteAccessory\",\n\t\"1339347760\": \"IfcFlowStorageDeviceType\",\n\t\"1351298697\": \"IfcSurfaceStyleWithTextures\",\n\t\"1360408905\": \"IfcDuctSilencer\",\n\t\"1377556343\": \"IfcTopologicalRepresentationItem\",\n\t\"1383045692\": \"IfcCircleProfileDef\",\n\t\"1387855156\": \"IfcBoundaryNodeCondition\",\n\t\"1401173127\": \"IfcRelVoidsElement\",\n\t\"1402838566\": \"IfcLightSource\",\n\t\"1404847402\": \"IfcStackTerminal\",\n\t\"1411181986\": \"IfcOrganizationRelationship\",\n\t\"1411407467\": \"IfcAirTerminalBoxType\",\n\t\"1412071761\": \"IfcSpatialElement\",\n\t\"1416205885\": \"IfcCartesianTransformationOperator3DnonUniform\",\n\t\"1417489154\": \"IfcVector\",\n\t\"1419761937\": \"IfcCostSchedule\",\n\t\"1423911732\": \"IfcPointOnSurface\",\n\t\"1425443689\": \"IfcManifoldSolidBrep\",\n\t\"1426591983\": \"IfcFireSuppressionTerminal\",\n\t\"1437502449\": \"IfcMedicalDevice\",\n\t\"1437805879\": \"IfcExternalReferenceRelationship\",\n\t\"1437953363\": \"IfcIndexedTextureMap\",\n\t\"1447204868\": \"IfcTextStyle\",\n\t\"1451395588\": \"IfcPropertySet\",\n\t\"1457835157\": \"IfcCurtainWallType\",\n\t\"1462361463\": \"IfcRelDefinesByObject\",\n\t\"1466758467\": \"IfcCoordinateReferenceSystem\",\n\t\"1469900589\": \"IfcRampType\",\n\t\"1472233963\": \"IfcEdgeLoop\",\n\t\"1482703590\": \"IfcPropertyTemplateDefinition\",\n\t\"1482959167\": \"IfcFlowMovingDeviceType\",\n\t\"1484403080\": \"IfcIShapeProfileDef\",\n\t\"1485152156\": \"IfcCompositeProfileDef\",\n\t\"1507914824\": \"IfcMaterialUsageDefinition\",\n\t\"1509187699\": \"IfcSectionedSpine\",\n\t\"1509553395\": \"IfcFurniture\",\n\t\"1520743889\": \"IfcLightSourcePositional\",\n\t\"1521410863\": \"IfcRelSpaceBoundary2ndLevel\",\n\t\"1525564444\": \"IfcConstructionProductResourceType\",\n\t\"1529196076\": \"IfcSlab\",\n\t\"1532957894\": \"IfcAudioVisualApplianceType\",\n\t\"1534661035\": \"IfcElectricGeneratorType\",\n\t\"1549132990\": \"IfcTaskTime\",\n\t\"1560379544\": \"IfcBoundaryEdgeCondition\",\n\t\"1566485204\": \"IfcLightIntensityDistribution\",\n\t\"1580146022\": \"IfcReinforcementBarProperties\",\n\t\"1580310250\": \"IfcSystemFurnitureElementType\",\n\t\"1585845231\": \"IfcLagTime\",\n\t\"1595516126\": \"IfcStructuralLoadLinearForce\",\n\t\"1597423693\": \"IfcStructuralLoadSingleForce\",\n\t\"1599208980\": \"IfcDistributionChamberElementType\",\n\t\"1600972822\": \"IfcTubeBundleType\",\n\t\"1607154358\": \"IfcSurfaceStyleRefraction\",\n\t\"1608871552\": \"IfcResourceConstraintRelationship\",\n\t\"1620046519\": \"IfcTransportElement\",\n\t\"1621171031\": \"IfcStructuralPlanarAction\",\n\t\"1623761950\": \"IfcElementComponent\",\n\t\"1628702193\": \"IfcTypeObject\",\n\t\"1634111441\": \"IfcAirTerminal\",\n\t\"1635779807\": \"IfcAdvancedBrep\",\n\t\"1638771189\": \"IfcRelConnectsStructuralMember\",\n\t\"1640371178\": \"IfcTextStyleTextModel\",\n\t\"1658829314\": \"IfcEnergyConversionDevice\",\n\t\"1660063152\": \"IfcRepresentationMap\",\n\t\"1663979128\": \"IfcPlanarExtent\",\n\t\"1674181508\": \"IfcAnnotation\",\n\t\"1675464909\": \"IfcCartesianPointList2D\",\n\t\"1677625105\": \"IfcCivilElement\",\n\t\"1680319473\": \"IfcPropertyDefinition\",\n\t\"1682466193\": \"IfcPcurve\",\n\t\"1683148259\": \"IfcRelAssignsToActor\",\n\t\"1687234759\": \"IfcPile\",\n\t\"1692211062\": \"IfcTransformerType\",\n\t\"1704287377\": \"IfcEllipse\",\n\t\"1714330368\": \"IfcDoorPanelProperties\",\n\t\"1735638870\": \"IfcTopologyRepresentation\",\n\t\"1742049831\": \"IfcTextureCoordinateGenerator\",\n\t\"1758889154\": \"IfcElement\",\n\t\"1765591967\": \"IfcDerivedUnit\",\n\t\"1768891740\": \"IfcSanitaryTerminalType\",\n\t\"1775413392\": \"IfcPreDefinedTextFont\",\n\t\"1783015770\": \"IfcSensorType\",\n\t\"1785450214\": \"IfcCoordinateOperation\",\n\t\"1806887404\": \"IfcHumidifierType\",\n\t\"1807405624\": \"IfcStructuralLinearAction\",\n\t\"1809719519\": \"IfcFaceBound\",\n\t\"1810631287\": \"IfcFilterType\",\n\t\"1815067380\": \"IfcCrewResourceType\",\n\t\"1834744321\": \"IfcFlowSegmentType\",\n\t\"1838606355\": \"IfcMaterial\",\n\t\"1842657554\": \"IfcProtectiveDeviceType\",\n\t\"1847130766\": \"IfcMaterialClassificationRelationship\",\n\t\"1847252529\": \"IfcMaterialLayerWithOffsets\",\n\t\"1856042241\": \"IfcRevolvedAreaSolid\",\n\t\"1865459582\": \"IfcRelAssociates\",\n\t\"1871374353\": \"IfcAirToAirHeatRecoveryType\",\n\t\"1878645084\": \"IfcSurfaceStyleRendering\",\n\t\"1883228015\": \"IfcElementQuantity\",\n\t\"1893162501\": \"IfcFootingType\",\n\t\"1898987631\": \"IfcWallType\",\n\t\"1904799276\": \"IfcElectricAppliance\",\n\t\"1907098498\": \"IfcVertexPoint\",\n\t\"1909888760\": \"IfcBuildingElementProxyType\",\n\t\"1911125066\": \"IfcUnitaryEquipmentType\",\n\t\"1911478936\": \"IfcMemberStandardCase\",\n\t\"1916426348\": \"IfcCoveringType\",\n\t\"1918398963\": \"IfcNamedUnit\",\n\t\"1935646853\": \"IfcToroidalSurface\",\n\t\"1945004755\": \"IfcDistributionElement\",\n\t\"1950629157\": \"IfcBuildingElementType\",\n\t\"1959218052\": \"IfcConstraint\",\n\t\"1967976161\": \"IfcBSplineCurve\",\n\t\"1973038258\": \"IfcStructuralLoadSingleDisplacementDistortion\",\n\t\"1973544240\": \"IfcCovering\",\n\t\"1975003073\": \"IfcStructuralSurfaceConnection\",\n\t\"1981873012\": \"IfcConnectionCurveGeometry\",\n\t\"1983826977\": \"IfcTextStyleFontModel\",\n\t\"1999602285\": \"IfcSpaceHeater\",\n\t\"2004835150\": \"IfcPlacement\",\n\t\"2016517767\": \"IfcRoof\",\n\t\"2022407955\": \"IfcMaterialDefinitionRepresentation\",\n\t\"2022622350\": \"IfcPresentationLayerAssignment\",\n\t\"2028607225\": \"IfcSurfaceCurveSweptAreaSolid\",\n\t\"2030761528\": \"IfcDuctSilencerType\",\n\t\"2042790032\": \"IfcSectionProperties\",\n\t\"2043862942\": \"IfcTableColumn\",\n\t\"2044713172\": \"IfcQuantityArea\",\n\t\"2047409740\": \"IfcFaceBasedSurfaceModel\",\n\t\"2056796094\": \"IfcAirToAirHeatRecovery\",\n\t\"2058353004\": \"IfcFlowController\",\n\t\"2059837836\": \"IfcCartesianPointList3D\",\n\t\"2063403501\": \"IfcDistributionControlElementType\",\n\t\"2067069095\": \"IfcPoint\",\n\t\"2068733104\": \"IfcHumidifier\",\n\t\"2069777674\": \"IfcBoundaryNodeConditionWarping\",\n\t\"2077209135\": \"IfcPerson\",\n\t\"2082059205\": \"IfcStructuralPointAction\",\n\t\"2090586900\": \"IfcQuantitySet\",\n\t\"2093928680\": \"IfcQuantityCount\",\n\t\"2095639259\": \"IfcProductRepresentation\",\n\t\"2097647324\": \"IfcTransportElementType\",\n\t\"2107101300\": \"IfcEnergyConversionDeviceType\",\n\t\"2108223431\": \"IfcMechanicalFastenerType\",\n\t\"2127690289\": \"IfcRelConnectsStructuralActivity\",\n\t\"2133299955\": \"IfcIndexedTriangleTextureMap\",\n\t\"2143335405\": \"IfcFeatureElementAddition\",\n\t\"2147822146\": \"IfcCsgSolid\",\n\t\"2157484638\": \"IfcSeamCurve\",\n\t\"2162789131\": \"IfcStructuralLoad\",\n\t\"2176052936\": \"IfcJunctionBox\",\n\t\"2185764099\": \"IfcConstructionEquipmentResourceType\",\n\t\"2188021234\": \"IfcFlowMeter\",\n\t\"2188180465\": \"IfcBurnerType\",\n\t\"2197970202\": \"IfcChimneyType\",\n\t\"2199411900\": \"IfcMaterialList\",\n\t\"2205249479\": \"IfcClosedShell\",\n\t\"2218152070\": \"IfcStructuralSurfaceMemberVarying\",\n\t\"2223149337\": \"IfcFlowTerminal\",\n\t\"2226359599\": \"IfcPhysicalSimpleQuantity\",\n\t\"2233826070\": \"IfcSubedge\",\n\t\"2235152071\": \"IfcMaterialProfile\",\n\t\"2242383968\": \"IfcExternallyDefinedHatchStyle\",\n\t\"2247615214\": \"IfcSweptAreaSolid\",\n\t\"2250791053\": \"IfcPumpType\",\n\t\"2251480897\": \"IfcObjective\",\n\t\"2254336722\": \"IfcSystem\",\n\t\"2262370178\": \"IfcRailing\",\n\t\"2272882330\": \"IfcCondenser\",\n\t\"2273995522\": \"IfcStructuralConnectionCondition\",\n\t\"2294589976\": \"IfcIndexedPolygonalFaceWithVoids\",\n\t\"2295281155\": \"IfcProtectiveDeviceTrippingUnit\",\n\t\"2296667514\": \"IfcActor\",\n\t\"2297155007\": \"IfcFlowTerminalType\",\n\t\"2301859152\": \"IfcCoilType\",\n\t\"2310774935\": \"IfcReinforcingMeshType\",\n\t\"2315554128\": \"IfcSwitchingDeviceType\",\n\t\"2320036040\": \"IfcReinforcingMesh\",\n\t\"2323601079\": \"IfcDoorType\",\n\t\"2324767716\": \"IfcRampFlightType\",\n\t\"2341007311\": \"IfcRoot\",\n\t\"2347385850\": \"IfcMappedItem\",\n\t\"2347447852\": \"IfcTendonAnchor\",\n\t\"2347495698\": \"IfcTypeProduct\",\n\t\"2367409068\": \"IfcCurveStyleFontAndScaling\",\n\t\"2382730787\": \"IfcPerformanceHistory\",\n\t\"2387106220\": \"IfcTessellatedFaceSet\",\n\t\"2391368822\": \"IfcInventory\",\n\t\"2391383451\": \"IfcVibrationIsolator\",\n\t\"2391406946\": \"IfcWall\",\n\t\"2397081782\": \"IfcElementAssemblyType\",\n\t\"2405470396\": \"IfcQuantityVolume\",\n\t\"2415094496\": \"IfcTendonType\",\n\t\"2417008758\": \"IfcElectricDistributionBoardType\",\n\t\"2417041796\": \"IfcPresentationStyleAssignment\",\n\t\"2433181523\": \"IfcReference\",\n\t\"2439245199\": \"IfcResourceLevelRelationship\",\n\t\"2445595289\": \"IfcStructuralCurveMemberVarying\",\n\t\"2453401579\": \"IfcGeometricRepresentationItem\",\n\t\"2461110595\": \"IfcBSplineCurveWithKnots\",\n\t\"2473145415\": \"IfcStructuralLoadSingleDisplacement\",\n\t\"2474470126\": \"IfcMotorConnection\",\n\t\"2481509218\": \"IfcSpatialZoneType\",\n\t\"2483315170\": \"IfcPhysicalQuantity\",\n\t\"2485617015\": \"IfcCompositeCurveSegment\",\n\t\"2489546625\": \"IfcFastenerType\",\n\t\"2495723537\": \"IfcRelAssignsToControl\",\n\t\"2506170314\": \"IfcCsgPrimitive3D\",\n\t\"2510884976\": \"IfcConic\",\n\t\"2513912981\": \"IfcSurface\",\n\t\"2515109513\": \"IfcStructuralAnalysisModel\",\n\t\"2519244187\": \"IfcPath\",\n\t\"2525727697\": \"IfcStructuralLoadStatic\",\n\t\"2529465313\": \"IfcParameterizedProfileDef\",\n\t\"2533589738\": \"IfcSlabType\",\n\t\"2542286263\": \"IfcComplexProperty\",\n\t\"2543172580\": \"IfcZShapeProfileDef\",\n\t\"2551354335\": \"IfcRelDecomposes\",\n\t\"2552916305\": \"IfcTextureMap\",\n\t\"2556980723\": \"IfcFace\",\n\t\"2559016684\": \"IfcPreDefinedCurveFont\",\n\t\"2559216714\": \"IfcConstructionResource\",\n\t\"2565941209\": \"IfcRelDeclares\",\n\t\"2571569899\": \"IfcIndexedPolyCurve\",\n\t\"2572171363\": \"IfcReinforcingBarType\",\n\t\"2574617495\": \"IfcConstructionResourceType\",\n\t\"2581212453\": \"IfcBoundingBox\",\n\t\"2590856083\": \"IfcElementComponentType\",\n\t\"2597039031\": \"IfcMeasureWithUnit\",\n\t\"2598011224\": \"IfcProperty\",\n\t\"2601014836\": \"IfcCurve\",\n\t\"2603310189\": \"IfcAdvancedBrepWithVoids\",\n\t\"2604431987\": \"IfcLightSourceDirectional\",\n\t\"2609359061\": \"IfcSlippageConnectionCondition\",\n\t\"2611217952\": \"IfcCircle\",\n\t\"2614616156\": \"IfcConnectionPointGeometry\",\n\t\"2624227202\": \"IfcLocalPlacement\",\n\t\"2629017746\": \"IfcCurveBoundedSurface\",\n\t\"2635815018\": \"IfcDiscreteAccessoryType\",\n\t\"2636378356\": \"IfcTextStyleForDefinedFont\",\n\t\"2652556860\": \"IfcFixedReferenceSweptAreaSolid\",\n\t\"2655187982\": \"IfcLibraryInformation\",\n\t\"2655215786\": \"IfcRelAssociatesMaterial\",\n\t\"2665983363\": \"IfcOpenShell\",\n\t\"2668620305\": \"IfcStructuralLoadPlanarForce\",\n\t\"2674252688\": \"IfcCableFittingType\",\n\t\"2705031697\": \"IfcArbitraryProfileDefWithVoids\",\n\t\"2706460486\": \"IfcGroup\",\n\t\"2706606064\": \"IfcSpatialStructureElement\",\n\t\"2706619895\": \"IfcMonetaryUnit\",\n\t\"2713105998\": \"IfcBoxedHalfSpace\",\n\t\"2713554722\": \"IfcConversionBasedUnitWithOffset\",\n\t\"2715220739\": \"IfcTrapeziumProfileDef\",\n\t\"2728634034\": \"IfcRelAssociatesConstraint\",\n\t\"2732653382\": \"IfcConnectionSurfaceGeometry\",\n\t\"2736907675\": \"IfcBooleanResult\",\n\t\"2740243338\": \"IfcAxis2Placement3D\",\n\t\"2744685151\": \"IfcProcedure\",\n\t\"2752243245\": \"IfcPropertyListValue\",\n\t\"2757150158\": \"IfcStructuralCurveReaction\",\n\t\"2759199220\": \"IfcVertexLoop\",\n\t\"2769231204\": \"IfcVirtualElement\",\n\t\"2770003689\": \"IfcRectangleHollowProfileDef\",\n\t\"2771591690\": \"IfcTaskTimeRecurring\",\n\t\"2775532180\": \"IfcPolygonalBoundedHalfSpace\",\n\t\"2777663545\": \"IfcElementarySurface\",\n\t\"2778083089\": \"IfcRoundedRectangleProfileDef\",\n\t\"2781568857\": \"IfcRoofType\",\n\t\"2798486643\": \"IfcRectangularPyramid\",\n\t\"2799835756\": \"IfcVertex\",\n\t\"2802773753\": \"IfcRelCoversSpaces\",\n\t\"2802850158\": \"IfcProfileProperties\",\n\t\"2804161546\": \"IfcExtrudedAreaSolidTapered\",\n\t\"2809605785\": \"IfcSurfaceOfLinearExtrusion\",\n\t\"2814081492\": \"IfcEngine\",\n\t\"2816379211\": \"IfcCondenserType\",\n\t\"2827207264\": \"IfcFeatureElement\",\n\t\"2827736869\": \"IfcCurveBoundedPlane\",\n\t\"2830218821\": \"IfcStyleModel\",\n\t\"2835456948\": \"IfcEllipseProfileDef\",\n\t\"2837617999\": \"IfcOutletType\",\n\t\"2839578677\": \"IfcPolygonalFaceSet\",\n\t\"2852063980\": \"IfcMaterialConstituentSet\",\n\t\"2853485674\": \"IfcExternalSpatialStructureElement\",\n\t\"2857406711\": \"IfcRelAssignsToProduct\",\n\t\"2859738748\": \"IfcConnectionGeometry\",\n\t\"2874132201\": \"IfcActuatorType\",\n\t\"2887950389\": \"IfcBSplineSurface\",\n\t\"2889183280\": \"IfcConversionBasedUnit\",\n\t\"2893384427\": \"IfcRailingType\",\n\t\"2898889636\": \"IfcCShapeProfileDef\",\n\t\"2904328755\": \"IfcProjectOrder\",\n\t\"2906023776\": \"IfcBeamStandardCase\",\n\t\"2914609552\": \"IfcResource\",\n\t\"2916149573\": \"IfcTriangulatedFaceSet\",\n\t\"2924175390\": \"IfcPolyLoop\",\n\t\"2934153892\": \"IfcSurfaceReinforcementArea\",\n\t\"2937912522\": \"IfcCircleHollowProfileDef\",\n\t\"2938176219\": \"IfcBurner\",\n\t\"2943643501\": \"IfcResourceApprovalRelationship\",\n\t\"2945172077\": \"IfcProcess\",\n\t\"2949456006\": \"IfcDimensionalExponents\",\n\t\"2951183804\": \"IfcChillerType\",\n\t\"2954562838\": \"IfcCoolingTowerType\",\n\t\"2963535650\": \"IfcDoorLiningProperties\",\n\t\"2979338954\": \"IfcBuildingElementPart\",\n\t\"2986769608\": \"IfcStructuralResultGroup\",\n\t\"2998442950\": \"IfcMirroredProfileDef\",\n\t\"3001207471\": \"IfcAlarmType\",\n\t\"3008276851\": \"IfcFaceSurface\",\n\t\"3008791417\": \"IfcRepresentationItem\",\n\t\"3009204131\": \"IfcGrid\",\n\t\"3009222698\": \"IfcFlowTreatmentDeviceType\",\n\t\"3020489413\": \"IfcIrregularTimeSeriesValue\",\n\t\"3021840470\": \"IfcPhysicalComplexQuantity\",\n\t\"3024970846\": \"IfcRamp\",\n\t\"3026737570\": \"IfcTubeBundle\",\n\t\"3027567501\": \"IfcReinforcingElement\",\n\t\"3027962421\": \"IfcSlabStandardCase\",\n\t\"3040386961\": \"IfcDistributionFlowElement\",\n\t\"3041715199\": \"IfcDistributionPort\",\n\t\"3049322572\": \"IfcStyledRepresentation\",\n\t\"3050246964\": \"IfcContextDependentUnit\",\n\t\"3053780830\": \"IfcSanitaryTerminal\",\n\t\"3057273783\": \"IfcMapConversion\",\n\t\"3071757647\": \"IfcTShapeProfileDef\",\n\t\"3079605661\": \"IfcMaterialProfileSetUsage\",\n\t\"3079942009\": \"IfcOpeningStandardCase\",\n\t\"3081323446\": \"IfcTendonAnchorType\",\n\t\"3087945054\": \"IfcAlarm\",\n\t\"3101149627\": \"IfcTimeSeries\",\n\t\"3101698114\": \"IfcSurfaceFeature\",\n\t\"3112655638\": \"IfcStackTerminalType\",\n\t\"3113134337\": \"IfcIntersectionCurve\",\n\t\"3119450353\": \"IfcPresentationStyle\",\n\t\"3124254112\": \"IfcBuildingStorey\",\n\t\"3124975700\": \"IfcTextLiteralWithExtent\",\n\t\"3125803723\": \"IfcAxis2Placement2D\",\n\t\"3127900445\": \"IfcSlabElementedCase\",\n\t\"3132237377\": \"IfcFlowMovingDevice\",\n\t\"3136571912\": \"IfcStructuralItem\",\n\t\"3150382593\": \"IfcCenterLineProfileDef\",\n\t\"3171933400\": \"IfcPlate\",\n\t\"3174744832\": \"IfcEvaporativeCoolerType\",\n\t\"3179687236\": \"IfcUnitaryControlElementType\",\n\t\"3181161470\": \"IfcMemberType\",\n\t\"3190031847\": \"IfcRelConnectsPorts\",\n\t\"3198132628\": \"IfcFlowFittingType\",\n\t\"3200245327\": \"IfcExternalReference\",\n\t\"3205830791\": \"IfcDistributionSystem\",\n\t\"3206491090\": \"IfcTaskType\",\n\t\"3207858831\": \"IfcAsymmetricIShapeProfileDef\",\n\t\"3219374653\": \"IfcProxy\",\n\t\"3221913625\": \"IfcCommunicationsAppliance\",\n\t\"3242481149\": \"IfcDoorStandardCase\",\n\t\"3242617779\": \"IfcRelContainedInSpatialStructure\",\n\t\"3243963512\": \"IfcRevolvedAreaSolidTapered\",\n\t\"3252649465\": \"IfcQuantityTime\",\n\t\"3256556792\": \"IfcDistributionElementType\",\n\t\"3264961684\": \"IfcColourSpecification\",\n\t\"3265635763\": \"IfcMaterialProperties\",\n\t\"3268803585\": \"IfcRelNests\",\n\t\"3277789161\": \"IfcElectricFlowStorageDeviceType\",\n\t\"3283111854\": \"IfcRampFlight\",\n\t\"3285139300\": \"IfcColourRgbList\",\n\t\"3293443760\": \"IfcControl\",\n\t\"3293546465\": \"IfcCableCarrierSegmentType\",\n\t\"3295246426\": \"IfcCrewResource\",\n\t\"3296154744\": \"IfcChimney\",\n\t\"3299480353\": \"IfcBuildingElement\",\n\t\"3303107099\": \"IfcSurfaceStyleLighting\",\n\t\"3303938423\": \"IfcMaterialLayerSet\",\n\t\"3304561284\": \"IfcWindow\",\n\t\"3310460725\": \"IfcElectricFlowStorageDevice\",\n\t\"3313531582\": \"IfcVibrationIsolatorType\",\n\t\"3319311131\": \"IfcHeatExchanger\",\n\t\"3327091369\": \"IfcPermit\",\n\t\"3331915920\": \"IfcCartesianTransformationOperator3D\",\n\t\"3342526732\": \"IfcWorkSchedule\",\n\t\"3352864051\": \"IfcAirTerminalType\",\n\t\"3355820592\": \"IfcPostalAddress\",\n\t\"3357820518\": \"IfcPropertySetDefinition\",\n\t\"3367102660\": \"IfcBoundaryFaceCondition\",\n\t\"3368373690\": \"IfcMetric\",\n\t\"3377609919\": \"IfcRepresentationContext\",\n\t\"3388369263\": \"IfcOffsetCurve2D\",\n\t\"3390157468\": \"IfcEvaporatorType\",\n\t\"3404854881\": \"IfcMaterialProfileSetUsageTapering\",\n\t\"3406155212\": \"IfcAdvancedFace\",\n\t\"3408363356\": \"IfcStructuralLoadTemperature\",\n\t\"3413951693\": \"IfcRegularTimeSeries\",\n\t\"3415622556\": \"IfcFan\",\n\t\"3419103109\": \"IfcContext\",\n\t\"3420628829\": \"IfcSolarDevice\",\n\t\"3422422726\": \"IfcLightSourceSpot\",\n\t\"3448662350\": \"IfcGeometricRepresentationContext\",\n\t\"3451746338\": \"IfcRelSpaceBoundary\",\n\t\"3452421091\": \"IfcLibraryReference\",\n\t\"3454111270\": \"IfcRectangularTrimmedSurface\",\n\t\"3460190687\": \"IfcAsset\",\n\t\"3473067441\": \"IfcTask\",\n\t\"3478079324\": \"IfcStructuralLoadConfiguration\",\n\t\"3486308946\": \"IfcCartesianTransformationOperator2DnonUniform\",\n\t\"3493046030\": \"IfcGeographicElement\",\n\t\"3495092785\": \"IfcCurtainWall\",\n\t\"3505215534\": \"IfcOffsetCurve3D\",\n\t\"3508470533\": \"IfcFlowTreatmentDevice\",\n\t\"3510044353\": \"IfcCurveStyleFontPattern\",\n\t\"3512223829\": \"IfcWallStandardCase\",\n\t\"3518393246\": \"IfcDuctSegment\",\n\t\"3521284610\": \"IfcPropertyTemplate\",\n\t\"3523091289\": \"IfcRelSpaceBoundary1stLevel\",\n\t\"3544373492\": \"IfcStructuralActivity\",\n\t\"3548104201\": \"IfcExternallyDefinedTextFont\",\n\t\"3566463478\": \"IfcPermeableCoveringProperties\",\n\t\"3570813810\": \"IfcIndexedColourMap\",\n\t\"3571504051\": \"IfcCompressor\",\n\t\"3588315303\": \"IfcOpeningElement\",\n\t\"3590301190\": \"IfcGeometricSet\",\n\t\"3593883385\": \"IfcTrimmedCurve\",\n\t\"3611470254\": \"IfcTextureVertexList\",\n\t\"3612865200\": \"IfcPipeSegment\",\n\t\"3615266464\": \"IfcRectangleProfileDef\",\n\t\"3626867408\": \"IfcRightCircularCylinder\",\n\t\"3630933823\": \"IfcActorRole\",\n\t\"3632507154\": \"IfcDerivedProfileDef\",\n\t\"3640358203\": \"IfcCoolingTower\",\n\t\"3649129432\": \"IfcBooleanClippingResult\",\n\t\"3650150729\": \"IfcPropertySingleValue\",\n\t\"3651124850\": \"IfcProjectionElement\",\n\t\"3657597509\": \"IfcStructuralSurfaceAction\",\n\t\"3663146110\": \"IfcSimplePropertyTemplate\",\n\t\"3678494232\": \"IfcRelConnectsWithRealizingElements\",\n\t\"3689010777\": \"IfcStructuralReaction\",\n\t\"3692461612\": \"IfcSimpleProperty\",\n\t\"3694346114\": \"IfcOutlet\",\n\t\"3698973494\": \"IfcTypeResource\",\n\t\"3701648758\": \"IfcObjectPlacement\",\n\t\"3708119000\": \"IfcMaterialConstituent\",\n\t\"3710013099\": \"IfcPropertyEnumeration\",\n\t\"3724593414\": \"IfcPolyline\",\n\t\"3727388367\": \"IfcPreDefinedItem\",\n\t\"3732053477\": \"IfcDocumentReference\",\n\t\"3732776249\": \"IfcCompositeCurve\",\n\t\"3736923433\": \"IfcTypeProcess\",\n\t\"3737207727\": \"IfcFacetedBrepWithVoids\",\n\t\"3740093272\": \"IfcPort\",\n\t\"3741457305\": \"IfcIrregularTimeSeries\",\n\t\"3747195512\": \"IfcEvaporativeCooler\",\n\t\"3749851601\": \"IfcCartesianTransformationOperator2D\",\n\t\"3758799889\": \"IfcCableCarrierSegment\",\n\t\"3760055223\": \"IfcDuctSegmentType\",\n\t\"3765753017\": \"IfcReinforcementDefinitionProperties\",\n\t\"3778827333\": \"IfcPreDefinedProperties\",\n\t\"3798115385\": \"IfcArbitraryClosedProfileDef\",\n\t\"3800577675\": \"IfcCurveStyle\",\n\t\"3812236995\": \"IfcSpaceType\",\n\t\"3815607619\": \"IfcFlowMeterType\",\n\t\"3821786052\": \"IfcActionRequest\",\n\t\"3824725483\": \"IfcTendon\",\n\t\"3825984169\": \"IfcTransformer\",\n\t\"3827777499\": \"IfcLaborResource\",\n\t\"3840914261\": \"IfcRelAssociatesLibrary\",\n\t\"3843373140\": \"IfcProjectedCRS\",\n\t\"3849074793\": \"IfcDistributionFlowElementType\",\n\t\"3850581409\": \"IfcCompressorType\",\n\t\"3856911033\": \"IfcSpace\",\n\t\"3869604511\": \"IfcApprovalRelationship\",\n\t\"3875453745\": \"IfcComplexPropertyTemplate\",\n\t\"3888040117\": \"IfcObject\",\n\t\"3893378262\": \"IfcSpatialStructureElementType\",\n\t\"3893394355\": \"IfcCivilElementType\",\n\t\"3895139033\": \"IfcCostItem\",\n\t\"3898045240\": \"IfcConstructionEquipmentResource\",\n\t\"3900360178\": \"IfcEdge\",\n\t\"3902619387\": \"IfcChiller\",\n\t\"3905492369\": \"IfcImageTexture\",\n\t\"3907093117\": \"IfcFlowControllerType\",\n\t\"3915482550\": \"IfcRecurrencePattern\",\n\t\"3939117080\": \"IfcRelAssigns\",\n\t\"3940055652\": \"IfcRelFillsElement\",\n\t\"3945020480\": \"IfcRelConnectsPathElements\",\n\t\"3946677679\": \"IfcInterceptorType\",\n\t\"3958052878\": \"IfcStyledItem\",\n\t\"3958567839\": \"IfcProfileDef\",\n\t\"3961806047\": \"IfcDamperType\",\n\t\"3967405729\": \"IfcPreDefinedPropertySet\",\n\t\"3979015343\": \"IfcStructuralSurfaceMember\",\n\t\"3982875396\": \"IfcShapeModel\",\n\t\"4006246654\": \"IfcDraughtingPreDefinedCurveFont\",\n\t\"4009809668\": \"IfcWindowType\",\n\t\"4015995234\": \"IfcSphericalSurface\",\n\t\"4017108033\": \"IfcPlateType\",\n\t\"4022376103\": \"IfcPointOnCurve\",\n\t\"4024345920\": \"IfcEventType\",\n\t\"4031249490\": \"IfcBuilding\",\n\t\"4037036970\": \"IfcBoundaryCondition\",\n\t\"4037862832\": \"IfcFlowInstrumentType\",\n\t\"4074379575\": \"IfcDamper\",\n\t\"4074543187\": \"IfcShadingDeviceType\",\n\t\"4086658281\": \"IfcSensor\",\n\t\"4088093105\": \"IfcWorkCalendar\",\n\t\"4095422895\": \"IfcGeographicElementType\",\n\t\"4095574036\": \"IfcRelAssociatesApproval\",\n\t\"4095615324\": \"IfcSubContractResourceType\",\n\t\"4097777520\": \"IfcSite\",\n\t\"4105962743\": \"IfcConstructionMaterialResourceType\",\n\t\"4122056220\": \"IfcRelSequence\",\n\t\"4123344466\": \"IfcElementAssembly\",\n\t\"4124623270\": \"IfcShellBasedSurfaceModel\",\n\t\"4124788165\": \"IfcSurfaceOfRevolution\",\n\t\"4136498852\": \"IfcCooledBeam\",\n\t\"4142052618\": \"IfcGeometricRepresentationSubContext\",\n\t\"4143007308\": \"IfcOccupant\",\n\t\"4148101412\": \"IfcEvent\",\n\t\"4156078855\": \"IfcWallElementedCase\",\n\t\"4158566097\": \"IfcRightCircularCone\",\n\t\"4162380809\": \"IfcLightDistributionData\",\n\t\"4165799628\": \"IfcSectionReinforcementProperties\",\n\t\"4166981789\": \"IfcPropertyEnumeratedValue\",\n\t\"4175244083\": \"IfcInterceptor\",\n\t\"4182860854\": \"IfcBoundedSurface\",\n\t\"4186316022\": \"IfcRelDefinesByProperties\",\n\t\"4201705270\": \"IfcRelConnectsPortToElement\",\n\t\"4207607924\": \"IfcValve\",\n\t\"4208778838\": \"IfcProduct\",\n\t\"4217484030\": \"IfcCableSegment\",\n\t\"4218914973\": \"IfcWorkPlan\",\n\t\"4219587988\": \"IfcFailureConnectionCondition\",\n\t\"4222183408\": \"IfcFireSuppressionTerminalType\",\n\t\"4231323485\": \"IfcPipeSegmentType\",\n\t\"4237592921\": \"IfcWasteTerminal\",\n\t\"4238390223\": \"IfcFurnishingElementType\",\n\t\"4240577450\": \"IfcShapeRepresentation\",\n\t\"4243806635\": \"IfcStructuralCurveConnection\",\n\t\"4251960020\": \"IfcOrganization\",\n\t\"4252922144\": \"IfcStairFlight\",\n\t\"4261334040\": \"IfcAxis1Placement\",\n\t\"4266656042\": \"IfcLightSourceGoniometric\",\n\t\"4278684876\": \"IfcRelAssignsToProcess\",\n\t\"4278956645\": \"IfcFlowFitting\",\n\t\"4282788508\": \"IfcTextLiteral\",\n\t\"4288193352\": \"IfcActuator\",\n\t\"4288270099\": \"IfcJunctionBoxType\",\n\t\"4292641817\": \"IfcUnitaryEquipment\",\n\t\"4294318154\": \"IfcExternalInformation\"\n}","import {\n    IFCELEMENT,\n    IFCOPENINGELEMENT,\n    IFCRELDEFINESBYTYPE,\n    IFCTYPEOBJECT,\n    IFCTYPEPRODUCT\n} from 'web-ifc';\n\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { defaultURIBuilder } from \"../helpers/uri-builder\";\nimport { IfcElements } from \"../helpers/IfcElementsMap\";\nimport { getItemSubtypes } from '../helpers/item-search';\nimport { buildRelOneToMany, buildRelOneToOne, Input } from '../helpers/path-search';\n\nexport class ProductParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started PRODUCTS parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished products parsing\");\n\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/3: Finding products\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildProducts()));\n        this.verbose && console.timeEnd(\"1/3: Finding products\");\n        this.verbose && console.time(\"2/3: Finding product types\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.buildProductTypes()));\n        this.verbose && console.timeEnd(\"2/3: Finding product types\");\n        this.verbose && console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 2: PRODUCT -> PRODUCT TYPE ##\");\n        this.verbose && console.time(\"3/3: Assigning product types\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.assignProductType()));\n        this.verbose && console.timeEnd(\"3/3: Assigning product types\");\n        this.verbose && console.log(\"\");\n\n        console.timeEnd(\"Finished products parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    private async buildProducts(): Promise<any[]>{\n\n        const graph = [];\n\n        const skippedTypes = [IFCOPENINGELEMENT];\n\n        // Get all subTypes of IfcElement\n        const subTypes: number[] = getItemSubtypes(IFCELEMENT)\n            .filter(typeID => skippedTypes.indexOf(typeID) == -1);  // Filter out skipped types\n    \n\n        // Get all items in model that belong to any of these types\n        let expressIDArray: number[] = [];\n        for(let typeId of subTypes){\n            expressIDArray.push(...await this.ifcAPI.properties.getAllItemsOfType(this.modelID, typeId, false));\n        }\n\n        // Build triples\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            \n            const {type, GlobalId} = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n            const URI = defaultURIBuilder(GlobalId.value);\n\n            // Push product\n            graph.push({\n                \"@id\": URI,\n                \"@type\": `ifc:${IfcElements[type]}`\n            });\n            \n        }\n\n        return graph;\n\n    }\n\n    private async buildProductTypes(): Promise<any[]>{\n\n        const graph = [];\n\n        // Get all subTypes of IfcTypeObject\n        const subTypes: number[] = getItemSubtypes(IFCTYPEOBJECT);\n        \n        // Get all items in model that belong to any of these types\n        let expressIDArray: number[] = [];\n        for(let typeId of subTypes){\n            expressIDArray.push(...await this.ifcAPI.properties.getAllItemsOfType(this.modelID, typeId, false));\n        }\n\n        // Build triples\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            \n            const {type, GlobalId, PredefinedType} = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n            const URI = defaultURIBuilder(GlobalId.value);\n\n            let obj = {\n                \"@id\": URI,\n                \"@type\": `ifc:${IfcElements[type]}`\n            }\n\n            // Add type if present\n            if(PredefinedType){\n                obj[\"kbt:ifcTypeSpecification\"] = { \"@id\": `ifc:${PredefinedType.value}` }\n            }\n\n            // Push product\n            graph.push(obj);\n            \n        }\n\n        return graph;\n\n    }\n\n    private async assignProductType(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELDEFINESBYTYPE,\n            ifcSubjectRel: \"RelatingType\",\n            ifcTargetRel: \"RelatedObjects\",\n            oppoiteRelationship: \"kbt:elementType\"\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n}","const map: any = {\n    \"\\\\\\\\X2\\\\\\\\00FC\\\\\\\\X0\\\\\\\\\": \"ü\",\n    \"\\\\\\\\X2\\\\\\\\00F6\\\\\\\\X0\\\\\\\\\": \"ä\",\n    \"\\\\\\\\X2\\\\\\\\00E6\\\\\\\\X0\\\\\\\\\": \"æ\",\n    \"\\\\\\\\X\\\\\\\\E6\": \"æ\",\n    \"\\\\\\\\X2\\\\\\\\00C6\\\\\\\\X0\\\\\\\\\": \"Æ\",\n    \"\\\\\\\\X2\\\\\\\\00F8\\\\\\\\X0\\\\\\\\\": \"ø\",\n    \"\\\\\\\\X\\\\\\\\F8\": \"ø\",\n    \"\\\\\\\\X2\\\\\\\\00D8\\\\\\\\X0\\\\\\\\\": \"Ø\",\n    \"\\\\\\\\X\\\\\\\\D8\": \"Ø\",\n    \"\\\\\\\\X2\\\\\\\\00E5\\\\\\\\X0\\\\\\\\\": \"å\",\n    \"\\\\\\\\X2\\\\\\\\00C5\\\\\\\\X0\\\\\\\\\": \"Å\"\n}\n\nexport function decodeString(str: string){\n\n    // Skip if no special characters found\n    if(str.indexOf(\"\\\\\") == -1) return str;\n\n    // Replace all known special characters\n    const keys = Object.keys(map);\n    for (let i = 0; i < keys.length; i++) {\n        const regex = new RegExp(keys[i], \"g\");\n        str = str.replace(regex, map[keys[i]]);\n    }\n    return str;\n}","export const IfcDatatypes: {[key: number]: string} = {\n    1: 'xsd:string',\n    3: 'xsd:boolean',\n    4: 'xsd:decimal'\n};\n\nexport const IfcLabels: {[key: string]: string} = {\n    \"IFCLABEL\": 'xsd:string',\n    \"IFCBOOLEAN\": 'xsd:boolean',\n    \"IFCINTEGER\": 'xsd:integer'\n};","import {\n    IFCDISTRIBUTIONPORT,\n    IFCDISTRIBUTIONSYSTEM,\n    IFCELEMENT,\n    IFCGROUP,\n    IFCOBJECT,\n    IFCPORT,\n    IFCPRODUCT,\n    IFCSYSTEM\n} from 'web-ifc';\nimport { ModelUnits, Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { getAllItemsOfTypeOrSubtype } from \"../helpers/item-search\";\nimport { defaultURIBuilder } from '../helpers/uri-builder';\nimport { decodeString } from '../helpers/character-decode';\nimport { IfcDatatypes, IfcLabels } from '../helpers/IfcDatatypesMap';\nimport { getUCUMCode, UnitType } from '../helpers/unit-tools';\n\n// Thoughts\n// - We should probably have a list of known IFC property sets and properties that we can match against\n\ninterface PSetProperty{\n    URI: string;\n    camelName: string;\n    label: string;\n    unit?: string;\n}\n\nexport class PropertyParser extends Parser{\n\n    public itemIDs: number[];    // Holds expressIDs for all relevant items\n    public modelUnits: ModelUnits;\n\n    public psetNames: string[] = [];    // Holds all property set names found in model\n    public psetProperties: any = {};    // Holds the properties that exist in each property set. Key = psetName\n\n    public async doParse(normalizeToSI: boolean = true): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started PROPERTIES parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished PROPERTIES parsing\");\n\n        this.verbose && console.log(\"## PRE STEPS ##\");\n        this.verbose && console.time(\"Getting element and group IDs\");\n        this.itemIDs = await this.getAllRelevantItems();\n        this.verbose && console.timeEnd(\"Getting element and group IDs\");\n        this.verbose && console.time(\"Getting model units\");\n        this.modelUnits = await this.getUnits();\n        this.verbose && console.timeEnd(\"Getting model units\");\n\n        this.verbose && console.log(\"## STEP 1: DIRECT PROPERTIES ##\");\n        this.verbose && console.time(\"1/3: Finding direct properties\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.getElementProperties()));\n        this.verbose && console.timeEnd(\"1/3: Finding direct properties\");\n        console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 2: PSET PROPERTIES ##\");\n        this.verbose && console.time(\"2/3: Finding pset properties\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.getPSetProperties(normalizeToSI)));\n        this.verbose && console.timeEnd(\"2/3: Finding pset properties\");\n        console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 3: WRITE PROPERTY SETS ##\");\n        this.verbose && console.time(\"3/3: Writing the property sets themselves (TBox)\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.writePSets()));\n        this.verbose && console.timeEnd(\"3/3: Writing the property sets themselves (TBox)\");\n        console.log(\"\");\n\n        console.timeEnd(\"Finished PROPERTIES parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    async getAllRelevantItems(): Promise<number[]>{\n        let arr = [];\n        arr.push(...await getAllItemsOfTypeOrSubtype(this.ifcAPI, this.modelID, IFCPRODUCT));   // Elements, spaces etc.\n        arr.push(...await getAllItemsOfTypeOrSubtype(this.ifcAPI, this.modelID, IFCGROUP));     // Systems etc.\n        return arr;\n    }\n\n    /**\n     * DIRECT\n     */\n    async getElementProperties(): Promise<any[]>{\n\n        const propertyPromises = [];\n        for (let i = 0; i < this.itemIDs.length; i++) {\n            const expressID = this.itemIDs[i];\n            propertyPromises.push(this.buildDirectProperties(expressID));\n        }\n\n        return await Promise.all(propertyPromises);\n\n    }\n\n    async getPSetProperties(normalizeToSI: boolean): Promise<any[]>{\n\n        let psetPropsPromises = [];\n        for (let i = 0; i < this.itemIDs.length; i++) {\n            const expressID = this.itemIDs[i];\n            const globalId = await this.getGlobalId(expressID);\n            psetPropsPromises.push(this.buildPsetProperties(expressID, globalId, normalizeToSI));\n        }\n        \n        const graph = await Promise.all(psetPropsPromises);\n        return graph.filter(item => item != null);  // Remove empty elements\n\n    }\n\n    public writePSets(){\n\n        const graph = [];\n\n        for (let i = 0; i < this.psetNames.length; i++) {\n\n            const psetName = this.psetNames[i];\n            const psetURI = `ex:${encodeURIComponent(this.pascalize(psetName))}`;\n\n            let psetObject = {\n                \"@id\": psetURI,\n                \"@type\": \"ifc:IfcPropertySet\",\n                \"rdfs:label\": psetName,\n                \"ex:hasProperty\": []\n            };\n\n            for (let j = 0; j < this.psetProperties[psetName].length; j++) {\n                const psetProp = this.psetProperties[psetName][j];\n\n                if(psetProp == undefined) continue;\n\n                const propObject = {\n                    \"@id\": psetProp.URI,\n                    \"@type\": \"rdf:Property\",\n                    \"rdfs:label\": psetProp.label,\n                    \"ex:belongsToPset\": {\"@id\": psetURI}\n                }\n\n                // Add unit\n                if(psetProp.unit != undefined){\n                    propObject[\"qudt:ucumCode\"] = {'@value': psetProp.unit, '@type': \"xsd:string\"};\n                }\n\n                psetObject[\"ex:hasProperty\"].push(propObject);\n            }\n\n            graph.push(psetObject);\n        }\n\n        return graph;\n        \n    }\n\n    private async buildDirectProperties(expressID: number): Promise<any>{\n\n        const properties = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n\n        // Example\n        // IfcCooledBeam {\n        //     expressID: 2701,\n        //     type: 4136498852,\n        //     GlobalId: { type: 1, value: '0MMKrFmIr4b8IaMYvCQ0YS' },\n        //     OwnerHistory: { type: 5, value: 42 },\n        //     Name: {\n        //       type: 1,\n        //       value: 'DID642-4-S2-RR-AV 1200x900-593 158 158 LE - TROX Technik (DEU) #s8hqpa4#:Standard:7295696'\n        //     },\n        //     Description: null,\n        //     ObjectType: {\n        //       type: 1,\n        //       value: 'DID642-4-S2-RR-AV 1200x900-593 158 158 LE - TROX Technik (DEU) #s8hqpa4#:Standard'\n        //     },\n        //     ObjectPlacement: { type: 5, value: 2699 },\n        //     Representation: { type: 5, value: 2689 },\n        //     Tag: { type: 1, value: '7295696' },\n        //     PredefinedType: { type: 3, value: 'ACTIVE' }\n        //   }\n        \n        const name = properties.Name?.value;\n        const globalId = properties.GlobalId.value;\n        this.storeGlobalId(expressID, globalId);    // Store the global id now that we have it (so it is directly available next time)\n        const description = properties.Description?.value;\n\n        const URI = defaultURIBuilder(globalId);\n\n        let obj = {\"@id\": URI, \"ex:globalId\": globalId};\n\n        if(name != undefined) obj[\"rdfs:label\"] = decodeString(name);\n        if(description != undefined) obj[\"rdfs:description\"] = decodeString(description);\n\n        // Specific for ports\n        if(properties.type == IFCPORT || properties.type == IFCDISTRIBUTIONPORT){\n            obj[\"ex:flowDirection\"] = properties.FlowDirection.value;\n        }\n\n        // // Specific for systems\n        // if(properties.type == IFCSYSTEM || properties.type == IFCDISTRIBUTIONSYSTEM){\n        //     console.log(properties);\n        // }\n\n        return obj;\n\n    }\n\n    private async buildPsetProperties(expressID: number, objectGlobalId: string, normalizeToSI: boolean){\n\n        let propObject = {\n            \"@id\": defaultURIBuilder(objectGlobalId)\n        }\n\n        const psetProperties = await this.ifcAPI.properties.getPropertySets(this.modelID, expressID, true);\n\n        for (let i = 0; i < psetProperties.length; i++) {\n\n            // Deconstruct object\n            const { expressID, type, Name, GlobalId, Description, HasProperties } = psetProperties[i];\n\n            if(HasProperties == undefined || !HasProperties.length) return;\n    \n            // Add pset name to array containing the pset names\n            const psetName = Name.value;\n            if(this.psetNames.indexOf(psetName) == -1){\n                this.psetNames.push(psetName);\n                this.psetProperties[psetName] = [];\n            }\n\n            // Loop over properties and save them\n            for (let j = 0; j < HasProperties.length; j++) {\n\n                const name = HasProperties[j].Name.value;\n                const camelName = this.camelize(name);\n                const psetPascalName = this.pascalize(psetName);\n                const propNameFull = camelName + psetPascalName;\n                const nominalValue = HasProperties[j].NominalValue;\n                if(nominalValue == undefined) continue;\n                const value = this.nominalValueToJSONLD(nominalValue, normalizeToSI);\n                const uri = `inst:${propNameFull}`;\n\n                propObject[uri] = value;\n\n                // Add properties to object containing the pset properties\n                if(this.psetProperties[psetName].map(item => item.camelName).indexOf(camelName) == -1){\n\n                    const prop: PSetProperty = {\n                        URI: uri,\n                        label: name,\n                        camelName\n                    }\n\n                    if(normalizeToSI){\n                        if(nominalValue.label == \"IFCLENGTHMEASURE\") prop.unit = getUCUMCode(UnitType.LENGTHUNIT, this.modelUnits.LENGTHUNIT);\n                        if(nominalValue.label == \"IFCAREAMEASURE\") prop.unit = getUCUMCode(UnitType.AREAUNIT, this.modelUnits.AREAUNIT);\n                        if(nominalValue.label == \"IFCVOLUMEMEASURE\") prop.unit = getUCUMCode(UnitType.VOLUMEUNIT, this.modelUnits.VOLUMEUNIT);\n                    }\n\n                    this.psetProperties[psetName].push(prop);\n                }\n\n            }\n\n        }\n\n        // Skip if no properties were added\n        if(Object.keys(propObject).length == 1) return null;\n\n        return propObject;\n\n    }\n\n    private nominalValueToJSONLD(val: any, normalizeToSI: boolean){\n\n        let dataType;\n\n        if(IfcLabels[val.label] == \"xsd:boolean\"){\n            if(val.value == \"F\") val.value = false;\n            if(val.value == \"T\") val.value = true;\n            dataType == \"xsd:boolean\";\n        }\n\n        if(IfcLabels[val.label] == \"xsd:integer\") dataType == \"xsd:integer\";\n\n        if(normalizeToSI){\n            if(val.label == \"IFCLENGTHMEASURE\"){\n                val.value = this.modelUnits.LENGTHUNIT * val.value;\n            }\n            if(val.label == \"IFCAREAMEASURE\"){\n                val.value = this.modelUnits.AREAUNIT * val.value;\n            }\n            if(val.label == \"IFCVOLUMEMEASURE\"){\n                val.value = this.modelUnits.VOLUMEUNIT * val.value;\n            }\n        }\n\n        if(dataType == undefined) dataType = IfcDatatypes[val.valueType];\n\n        if(dataType == undefined) console.log(val);\n\n        let value = dataType == \"xsd:string\" ? decodeString(val.value) : val.value.toString();\n\n        return {'@value': value, '@type': dataType}\n    }\n\n    private camelize(str: string): string{\n        return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word, index) {\n          return index === 0 ? word.toLowerCase() : word.toUpperCase();\n        }).replace(/\\s+/g, '').replace(/\\s+/g, '');\n    }\n\n    private pascalize(string) {\n        return `${string}`\n          .replace(new RegExp(/[-_]+/, 'g'), ' ')\n          .replace(new RegExp(/[^\\w\\s]/, 'g'), '')\n          .replace(\n            new RegExp(/\\s+(.)(\\w*)/, 'g'),\n            ($1, $2, $3) => `${$2.toUpperCase() + $3.toLowerCase()}`\n          )\n          .replace(new RegExp(/\\w/), s => s.toUpperCase());\n      }\n\n}","import { IfcAxis2Placement3D, IfcLocalPlacement } from \"web-ifc\";\n\nexport function getGlobalRotation(objectPlacement: IfcLocalPlacement){\n\n    // Get relative placement\n    console.log(\"Relative placement\");\n    console.log(objectPlacement.RelativePlacement);\n    // console.log(Object.keys(objectPlacement));\n    // console.log(objectPlacement);\n}\n\n/**\n * Return the global position (coordinate) from the local one\n * @param objectPlacement is the object placement in the local coordinate system\n * @param globalPlacement is the global placement (being calculated as the tree is traversed)\n * @returns global coordinate\n */\nexport function getGlobalPosition(objectPlacement: any, globalPlacement: number[] = [0,0,0]): number[]{\n    \n    // Get relative placement\n    const relativeCoordinates = objectPlacement?.RelativePlacement?.Location?.Coordinates;\n    let relativePlacement: number[] = [];\n    if(relativeCoordinates != undefined && relativeCoordinates.length == 3){\n        const x = round(relativeCoordinates[0].value);\n        const y = round(relativeCoordinates[1].value);\n        const z = round(relativeCoordinates[2].value);\n        relativePlacement = [x,y,z];\n    }\n\n    // Update global placement\n    globalPlacement = getAbsolutePlacement(relativePlacement, globalPlacement);\n\n    // If related to something else, continue the journey\n    if(objectPlacement.PlacementRelTo){\n        return getGlobalPosition(objectPlacement.PlacementRelTo, globalPlacement);\n    }\n\n    return globalPlacement;\n}\n\nfunction getAbsolutePlacement(relativePlacement: number[], globalPlacement: number[]){\n    const x = relativePlacement[0]+globalPlacement[0];\n    const y = relativePlacement[1]+globalPlacement[1];\n    const z = relativePlacement[2]+globalPlacement[2];\n    return [x,y,z];\n}\n\nfunction round(num: number){\n    return Math.round(num * 100000) / 100000;\n}","import { buildClassInstances } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { defaultURIBuilder } from \"../helpers/uri-builder\";\nimport { buildRelOneToMany, buildRelOneToOne, Input } from '../helpers/path-search';\nimport { getGlobalPosition } from '../helpers/object-placement';\nimport { IFCDISTRIBUTIONSYSTEM, IFCPORT, IFCRELASSIGNSTOGROUP, IFCRELCONNECTSPORTS, IFCRELCONNECTSPORTTOELEMENT, IFCRELNESTS, IFCSYSTEM } from \"web-ifc\";\nimport { getAllItemsOfTypeOrSubtype } from \"../helpers/item-search\";\n\nconst typeMappings: {[key: number]: string[]}  = {\n    2254336722: [\"fso:DistributionSystem\"],\n    3740093272: [\"fso:Port\"],\n    987401354: [\"fso:Segment\", \"fso:Component\"],\n    4278956645: [\"fso:Fitting\", \"fso:Component\"],\n    2058353004: [\"fso:FlowController\", \"fso:Component\"],\n    1658829314: [\"fso:EnergyConversionDevice\", \"fso:Component\"],\n    3132237377: [\"fso:FlowMovingDevice\", \"fso:Component\"],\n    707683696: [\"fso:StorageDevice\", \"fso:Component\"],\n    2223149337: [\"fso:Terminal\", \"fso:Component\"],\n    3508470533: [\"fso:TreatmentDevice\", \"fso:Component\"],\n}\n\nexport class FSOParser extends Parser{\n\n    public async doParse(normalizeToSI: boolean = false): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started FSO parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished FSO parsing\");\n\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/10: Classifying FSO items\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.classify()));\n        this.verbose && console.timeEnd(\"1/10: Classifying FSO items\");\n        this.verbose && console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 2: PORTS ##\");\n        const portIDs = await getAllItemsOfTypeOrSubtype(this.ifcAPI, this.modelID, IFCPORT);\n        this.verbose && console.time(\"2/10: Finding port-port connections\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portPort()));\n        this.verbose && console.timeEnd(\"2/10: Finding port-port connections\");\n        this.verbose && console.time(\"3/10: Finding port-component connections\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portComponent()));\n        this.verbose && console.timeEnd(\"3/10: Finding port-component connections\");\n        this.verbose && console.time(\"4/10: Finding port flow directions\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portFlowDirection(portIDs)));\n        this.verbose && console.timeEnd(\"4/10: Finding port flow directions\");\n        this.verbose && console.time(\"5/10: Finding port placements\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.portPlacements(portIDs, normalizeToSI)));\n        this.verbose && console.timeEnd(\"5/10: Finding port placements\");\n        this.verbose && console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 3: SYSTEMS ##\");\n        this.verbose && console.time(\"6/10: Finding system-component relationships\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.systemComponent()));\n        this.verbose && console.timeEnd(\"6/10: Finding system-component relationships\");\n        this.verbose && console.log(\"\");\n\n\n        this.verbose && console.log(\"## STEP 4: POST PROCESSING ##\");\n        this.verbose && console.time(\"7/10: Loading data into in-memory triplestore for querying\");\n        await this.loadInStore();\n        this.verbose && console.timeEnd(\"7/10: Loading data into in-memory triplestore for querying\");\n        this.verbose && console.time(\"8/10: Deducing element conections from ports\");\n        await this.componentConections();\n        this.verbose && console.timeEnd(\"8/10: Deducing element conections from ports\");\n        this.verbose && console.time(\"9/10: Deducing connection interfaces\");\n        await this.connectionInterfaces();\n        this.verbose && console.timeEnd(\"9/10: Deducing connection interfaces\");\n        this.verbose && console.time(\"10/10: Calculating segment lengths\");\n        await this.segmentLengths(normalizeToSI);\n        this.verbose && console.timeEnd(\"10/10: Calculating segment lengths\");\n\n        console.timeEnd(\"Finished FSO parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    /**\n     * CLASS ASSIGNMENT\n     */\n    private async classify(): Promise<any[]>{\n\n        const graph = [];\n\n        const typeIDs = Object.keys(typeMappings);\n        for (let i = 0; i < typeIDs.length; i++) {\n            const typeID: any = typeIDs[i];\n            const fsoClass = typeMappings[typeID];\n            graph.push(...(await buildClassInstances(this.ifcAPI, this.modelID, typeID, fsoClass, true)));\n        }\n\n        return graph;\n\n    }\n\n    /**\n     * RELATIONSHIP ASSIGNMENT\n     */\n\n    // <port1> fso:connectedPort <port2>\n    // <port2> fso:connectedPort <port1>\n    private async portPort(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELCONNECTSPORTS,\n            ifcSubjectRel: \"RelatedPort\",\n            ifcTargetRel: \"RelatingPort\",\n            rdfRelationship: \"fso:connectedPort\",\n            includeInterface: false,\n            oppoiteRelationship: \"fso:connectedPort\"\n        }\n\n        return await buildRelOneToOne(input);\n\n    }\n\n    // <element> fso:connectedPort <port>\n    // <port> fso:connectedElement <element>\n    private async portComponent(): Promise<any[]>{\n\n        let graph = [];\n\n        // UNTIL IFC 4, THE RELATIONSHIP IS EXPRESSED WITH IFCRELCONNECTSPORTTOELEMENT\n        const inputA: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELCONNECTSPORTTOELEMENT,\n            ifcSubjectRel: \"RelatedElement\",\n            ifcTargetRel: \"RelatingPort\",\n            rdfRelationship: \"fso:connectedPort\",\n            includeInterface: false,\n            oppoiteRelationship: \"fso:connectedComponent\"\n        }\n\n        graph.push(...(await buildRelOneToOne(inputA)));\n\n        // AFTER IFC 4, THE RELATIONSHIP IS EXPRESSED WITH IFCRELNESTS\n        // IFCRELNESTS has a \n        const inputB: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELNESTS,\n            ifcSubjectRel: \"RelatingObject\",\n            ifcTargetRel: \"RelatedObjects\",\n            rdfRelationship: \"fso:connectedPort\",\n            includeInterface: false,\n            oppoiteRelationship: \"fso:connectedComponent\"\n        }\n\n        graph.push(...(await buildRelOneToMany(inputB)));\n\n        return graph;\n    }\n\n    // <system> fso:hasComponent <element>\n    private async systemComponent(): Promise<any[]>{\n\n        const input: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELASSIGNSTOGROUP,\n            ifcSubjectRel: \"RelatingGroup\",\n            ifcTargetRel: \"RelatedObjects\",\n            rdfRelationship: \"fso:hasComponent\",\n            ifcSubjectClassIn: [IFCSYSTEM, IFCDISTRIBUTIONSYSTEM]\n        }\n\n        return await buildRelOneToMany(input);\n\n    }\n\n    /**\n     * PROPERTIES\n     */\n\n    // <port> a fso:InPort .\n    // <port> a fso:OutPort .\n    // <port> a fso:BidirectionalPort .\n    private async portFlowDirection(expressIDArray: number[]): Promise<any[]>{\n        \n        // Port property example\n        // Description: {type: 1, value: 'Flow'}\n        // FlowDirection: {type: 3, value: 'SINK'}\n        // GlobalId: {type: 1, value: '1noFI6neD67vh$xlz57Jcc'}\n        // Name: {type: 1, value: 'InPort_1614379'}\n        // ObjectPlacement: IfcLocalPlacement {expressID: 27954, type: 2624227202, PlacementRelTo: IfcLocalPlacement, RelativePlacement: IfcAxis2Placement3D}\n        // ObjectType: null\n        // OwnerHistory: IfcOwnerHistory {expressID: 42, type: 1207048766, OwningUser: IfcPersonAndOrganization, OwningApplication: IfcApplication, State: null, …}\n        // PredefinedType: undefined\n        // Representation: null\n        // SystemType: undefined\n        // expressID: 27956\n        // type: 3041715199\n        const graph = [];\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            const props = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID);\n\n            const flowDirection = props.FlowDirection.value;\n            let portType = \"\";\n            if(flowDirection == \"SINK\") portType = \"fso:InPort\";\n            if(flowDirection == \"SOURCE\") portType = \"fso:OutPort\";\n            if(flowDirection == \"SOURCEANDSINK\") portType = \"fso:BidirectionalPort\";\n\n            if(portType != \"\"){\n                graph.push({\n                    \"@id\": defaultURIBuilder(props.GlobalId.value),\n                    \"@type\": portType\n                });\n            }\n\n        }\n\n        return graph;\n\n    }\n\n    private async portPlacements(expressIDArray: number[], normalizeToSI: boolean): Promise<any[]>{\n\n        let mf = 1;\n        if(normalizeToSI){\n            mf = await this.getLengthMultiplicationFactor();\n        }\n        \n        const graph: any[] = [];\n        for (let i = 0; i < expressIDArray.length; i++) {\n            const expressID = expressIDArray[i];\n            const props = await this.ifcAPI.properties.getItemProperties(this.modelID, expressID, true);\n\n            const coordinates = await getGlobalPosition(props.ObjectPlacement);\n            const point = `POINT Z(${coordinates[0] * mf} ${coordinates[1] * mf} ${coordinates[2] * mf})`;\n\n            const portURI = defaultURIBuilder(props.GlobalId.value);\n            const cpURI = portURI + \"_cp\";\n\n            graph.push({\n                \"@id\": portURI,\n                \"omg:hasGeometry\": {\n                    \"@id\": cpURI,\n                    \"@type\": [\"omg:Geometry\", \"ex:CenterPoint\"],\n                    \"fog:asSfa_v2-wkt\": point\n                }\n            });\n\n        }\n\n        return graph;\n\n    }\n\n    /**\n     * POST PROCESSING\n     */\n    private async componentConections(): Promise<void>{\n        // Components can be asserted as \"fso:connectedWith\" each other if their ports are connected.\n        const symmetricConnectionQuery = `PREFIX fso: <https://w3id.org/fso#>\n                    INSERT {\n                        ?e1 fso:connectedWith ?e2 .\n                        ?e2 fso:connectedWith ?e1 .\n                    }\n                    WHERE {\n                        ?e1 fso:connectedPort ?p1 .\n                        ?p1 fso:connectedPort ?p2 .\n                        ?p2 fso:connectedComponent ?e2 .\n                        ?p1 a fso:Port .\n                        ?p2 a fso:Port .\n                    }`;\n\n        // Components can be asserted to have a directional (fluid) flow relationship if ports are \n        // connected and one is an OutPort while the other is an InPort.\n        const directionalFluidConnectionQuery = `PREFIX fso: <https://w3id.org/fso#>\n                    INSERT {\n                        ?e1 fso:feedsFluidTo ?e2 .\n                        ?e2 fso:hasFluidFedBy ?e1 .\n                    }\n                    WHERE {\n                        ?e1 fso:connectedPort ?p1 .\n                        ?p1 fso:connectedPort ?p2 .\n                        ?p2 fso:connectedComponent ?e2 .\n                    }`;\n\n        await this.executeUpdateQuery(symmetricConnectionQuery);\n        await this.executeUpdateQuery(directionalFluidConnectionQuery);\n    }\n\n    private async connectionInterfaces(): Promise<void>{\n        const query = `PREFIX fso: <https://w3id.org/fso#>\n            PREFIX func: <http://example.org/functions#>\n            INSERT{\n                ?uri a fso:ConnectionPoint ;\n                    fso:connectsFrom ?e1 ;\n                    fso:connectsTo ?e2\n            }\n            WHERE{\n                ?e1 fso:connectedPort ?p1 .\n                ?p1 fso:connectedPort ?p2 .\n                ?p2 fso:connectedComponent ?e2 .\n                ?p1 a fso:OutPort .\n                ?p2 a fso:InPort .\n                BIND(func:uri-concat(?e1, ?e1) AS ?uri)\n            }`;\n        await this.executeUpdateQuery(query);\n    }\n\n    // NB! pretty slow, so probably better to just get them from the IFC directly\n    private async segmentLengths(normalizeToSI: boolean): Promise<void>{\n\n        let mf = 1;\n        let decimals = 3;\n        if(normalizeToSI){\n            mf = await this.getLengthMultiplicationFactor();\n        }\n        console.log(mf);\n        console.log(decimals);\n\n        const query = `PREFIX fso: <https://w3id.org/fso#>\n        PREFIX omg: <https://w3id.org/omg#>\n        PREFIX fog: <https://w3id.org/fog#>\n        PREFIX ex:  <https://example.com/>\n        PREFIX geosf: <http://www.opengis.net/def/function/geosparql/>\n        INSERT{\n            ?seg ex:length ?d\n        }\n        WHERE{\n            ?seg a fso:Segment ;\n                fso:connectedPort ?port1 , ?port2 .\n            FILTER(?port1 != ?port2)\n            ?port1 omg:hasGeometry/fog:asSfa_v2-wkt ?p1 .\n            ?port2 omg:hasGeometry/fog:asSfa_v2-wkt ?p2 .\n            BIND(geosf:distance(?p1, ?p2, ${decimals}, ${mf}) AS ?d)\n        }`;\n        await this.executeUpdateQuery(query);\n    }\n\n    private async getLengthMultiplicationFactor(): Promise<number>{\n        const units = await this.getUnits();\n        let multiplicationFactor = 1;\n        if(units && units[\"LENGTHUNIT\"] != undefined){\n            multiplicationFactor = units[\"LENGTHUNIT\"];\n        }\n        return multiplicationFactor;\n    }\n\n}","import { buildClassInstances } from \"../helpers/class-assignment\";\nimport { Parser } from \"./parser\";\nimport { JSONLD } from \"../helpers/BaseDefinitions\";\nimport { buildRelOneToOne, Input } from \"../helpers/path-search\";\nimport { IFCRELCONNECTSPORTTOELEMENT } from \"web-ifc\";\n\nconst typeMappings: {[key: number]: string[]}  = {\n    3740093272: [\"tso:ConnectionPoint\"],\n    1945004755: [\"tso:Component\"]\n}\n\nexport class TSOParser extends Parser{\n\n    public async doParse(): Promise<JSONLD|string>{\n\n        this.verbose && console.log(\"Started TSO parsing\");\n        this.verbose && console.log(\"\");\n        console.time(\"Finished TSO parsing\");\n\n        this.verbose && console.log(\"## STEP 1: CLASS ASSIGNMENT ##\");\n        this.verbose && console.time(\"1/2: Classifying TSO components\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.classify()));\n        this.verbose && console.timeEnd(\"1/2: Classifying TSO components\");\n        this.verbose && console.log(\"\");\n\n        this.verbose && console.log(\"## STEP 2: CONNECTION POINTS ##\");\n        this.verbose && console.time(\"2/2: Finding port-port connections\");\n        this.jsonLDObject[\"@graph\"].push(...(await this.connections()));\n        this.verbose && console.timeEnd(\"2/2: Finding port-port connections\");\n\n        console.timeEnd(\"Finished TSO parsing\");\n\n        if(this.verbose){\n            const tripleCount = await this.getTripleCount();\n            console.log(\"Total triples: \" + tripleCount);\n        }\n\n        return await this.getTriples();\n\n    }\n\n    /**\n     * CLASS ASSIGNMENT\n     */\n    private async classify(): Promise<any[]>{\n\n        const graph = [];\n\n        const typeIDs = Object.keys(typeMappings);\n        for (let i = 0; i < typeIDs.length; i++) {\n            const typeID: any = typeIDs[i];\n            const tsoClass = typeMappings[typeID];\n            graph.push(...(await buildClassInstances(this.ifcAPI, this.modelID, typeID, tsoClass, true)));\n        }\n\n        return graph;\n\n    }\n\n    /**\n     * RELATIONSHIPS\n     */\n\n    // <component> tso:connectsAt <connectionPoint>\n    // <connectionPoint> tso:connectionPointOf <component>\n    private async connections(): Promise<any[]>{\n\n        let graph = [];\n\n        // UNTIL IFC 4, THE RELATIONSHIP IS EXPRESSED WITH IFCRELCONNECTSPORTTOELEMENT\n        const inputA: Input = {\n            ifcAPI: this.ifcAPI,\n            modelID: this.modelID,\n            ifcRelationship: IFCRELCONNECTSPORTTOELEMENT,\n            ifcSubjectRel: \"RelatedElement\",\n            ifcTargetRel: \"RelatingPort\",\n            rdfRelationship: \"tso:connectsAt\",\n            oppoiteRelationship: \"tso:connectionPointOf\"\n        }\n\n        graph.push(...(await buildRelOneToOne(inputA)));\n\n        return graph;\n\n    }\n\n}","import * as WebIFC from \"web-ifc/web-ifc-api\";\nimport { BOTParser } from \"./parsers/bot-parser\";\nimport { ProductParser } from \"./parsers/product-parser\";\nimport { PropertyParser } from \"./parsers/property-parser\";\nimport { CLITool } from \"./cli-tool\";\nimport { JSONLD, SerializationFormat } from \"./helpers/BaseDefinitions\";\nimport { FSOParser } from \"./parsers/fso-parser\";\nimport { TSOParser } from \"./parsers/tso-parser\";\n\nexport class LBDParser{\n\n    // initialize the API\n    public ifcApi: WebIFC.IfcAPI = new WebIFC.IfcAPI();\n    \n    public format: SerializationFormat;\n\n    constructor(format: SerializationFormat = SerializationFormat.JSONLD){\n        this.format = format;\n    }\n\n    public setWasmPath(path: string){\n        this.ifcApi.SetWasmPath(path);\n    }\n\n    public async parseBOTTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const botParser = new BOTParser(ifcApi, modelID, this.format, verbose);\n        return await botParser.doParse();\n    }\n\n    public async parseProductTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const productParser = new ProductParser(ifcApi, modelID, this.format, verbose);\n        return await productParser.doParse();\n    }\n\n    public async parsePropertyTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const productParser = new PropertyParser(ifcApi, modelID, this.format, verbose);\n        return await productParser.doParse();\n    }\n\n    public async parseFSOTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const fsoParser = new FSOParser(ifcApi, modelID, this.format, verbose);\n        return await fsoParser.doParse();\n    }\n\n    public async parseTSOTriples(ifcApi: WebIFC.IfcAPI, modelID: number, verbose: boolean = false): Promise<JSONLD|string>{\n        const tsoParser = new TSOParser(ifcApi, modelID, this.format, verbose);\n        return await tsoParser.doParse();\n    }\n\n}"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","regenerator","require$$0","global","window","defaultSetTimout","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","startTime","nextTick","Array","title","browser","env","argv","version","versions","binding","cwd","chdir","dir","umask","hrtime","previousTimestamp","clocktime","seconds","Math","floor","nanoseconds","platform","release","config","uptime","lookup","revLookup","Arr","Uint8Array","inited","init","code","charCodeAt","encodeChunk","uint8","start","end","tmp","num","output","join","fromByteArray","extraBytes","parts","maxChunkLength","len2","read","buffer","offset","isLE","mLen","nBytes","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","pow","write","c","rt","abs","log","LN2","toString","isArray","arr","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","encodingOrOffset","allocUnsafe","from","ArrayBuffer","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","internalIsBuffer","checked","copy","val","data","fromObject","assertSize","size","b","_isBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","String","buf","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64.fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","poolSize","_augment","alloc","fill","allocUnsafeSlow","isBuffer","isFastBuffer","readFloatLE","isSlowBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754.write","writeDouble","newBuf","subarray","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","ieee754.read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","b64","l","placeHolders","L","base64.toByteArray","trim","replace","stringtrim","base64clean","src","dst","WebIFCWasm","__defProp","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","__propIsEnum","propertyIsEnumerable","__defNormalProp","__spreadValues","prop","__require","require","__commonJS","cb","mod","__async","__this","__arguments","fulfilled","step","rejected","throw","require_crypto","require_web_ifc_mt","_scriptDir","WebIFCWasm2","document","currentScript","__filename","WebIFCWasm3","GROWABLE_HEAP_I8","wasmMemory","updateGlobalBufferAndViews","HEAP8","GROWABLE_HEAP_U8","HEAPU8","GROWABLE_HEAP_I16","HEAP16","GROWABLE_HEAP_U16","HEAPU16","GROWABLE_HEAP_I32","HEAP32","GROWABLE_HEAP_U32","HEAPU32","GROWABLE_HEAP_F64","HEAPF64","readyPromiseResolve","readyPromiseReject","Module","moduleOverrides","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","thisProgram","quit_","status","toThrow","importScripts","process","node","ENVIRONMENT_IS_PTHREAD","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","nodeWorkerThreads","dirname","__dirname","filename","binary","assert","console","Worker","f","readbuffer","scriptArgs","quit","print","warn","printErr","location","href","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","wasmBinary","noExitRuntime","wasmModule","bind","warnOnce","text","shown","WebAssembly","abort","HEAPF32","threadInfoStruct","ABORT","condition","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","u0","u1","u2","ch","UTF8ToString","ptr","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","stringToUTF8","outPtr","lengthBytesUTF8","UTF16ToString","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","endPtr","lengthBytesUTF32","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","initial","maximum","shared","SharedArrayBuffer","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","dependenciesFulfilled","addRunDependency","id","removeRunDependency","callback","what","stack","RuntimeError","hasPrefix","prefix","startsWith","isDataURI","isFileURI","tempDouble","tempI64","wasmBinaryFile","getBinary","err2","ASM_CONSTS","$0","$1","_do_emscripten_dispatch_to_thread","callRuntimeCallbacks","callbacks","shift","func","get","dynCall","sig","dynCallLegacy","__pthread_ptr","__pthread_is_main_runtime_thread","__pthread_is_main_browser_thread","registerPthreadPtr","pthreadPtr","isMainBrowserThread","isMainRuntimeThread","ERRNO_CODES","_emscripten_futex_wake","addr","count","mainThreadWaitAddress","Atomics","load","PThread","mainThreadFutex","mainThreadWoken","compareExchange","notify","_emscripten_get_now","MAIN_THREAD_ID","mainThreadInfo","schedPolicy","schedPrio","unusedWorkers","runningWorkers","initMainThreadBlock","pthreadPoolSize","navigator","hardwareConcurrency","allocateUnusedWorker","initRuntime","mainThreadBlock","_malloc","headPtr","tlsMemory","store","initShared","_emscripten_register_main_browser_thread_id","initWorker","_main_thread_futex","pthreads","threadExitHandlers","setThreadStatus","runExitHandlers","___pthread_tsd_run_dtors","threadExit","exitCode","tb","_pthread_self","postMessage","cmd","threadCancel","terminateAllThreads","t","pthread","worker","returnWorkerToPool","terminate","freeThreadData","_free","allocatedOwnStack","stackBase","thread","splice","receiveObjectTransfer","loadWasmModuleToWorker","onFinishedLoading","onmessage","currentProxiedOperationCallerThread","targetThread","_emscripten_main_thread_process_queued_calls","spawnThread","pthread_ptr","cleanupThread","killThread","cancelThread","loaded","runPthread","alert","onerror","lineno","message","urlOrBlob","pthreadMainJs","getNewWorker","busySpinWait","msecs","stackTop","stackMax","_emscripten_stack_set_limits","stackRestore","dateNow","ExceptionInfoAttrs","ExceptionInfo","excPtr","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","get_caught","set_rethrown","rethrown","get_rethrown","add_ref","add","release_ref","PATH","splitPath","exec","normalizeArray","allowAboveRoot","up","last","unshift","normalize","isAbsolute","trailingSlash","split","filter","p","root","basename","lastSlash","extname","paths","join2","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","relative","to","fromParts","toParts","samePartsLength","outputParts","TTY","ttys","shutdown","register","dev","ops","input","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","buffer2","get_char","bytesRead","timestamp","put_char","default_tty_ops","readSync","stdin","fd","prompt","readline","intArrayFromString","default_tty1_ops","mmapAlloc","alignedSize","factor","ceil","alignMemory","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key2","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","syncfs","populate","completed","doCallback","errored","pseudo","mountRoot","unmount","mkdir","mkdirTree","dirs","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","readFile","writeFile","actualNumBytes","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","crypto_module","getRandomDevice","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","errno2","staticInit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray2","xhr2","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","lazyArray","defineProperties","createPreloadedFile","onload","dontCreateFile","preFinish","Browser","fullname","processData","byteArray2","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","calculateAt","dirfd","dirstream","doStat","doMsync","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","___sys_ioctl","op","_emscripten_proxy_to_main_thread_js","argp","___sys_open","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","makeLegalFunctionName","createNamedFunction","body","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","handle2","unregister","ClassHandle_clone","preservePointerOnDelete","o","clone","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","enumReadValueFromPointer","signed","requireRegisteredType","impl","v","floatReadValueFromPointer","integerReadValueFromPointer","requireHandle","emval_symbols","getStringOrSymbol","symbol","emval_get_global","index","sync","numCallArgs","stackSave","stackAlloc","_emscripten_run_in_main_runtime_thread_js","_emscripten_receive_on_main_thread_js_callArgs","readAsmConstArgsArray","emscripten_realloc_buffer","grow","JSEvents","inEventHandler","removeAllEventListeners","eventHandlers","_removeHandler","deferredCalls","registerRemoveEventListeners","removeEventListenersRegistered","deferCall","targetFunction","precedence","arraysHaveEqualContent","arrA","arrB","i2","sort","removeDeferredCalls","canPerformEventHandlerRequests","currentEventHandler","allowsDeferredCalls","runDeferredCalls","removeAllHandlersOnTarget","eventTypeString","h","removeEventListener","eventListenerFunc","useCapture","registerOrRemoveHandler","eventHandler","jsEventHandler","event","handlerFunc","callbackfunc","addEventListener","queueEventHandlerOnThread_iiii","eventHandlerFunc","eventTypeId","eventData","userData","__emscripten_call_on_thread","getTargetThreadForEventCallback","getNodeNameForTarget","screen","fullscreenEnabled","webkitFullscreenEnabled","_emscripten_set_offscreencanvas_size_on_target_thread_js","targetCanvas","width","height","jsString","cString","targetCanvasPtr","specialHTMLTargets","findEventTarget","querySelector","findCanvasEventTarget","_emscripten_set_canvas_element_size_calling_thread","canvas","canvasSharedPtr","offscreenCanvas","controlTransferredOffscreen","_emscripten_set_offscreencanvas_size_on_target_thread","autoResizeViewport","GLctxObject","GLctx","prevViewport","getParameter","viewport","_emscripten_set_canvas_element_size_main_thread","GL","counter","buffers","programs","framebuffers","renderbuffers","textures","uniforms","shaders","vaos","contexts","offscreenCanvases","timerQueriesEXT","programInfos","stringCache","unpackAlignment","recordError","errorCode","lastError","getNewId","table","getSource","shader","source","createContext","webGLContextAttributes","ctx","getContext","registerContext","attributes","majorVersion","enableExtensionsByDefault","initExtensions","makeContextCurrent","contextHandle","currentContext","deleteContext","initExtensionsDone","GLctx2","getExtension","divisor","first","primcount","indices","__webgl_enable_ANGLE_instanced_arrays","vao","__webgl_enable_OES_vertex_array_object","bufs","__webgl_enable_WEBGL_draw_buffers","disjointTimerQueryExt","multiDrawWebgl","automaticallyEnabledExtensions","getSupportedExtensions","populateUniformTable","program","ptable","maxUniformLength","maxAttributeLength","maxUniformBlockNameLength","utable","numUniforms","getProgramParameter","getActiveUniform","getUniformLocation","__emscripten_webgl_power_preferences","ENV","getEnvStrings","strings","USER","LOGNAME","PWD","HOME","LANG","languages","_","_environ_get","__environ","environ_buf","bufSize","dontAddNull","writeAsciiToMemory","_environ_sizes_get","penviron_count","penviron_buf_size","_fd_close","_fd_read","pnum","_fd_seek","offset_low","offset_high","newOffset","DOUBLE_LIMIT","_fd_write","threadParams","stackHigh","stackSize","tis","detached","global_locale","_emscripten_get_global_libc","msg","start_routine","startRoutine","selfThreadId","parentThreadId","parent_pthread_ptr","time","transferList","__isLeapYear","year","__arraySum","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","ahead","readMode","writeMode","codes","embind_init_charCodes","proxiedFunctionTable","stringy","u8array","numBytesWritten","___wasm_call_ctors","asmLibraryArg","line","H","G","ha","ia","na","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","elementTypes2","getterContext","setter","setterContext","fromWireType","toWireType","argPackAdvance","readValueFromPointer","structType","fieldRecords","fields","field","fieldTypes2","fieldName","ka","trueValue","falseValue","wt","z","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","isPureVirtual","unboundTypesHandler","className","memberFunction","ja","isSigned","E","rawEnumType","enumValue","enumType","Enum","Value2","N","argTypes2","invokerArgsArray","primitiveType","minRange","maxRange","bitshift","isUnsignedType","q","dataTypeIndex","TA","decodeMemoryView","O","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","F","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","oa","constructorSignature","getterSignature","setterSignature","la","isVoid","$","targetThreadId","mainThreadId","returnType","destructorsRef","rd","P","__emval_lookupTypes","Z","ba","Q","I","A","g","K","fa","clk_id","tp","___errno_location","B","sigPtr","argbuf","double","readAsmConstArgs","aa","J","expectedStatus","newStatus","tNow","tEnd","exchange","wait","D","C","U","dest","copyWithin","W","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","X","Y","a0","a1","powerPreference","contextAttributes","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","failIfMajorPerformanceCaveat","minorVersion","explicitSwapControl","proxyContextToMainThread","renderViaOffscreenBackBuffer","da","ea","M","ga","R","T","V","routine","_emscripten_sync_run_in_main_thread_4","prevSchedPolicy","prevSchedPrio","policy","schedparam","_pthread_getschedparam","_memalign","threadInfoStruct2","S","$i","ca","receiveInstance","module2","exports3","numWorkersToLoad","receiveInstantiatedSource","instantiateArrayBuffer","receiver","fetch","credentials","instantiate","reason","instantiateStreaming","createWasm","calledRun","ExitStatus","callMain","entryFunction","toLog","doRun","shouldRunNow","postRun","preRun","runCaller","ready","require_web_ifc","UTF8Decoder","TextDecoder","decode","UTF16Decoder","maxIdx","IFCACTUATOR","IFCAIRTERMINAL","IFCAIRTERMINALBOX","IFCAIRTOAIRHEATRECOVERY","IFCALARM","IFCALIGNMENT","IFCANNOTATION","IFCAUDIOVISUALAPPLIANCE","IFCBEAM","IFCBEAMSTANDARDCASE","IFCBEARING","IFCBOILER","IFCBRIDGE","IFCBRIDGEPART","IFCBUILDING","IFCBUILDINGELEMENT","IFCBUILDINGELEMENTPART","IFCBUILDINGELEMENTPROXY","IFCBUILDINGSTOREY","IFCBURNER","IFCCABLECARRIERFITTING","IFCCABLECARRIERSEGMENT","IFCCABLEFITTING","IFCCABLESEGMENT","IFCCAISSONFOUNDATION","IFCCHILLER","IFCCHIMNEY","IFCCIVILELEMENT","IFCCOIL","IFCCOLUMN","IFCCOLUMNSTANDARDCASE","IFCCOMMUNICATIONSAPPLIANCE","IFCCOMPRESSOR","IFCCONDENSER","IFCCONTROLLER","IFCCOOLEDBEAM","IFCCOOLINGTOWER","IFCCOVERING","IFCCURTAINWALL","IFCDAMPER","IFCDEEPFOUNDATION","IFCDISCRETEACCESSORY","IFCDISTRIBUTIONCHAMBERELEMENT","IFCDISTRIBUTIONCONTROLELEMENT","IFCDISTRIBUTIONELEMENT","IFCDISTRIBUTIONFLOWELEMENT","IFCDISTRIBUTIONPORT","IFCDISTRIBUTIONSYSTEM","IFCDOOR","IFCDOORSTANDARDCASE","IFCDUCTFITTING","IFCDUCTSEGMENT","IFCDUCTSILENCER","IFCELECTRICAPPLIANCE","IFCELECTRICDISTRIBUTIONBOARD","IFCELECTRICFLOWSTORAGEDEVICE","IFCELECTRICGENERATOR","IFCELECTRICMOTOR","IFCELECTRICTIMECONTROL","IFCELEMENT","IFCELEMENTASSEMBLY","IFCELEMENTCOMPONENT","IFCENERGYCONVERSIONDEVICE","IFCENGINE","IFCEVAPORATIVECOOLER","IFCEVAPORATOR","IFCEXTERNALSPATIALELEMENT","IFCEXTERNALSPATIALSTRUCTUREELEMENT","IFCFACILITY","IFCFACILITYPART","IFCFAN","IFCFASTENER","IFCFEATUREELEMENT","IFCFEATUREELEMENTADDITION","IFCFEATUREELEMENTSUBTRACTION","IFCFILTER","IFCFIRESUPPRESSIONTERMINAL","IFCFLOWCONTROLLER","IFCFLOWFITTING","IFCFLOWINSTRUMENT","IFCFLOWMETER","IFCFLOWMOVINGDEVICE","IFCFLOWSEGMENT","IFCFLOWSTORAGEDEVICE","IFCFLOWTERMINAL","IFCFLOWTREATMENTDEVICE","IFCFOOTING","IFCFURNISHINGELEMENT","IFCFURNITURE","IFCGEOGRAPHICELEMENT","IFCGRID","IFCGROUP","IFCHEATEXCHANGER","IFCHUMIDIFIER","IFCINTERCEPTOR","IFCJUNCTIONBOX","IFCLAMP","IFCLIGHTFIXTURE","IFCLINEARPOSITIONINGELEMENT","IFCMECHANICALFASTENER","IFCMEDICALDEVICE","IFCMEMBER","IFCMEMBERSTANDARDCASE","IFCMOTORCONNECTION","IFCOPENINGELEMENT","IFCOPENINGSTANDARDCASE","IFCOUTLET","IFCPILE","IFCPIPEFITTING","IFCPIPESEGMENT","IFCPLATE","IFCPLATESTANDARDCASE","IFCPORT","IFCPOSITIONINGELEMENT","IFCPRODUCT","IFCPROJECT","IFCPROJECTIONELEMENT","IFCPROTECTIVEDEVICE","IFCPROTECTIVEDEVICETRIPPINGUNIT","IFCPROXY","IFCPUMP","IFCRAILING","IFCRAMP","IFCRAMPFLIGHT","IFCREFERENT","IFCREINFORCINGBAR","IFCREINFORCINGELEMENT","IFCREINFORCINGMESH","IFCRELAGGREGATES","IFCRELASSIGNSTOGROUP","IFCRELASSOCIATESMATERIAL","IFCRELCONNECTSPORTTOELEMENT","IFCRELCONNECTSPORTS","IFCRELCONTAINEDINSPATIALSTRUCTURE","IFCRELDEFINESBYPROPERTIES","IFCRELDEFINESBYTYPE","IFCRELNESTS","IFCRELSPACEBOUNDARY","IFCRELVOIDSELEMENT","IFCROOF","IFCSANITARYTERMINAL","IFCSENSOR","IFCSHADINGDEVICE","IFCSITE","IFCSLAB","IFCSLABELEMENTEDCASE","IFCSLABSTANDARDCASE","IFCSOLARDEVICE","IFCSPACE","IFCSPACEHEATER","IFCSPATIALELEMENT","IFCSPATIALSTRUCTUREELEMENT","IFCSPATIALZONE","IFCSTACKTERMINAL","IFCSTAIR","IFCSTAIRFLIGHT","IFCSTRUCTURALACTION","IFCSTRUCTURALACTIVITY","IFCSTRUCTURALCONNECTION","IFCSTRUCTURALCURVEACTION","IFCSTRUCTURALCURVECONNECTION","IFCSTRUCTURALCURVEMEMBER","IFCSTRUCTURALCURVEMEMBERVARYING","IFCSTRUCTURALCURVEREACTION","IFCSTRUCTURALITEM","IFCSTRUCTURALLINEARACTION","IFCSTRUCTURALMEMBER","IFCSTRUCTURALPLANARACTION","IFCSTRUCTURALPOINTACTION","IFCSTRUCTURALPOINTCONNECTION","IFCSTRUCTURALPOINTREACTION","IFCSTRUCTURALREACTION","IFCSTRUCTURALSURFACEACTION","IFCSTRUCTURALSURFACECONNECTION","IFCSTRUCTURALSURFACEMEMBER","IFCSTRUCTURALSURFACEMEMBERVARYING","IFCSTRUCTURALSURFACEREACTION","IFCSURFACEFEATURE","IFCSWITCHINGDEVICE","IFCSYSTEM","IFCSYSTEMFURNITUREELEMENT","IFCTANK","IFCTENDON","IFCTENDONANCHOR","IFCTENDONCONDUIT","IFCTRANSFORMER","IFCTRANSPORTELEMENT","IFCTUBEBUNDLE","IFCTYPEOBJECT","IFCUNITASSIGNMENT","IFCUNITARYCONTROLELEMENT","IFCUNITARYEQUIPMENT","IFCVALVE","IFCVIBRATIONDAMPER","IFCVIBRATIONISOLATOR","IFCVIRTUALELEMENT","IFCVOIDINGFEATURE","IFCWALL","IFCWALLELEMENTEDCASE","IFCWALLSTANDARDCASE","IFCWASTETERMINAL","IFCWINDOW","IFCWINDOWSTANDARDCASE","IfcElements","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","static","tape","ToTape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties2","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","IfcElements2","PropsNames","aggregates","relating","related","spatial","psets","materials","api","getItemProperties","modelID","recursive","GetLine","getPropertySets","elementID","getProperty","getTypeProperties","getMaterialsProperties","getSpatialStructure","includeProperties","getAllTypesOfModel","getSpatialTreeChunks","projectID","GetLineIDsWithType","project","newIfcProject","getSpatialNode","cleanupTypes","getAllItemsOfType","verbose","items","lines","propName","propSetIds","getAllRelatedItemsOfType","getChunks","propNames","relation","rel","saveChunk","relatedItems","item","children","treeChunks","getChildren","nodes","child","node2","newNode","getNodeType","typeID","getRelated","IDs","element","ele","isRelated","crossOriginIsolated","IfcAPI2","fs","wasmPath","ifcGuidMap","Map","Init","customLocateFileHandler","locateFileHandler","endsWith","noInitialRun","OpenModel","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","BOOL_ABORT_THRESHOLD","offsetInSrc","destPtr","destSize","srcSize","CreateModel","ExportFileAsIFC","GetGeometry","geometryExpressID","flatten","rawLineData","GetRawLineData","lineData","FlattenLine","GetAndClearErrors","WriteLine","lineObject","propertyName","property","WriteRawLineData","GetAllLines","SetGeometryTransformation","transformationMatrix","GetCoordinationMatrix","GetVertexArray","getSubArray","GetIndexArray","sizeBytes","CloseModel","delete","StreamAllMeshes","meshCallback","StreamAllMeshesWithTypes","IsModelOpen","LoadAllGeometry","GetFlatMesh","CreateIfcGuidToExpressIdMapping","globalID","SetWasmPath","_arrayLikeToArray","arr2","_unsupportedIterableToArray","minLen","arrayLikeToArray","test","_toConsumableArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","_inherits","subClass","superClass","_typeof","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","assertThisInitialized","_getPrototypeOf","_slicedToArray","arrayWithHoles","_i","_s","_e","_n","_d","iterableToArrayLimit","nonIterableRest","defaultURIBuilder","globalId","encodeURIComponent","buildRelOneToOne","includeInterface","ifcSubjectClassIn","ifcTargetClassIn","rdfRelationship","oppoiteRelationship","graph","ifcAPI","ifcRelationship","rels","relID","relProps","ifcSubjectRel","ifcTargetRel","all","subject","subjectURI","targetURI","interfaceURI","buildRelOneToMany","targetPromises","targets","Set","targetObjects","JSON","parse","stringify","assign","SerializationFormat","Mimetype","N3Format","IfcTypesTree","getAllItemsOfTypeOrSubtype","ifcType","subTypes","getItemSubtypes","treeNode","searchProductTree","collectAllIds","ids","buildClassInstances","rdfClasses","buildClassInstancesFromExpressIDs","expressIDs","URI","prefixes","BlankNode_1","termType","DefaultGraph_1","DefaultGraph","INSTANCE","NamedNode_1","Literal_1","languageOrDatatype","language","datatype","RDF_LANGUAGE_STRING","XSD_STRING","NamedNode","Quad_1","predicate","Variable_1","DataFactory_1","require$$1","require$$2","require$$3","require$$4","require$$5","dataFactoryCounter","blankNodeCounter","blankNodePrefix","namedNode","blankNode","BlankNode","literal","variable","Variable","defaultGraph","quad","Quad","fromTerm","original","fromQuad","resetBlankNodeCounter","__createBinding","k2","__exportStar","require$$6","DF","DataFactory","extensionFunctions","toUpperCase","getID","getNamespace","uri1","uri2","ns","id1","id2","uri","commonjsGlobal","rdfDataFactory","BlankNode$1","DataFactory$1","DefaultGraph$1","Literal$1","NamedNode$1","NamedNode_1$1","Quad$1","Variable$1","geometryType","typeMap","point","POINT","pointz","POINTZ","polygon","POLYGON","polygonz","POLYGONZ","parseWKT","wktString","getType","parsePoint","parsePolygon","typeStr","toLocaleLowerCase","UNKNOWN","parseStrCoordinate","strCoordinate","parseFloat","pointInPolygon$1","pointInPolygonFlat","vs","inside","xi","yi","xj","yj","pointInPolygonNested","nested","flat","pointInPolygon","geoSPARQLFunctions","decimals","mf","p1","p2","sqrt","round","pg","EPSILON","factory","UnitScale","MILLI","CENTI","DECI","NONE","DECA","HECTO","KILO","ucumPrefix","getUCUMCode","unitType","multiplicationFactor","pfx","LENGTHUNIT","AREAUNIT","VOLUMEUNIT","IfcUnits","allUnits","getUnitsOfModel","foundUnitsID","unitsID","unitReference","foundUnit","find","scale","_this","Parser","JSONLD","newEngine","N3","Store","idMapIncludes","storeGlobalId","globalIdMap","getJSONLD","NQuads","getNQuads","getStoreSize","toRDF","jsonLDObject","rdf","tripleCount","quads","addQuads","query","engine","sources","updateResult","resultToString","pipe","stdout","modelUnits","ifcUnits","nquads","getQuads","fromRDF","doc","compact","compacted","serializeStoreContent","Turtle","writer","Writer","addQuad","BOTParser","buildSites","timeEnd","buildBuildings","buildStoreys","buildSpaces","buildElements","buildSpaceAdjacentElementRelationships","buildSpaceContainedElementRelationships","buildStoreyElementRelationships","buildHostedElementRelationships","buildStoreySpaceRelationships","buildBuildingStoreyRelationships","buildSiteBuildingRelationships","getTripleCount","getTriples","ProductParser","buildProducts","buildProductTypes","assignProductType","skippedTypes","expressIDArray","typeId","regex","IfcDatatypes","IfcLabels","PropertyParser","normalizeToSI","getAllRelevantItems","itemIDs","getUnits","getElementProperties","getPSetProperties","writePSets","propertyPromises","buildDirectProperties","psetPropsPromises","getGlobalId","buildPsetProperties","psetNames","psetName","psetURI","pascalize","psetObject","psetProperties","psetProp","propObject","label","unit","_properties$Name","description","_properties$Descripti","objectGlobalId","camelName","camelize","psetPascalName","propNameFull","nominalValue","nominalValueToJSONLD","dataType","valueType","word","$2","$3","getGlobalPosition","objectPlacement","globalPlacement","relativeCoordinates","_objectPlacement$Rela","_objectPlacement$Rela2","relativePlacement","getAbsolutePlacement","typeMappings","FSOParser","classify","portIDs","portPort","portComponent","portFlowDirection","portPlacements","systemComponent","loadInStore","componentConections","connectionInterfaces","segmentLengths","typeIDs","fsoClass","inputA","inputB","flowDirection","portType","getLengthMultiplicationFactor","coordinates","portURI","cpURI","directionalFluidConnectionQuery","executeUpdateQuery","TSOParser","connections","tsoClass","LBDParser","WebIFC","ifcApi","botParser","doParse","productParser","fsoParser","tsoParser"],"mappings":"0rBAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OC/BG,SAASC,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCCFxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAW1B,IAAK0B,IAInC,SAASM,EAAab,EAAac,EAAYC,GAM5D,OALID,GAAYZ,EAAkBF,EAAYgB,UAAWF,GACrDC,GAAab,EAAkBF,EAAae,GAChDJ,OAAOC,eAAeZ,EAAa,YAAa,CAC9CU,UAAU,IAELV,EChBM,SAASiB,EAAgBC,EAAKrC,EAAKG,GAYhD,OAXIH,KAAOqC,EACTP,OAAOC,eAAeM,EAAKrC,EAAK,CAC9BG,MAAOA,EACPwB,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZQ,EAAIrC,GAAOG,EAGNkC,mLCLT,IAAIC,EAAW,SAAUC,GAGvB,IAEIvB,EAFAwB,EAAKV,OAAOK,UACZM,EAASD,EAAGE,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,gBAE/C,SAASC,EAAOd,EAAKrC,EAAKG,GAOxB,OANA2B,OAAOC,eAAeM,EAAKrC,EAAK,CAC9BG,MAAOA,EACPwB,YAAY,EACZC,cAAc,EACdC,UAAU,IAELQ,EAAIrC,GAEb,IAEEmD,EAAO,GAAI,IACX,MAAOpC,GACPoC,EAAS,SAASd,EAAKrC,EAAKG,GAC1B,OAAOkC,EAAIrC,GAAOG,GAItB,SAASiD,EAAKC,EAASC,EAAS5C,EAAM6C,GAEpC,IAAIC,EAAiBF,GAAWA,EAAQnB,qBAAqBsB,EAAYH,EAAUG,EAC/EC,EAAY5B,OAAO6B,OAAOH,EAAerB,WACzCyB,EAAU,IAAIC,EAAQN,GAAe,IAMzC,OAFAG,EAAUI,QAuMZ,SAA0BT,EAAS3C,EAAMkD,GACvC,IAAIG,EAAQC,EAEZ,OAAO,SAAgBC,EAAQhE,GAC7B,GAAI8D,IAAUG,EACZ,MAAM,IAAIC,MAAM,gCAGlB,GAAIJ,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAMhE,EAKR,OAAOoE,IAMT,IAHAT,EAAQK,OAASA,EACjBL,EAAQ3D,IAAMA,IAED,CACX,IAAIqE,EAAWV,EAAQU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUV,GACnD,GAAIW,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBX,EAAQK,OAGVL,EAAQc,KAAOd,EAAQe,MAAQf,EAAQ3D,SAElC,GAAuB,UAAnB2D,EAAQK,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFR,EAAQ3D,IAGhB2D,EAAQgB,kBAAkBhB,EAAQ3D,SAEN,WAAnB2D,EAAQK,QACjBL,EAAQiB,OAAO,SAAUjB,EAAQ3D,KAGnC8D,EAAQG,EAER,IAAIY,EAASC,EAAS1B,EAAS3C,EAAMkD,GACrC,GAAoB,WAAhBkB,EAAOE,KAAmB,CAO5B,GAJAjB,EAAQH,EAAQvD,KACZ+D,EACAa,EAEAH,EAAO7E,MAAQwE,EACjB,SAGF,MAAO,CACLtE,MAAO2E,EAAO7E,IACdI,KAAMuD,EAAQvD,MAGS,UAAhByE,EAAOE,OAChBjB,EAAQK,EAGRR,EAAQK,OAAS,QACjBL,EAAQ3D,IAAM6E,EAAO7E,OA/QPiF,CAAiB7B,EAAS3C,EAAMkD,GAE7CF,EAcT,SAASqB,EAAStE,EAAI4B,EAAKpC,GACzB,IACE,MAAO,CAAE+E,KAAM,SAAU/E,IAAKQ,EAAG0E,KAAK9C,EAAKpC,IAC3C,MAAOc,GACP,MAAO,CAAEiE,KAAM,QAAS/E,IAAKc,IAhBjCwB,EAAQa,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBiB,EAAyB,iBACzBf,EAAoB,YACpBE,EAAoB,YAIpBK,EAAmB,GAMvB,SAAShB,KACT,SAAS2B,KACT,SAASC,KAIT,IAAIC,EAAoB,GACxBnC,EAAOmC,EAAmBzC,GAAgB,WACxC,OAAOlC,QAGT,IAAI4E,EAAWzD,OAAO0D,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4BjD,GAC5BC,EAAO0C,KAAKM,EAAyB5C,KAGvCyC,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BlD,UAClCsB,EAAUtB,UAAYL,OAAO6B,OAAO2B,GAYtC,SAASM,EAAsBzD,GAC7B,CAAC,OAAQ,QAAS,UAAU0D,SAAQ,SAAS5B,GAC3Cd,EAAOhB,EAAW8B,GAAQ,SAAShE,GACjC,OAAOU,KAAKmD,QAAQG,EAAQhE,SAkClC,SAAS6F,EAAcpC,EAAWqC,GAChC,SAASC,EAAO/B,EAAQhE,EAAKL,EAASC,GACpC,IAAIiF,EAASC,EAASrB,EAAUO,GAASP,EAAWzD,GACpD,GAAoB,UAAhB6E,EAAOE,KAEJ,CACL,IAAIiB,EAASnB,EAAO7E,IAChBE,EAAQ8F,EAAO9F,MACnB,OAAIA,GACiB,iBAAVA,GACPsC,EAAO0C,KAAKhF,EAAO,WACd4F,EAAYnG,QAAQO,EAAM+F,SAAS3F,MAAK,SAASJ,GACtD6F,EAAO,OAAQ7F,EAAOP,EAASC,MAC9B,SAASkB,GACViF,EAAO,QAASjF,EAAKnB,EAASC,MAI3BkG,EAAYnG,QAAQO,GAAOI,MAAK,SAAS4F,GAI9CF,EAAO9F,MAAQgG,EACfvG,EAAQqG,MACP,SAAS7F,GAGV,OAAO4F,EAAO,QAAS5F,EAAOR,EAASC,MAvBzCA,EAAOiF,EAAO7E,KA4BlB,IAAImG,EAgCJzF,KAAKmD,QA9BL,SAAiBG,EAAQhE,GACvB,SAASoG,IACP,OAAO,IAAIN,GAAY,SAASnG,EAASC,GACvCmG,EAAO/B,EAAQhE,EAAKL,EAASC,MAIjC,OAAOuG,EAaLA,EAAkBA,EAAgB7F,KAChC8F,EAGAA,GACEA,KAkHV,SAAS7B,EAAoBF,EAAUV,GACrC,IAAIK,EAASK,EAASxB,SAASc,EAAQK,QACvC,GAAIA,IAAWjD,EAAW,CAKxB,GAFA4C,EAAQU,SAAW,KAEI,UAAnBV,EAAQK,OAAoB,CAE9B,GAAIK,EAASxB,SAAiB,SAG5Bc,EAAQK,OAAS,SACjBL,EAAQ3D,IAAMe,EACdwD,EAAoBF,EAAUV,GAEP,UAAnBA,EAAQK,QAGV,OAAOQ,EAIXb,EAAQK,OAAS,QACjBL,EAAQ3D,IAAM,IAAImB,UAChB,kDAGJ,OAAOqD,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAASxB,SAAUc,EAAQ3D,KAEzD,GAAoB,UAAhB6E,EAAOE,KAIT,OAHApB,EAAQK,OAAS,QACjBL,EAAQ3D,IAAM6E,EAAO7E,IACrB2D,EAAQU,SAAW,KACZG,EAGT,IAAIvE,EAAO4E,EAAO7E,IAElB,OAAMC,EAOFA,EAAKG,MAGPuD,EAAQU,EAASgC,YAAcpG,EAAKC,MAGpCyD,EAAQ2C,KAAOjC,EAASkC,QAQD,WAAnB5C,EAAQK,SACVL,EAAQK,OAAS,OACjBL,EAAQ3D,IAAMe,GAUlB4C,EAAQU,SAAW,KACZG,GANEvE,GA3BP0D,EAAQK,OAAS,QACjBL,EAAQ3D,IAAM,IAAImB,UAAU,oCAC5BwC,EAAQU,SAAW,KACZG,GAoDX,SAASgC,EAAaC,GACpB,IAAIC,EAAQ,CAAEC,OAAQF,EAAK,IAEvB,KAAKA,IACPC,EAAME,SAAWH,EAAK,IAGpB,KAAKA,IACPC,EAAMG,WAAaJ,EAAK,GACxBC,EAAMI,SAAWL,EAAK,IAGxB/F,KAAKqG,WAAWC,KAAKN,GAGvB,SAASO,EAAcP,GACrB,IAAI7B,EAAS6B,EAAMQ,YAAc,GACjCrC,EAAOE,KAAO,gBACPF,EAAO7E,IACd0G,EAAMQ,WAAarC,EAGrB,SAASjB,EAAQN,GAIf5C,KAAKqG,WAAa,CAAC,CAAEJ,OAAQ,SAC7BrD,EAAYsC,QAAQY,EAAc9F,MAClCA,KAAKyG,OAAM,GA8Bb,SAAS1B,EAAO2B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASxE,GAC9B,GAAIyE,EACF,OAAOA,EAAenC,KAAKkC,GAG7B,GAA6B,mBAAlBA,EAASd,KAClB,OAAOc,EAGT,IAAKE,MAAMF,EAAS5F,QAAS,CAC3B,IAAID,GAAK,EAAG+E,EAAO,SAASA,IAC1B,OAAS/E,EAAI6F,EAAS5F,QACpB,GAAIgB,EAAO0C,KAAKkC,EAAU7F,GAGxB,OAFA+E,EAAKpG,MAAQkH,EAAS7F,GACtB+E,EAAKlG,MAAO,EACLkG,EAOX,OAHAA,EAAKpG,MAAQa,EACbuF,EAAKlG,MAAO,EAELkG,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMlC,GAIjB,SAASA,IACP,MAAO,CAAElE,MAAOa,EAAWX,MAAM,GA+MnC,OA7mBA+E,EAAkBjD,UAAYkD,EAC9BlC,EAAOwC,EAAI,cAAeN,GAC1BlC,EAAOkC,EAA4B,cAAeD,GAClDA,EAAkBoC,YAAcrE,EAC9BkC,EACApC,EACA,qBAaFV,EAAQkF,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAASvC,GAG2B,uBAAnCuC,EAAKH,aAAeG,EAAKE,QAIhCtF,EAAQuF,KAAO,SAASJ,GAQtB,OAPI5F,OAAOiG,eACTjG,OAAOiG,eAAeL,EAAQrC,IAE9BqC,EAAOM,UAAY3C,EACnBlC,EAAOuE,EAAQzE,EAAmB,sBAEpCyE,EAAOvF,UAAYL,OAAO6B,OAAOgC,GAC1B+B,GAOTnF,EAAQ0F,MAAQ,SAAShI,GACvB,MAAO,CAAEiG,QAASjG,IAsEpB2F,EAAsBE,EAAc3D,WACpCgB,EAAO2C,EAAc3D,UAAWY,GAAqB,WACnD,OAAOpC,QAET4B,EAAQuD,cAAgBA,EAKxBvD,EAAQ2F,MAAQ,SAAS7E,EAASC,EAAS5C,EAAM6C,EAAawC,QACxC,IAAhBA,IAAwBA,EAAczF,SAE1C,IAAI6H,EAAO,IAAIrC,EACb1C,EAAKC,EAASC,EAAS5C,EAAM6C,GAC7BwC,GAGF,OAAOxD,EAAQkF,oBAAoBnE,GAC/B6E,EACAA,EAAK5B,OAAOhG,MAAK,SAAS0F,GACxB,OAAOA,EAAO5F,KAAO4F,EAAO9F,MAAQgI,EAAK5B,WAuKjDX,EAAsBD,GAEtBxC,EAAOwC,EAAI1C,EAAmB,aAO9BE,EAAOwC,EAAI9C,GAAgB,WACzB,OAAOlC,QAGTwC,EAAOwC,EAAI,YAAY,WACrB,MAAO,wBAkCTpD,EAAQ6F,KAAO,SAASC,GACtB,IAAID,EAAO,GACX,IAAK,IAAIpI,KAAOqI,EACdD,EAAKnB,KAAKjH,GAMZ,OAJAoI,EAAKE,UAIE,SAAS/B,IACd,KAAO6B,EAAK3G,QAAQ,CAClB,IAAIzB,EAAMoI,EAAKG,MACf,GAAIvI,KAAOqI,EAGT,OAFA9B,EAAKpG,MAAQH,EACbuG,EAAKlG,MAAO,EACLkG,EAQX,OADAA,EAAKlG,MAAO,EACLkG,IAsCXhE,EAAQmD,OAASA,EAMjB7B,EAAQ1B,UAAY,CAClByF,YAAa/D,EAEbuD,MAAO,SAASoB,GAcd,GAbA7H,KAAK8H,KAAO,EACZ9H,KAAK4F,KAAO,EAGZ5F,KAAK+D,KAAO/D,KAAKgE,MAAQ3D,EACzBL,KAAKN,MAAO,EACZM,KAAK2D,SAAW,KAEhB3D,KAAKsD,OAAS,OACdtD,KAAKV,IAAMe,EAEXL,KAAKqG,WAAWnB,QAAQqB,IAEnBsB,EACH,IAAK,IAAIX,KAAQlH,KAEQ,MAAnBkH,EAAKa,OAAO,IACZjG,EAAO0C,KAAKxE,KAAMkH,KACjBN,OAAOM,EAAKc,MAAM,MACrBhI,KAAKkH,GAAQ7G,IAMrB4H,KAAM,WACJjI,KAAKN,MAAO,EAEZ,IACIwI,EADYlI,KAAKqG,WAAW,GACLG,WAC3B,GAAwB,UAApB0B,EAAW7D,KACb,MAAM6D,EAAW5I,IAGnB,OAAOU,KAAKmI,MAGdlE,kBAAmB,SAASmE,GAC1B,GAAIpI,KAAKN,KACP,MAAM0I,EAGR,IAAInF,EAAUjD,KACd,SAASqI,EAAOC,EAAKC,GAYnB,OAXApE,EAAOE,KAAO,QACdF,EAAO7E,IAAM8I,EACbnF,EAAQ2C,KAAO0C,EAEXC,IAGFtF,EAAQK,OAAS,OACjBL,EAAQ3D,IAAMe,KAGNkI,EAGZ,IAAK,IAAI1H,EAAIb,KAAKqG,WAAWvF,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAImF,EAAQhG,KAAKqG,WAAWxF,GACxBsD,EAAS6B,EAAMQ,WAEnB,GAAqB,SAAjBR,EAAMC,OAIR,OAAOoC,EAAO,OAGhB,GAAIrC,EAAMC,QAAUjG,KAAK8H,KAAM,CAC7B,IAAIU,EAAW1G,EAAO0C,KAAKwB,EAAO,YAC9ByC,EAAa3G,EAAO0C,KAAKwB,EAAO,cAEpC,GAAIwC,GAAYC,EAAY,CAC1B,GAAIzI,KAAK8H,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,GACzB,GAAIlG,KAAK8H,KAAO9B,EAAMG,WAC3B,OAAOkC,EAAOrC,EAAMG,iBAGjB,GAAIqC,GACT,GAAIxI,KAAK8H,KAAO9B,EAAME,SACpB,OAAOmC,EAAOrC,EAAME,UAAU,OAG3B,CAAA,IAAIuC,EAMT,MAAM,IAAIjF,MAAM,0CALhB,GAAIxD,KAAK8H,KAAO9B,EAAMG,WACpB,OAAOkC,EAAOrC,EAAMG,gBAU9BjC,OAAQ,SAASG,EAAM/E,GACrB,IAAK,IAAIuB,EAAIb,KAAKqG,WAAWvF,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAImF,EAAQhG,KAAKqG,WAAWxF,GAC5B,GAAImF,EAAMC,QAAUjG,KAAK8H,MACrBhG,EAAO0C,KAAKwB,EAAO,eACnBhG,KAAK8H,KAAO9B,EAAMG,WAAY,CAChC,IAAIuC,EAAe1C,EACnB,OAIA0C,IACU,UAATrE,GACS,aAATA,IACDqE,EAAazC,QAAU3G,GACvBA,GAAOoJ,EAAavC,aAGtBuC,EAAe,MAGjB,IAAIvE,EAASuE,EAAeA,EAAalC,WAAa,GAItD,OAHArC,EAAOE,KAAOA,EACdF,EAAO7E,IAAMA,EAEToJ,GACF1I,KAAKsD,OAAS,OACdtD,KAAK4F,KAAO8C,EAAavC,WAClBrC,GAGF9D,KAAK2I,SAASxE,IAGvBwE,SAAU,SAASxE,EAAQiC,GACzB,GAAoB,UAAhBjC,EAAOE,KACT,MAAMF,EAAO7E,IAcf,MAXoB,UAAhB6E,EAAOE,MACS,aAAhBF,EAAOE,KACTrE,KAAK4F,KAAOzB,EAAO7E,IACM,WAAhB6E,EAAOE,MAChBrE,KAAKmI,KAAOnI,KAAKV,IAAM6E,EAAO7E,IAC9BU,KAAKsD,OAAS,SACdtD,KAAK4F,KAAO,OACa,WAAhBzB,EAAOE,MAAqB+B,IACrCpG,KAAK4F,KAAOQ,GAGPtC,GAGT8E,OAAQ,SAASzC,GACf,IAAK,IAAItF,EAAIb,KAAKqG,WAAWvF,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAImF,EAAQhG,KAAKqG,WAAWxF,GAC5B,GAAImF,EAAMG,aAAeA,EAGvB,OAFAnG,KAAK2I,SAAS3C,EAAMQ,WAAYR,EAAMI,UACtCG,EAAcP,GACPlC,IAKb+E,MAAS,SAAS5C,GAChB,IAAK,IAAIpF,EAAIb,KAAKqG,WAAWvF,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAImF,EAAQhG,KAAKqG,WAAWxF,GAC5B,GAAImF,EAAMC,SAAWA,EAAQ,CAC3B,IAAI9B,EAAS6B,EAAMQ,WACnB,GAAoB,UAAhBrC,EAAOE,KAAkB,CAC3B,IAAIyE,EAAS3E,EAAO7E,IACpBiH,EAAcP,GAEhB,OAAO8C,GAMX,MAAM,IAAItF,MAAM,0BAGlBuF,cAAe,SAASrC,EAAUf,EAAYE,GAa5C,OAZA7F,KAAK2D,SAAW,CACdxB,SAAU4C,EAAO2B,GACjBf,WAAYA,EACZE,QAASA,GAGS,SAAhB7F,KAAKsD,SAGPtD,KAAKV,IAAMe,GAGNyD,IAQJlC,GAOsBoH,EAAOpH,SAGtC,IACEqH,mBAAqBtH,EACrB,MAAOuH,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqBtH,EAEhCyH,SAAS,IAAK,yBAAdA,CAAwCzH,YC/uB5C0H,EAAiBC,YCAF,sFCAmB,oBAAXC,OAAyBA,OACpB,oBAATxJ,KAAuBA,KACZ,oBAAXyJ,OAAyBA,OAAS,GCCrD,SAASC,IACL,MAAM,IAAIjG,MAAM,mCAEpB,SAASkG,IACL,MAAM,IAAIlG,MAAM,qCAEpB,IAAImG,EAAmBF,EACnBG,EAAqBF,EAQzB,SAASG,EAAWC,GAChB,GAAIH,IAAqBI,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKH,IAAqBF,IAAqBE,IAAqBI,WAEhE,OADAJ,EAAmBI,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAOH,EAAiBG,EAAK,GAC/B,MAAME,GACJ,IAEI,OAAOL,EAAiBnF,KAAK,KAAMsF,EAAK,GAC1C,MAAME,GAEJ,OAAOL,EAAiBnF,KAAKxE,KAAM8J,EAAK,KA1BnB,mBAAtBP,EAAOQ,aACdJ,EAAmBI,YAEY,mBAAxBR,EAAOU,eACdL,EAAqBK,cAuDzB,IAEIC,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAapJ,OACbqJ,EAAQD,EAAaK,OAAOJ,GAE5BE,GAAc,EAEdF,EAAMrJ,QACN0J,KAIR,SAASA,IACL,IAAIJ,EAAJ,CAGA,IAAIK,EAAUZ,EAAWS,GACzBF,GAAW,EAGX,IADA,IAAIM,EAAMP,EAAMrJ,OACV4J,GAAK,CAGP,IAFAR,EAAeC,EACfA,EAAQ,KACCE,EAAaK,GACdR,GACAA,EAAaG,GAAYM,MAGjCN,GAAc,EACdK,EAAMP,EAAMrJ,OAEhBoJ,EAAe,KACfE,GAAW,EAnEf,SAAyBQ,GACrB,GAAIhB,IAAuBK,aAEvB,OAAOA,aAAaW,GAGxB,IAAKhB,IAAuBF,IAAwBE,IAAuBK,aAEvE,OADAL,EAAqBK,aACdA,aAAaW,GAExB,IAEWhB,EAAmBgB,GAC5B,MAAOZ,GACL,IAEI,OAAOJ,EAAmBpF,KAAK,KAAMoG,GACvC,MAAOZ,GAGL,OAAOJ,EAAmBpF,KAAKxE,KAAM4K,KAgD7CC,CAAgBJ,IAepB,SAASK,EAAKhB,EAAKiB,GACf/K,KAAK8J,IAAMA,EACX9J,KAAK+K,MAAQA,EAEjBD,EAAKtJ,UAAUmJ,IAAM,WACjB3K,KAAK8J,IAAI3J,MAAM,KAAMH,KAAK+K,QAY9B,SAASC,KAEF,IAAIC,EAAKD,EACLE,EAAcF,EACdG,EAAOH,EACPI,EAAMJ,EACNK,EAAiBL,EACjBM,EAAqBN,EACrBO,EAAOP,EAalB,IAAIQ,EAAcjC,EAAOiC,aAAe,GACpCC,EACFD,EAAYE,KACZF,EAAYG,QACZH,EAAYI,OACZJ,EAAYK,MACZL,EAAYM,WACZ,WAAY,OAAO,IAAKC,MAAQC,WAmBlC,IAAIC,EAAY,IAAIF,WAOL,CACbG,SArFK,SAAkBpC,GACrB,IAAI7J,EAAO,IAAIkM,MAAMjM,UAAUY,OAAS,GACxC,GAAIZ,UAAUY,OAAS,EACnB,IAAK,IAAID,EAAI,EAAGA,EAAIX,UAAUY,OAAQD,IAClCZ,EAAKY,EAAI,GAAKX,UAAUW,GAGhCsJ,EAAM7D,KAAK,IAAIwE,EAAKhB,EAAK7J,IACJ,IAAjBkK,EAAMrJ,QAAiBsJ,GACvBP,EAAWW,IA6EjB4B,MAlEiB,UAmEjBC,SAjEmB,EAkEnBC,IAjEe,GAkEfC,KAjEgB,GAkEhBC,QAjEmB,GAkEnBC,SAjEoB,GAkEpBxB,GAAIA,EACJC,YAAaA,EACbC,KAAMA,EACNC,IAAKA,EACLC,eAAgBA,EAChBC,mBAAoBA,EACpBC,KAAMA,EACNmB,QA3DK,SAAiBxF,GACpB,MAAM,IAAI1D,MAAM,qCA2DlBmJ,IAxDK,WAAkB,MAAO,KAyD9BC,MAxDK,SAAgBC,GACnB,MAAM,IAAIrJ,MAAM,mCAwDlBsJ,MAtDK,WAAmB,OAAO,GAuD/BC,OAzCK,SAAgBC,GACrB,IAAIC,EAA6C,KAAjCxB,EAAejH,KAAKgH,GAChC0B,EAAUC,KAAKC,MAAMH,GACrBI,EAAcF,KAAKC,MAAOH,EAAU,EAAG,KAS3C,OARID,IACFE,GAAoBF,EAAkB,IACtCK,GAA4BL,EAAkB,IAC9B,IACdE,IACAG,GAAe,MAGZ,CAACH,EAAQG,IA8BhBC,SAnFoB,UAoFpBC,QA9EmB,GA+EnBC,OA9EkB,GA+ElBC,OA7BK,WAGL,OAFkB,IAAI1B,KACEE,GACX,QClMA,qECCXyB,EAAS,GACTC,EAAY,GACZC,EAA4B,oBAAfC,WAA6BA,WAAa1B,MACvD2B,GAAS,EACb,SAASC,IACPD,GAAS,EAET,IADA,IAAIE,EAAO,mEACFnN,EAAI,EAAG6J,EAAMsD,EAAKlN,OAAQD,EAAI6J,IAAO7J,EAC5C6M,EAAO7M,GAAKmN,EAAKnN,GACjB8M,EAAUK,EAAKC,WAAWpN,IAAMA,EAGlC8M,EAAU,IAAIM,WAAW,IAAM,GAC/BN,EAAU,IAAIM,WAAW,IAAM,GAoDjC,SAASC,EAAaC,EAAOC,EAAOC,GAGlC,IAFA,IAAIC,EALoBC,EAMpBC,EAAS,GACJ3N,EAAIuN,EAAOvN,EAAIwN,EAAKxN,GAAK,EAChCyN,GAAOH,EAAMtN,IAAM,KAAOsN,EAAMtN,EAAI,IAAM,GAAMsN,EAAMtN,EAAI,GAC1D2N,EAAOlI,KARFoH,GADiBa,EASMD,IART,GAAK,IAAQZ,EAAOa,GAAO,GAAK,IAAQb,EAAOa,GAAO,EAAI,IAAQb,EAAa,GAANa,IAU9F,OAAOC,EAAOC,KAAK,IAGd,SAASC,EAAeP,GAI7B,IAAIG,EAHCR,GACHC,IAUF,IAPA,IAAIrD,EAAMyD,EAAMrN,OACZ6N,EAAajE,EAAM,EACnB8D,EAAS,GACTI,EAAQ,GACRC,EAAiB,MAGZhO,EAAI,EAAGiO,EAAOpE,EAAMiE,EAAY9N,EAAIiO,EAAMjO,GAAKgO,EACtDD,EAAMtI,KAAK4H,EAAYC,EAAOtN,EAAIA,EAAIgO,EAAkBC,EAAOA,EAAQjO,EAAIgO,IAmB7E,OAfmB,IAAfF,GACFL,EAAMH,EAAMzD,EAAM,GAClB8D,GAAUd,EAAOY,GAAO,GACxBE,GAAUd,EAAQY,GAAO,EAAK,IAC9BE,GAAU,MACc,IAAfG,IACTL,GAAOH,EAAMzD,EAAM,IAAM,GAAMyD,EAAMzD,EAAM,GAC3C8D,GAAUd,EAAOY,GAAO,IACxBE,GAAUd,EAAQY,GAAO,EAAK,IAC9BE,GAAUd,EAAQY,GAAO,EAAK,IAC9BE,GAAU,KAGZI,EAAMtI,KAAKkI,GAEJI,EAAMH,KAAK,IC3Gb,SAASM,EAAMC,EAAQC,EAAQC,EAAMC,EAAMC,GAChD,IAAIpF,EAAGqF,EACHC,EAAgB,EAATF,EAAaD,EAAO,EAC3BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACT5O,EAAIqO,EAAQE,EAAS,EAAK,EAC1BM,EAAIR,GAAQ,EAAI,EAChBS,EAAIX,EAAOC,EAASpO,GAOxB,IALAA,GAAK6O,EAEL1F,EAAI2F,GAAM,IAAOF,GAAU,EAC3BE,KAAQF,EACRA,GAASH,EACFG,EAAQ,EAAGzF,EAAQ,IAAJA,EAAUgF,EAAOC,EAASpO,GAAIA,GAAK6O,EAAGD,GAAS,GAKrE,IAHAJ,EAAIrF,GAAM,IAAOyF,GAAU,EAC3BzF,KAAQyF,EACRA,GAASN,EACFM,EAAQ,EAAGJ,EAAQ,IAAJA,EAAUL,EAAOC,EAASpO,GAAIA,GAAK6O,EAAGD,GAAS,GAErE,GAAU,IAANzF,EACFA,EAAI,EAAIwF,MACH,CAAA,GAAIxF,IAAMuF,EACf,OAAOF,EAAIO,IAAsBC,EAAAA,GAAdF,GAAK,EAAI,GAE5BN,GAAQlC,KAAK2C,IAAI,EAAGX,GACpBnF,GAAQwF,EAEV,OAAQG,GAAK,EAAI,GAAKN,EAAIlC,KAAK2C,IAAI,EAAG9F,EAAImF,GAGrC,SAASY,EAAOf,EAAQxP,EAAOyP,EAAQC,EAAMC,EAAMC,GACxD,IAAIpF,EAAGqF,EAAGW,EACNV,EAAgB,EAATF,EAAaD,EAAO,EAC3BI,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBU,EAAe,KAATd,EAAchC,KAAK2C,IAAI,GAAI,IAAM3C,KAAK2C,IAAI,GAAI,IAAM,EAC1DjP,EAAIqO,EAAO,EAAKE,EAAS,EACzBM,EAAIR,EAAO,GAAK,EAChBS,EAAInQ,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQ2N,KAAK+C,IAAI1Q,GAEboH,MAAMpH,IAAUA,IAAUqQ,EAAAA,GAC5BR,EAAIzI,MAAMpH,GAAS,EAAI,EACvBwK,EAAIuF,IAEJvF,EAAImD,KAAKC,MAAMD,KAAKgD,IAAI3Q,GAAS2N,KAAKiD,KAClC5Q,GAASwQ,EAAI7C,KAAK2C,IAAI,GAAI9F,IAAM,IAClCA,IACAgG,GAAK,IAGLxQ,GADEwK,EAAIwF,GAAS,EACNS,EAAKD,EAELC,EAAK9C,KAAK2C,IAAI,EAAG,EAAIN,IAEpBQ,GAAK,IACfhG,IACAgG,GAAK,GAGHhG,EAAIwF,GAASD,GACfF,EAAI,EACJrF,EAAIuF,GACKvF,EAAIwF,GAAS,GACtBH,GAAK7P,EAAQwQ,EAAI,GAAK7C,KAAK2C,IAAI,EAAGX,GAClCnF,GAAQwF,IAERH,EAAI7P,EAAQ2N,KAAK2C,IAAI,EAAGN,EAAQ,GAAKrC,KAAK2C,IAAI,EAAGX,GACjDnF,EAAI,IAIDmF,GAAQ,EAAGH,EAAOC,EAASpO,GAAS,IAAJwO,EAAUxO,GAAK6O,EAAGL,GAAK,IAAKF,GAAQ,GAI3E,IAFAnF,EAAKA,GAAKmF,EAAQE,EAClBC,GAAQH,EACDG,EAAO,EAAGN,EAAOC,EAASpO,GAAS,IAAJmJ,EAAUnJ,GAAK6O,EAAG1F,GAAK,IAAKsF,GAAQ,GAE1EN,EAAOC,EAASpO,EAAI6O,IAAU,IAAJC,ECnF5B,IAAIU,EAAW,GAAGA,WAEHlE,MAAMmE,SAAW,SAAUC,GACxC,MAA6B,kBAAtBF,EAAS7L,KAAK+L,IC8DvB,SAASC,IACP,OAAOC,GAAOC,oBACV,WACA,WAGN,SAASC,GAAcC,EAAM9P,GAC3B,GAAI0P,IAAe1P,EACjB,MAAM,IAAI+P,WAAW,8BAcvB,OAZIJ,GAAOC,qBAETE,EAAO,IAAI/C,WAAW/M,IACjBuG,UAAYoJ,GAAOjP,WAGX,OAAToP,IACFA,EAAO,IAAIH,GAAO3P,IAEpB8P,EAAK9P,OAASA,GAGT8P,EAaF,SAASH,GAAQnR,EAAKwR,EAAkBhQ,GAC7C,KAAK2P,GAAOC,qBAAyB1Q,gBAAgByQ,IACnD,OAAO,IAAIA,GAAOnR,EAAKwR,EAAkBhQ,GAI3C,GAAmB,iBAARxB,EAAkB,CAC3B,GAAgC,iBAArBwR,EACT,MAAM,IAAItN,MACR,qEAGJ,OAAOuN,GAAY/Q,KAAMV,GAE3B,OAAO0R,GAAKhR,KAAMV,EAAKwR,EAAkBhQ,GAW3C,SAASkQ,GAAMJ,EAAMpR,EAAOsR,EAAkBhQ,GAC5C,GAAqB,iBAAVtB,EACT,MAAM,IAAIiB,UAAU,yCAGtB,MAA2B,oBAAhBwQ,aAA+BzR,aAAiByR,YA6H7D,SAA0BL,EAAM7F,EAAOmG,EAAYpQ,GAGjD,GAFAiK,EAAMoG,WAEFD,EAAa,GAAKnG,EAAMoG,WAAaD,EACvC,MAAM,IAAIL,WAAW,6BAGvB,GAAI9F,EAAMoG,WAAaD,GAAcpQ,GAAU,GAC7C,MAAM,IAAI+P,WAAW,6BAIrB9F,OADiB1K,IAAf6Q,QAAuC7Q,IAAXS,EACtB,IAAI+M,WAAW9C,QACH1K,IAAXS,EACD,IAAI+M,WAAW9C,EAAOmG,GAEtB,IAAIrD,WAAW9C,EAAOmG,EAAYpQ,GAGxC2P,GAAOC,qBAETE,EAAO7F,GACF1D,UAAYoJ,GAAOjP,UAGxBoP,EAAOQ,GAAcR,EAAM7F,GAE7B,OAAO6F,EAvJES,CAAgBT,EAAMpR,EAAOsR,EAAkBhQ,GAGnC,iBAAVtB,EAwFb,SAAqBoR,EAAMU,EAAQC,GACT,iBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKd,GAAOe,WAAWD,GACrB,MAAM,IAAI9Q,UAAU,8CAGtB,IAAIK,EAAwC,EAA/BqQ,GAAWG,EAAQC,GAG5BE,GAFJb,EAAOD,GAAaC,EAAM9P,IAERiP,MAAMuB,EAAQC,GAE5BE,IAAW3Q,IAIb8P,EAAOA,EAAK5I,MAAM,EAAGyJ,IAGvB,OAAOb,EA5GEc,CAAWd,EAAMpR,EAAOsR,GAsJnC,SAAqBF,EAAMlP,GACzB,GAAIiQ,GAAiBjQ,GAAM,CACzB,IAAIgJ,EAA4B,EAAtBkH,GAAQlQ,EAAIZ,QAGtB,OAAoB,KAFpB8P,EAAOD,GAAaC,EAAMlG,IAEjB5J,QAITY,EAAImQ,KAAKjB,EAAM,EAAG,EAAGlG,GAHZkG,EAOX,GAAIlP,EAAK,CACP,GAA4B,oBAAhBuP,aACRvP,EAAIsN,kBAAkBiC,aAAgB,WAAYvP,EACpD,MAA0B,iBAAfA,EAAIZ,SAg9CLgR,EAh9CkCpQ,EAAIZ,SAi9CrCgR,EAh9CFnB,GAAaC,EAAM,GAErBQ,GAAcR,EAAMlP,GAG7B,GAAiB,WAAbA,EAAI2C,MAAqBiM,EAAQ5O,EAAIqQ,MACvC,OAAOX,GAAcR,EAAMlP,EAAIqQ,MAy8CrC,IAAgBD,EAr8Cd,MAAM,IAAIrR,UAAU,sFA9KbuR,CAAWpB,EAAMpR,GA4B1B,SAASyS,GAAYC,GACnB,GAAoB,iBAATA,EACT,MAAM,IAAIzR,UAAU,oCACf,GAAIyR,EAAO,EAChB,MAAM,IAAIrB,WAAW,wCA4BzB,SAASE,GAAaH,EAAMsB,GAG1B,GAFAD,GAAWC,GACXtB,EAAOD,GAAaC,EAAMsB,EAAO,EAAI,EAAoB,EAAhBN,GAAQM,KAC5CzB,GAAOC,oBACV,IAAK,IAAI7P,EAAI,EAAGA,EAAIqR,IAAQrR,EAC1B+P,EAAK/P,GAAK,EAGd,OAAO+P,EAwCT,SAASQ,GAAeR,EAAM7F,GAC5B,IAAIjK,EAASiK,EAAMjK,OAAS,EAAI,EAA4B,EAAxB8Q,GAAQ7G,EAAMjK,QAClD8P,EAAOD,GAAaC,EAAM9P,GAC1B,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAC/B+P,EAAK/P,GAAgB,IAAXkK,EAAMlK,GAElB,OAAO+P,EA+DT,SAASgB,GAAS9Q,GAGhB,GAAIA,GAAU0P,IACZ,MAAM,IAAIK,WAAW,0DACaL,IAAaH,SAAS,IAAM,UAEhE,OAAgB,EAATvP,EAUT,SAAS6Q,GAAkBQ,GACzB,QAAe,MAALA,IAAaA,EAAEC,WA2E3B,SAASjB,GAAYG,EAAQC,GAC3B,GAAII,GAAiBL,GACnB,OAAOA,EAAOxQ,OAEhB,GAA2B,oBAAhBmQ,aAA6D,mBAAvBA,YAAYoB,SACxDpB,YAAYoB,OAAOf,IAAWA,aAAkBL,aACnD,OAAOK,EAAOH,WAEM,iBAAXG,IACTA,EAAS,GAAKA,GAGhB,IAAI5G,EAAM4G,EAAOxQ,OACjB,GAAY,IAAR4J,EAAW,OAAO,EAItB,IADA,IAAI4H,GAAc,IAEhB,OAAQf,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAO7G,EACT,IAAK,OACL,IAAK,QACL,UAAKrK,EACH,OAAOkS,GAAYjB,GAAQxQ,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAN4J,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAO8H,GAAclB,GAAQxQ,OAC/B,QACE,GAAIwR,EAAa,OAAOC,GAAYjB,GAAQxQ,OAC5CyQ,GAAY,GAAKA,GAAUkB,cAC3BH,GAAc,GAMtB,SAASI,GAAcnB,EAAUnD,EAAOC,GACtC,IAAIiE,GAAc,EAclB,SALcjS,IAAV+N,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQpO,KAAKc,OACf,MAAO,GAOT,SAJYT,IAARgO,GAAqBA,EAAMrO,KAAKc,UAClCuN,EAAMrO,KAAKc,QAGTuN,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKmD,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAOoB,GAAS3S,KAAMoO,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOuE,GAAU5S,KAAMoO,EAAOC,GAEhC,IAAK,QACH,OAAOwE,GAAW7S,KAAMoO,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOyE,GAAY9S,KAAMoO,EAAOC,GAElC,IAAK,SACH,OAAO0E,GAAY/S,KAAMoO,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO2E,GAAahT,KAAMoO,EAAOC,GAEnC,QACE,GAAIiE,EAAa,MAAM,IAAI7R,UAAU,qBAAuB8Q,GAC5DA,GAAYA,EAAW,IAAIkB,cAC3BH,GAAc,GAStB,SAASW,GAAMd,EAAGe,EAAG7D,GACnB,IAAIxO,EAAIsR,EAAEe,GACVf,EAAEe,GAAKf,EAAE9C,GACT8C,EAAE9C,GAAKxO,EAmIT,SAASsS,GAAsBnE,EAAQ8C,EAAKZ,EAAYK,EAAU1E,GAEhE,GAAsB,IAAlBmC,EAAOlO,OAAc,OAAQ,EAmBjC,GAhB0B,iBAAfoQ,GACTK,EAAWL,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACVtK,MAAMsK,KAERA,EAAarE,EAAM,EAAKmC,EAAOlO,OAAS,GAItCoQ,EAAa,IAAGA,EAAalC,EAAOlO,OAASoQ,GAC7CA,GAAclC,EAAOlO,OAAQ,CAC/B,GAAI+L,EAAK,OAAQ,EACZqE,EAAalC,EAAOlO,OAAS,OAC7B,GAAIoQ,EAAa,EAAG,CACzB,IAAIrE,EACC,OAAQ,EADJqE,EAAa,EAUxB,GALmB,iBAARY,IACTA,EAAMrB,GAAOO,KAAKc,EAAKP,IAIrBI,GAAiBG,GAEnB,OAAmB,IAAfA,EAAIhR,QACE,EAEHsS,GAAapE,EAAQ8C,EAAKZ,EAAYK,EAAU1E,GAClD,GAAmB,iBAARiF,EAEhB,OADAA,GAAY,IACRrB,GAAOC,qBACiC,mBAAjC7C,WAAWrM,UAAU6R,QAC1BxG,EACKgB,WAAWrM,UAAU6R,QAAQ7O,KAAKwK,EAAQ8C,EAAKZ,GAE/CrD,WAAWrM,UAAU8R,YAAY9O,KAAKwK,EAAQ8C,EAAKZ,GAGvDkC,GAAapE,EAAQ,CAAE8C,GAAOZ,EAAYK,EAAU1E,GAG7D,MAAM,IAAIpM,UAAU,wCAGtB,SAAS2S,GAAc7C,EAAKuB,EAAKZ,EAAYK,EAAU1E,GACrD,IA0BIhM,EA1BA0S,EAAY,EACZC,EAAYjD,EAAIzP,OAChB2S,EAAY3B,EAAIhR,OAEpB,QAAiBT,IAAbkR,IAEe,UADjBA,EAAWmC,OAAOnC,GAAUkB,gBACY,UAAblB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAIhB,EAAIzP,OAAS,GAAKgR,EAAIhR,OAAS,EACjC,OAAQ,EAEVyS,EAAY,EACZC,GAAa,EACbC,GAAa,EACbvC,GAAc,EAIlB,SAASnC,EAAM4E,EAAK9S,GAClB,OAAkB,IAAd0S,EACKI,EAAI9S,GAEJ8S,EAAIC,aAAa/S,EAAI0S,GAKhC,GAAI1G,EAAK,CACP,IAAIgH,GAAc,EAClB,IAAKhT,EAAIqQ,EAAYrQ,EAAI2S,EAAW3S,IAClC,GAAIkO,EAAKwB,EAAK1P,KAAOkO,EAAK+C,GAAqB,IAAhB+B,EAAoB,EAAIhT,EAAIgT,IAEzD,IADoB,IAAhBA,IAAmBA,EAAahT,GAChCA,EAAIgT,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBhT,GAAKA,EAAIgT,GAChCA,GAAc,OAKlB,IADI3C,EAAauC,EAAYD,IAAWtC,EAAasC,EAAYC,GAC5D5S,EAAIqQ,EAAYrQ,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIiT,GAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIhF,EAAKwB,EAAK1P,EAAIkT,KAAOhF,EAAK+C,EAAKiC,GAAI,CACrCD,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOjT,EAItB,OAAQ,EAeV,SAASmT,GAAUL,EAAKrC,EAAQrC,EAAQnO,GACtCmO,EAASgF,OAAOhF,IAAW,EAC3B,IAAIiF,EAAYP,EAAI7S,OAASmO,EACxBnO,GAGHA,EAASmT,OAAOnT,IACHoT,IACXpT,EAASoT,GAJXpT,EAASoT,EASX,IAAIC,EAAS7C,EAAOxQ,OACpB,GAAIqT,EAAS,GAAM,EAAG,MAAM,IAAI1T,UAAU,sBAEtCK,EAASqT,EAAS,IACpBrT,EAASqT,EAAS,GAEpB,IAAK,IAAItT,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAC/B,IAAIuT,EAASC,SAAS/C,EAAOgD,OAAW,EAAJzT,EAAO,GAAI,IAC/C,GAAI+F,MAAMwN,GAAS,OAAOvT,EAC1B8S,EAAI1E,EAASpO,GAAKuT,EAEpB,OAAOvT,EAGT,SAAS0T,GAAWZ,EAAKrC,EAAQrC,EAAQnO,GACvC,OAAO0T,GAAWjC,GAAYjB,EAAQqC,EAAI7S,OAASmO,GAAS0E,EAAK1E,EAAQnO,GAG3E,SAAS2T,GAAYd,EAAKrC,EAAQrC,EAAQnO,GACxC,OAAO0T,GAq6BT,SAAuBE,GAErB,IADA,IAAIC,EAAY,GACP9T,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAEhC8T,EAAUrO,KAAyB,IAApBoO,EAAIzG,WAAWpN,IAEhC,OAAO8T,EA36BWC,CAAatD,GAASqC,EAAK1E,EAAQnO,GAGvD,SAAS+T,GAAalB,EAAKrC,EAAQrC,EAAQnO,GACzC,OAAO2T,GAAWd,EAAKrC,EAAQrC,EAAQnO,GAGzC,SAASgU,GAAanB,EAAKrC,EAAQrC,EAAQnO,GACzC,OAAO0T,GAAWhC,GAAclB,GAASqC,EAAK1E,EAAQnO,GAGxD,SAASiU,GAAWpB,EAAKrC,EAAQrC,EAAQnO,GACvC,OAAO0T,GAk6BT,SAAyBE,EAAKM,GAG5B,IAFA,IAAIhF,EAAGiF,EAAIC,EACPP,EAAY,GACP9T,EAAI,EAAGA,EAAI6T,EAAI5T,WACjBkU,GAAS,GAAK,KADanU,EAIhCoU,GADAjF,EAAI0E,EAAIzG,WAAWpN,KACT,EACVqU,EAAKlF,EAAI,IACT2E,EAAUrO,KAAK4O,GACfP,EAAUrO,KAAK2O,GAGjB,OAAON,EA/6BWQ,CAAe7D,EAAQqC,EAAI7S,OAASmO,GAAS0E,EAAK1E,EAAQnO,GAkF9E,SAASiS,GAAaY,EAAKvF,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQsF,EAAI7S,OACtBsU,EAAqBzB,GAErByB,EAAqBzB,EAAI3L,MAAMoG,EAAOC,IAIjD,SAASuE,GAAWe,EAAKvF,EAAOC,GAC9BA,EAAMlB,KAAKkI,IAAI1B,EAAI7S,OAAQuN,GAI3B,IAHA,IAAIiH,EAAM,GAENzU,EAAIuN,EACDvN,EAAIwN,GAAK,CACd,IAQMkH,EAAYC,EAAWC,EAAYC,EARrCC,EAAYhC,EAAI9S,GAChB+U,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAI9U,EAAIgV,GAAoBxH,EAG1B,OAAQwH,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,MAAV,KADlBJ,EAAa5B,EAAI9S,EAAI,OAEnB6U,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa5B,EAAI9S,EAAI,GACrB2U,EAAY7B,EAAI9S,EAAI,GACQ,MAAV,IAAb0U,IAAsD,MAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAa5B,EAAI9S,EAAI,GACrB2U,EAAY7B,EAAI9S,EAAI,GACpB4U,EAAa9B,EAAI9S,EAAI,GACO,MAAV,IAAb0U,IAAsD,MAAV,IAAZC,IAAsD,MAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIhP,KAAKsP,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIhP,KAAKsP,GACT/U,GAAKgV,EAGP,OAQF,SAAgCC,GAC9B,IAAIpL,EAAMoL,EAAWhV,OACrB,GAAI4J,GAAOqL,GACT,OAAOrC,OAAOsC,aAAa7V,MAAMuT,OAAQoC,GAI3C,IAAIR,EAAM,GACNzU,EAAI,EACR,KAAOA,EAAI6J,GACT4K,GAAO5B,OAAOsC,aAAa7V,MACzBuT,OACAoC,EAAW9N,MAAMnH,EAAGA,GAAKkV,KAG7B,OAAOT,EAvBAW,CAAsBX,GAv7B/B7E,GAAOC,yBAAqDrQ,IAA/BkJ,EAAOmH,qBAChCnH,EAAOmH,oBA6EXD,GAAOyF,SAAW,KAGlBzF,GAAO0F,SAAW,SAAU5F,GAE1B,OADAA,EAAIlJ,UAAYoJ,GAAOjP,UAChB+O,GA2BTE,GAAOO,KAAO,SAAUxR,EAAOsR,EAAkBhQ,GAC/C,OAAOkQ,GAAK,KAAMxR,EAAOsR,EAAkBhQ,IAGzC2P,GAAOC,sBACTD,GAAOjP,UAAU6F,UAAYwG,WAAWrM,UACxCiP,GAAOpJ,UAAYwG,YAuCrB4C,GAAO2F,MAAQ,SAAUlE,EAAMmE,EAAM9E,GACnC,OArBF,SAAgBX,EAAMsB,EAAMmE,EAAM9E,GAEhC,OADAU,GAAWC,GACPA,GAAQ,EACHvB,GAAaC,EAAMsB,QAEf7R,IAATgW,EAIyB,iBAAb9E,EACVZ,GAAaC,EAAMsB,GAAMmE,KAAKA,EAAM9E,GACpCZ,GAAaC,EAAMsB,GAAMmE,KAAKA,GAE7B1F,GAAaC,EAAMsB,GAQnBkE,CAAM,KAAMlE,EAAMmE,EAAM9E,IAiBjCd,GAAOM,YAAc,SAAUmB,GAC7B,OAAOnB,GAAY,KAAMmB,IAK3BzB,GAAO6F,gBAAkB,SAAUpE,GACjC,OAAOnB,GAAY,KAAMmB,IAgH3BzB,GAAO8F,SA07CA,SAAkB7U,GACvB,OAAc,MAAPA,MAAkBA,EAAI0Q,WAAaoE,GAAa9U,IAQzD,SAAuBA,GACrB,MAAkC,mBAApBA,EAAI+U,aAAmD,mBAAd/U,EAAIsG,OAAwBwO,GAAa9U,EAAIsG,MAAM,EAAG,IAT9C0O,CAAahV,KAt7C9E+O,GAAOkG,QAAU,SAAkBC,EAAGzE,GACpC,IAAKR,GAAiBiF,KAAOjF,GAAiBQ,GAC5C,MAAM,IAAI1R,UAAU,6BAGtB,GAAImW,IAAMzE,EAAG,OAAO,EAKpB,IAHA,IAAI0E,EAAID,EAAE9V,OACNgW,EAAI3E,EAAErR,OAEDD,EAAI,EAAG6J,EAAMyC,KAAKkI,IAAIwB,EAAGC,GAAIjW,EAAI6J,IAAO7J,EAC/C,GAAI+V,EAAE/V,KAAOsR,EAAEtR,GAAI,CACjBgW,EAAID,EAAE/V,GACNiW,EAAI3E,EAAEtR,GACN,MAIJ,OAAIgW,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTpG,GAAOe,WAAa,SAAqBD,GACvC,OAAQmC,OAAOnC,GAAUkB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbhC,GAAOlG,OAAS,SAAiBwM,EAAMjW,GACrC,IAAKwP,EAAQyG,GACX,MAAM,IAAItW,UAAU,+CAGtB,GAAoB,IAAhBsW,EAAKjW,OACP,OAAO2P,GAAO2F,MAAM,GAGtB,IAAIvV,EACJ,QAAeR,IAAXS,EAEF,IADAA,EAAS,EACJD,EAAI,EAAGA,EAAIkW,EAAKjW,SAAUD,EAC7BC,GAAUiW,EAAKlW,GAAGC,OAItB,IAAIkO,EAASyB,GAAOM,YAAYjQ,GAC5BkW,EAAM,EACV,IAAKnW,EAAI,EAAGA,EAAIkW,EAAKjW,SAAUD,EAAG,CAChC,IAAI8S,EAAMoD,EAAKlW,GACf,IAAK8Q,GAAiBgC,GACpB,MAAM,IAAIlT,UAAU,+CAEtBkT,EAAI9B,KAAK7C,EAAQgI,GACjBA,GAAOrD,EAAI7S,OAEb,OAAOkO,GA8CTyB,GAAOU,WAAaA,GA0EpBV,GAAOjP,UAAU4Q,WAAY,EAQ7B3B,GAAOjP,UAAUyV,OAAS,WACxB,IAAIvM,EAAM1K,KAAKc,OACf,GAAI4J,EAAM,GAAM,EACd,MAAM,IAAImG,WAAW,6CAEvB,IAAK,IAAIhQ,EAAI,EAAGA,EAAI6J,EAAK7J,GAAK,EAC5BoS,GAAKjT,KAAMa,EAAGA,EAAI,GAEpB,OAAOb,MAGTyQ,GAAOjP,UAAU0V,OAAS,WACxB,IAAIxM,EAAM1K,KAAKc,OACf,GAAI4J,EAAM,GAAM,EACd,MAAM,IAAImG,WAAW,6CAEvB,IAAK,IAAIhQ,EAAI,EAAGA,EAAI6J,EAAK7J,GAAK,EAC5BoS,GAAKjT,KAAMa,EAAGA,EAAI,GAClBoS,GAAKjT,KAAMa,EAAI,EAAGA,EAAI,GAExB,OAAOb,MAGTyQ,GAAOjP,UAAU2V,OAAS,WACxB,IAAIzM,EAAM1K,KAAKc,OACf,GAAI4J,EAAM,GAAM,EACd,MAAM,IAAImG,WAAW,6CAEvB,IAAK,IAAIhQ,EAAI,EAAGA,EAAI6J,EAAK7J,GAAK,EAC5BoS,GAAKjT,KAAMa,EAAGA,EAAI,GAClBoS,GAAKjT,KAAMa,EAAI,EAAGA,EAAI,GACtBoS,GAAKjT,KAAMa,EAAI,EAAGA,EAAI,GACtBoS,GAAKjT,KAAMa,EAAI,EAAGA,EAAI,GAExB,OAAOb,MAGTyQ,GAAOjP,UAAU6O,SAAW,WAC1B,IAAIvP,EAAuB,EAAdd,KAAKc,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArBZ,UAAUY,OAAqB8R,GAAU5S,KAAM,EAAGc,GAC/C4R,GAAavS,MAAMH,KAAME,YAGlCuQ,GAAOjP,UAAU4V,OAAS,SAAiBjF,GACzC,IAAKR,GAAiBQ,GAAI,MAAM,IAAI1R,UAAU,6BAC9C,OAAIT,OAASmS,GACsB,IAA5B1B,GAAOkG,QAAQ3W,KAAMmS,IAG9B1B,GAAOjP,UAAU6V,QAAU,WACzB,IAAI3C,EAAM,GAMV,OAJI1U,KAAKc,OAAS,IAChB4T,EAAM1U,KAAKqQ,SAAS,MAAO,EA9jBA,IA8jBQiH,MAAM,SAAS7I,KAAK,KACnDzO,KAAKc,OA/jBkB,KA+jBJ4T,GAAO,UAEzB,WAAaA,EAAM,KAG5BjE,GAAOjP,UAAUmV,QAAU,SAAkBhW,EAAQyN,EAAOC,EAAKkJ,EAAWC,GAC1E,IAAK7F,GAAiBhR,GACpB,MAAM,IAAIF,UAAU,6BAgBtB,QAbcJ,IAAV+N,IACFA,EAAQ,QAEE/N,IAARgO,IACFA,EAAM1N,EAASA,EAAOG,OAAS,QAEfT,IAAdkX,IACFA,EAAY,QAEElX,IAAZmX,IACFA,EAAUxX,KAAKc,QAGbsN,EAAQ,GAAKC,EAAM1N,EAAOG,QAAUyW,EAAY,GAAKC,EAAUxX,KAAKc,OACtE,MAAM,IAAI+P,WAAW,sBAGvB,GAAI0G,GAAaC,GAAWpJ,GAASC,EACnC,OAAO,EAET,GAAIkJ,GAAaC,EACf,OAAQ,EAEV,GAAIpJ,GAASC,EACX,OAAO,EAQT,GAAIrO,OAASW,EAAQ,OAAO,EAS5B,IAPA,IAAIkW,GAJJW,KAAa,IADbD,KAAe,GAMXT,GAPJzI,KAAS,IADTD,KAAW,GASP1D,EAAMyC,KAAKkI,IAAIwB,EAAGC,GAElBW,EAAWzX,KAAKgI,MAAMuP,EAAWC,GACjCE,EAAa/W,EAAOqH,MAAMoG,EAAOC,GAE5BxN,EAAI,EAAGA,EAAI6J,IAAO7J,EACzB,GAAI4W,EAAS5W,KAAO6W,EAAW7W,GAAI,CACjCgW,EAAIY,EAAS5W,GACbiW,EAAIY,EAAW7W,GACf,MAIJ,OAAIgW,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA6HTpG,GAAOjP,UAAUmW,SAAW,SAAmB7F,EAAKZ,EAAYK,GAC9D,OAAoD,IAA7CvR,KAAKqT,QAAQvB,EAAKZ,EAAYK,IAGvCd,GAAOjP,UAAU6R,QAAU,SAAkBvB,EAAKZ,EAAYK,GAC5D,OAAO4B,GAAqBnT,KAAM8R,EAAKZ,EAAYK,GAAU,IAG/Dd,GAAOjP,UAAU8R,YAAc,SAAsBxB,EAAKZ,EAAYK,GACpE,OAAO4B,GAAqBnT,KAAM8R,EAAKZ,EAAYK,GAAU,IAkD/Dd,GAAOjP,UAAUuO,MAAQ,SAAgBuB,EAAQrC,EAAQnO,EAAQyQ,GAE/D,QAAelR,IAAX4O,EACFsC,EAAW,OACXzQ,EAASd,KAAKc,OACdmO,EAAS,OAEJ,QAAe5O,IAAXS,GAA0C,iBAAXmO,EACxCsC,EAAWtC,EACXnO,EAASd,KAAKc,OACdmO,EAAS,MAEJ,CAAA,IAAI2I,SAAS3I,GAWlB,MAAM,IAAIzL,MACR,2EAXFyL,GAAkB,EACd2I,SAAS9W,IACXA,GAAkB,OACDT,IAAbkR,IAAwBA,EAAW,UAEvCA,EAAWzQ,EACXA,OAAST,GASb,IAAI6T,EAAYlU,KAAKc,OAASmO,EAG9B,SAFe5O,IAAXS,GAAwBA,EAASoT,KAAWpT,EAASoT,GAEpD5C,EAAOxQ,OAAS,IAAMA,EAAS,GAAKmO,EAAS,IAAOA,EAASjP,KAAKc,OACrE,MAAM,IAAI+P,WAAW,0CAGlBU,IAAUA,EAAW,QAG1B,IADA,IAAIe,GAAc,IAEhB,OAAQf,GACN,IAAK,MACH,OAAOyC,GAAShU,KAAMsR,EAAQrC,EAAQnO,GAExC,IAAK,OACL,IAAK,QACH,OAAOyT,GAAUvU,KAAMsR,EAAQrC,EAAQnO,GAEzC,IAAK,QACH,OAAO2T,GAAWzU,KAAMsR,EAAQrC,EAAQnO,GAE1C,IAAK,SACL,IAAK,SACH,OAAO+T,GAAY7U,KAAMsR,EAAQrC,EAAQnO,GAE3C,IAAK,SAEH,OAAOgU,GAAY9U,KAAMsR,EAAQrC,EAAQnO,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOiU,GAAU/U,KAAMsR,EAAQrC,EAAQnO,GAEzC,QACE,GAAIwR,EAAa,MAAM,IAAI7R,UAAU,qBAAuB8Q,GAC5DA,GAAY,GAAKA,GAAUkB,cAC3BH,GAAc,IAKtB7B,GAAOjP,UAAUqW,OAAS,WACxB,MAAO,CACLxT,KAAM,SACN0N,KAAM5F,MAAM3K,UAAUwG,MAAMxD,KAAKxE,KAAK8X,MAAQ9X,KAAM,KAwFxD,IAAI+V,GAAuB,KAoB3B,SAASlD,GAAYc,EAAKvF,EAAOC,GAC/B,IAAI0J,EAAM,GACV1J,EAAMlB,KAAKkI,IAAI1B,EAAI7S,OAAQuN,GAE3B,IAAK,IAAIxN,EAAIuN,EAAOvN,EAAIwN,IAAOxN,EAC7BkX,GAAOrE,OAAOsC,aAAsB,IAATrC,EAAI9S,IAEjC,OAAOkX,EAGT,SAASjF,GAAaa,EAAKvF,EAAOC,GAChC,IAAI0J,EAAM,GACV1J,EAAMlB,KAAKkI,IAAI1B,EAAI7S,OAAQuN,GAE3B,IAAK,IAAIxN,EAAIuN,EAAOvN,EAAIwN,IAAOxN,EAC7BkX,GAAOrE,OAAOsC,aAAarC,EAAI9S,IAEjC,OAAOkX,EAGT,SAASpF,GAAUgB,EAAKvF,EAAOC,GAC7B,IAAI3D,EAAMiJ,EAAI7S,SAETsN,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAM3D,KAAK2D,EAAM3D,GAGxC,IADA,IAAIsN,EAAM,GACDnX,EAAIuN,EAAOvN,EAAIwN,IAAOxN,EAC7BmX,GAAOC,GAAMtE,EAAI9S,IAEnB,OAAOmX,EAGT,SAAShF,GAAcW,EAAKvF,EAAOC,GAGjC,IAFA,IAAI6J,EAAQvE,EAAI3L,MAAMoG,EAAOC,GACzBiH,EAAM,GACDzU,EAAI,EAAGA,EAAIqX,EAAMpX,OAAQD,GAAK,EACrCyU,GAAO5B,OAAOsC,aAAakC,EAAMrX,GAAoB,IAAfqX,EAAMrX,EAAI,IAElD,OAAOyU,EA0CT,SAAS6C,GAAalJ,EAAQmJ,EAAKtX,GACjC,GAAKmO,EAAS,GAAO,GAAKA,EAAS,EAAG,MAAM,IAAI4B,WAAW,sBAC3D,GAAI5B,EAASmJ,EAAMtX,EAAQ,MAAM,IAAI+P,WAAW,yCA+JlD,SAASwH,GAAU1E,EAAKnU,EAAOyP,EAAQmJ,EAAKE,EAAKjD,GAC/C,IAAK1D,GAAiBgC,GAAM,MAAM,IAAIlT,UAAU,+CAChD,GAAIjB,EAAQ8Y,GAAO9Y,EAAQ6V,EAAK,MAAM,IAAIxE,WAAW,qCACrD,GAAI5B,EAASmJ,EAAMzE,EAAI7S,OAAQ,MAAM,IAAI+P,WAAW,sBAkDtD,SAAS0H,GAAmB5E,EAAKnU,EAAOyP,EAAQuJ,GAC1ChZ,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAIqB,EAAI,EAAGkT,EAAI5G,KAAKkI,IAAI1B,EAAI7S,OAASmO,EAAQ,GAAIpO,EAAIkT,IAAKlT,EAC7D8S,EAAI1E,EAASpO,IAAMrB,EAAS,KAAS,GAAKgZ,EAAe3X,EAAI,EAAIA,MAClC,GAA5B2X,EAAe3X,EAAI,EAAIA,GA8B9B,SAAS4X,GAAmB9E,EAAKnU,EAAOyP,EAAQuJ,GAC1ChZ,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAIqB,EAAI,EAAGkT,EAAI5G,KAAKkI,IAAI1B,EAAI7S,OAASmO,EAAQ,GAAIpO,EAAIkT,IAAKlT,EAC7D8S,EAAI1E,EAASpO,GAAMrB,IAAuC,GAA5BgZ,EAAe3X,EAAI,EAAIA,GAAU,IAmJnE,SAAS6X,GAAc/E,EAAKnU,EAAOyP,EAAQmJ,EAAKE,EAAKjD,GACnD,GAAIpG,EAASmJ,EAAMzE,EAAI7S,OAAQ,MAAM,IAAI+P,WAAW,sBACpD,GAAI5B,EAAS,EAAG,MAAM,IAAI4B,WAAW,sBAGvC,SAAS8H,GAAYhF,EAAKnU,EAAOyP,EAAQuJ,EAAcI,GAKrD,OAJKA,GACHF,GAAa/E,EAAKnU,EAAOyP,EAAQ,GAEnC4J,EAAclF,EAAKnU,EAAOyP,EAAQuJ,EAAc,GAAI,GAC7CvJ,EAAS,EAWlB,SAAS6J,GAAanF,EAAKnU,EAAOyP,EAAQuJ,EAAcI,GAKtD,OAJKA,GACHF,GAAa/E,EAAKnU,EAAOyP,EAAQ,GAEnC4J,EAAclF,EAAKnU,EAAOyP,EAAQuJ,EAAc,GAAI,GAC7CvJ,EAAS,EA/clBwB,GAAOjP,UAAUwG,MAAQ,SAAgBoG,EAAOC,GAC9C,IAoBI0K,EApBArO,EAAM1K,KAAKc,OAqBf,IApBAsN,IAAUA,GAGE,GACVA,GAAS1D,GACG,IAAG0D,EAAQ,GACdA,EAAQ1D,IACjB0D,EAAQ1D,IANV2D,OAAchO,IAARgO,EAAoB3D,IAAQ2D,GASxB,GACRA,GAAO3D,GACG,IAAG2D,EAAM,GACVA,EAAM3D,IACf2D,EAAM3D,GAGJ2D,EAAMD,IAAOC,EAAMD,GAGnBqC,GAAOC,qBACTqI,EAAS/Y,KAAKgZ,SAAS5K,EAAOC,IACvBhH,UAAYoJ,GAAOjP,cACrB,CACL,IAAIyX,EAAW5K,EAAMD,EACrB2K,EAAS,IAAItI,GAAOwI,OAAU5Y,GAC9B,IAAK,IAAIQ,EAAI,EAAGA,EAAIoY,IAAYpY,EAC9BkY,EAAOlY,GAAKb,KAAKa,EAAIuN,GAIzB,OAAO2K,GAWTtI,GAAOjP,UAAU0X,WAAa,SAAqBjK,EAAQkC,EAAYyH,GACrE3J,GAAkB,EAClBkC,GAA0B,EACrByH,GAAUT,GAAYlJ,EAAQkC,EAAYnR,KAAKc,QAKpD,IAHA,IAAIgR,EAAM9R,KAAKiP,GACXkK,EAAM,EACNtY,EAAI,IACCA,EAAIsQ,IAAegI,GAAO,MACjCrH,GAAO9R,KAAKiP,EAASpO,GAAKsY,EAG5B,OAAOrH,GAGTrB,GAAOjP,UAAU4X,WAAa,SAAqBnK,EAAQkC,EAAYyH,GACrE3J,GAAkB,EAClBkC,GAA0B,EACrByH,GACHT,GAAYlJ,EAAQkC,EAAYnR,KAAKc,QAKvC,IAFA,IAAIgR,EAAM9R,KAAKiP,IAAWkC,GACtBgI,EAAM,EACHhI,EAAa,IAAMgI,GAAO,MAC/BrH,GAAO9R,KAAKiP,IAAWkC,GAAcgI,EAGvC,OAAOrH,GAGTrB,GAAOjP,UAAU6X,UAAY,SAAoBpK,EAAQ2J,GAEvD,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCd,KAAKiP,IAGdwB,GAAOjP,UAAU8X,aAAe,SAAuBrK,EAAQ2J,GAE7D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCd,KAAKiP,GAAWjP,KAAKiP,EAAS,IAAM,GAG7CwB,GAAOjP,UAAUoS,aAAe,SAAuB3E,EAAQ2J,GAE7D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACnCd,KAAKiP,IAAW,EAAKjP,KAAKiP,EAAS,IAG7CwB,GAAOjP,UAAU+X,aAAe,SAAuBtK,EAAQ2J,GAG7D,OAFKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,SAElCd,KAAKiP,GACTjP,KAAKiP,EAAS,IAAM,EACpBjP,KAAKiP,EAAS,IAAM,IACD,SAAnBjP,KAAKiP,EAAS,IAGrBwB,GAAOjP,UAAUgY,aAAe,SAAuBvK,EAAQ2J,GAG7D,OAFKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QAEpB,SAAfd,KAAKiP,IACTjP,KAAKiP,EAAS,IAAM,GACrBjP,KAAKiP,EAAS,IAAM,EACrBjP,KAAKiP,EAAS,KAGlBwB,GAAOjP,UAAUiY,UAAY,SAAoBxK,EAAQkC,EAAYyH,GACnE3J,GAAkB,EAClBkC,GAA0B,EACrByH,GAAUT,GAAYlJ,EAAQkC,EAAYnR,KAAKc,QAKpD,IAHA,IAAIgR,EAAM9R,KAAKiP,GACXkK,EAAM,EACNtY,EAAI,IACCA,EAAIsQ,IAAegI,GAAO,MACjCrH,GAAO9R,KAAKiP,EAASpO,GAAKsY,EAM5B,OAFIrH,IAFJqH,GAAO,OAESrH,GAAO3E,KAAK2C,IAAI,EAAG,EAAIqB,IAEhCW,GAGTrB,GAAOjP,UAAUkY,UAAY,SAAoBzK,EAAQkC,EAAYyH,GACnE3J,GAAkB,EAClBkC,GAA0B,EACrByH,GAAUT,GAAYlJ,EAAQkC,EAAYnR,KAAKc,QAKpD,IAHA,IAAID,EAAIsQ,EACJgI,EAAM,EACNrH,EAAM9R,KAAKiP,IAAWpO,GACnBA,EAAI,IAAMsY,GAAO,MACtBrH,GAAO9R,KAAKiP,IAAWpO,GAAKsY,EAM9B,OAFIrH,IAFJqH,GAAO,OAESrH,GAAO3E,KAAK2C,IAAI,EAAG,EAAIqB,IAEhCW,GAGTrB,GAAOjP,UAAUmY,SAAW,SAAmB1K,EAAQ2J,GAErD,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACtB,IAAfd,KAAKiP,IAC0B,GAA5B,IAAOjP,KAAKiP,GAAU,GADKjP,KAAKiP,IAI3CwB,GAAOjP,UAAUoY,YAAc,SAAsB3K,EAAQ2J,GACtDA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QAC3C,IAAIgR,EAAM9R,KAAKiP,GAAWjP,KAAKiP,EAAS,IAAM,EAC9C,OAAc,MAAN6C,EAAsB,WAANA,EAAmBA,GAG7CrB,GAAOjP,UAAUqY,YAAc,SAAsB5K,EAAQ2J,GACtDA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QAC3C,IAAIgR,EAAM9R,KAAKiP,EAAS,GAAMjP,KAAKiP,IAAW,EAC9C,OAAc,MAAN6C,EAAsB,WAANA,EAAmBA,GAG7CrB,GAAOjP,UAAUsY,YAAc,SAAsB7K,EAAQ2J,GAG3D,OAFKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QAEnCd,KAAKiP,GACVjP,KAAKiP,EAAS,IAAM,EACpBjP,KAAKiP,EAAS,IAAM,GACpBjP,KAAKiP,EAAS,IAAM,IAGzBwB,GAAOjP,UAAUuY,YAAc,SAAsB9K,EAAQ2J,GAG3D,OAFKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QAEnCd,KAAKiP,IAAW,GACrBjP,KAAKiP,EAAS,IAAM,GACpBjP,KAAKiP,EAAS,IAAM,EACpBjP,KAAKiP,EAAS,IAGnBwB,GAAOjP,UAAUiV,YAAc,SAAsBxH,EAAQ2J,GAE3D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCkZ,EAAaha,KAAMiP,GAAQ,EAAM,GAAI,IAG9CwB,GAAOjP,UAAUyY,YAAc,SAAsBhL,EAAQ2J,GAE3D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCkZ,EAAaha,KAAMiP,GAAQ,EAAO,GAAI,IAG/CwB,GAAOjP,UAAU0Y,aAAe,SAAuBjL,EAAQ2J,GAE7D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCkZ,EAAaha,KAAMiP,GAAQ,EAAM,GAAI,IAG9CwB,GAAOjP,UAAU2Y,aAAe,SAAuBlL,EAAQ2J,GAE7D,OADKA,GAAUT,GAAYlJ,EAAQ,EAAGjP,KAAKc,QACpCkZ,EAAaha,KAAMiP,GAAQ,EAAO,GAAI,IAS/CwB,GAAOjP,UAAU4Y,YAAc,SAAsB5a,EAAOyP,EAAQkC,EAAYyH,IAC9EpZ,GAASA,EACTyP,GAAkB,EAClBkC,GAA0B,EACrByH,IAEHP,GAASrY,KAAMR,EAAOyP,EAAQkC,EADfhE,KAAK2C,IAAI,EAAG,EAAIqB,GAAc,EACO,GAGtD,IAAIgI,EAAM,EACNtY,EAAI,EAER,IADAb,KAAKiP,GAAkB,IAARzP,IACNqB,EAAIsQ,IAAegI,GAAO,MACjCnZ,KAAKiP,EAASpO,GAAMrB,EAAQ2Z,EAAO,IAGrC,OAAOlK,EAASkC,GAGlBV,GAAOjP,UAAU6Y,YAAc,SAAsB7a,EAAOyP,EAAQkC,EAAYyH,IAC9EpZ,GAASA,EACTyP,GAAkB,EAClBkC,GAA0B,EACrByH,IAEHP,GAASrY,KAAMR,EAAOyP,EAAQkC,EADfhE,KAAK2C,IAAI,EAAG,EAAIqB,GAAc,EACO,GAGtD,IAAItQ,EAAIsQ,EAAa,EACjBgI,EAAM,EAEV,IADAnZ,KAAKiP,EAASpO,GAAa,IAARrB,IACVqB,GAAK,IAAMsY,GAAO,MACzBnZ,KAAKiP,EAASpO,GAAMrB,EAAQ2Z,EAAO,IAGrC,OAAOlK,EAASkC,GAGlBV,GAAOjP,UAAU8Y,WAAa,SAAqB9a,EAAOyP,EAAQ2J,GAMhE,OALApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,IAAM,GACjDwB,GAAOC,sBAAqBlR,EAAQ2N,KAAKC,MAAM5N,IACpDQ,KAAKiP,GAAmB,IAARzP,EACTyP,EAAS,GAWlBwB,GAAOjP,UAAU+Y,cAAgB,SAAwB/a,EAAOyP,EAAQ2J,GAUtE,OATApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,MAAQ,GACpDwB,GAAOC,qBACT1Q,KAAKiP,GAAmB,IAARzP,EAChBQ,KAAKiP,EAAS,GAAMzP,IAAU,GAE9B+Y,GAAkBvY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAUgZ,cAAgB,SAAwBhb,EAAOyP,EAAQ2J,GAUtE,OATApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,MAAQ,GACpDwB,GAAOC,qBACT1Q,KAAKiP,GAAWzP,IAAU,EAC1BQ,KAAKiP,EAAS,GAAc,IAARzP,GAEpB+Y,GAAkBvY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAUlBwB,GAAOjP,UAAUiZ,cAAgB,SAAwBjb,EAAOyP,EAAQ2J,GAYtE,OAXApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,WAAY,GACxDwB,GAAOC,qBACT1Q,KAAKiP,EAAS,GAAMzP,IAAU,GAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,GAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,EAC9BQ,KAAKiP,GAAmB,IAARzP,GAEhBiZ,GAAkBzY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAUkZ,cAAgB,SAAwBlb,EAAOyP,EAAQ2J,GAYtE,OAXApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,WAAY,GACxDwB,GAAOC,qBACT1Q,KAAKiP,GAAWzP,IAAU,GAC1BQ,KAAKiP,EAAS,GAAMzP,IAAU,GAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,EAC9BQ,KAAKiP,EAAS,GAAc,IAARzP,GAEpBiZ,GAAkBzY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAUmZ,WAAa,SAAqBnb,EAAOyP,EAAQkC,EAAYyH,GAG5E,GAFApZ,GAASA,EACTyP,GAAkB,GACb2J,EAAU,CACb,IAAIgC,EAAQzN,KAAK2C,IAAI,EAAG,EAAIqB,EAAa,GAEzCkH,GAASrY,KAAMR,EAAOyP,EAAQkC,EAAYyJ,EAAQ,GAAIA,GAGxD,IAAI/Z,EAAI,EACJsY,EAAM,EACN0B,EAAM,EAEV,IADA7a,KAAKiP,GAAkB,IAARzP,IACNqB,EAAIsQ,IAAegI,GAAO,MAC7B3Z,EAAQ,GAAa,IAARqb,GAAsC,IAAzB7a,KAAKiP,EAASpO,EAAI,KAC9Cga,EAAM,GAER7a,KAAKiP,EAASpO,IAAOrB,EAAQ2Z,GAAQ,GAAK0B,EAAM,IAGlD,OAAO5L,EAASkC,GAGlBV,GAAOjP,UAAUsZ,WAAa,SAAqBtb,EAAOyP,EAAQkC,EAAYyH,GAG5E,GAFApZ,GAASA,EACTyP,GAAkB,GACb2J,EAAU,CACb,IAAIgC,EAAQzN,KAAK2C,IAAI,EAAG,EAAIqB,EAAa,GAEzCkH,GAASrY,KAAMR,EAAOyP,EAAQkC,EAAYyJ,EAAQ,GAAIA,GAGxD,IAAI/Z,EAAIsQ,EAAa,EACjBgI,EAAM,EACN0B,EAAM,EAEV,IADA7a,KAAKiP,EAASpO,GAAa,IAARrB,IACVqB,GAAK,IAAMsY,GAAO,MACrB3Z,EAAQ,GAAa,IAARqb,GAAsC,IAAzB7a,KAAKiP,EAASpO,EAAI,KAC9Cga,EAAM,GAER7a,KAAKiP,EAASpO,IAAOrB,EAAQ2Z,GAAQ,GAAK0B,EAAM,IAGlD,OAAO5L,EAASkC,GAGlBV,GAAOjP,UAAUuZ,UAAY,SAAoBvb,EAAOyP,EAAQ2J,GAO9D,OANApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,KAAO,KAClDwB,GAAOC,sBAAqBlR,EAAQ2N,KAAKC,MAAM5N,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCQ,KAAKiP,GAAmB,IAARzP,EACTyP,EAAS,GAGlBwB,GAAOjP,UAAUwZ,aAAe,SAAuBxb,EAAOyP,EAAQ2J,GAUpE,OATApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,OAAS,OACrDwB,GAAOC,qBACT1Q,KAAKiP,GAAmB,IAARzP,EAChBQ,KAAKiP,EAAS,GAAMzP,IAAU,GAE9B+Y,GAAkBvY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAUyZ,aAAe,SAAuBzb,EAAOyP,EAAQ2J,GAUpE,OATApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,OAAS,OACrDwB,GAAOC,qBACT1Q,KAAKiP,GAAWzP,IAAU,EAC1BQ,KAAKiP,EAAS,GAAc,IAARzP,GAEpB+Y,GAAkBvY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAU0Z,aAAe,SAAuB1b,EAAOyP,EAAQ2J,GAYpE,OAXApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,YAAa,YACzDwB,GAAOC,qBACT1Q,KAAKiP,GAAmB,IAARzP,EAChBQ,KAAKiP,EAAS,GAAMzP,IAAU,EAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,GAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,IAE9BiZ,GAAkBzY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAGlBwB,GAAOjP,UAAU2Z,aAAe,SAAuB3b,EAAOyP,EAAQ2J,GAapE,OAZApZ,GAASA,EACTyP,GAAkB,EACb2J,GAAUP,GAASrY,KAAMR,EAAOyP,EAAQ,EAAG,YAAa,YACzDzP,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxCiR,GAAOC,qBACT1Q,KAAKiP,GAAWzP,IAAU,GAC1BQ,KAAKiP,EAAS,GAAMzP,IAAU,GAC9BQ,KAAKiP,EAAS,GAAMzP,IAAU,EAC9BQ,KAAKiP,EAAS,GAAc,IAARzP,GAEpBiZ,GAAkBzY,KAAMR,EAAOyP,GAAQ,GAElCA,EAAS,GAgBlBwB,GAAOjP,UAAU4Z,aAAe,SAAuB5b,EAAOyP,EAAQ2J,GACpE,OAAOD,GAAW3Y,KAAMR,EAAOyP,GAAQ,EAAM2J,IAG/CnI,GAAOjP,UAAU6Z,aAAe,SAAuB7b,EAAOyP,EAAQ2J,GACpE,OAAOD,GAAW3Y,KAAMR,EAAOyP,GAAQ,EAAO2J,IAWhDnI,GAAOjP,UAAU8Z,cAAgB,SAAwB9b,EAAOyP,EAAQ2J,GACtE,OAAOE,GAAY9Y,KAAMR,EAAOyP,GAAQ,EAAM2J,IAGhDnI,GAAOjP,UAAU+Z,cAAgB,SAAwB/b,EAAOyP,EAAQ2J,GACtE,OAAOE,GAAY9Y,KAAMR,EAAOyP,GAAQ,EAAO2J,IAIjDnI,GAAOjP,UAAUqQ,KAAO,SAAelR,EAAQ6a,EAAapN,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMrO,KAAKc,QAC9B0a,GAAe7a,EAAOG,SAAQ0a,EAAc7a,EAAOG,QAClD0a,IAAaA,EAAc,GAC5BnN,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBzN,EAAOG,QAAgC,IAAhBd,KAAKc,OAAc,OAAO,EAGrD,GAAI0a,EAAc,EAChB,MAAM,IAAI3K,WAAW,6BAEvB,GAAIzC,EAAQ,GAAKA,GAASpO,KAAKc,OAAQ,MAAM,IAAI+P,WAAW,6BAC5D,GAAIxC,EAAM,EAAG,MAAM,IAAIwC,WAAW,2BAG9BxC,EAAMrO,KAAKc,SAAQuN,EAAMrO,KAAKc,QAC9BH,EAAOG,OAAS0a,EAAcnN,EAAMD,IACtCC,EAAM1N,EAAOG,OAAS0a,EAAcpN,GAGtC,IACIvN,EADA6J,EAAM2D,EAAMD,EAGhB,GAAIpO,OAASW,GAAUyN,EAAQoN,GAAeA,EAAcnN,EAE1D,IAAKxN,EAAI6J,EAAM,EAAG7J,GAAK,IAAKA,EAC1BF,EAAOE,EAAI2a,GAAexb,KAAKa,EAAIuN,QAEhC,GAAI1D,EAAM,MAAS+F,GAAOC,oBAE/B,IAAK7P,EAAI,EAAGA,EAAI6J,IAAO7J,EACrBF,EAAOE,EAAI2a,GAAexb,KAAKa,EAAIuN,QAGrCP,WAAWrM,UAAUia,IAAIjX,KACvB7D,EACAX,KAAKgZ,SAAS5K,EAAOA,EAAQ1D,GAC7B8Q,GAIJ,OAAO9Q,GAOT+F,GAAOjP,UAAU6U,KAAO,SAAevE,EAAK1D,EAAOC,EAAKkD,GAEtD,GAAmB,iBAARO,EAAkB,CAS3B,GARqB,iBAAV1D,GACTmD,EAAWnD,EACXA,EAAQ,EACRC,EAAMrO,KAAKc,QACa,iBAARuN,IAChBkD,EAAWlD,EACXA,EAAMrO,KAAKc,QAEM,IAAfgR,EAAIhR,OAAc,CACpB,IAAIkN,EAAO8D,EAAI7D,WAAW,GACtBD,EAAO,MACT8D,EAAM9D,GAGV,QAAiB3N,IAAbkR,GAA8C,iBAAbA,EACnC,MAAM,IAAI9Q,UAAU,6BAEtB,GAAwB,iBAAb8Q,IAA0Bd,GAAOe,WAAWD,GACrD,MAAM,IAAI9Q,UAAU,qBAAuB8Q,OAErB,iBAARO,IAChBA,GAAY,KAId,GAAI1D,EAAQ,GAAKpO,KAAKc,OAASsN,GAASpO,KAAKc,OAASuN,EACpD,MAAM,IAAIwC,WAAW,sBAGvB,GAAIxC,GAAOD,EACT,OAAOpO,KAQT,IAAIa,EACJ,GANAuN,KAAkB,EAClBC,OAAchO,IAARgO,EAAoBrO,KAAKc,OAASuN,IAAQ,EAE3CyD,IAAKA,EAAM,GAGG,iBAARA,EACT,IAAKjR,EAAIuN,EAAOvN,EAAIwN,IAAOxN,EACzBb,KAAKa,GAAKiR,MAEP,CACL,IAAIoG,EAAQvG,GAAiBG,GACzBA,EACAS,GAAY,IAAI9B,GAAOqB,EAAKP,GAAUlB,YACtC3F,EAAMwN,EAAMpX,OAChB,IAAKD,EAAI,EAAGA,EAAIwN,EAAMD,IAASvN,EAC7Bb,KAAKa,EAAIuN,GAAS8J,EAAMrX,EAAI6J,GAIhC,OAAO1K,MAMT,IAAI0b,GAAoB,qBAmBxB,SAASzD,GAAO/E,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAE7C,SAAS,IAC7B6C,EAAE7C,SAAS,IAGpB,SAASkC,GAAajB,EAAQ0D,GAE5B,IAAIY,EADJZ,EAAQA,GAASnF,EAAAA,EAMjB,IAJA,IAAI/O,EAASwQ,EAAOxQ,OAChB6a,EAAgB,KAChBzD,EAAQ,GAEHrX,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAI/B,IAHA+U,EAAYtE,EAAOrD,WAAWpN,IAGd,OAAU+U,EAAY,MAAQ,CAE5C,IAAK+F,EAAe,CAElB,GAAI/F,EAAY,MAAQ,EAEjBZ,GAAS,IAAM,GAAGkD,EAAM5R,KAAK,IAAM,IAAM,KAC9C,SACK,GAAIzF,EAAI,IAAMC,EAAQ,EAEtBkU,GAAS,IAAM,GAAGkD,EAAM5R,KAAK,IAAM,IAAM,KAC9C,SAIFqV,EAAgB/F,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBZ,GAAS,IAAM,GAAGkD,EAAM5R,KAAK,IAAM,IAAM,KAC9CqV,EAAgB/F,EAChB,SAIFA,EAAkE,OAArD+F,EAAgB,OAAU,GAAK/F,EAAY,YAC/C+F,IAEJ3G,GAAS,IAAM,GAAGkD,EAAM5R,KAAK,IAAM,IAAM,KAMhD,GAHAqV,EAAgB,KAGZ/F,EAAY,IAAM,CACpB,IAAKZ,GAAS,GAAK,EAAG,MACtBkD,EAAM5R,KAAKsP,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKZ,GAAS,GAAK,EAAG,MACtBkD,EAAM5R,KACJsP,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKZ,GAAS,GAAK,EAAG,MACtBkD,EAAM5R,KACJsP,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,CAAA,KAAIA,EAAY,SASrB,MAAM,IAAIpS,MAAM,sBARhB,IAAKwR,GAAS,GAAK,EAAG,MACtBkD,EAAM5R,KACJsP,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOsC,EA6BT,SAAS1F,GAAekC,GACtB,OHjuDK,SAAsBkH,GAI3B,IAAI/a,EAAGkT,EAAG8H,EAAGvN,EAAKwN,EAAcvL,EAH3BzC,GACHC,IAGF,IAAIrD,EAAMkR,EAAI9a,OAEd,GAAI4J,EAAM,EAAI,EACZ,MAAM,IAAIlH,MAAM,kDAQlBsY,EAAgC,MAAjBF,EAAIlR,EAAM,GAAa,EAAqB,MAAjBkR,EAAIlR,EAAM,GAAa,EAAI,EAGrE6F,EAAM,IAAI3C,EAAU,EAANlD,EAAU,EAAIoR,GAG5BD,EAAIC,EAAe,EAAIpR,EAAM,EAAIA,EAEjC,IAAIqR,EAAI,EAER,IAAKlb,EAAI,EAAGkT,EAAI,EAAGlT,EAAIgb,EAAGhb,GAAK,EAAGkT,GAAK,EACrCzF,EAAOX,EAAUiO,EAAI3N,WAAWpN,KAAO,GAAO8M,EAAUiO,EAAI3N,WAAWpN,EAAI,KAAO,GAAO8M,EAAUiO,EAAI3N,WAAWpN,EAAI,KAAO,EAAK8M,EAAUiO,EAAI3N,WAAWpN,EAAI,IAC/J0P,EAAIwL,KAAQzN,GAAO,GAAM,IACzBiC,EAAIwL,KAAQzN,GAAO,EAAK,IACxBiC,EAAIwL,KAAa,IAANzN,EAYb,OATqB,IAAjBwN,GACFxN,EAAOX,EAAUiO,EAAI3N,WAAWpN,KAAO,EAAM8M,EAAUiO,EAAI3N,WAAWpN,EAAI,KAAO,EACjF0P,EAAIwL,KAAa,IAANzN,GACe,IAAjBwN,IACTxN,EAAOX,EAAUiO,EAAI3N,WAAWpN,KAAO,GAAO8M,EAAUiO,EAAI3N,WAAWpN,EAAI,KAAO,EAAM8M,EAAUiO,EAAI3N,WAAWpN,EAAI,KAAO,EAC5H0P,EAAIwL,KAAQzN,GAAO,EAAK,IACxBiC,EAAIwL,KAAa,IAANzN,GAGNiC,EGurDAyL,CAjIT,SAAsBtH,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIuH,KAAavH,EAAIuH,OAClBvH,EAAIwH,QAAQ,aAAc,IAZ3BC,CAAWzH,GAAKwH,QAAQR,GAAmB,KAEzC5a,OAAS,EAAG,MAAO,GAE3B,KAAO4T,EAAI5T,OAAS,GAAM,GACxB4T,GAAY,IAEd,OAAOA,EAwHmB0H,CAAY1H,IAGxC,SAASF,GAAY6H,EAAKC,EAAKrN,EAAQnO,GACrC,IAAK,IAAID,EAAI,EAAGA,EAAIC,KACbD,EAAIoO,GAAUqN,EAAIxb,QAAYD,GAAKwb,EAAIvb,UADhBD,EAE5Byb,EAAIzb,EAAIoO,GAAUoN,EAAIxb,GAExB,OAAOA,EAeT,SAAS2V,GAAc9U,GACrB,QAASA,EAAIuF,aAAmD,mBAA7BvF,EAAIuF,YAAYsP,UAA2B7U,EAAIuF,YAAYsP,SAAS7U,GC1wDzG,IAiqlDI6a,GAjqlDAC,GAAYrb,OAAOC,eACnBqb,GAAsBtb,OAAOub,sBAC7BC,GAAexb,OAAOK,UAAUO,eAChC6a,GAAezb,OAAOK,UAAUqb,qBAChCC,GAAkB,CAACpb,EAAKrC,EAAKG,IAAUH,KAAOqC,EAAM8a,GAAU9a,EAAKrC,EAAK,CAAE2B,YAAY,EAAMC,cAAc,EAAMC,UAAU,EAAM1B,MAAAA,IAAWkC,EAAIrC,GAAOG,EACtJud,GAAiB,CAACnG,EAAGzE,KACvB,IAAK,IAAI6K,KAAQ7K,IAAMA,EAAI,IACrBwK,GAAanY,KAAK2N,EAAG6K,IACvBF,GAAgBlG,EAAGoG,EAAM7K,EAAE6K,IAC/B,GAAIP,GACF,IAAK,IAAIO,KAAQP,GAAoBtK,GAC/ByK,GAAapY,KAAK2N,EAAG6K,IACvBF,GAAgBlG,EAAGoG,EAAM7K,EAAE6K,IAEjC,OAAOpG,GAELqG,GAAapG,IACf,GAAuB,oBAAZqG,QACT,OAAOA,QAAQrG,GACjB,MAAM,IAAIrT,MAAM,uBAAyBqT,EAAI,uBAE3CsG,GAAa,CAACC,EAAIC,IAAQ,WAC5B,OAAOA,IAAO,EAAID,EAAGjc,OAAOsG,KAAK2V,GAAI,MAAMC,EAAM,CAAEzb,QAAS,KAAMA,QAASyb,GAAMA,EAAIzb,SAEnF0b,GAAU,CAACC,EAAQC,EAAaza,IAC3B,IAAIpD,SAAQ,CAACV,EAASC,KAC3B,IAAIue,EAAaje,IACf,IACEke,EAAK3a,EAAU6C,KAAKpG,IACpB,MAAOwK,GACP9K,EAAO8K,KAGP2T,EAAYne,IACd,IACEke,EAAK3a,EAAU6a,MAAMpe,IACrB,MAAOwK,GACP9K,EAAO8K,KAGP0T,EAAQ7G,GAAMA,EAAEnX,KAAOT,EAAQ4X,EAAErX,OAASG,QAAQV,QAAQ4X,EAAErX,OAAOI,KAAK6d,EAAWE,GACvFD,GAAM3a,EAAYA,EAAU5C,MAAMod,EAAQC,IAAc5X,WAKxDiY,GAAiBV,GAAW,CAC9B,0BAKEW,GAAqBX,GAAW,CAClC,qBAAqBvb,EAASoH,GAC5B,IACM+U,EADFC,GAGAD,GAFEA,EAAiC,oBAAbE,UAA4BA,SAASC,cAAgBD,SAASC,cAAc7B,SAAM,IAE7E8B,EACtB,SAASC,GAEd,SAASC,IAIP,OAHIC,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjCwP,EAET,SAASC,IAIP,OAHIH,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjC0P,EAET,SAASC,IAIP,OAHIL,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjC4P,EAET,SAASC,IAIP,OAHIP,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjC8P,EAET,SAASC,IAIP,OAHIT,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjCgQ,EAET,SAASC,IAIP,OAHIX,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjCkQ,EAQT,SAASC,IAIP,OAHIb,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjCoQ,EAET,IACIC,EAAqBC,EADrBC,OAAgC,KAjDpCnB,EAAcA,GAAe,IAiDqBA,EAAc,GAEhEmB,EAAc,MAAI,IAAI5f,SAAQ,SAASV,EAASC,GAC9CmgB,EAAsBpgB,EACtBqgB,EAAqBpgB,KAEvB,IACIG,EADAmgB,EAAkB,GAEtB,IAAKngB,KAAOkgB,EACNA,EAAOxd,eAAe1C,KACxBmgB,EAAgBngB,GAAOkgB,EAAOlgB,IAIlC,IAIIogB,EACAC,EACAC,EACAC,EAPAC,EAAc,iBACdC,EAAQ,SAASC,EAAQC,GAC3B,MAAMA,GAMRP,EAAuC,iBAAXjW,OAC5BkW,EAAiD,mBAAlBO,cAC/BN,EAAyC,iBAAZO,GAAoD,iBAArBA,EAAQzT,UAA0D,iBAA1ByT,EAAQzT,SAAS0T,KACrHP,GAAwBH,IAAuBE,IAAwBD,EACvE,IAAIU,EAAyBb,EAA+B,yBAAK,EAC7Da,IACFpR,EAASuQ,EAAe,QAE1B,IAOIc,EAAkBC,EAClBC,EACAC,EATAC,EAAkB,GACtB,SAASC,EAAWC,GAClB,OAAIpB,EAAmB,WACdA,EAAmB,WAAEoB,EAAMF,GAE7BA,EAAkBE,EAK3B,GAAIhB,EAAqB,CAsCvB,IAAIiB,EApCFH,EADEf,EACgBzC,GAAU,QAAQ4D,QAAQJ,GAAmB,IAE7CK,EAAY,IAEhCT,EAAQ,SAAoBU,EAAUC,GAMpC,OALKT,IACHA,EAAStD,GAAU,OAChBuD,IACHA,EAAWvD,GAAU,SACvB8D,EAAWP,EAAoB,UAAEO,GAC1BR,EAAqB,aAAEQ,EAAUC,EAAS,KAAO,SAE1DV,EAAa,SAAqBS,GAChC,IAAIhJ,EAAMsI,EAAMU,GAAU,GAK1B,OAJKhJ,EAAI/I,SACP+I,EAAM,IAAIlK,WAAWkK,IAEvBkJ,EAAOlJ,EAAI/I,QACJ+I,GAELmI,EAAc,KAAEpf,OAAS,IAC3B+e,EAAcK,EAAc,KAAE,GAAGhE,QAAQ,MAAO,MASlD4D,EAAQ,SAASC,GACfG,EAAc,KAAEH,IAElBR,EAAgB,QAAI,WAClB,MAAO,8BAGT,IACEqB,EAAoB3D,GAAU,kBAC9B,MAAOjT,GAEP,MADAkX,QAAQzhB,MAAM,2GACRuK,EAERT,EAAO4X,OAASP,EAAkBO,YACzBvB,GACU,oBAAR7Q,OACTsR,EAAQ,SAAoBe,GAC1B,OAAOrS,KAAKqS,KAGhBd,EAAa,SAAqBc,GAChC,IAAIrP,EACJ,MAA0B,mBAAfsP,WACF,IAAIxT,WAAWwT,WAAWD,KAGnCH,EAAuB,iBADvBlP,EAAOhD,KAAKqS,EAAG,YAERrP,IAEgB,oBAAduP,YACIA,WAIK,mBAATC,OACTzB,EAAQ,SAASC,GACfwB,KAAKxB,KAGY,oBAAVyB,QACc,oBAAZN,UACTA,QAAU,IACZA,QAAQ/Q,IAAMqR,MACdN,QAAQO,KAAOP,QAAQzhB,MAA4B,oBAAbiiB,SAA2BA,SAAWF,SAErE/B,GAAsBC,KAC3BA,EACFe,EAAkB1gB,KAAK4hB,SAASC,KACH,oBAAb3D,UAA4BA,SAASC,gBACrDuC,EAAkBxC,SAASC,cAAc7B,KAEvC0B,IACF0C,EAAkB1C,GAGlB0C,EADuC,IAArCA,EAAgBpN,QAAQ,SACRoN,EAAgBnM,OAAO,EAAGmM,EAAgBnN,YAAY,KAAO,GAE7D,GAEhBqM,GACFU,EAAQ,SAAoBU,EAAUC,GAMpC,OALKT,IACHA,EAAStD,GAAU,OAChBuD,IACHA,EAAWvD,GAAU,SACvB8D,EAAWP,EAAoB,UAAEO,GAC1BR,EAAqB,aAAEQ,EAAUC,EAAS,KAAO,SAE1DV,EAAa,SAAqBS,GAChC,IAAIhJ,EAAMsI,EAAMU,GAAU,GAK1B,OAJKhJ,EAAI/I,SACP+I,EAAM,IAAIlK,WAAWkK,IAEvBkJ,EAAOlJ,EAAI/I,QACJ+I,KAGTsI,EAAQ,SAAoBwB,GAC1B,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIG,KAAK,MACFH,EAAII,cAETxC,IACFY,EAAa,SAAqBuB,GAChC,IAAIC,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAIG,KAAK,MACF,IAAIpU,WAAWiU,EAAIM,cAuB9BzC,GACyB,oBAAhBnU,cACTjC,EAAOiC,YAAcyR,GAAU,cAAczR,aAGjD,IAmCI6W,EAGAC,EAMAhE,EACAiE,EA7CAvK,EAAMuH,EAAc,OAAK2B,QAAQ/Q,IAAIqS,KAAKtB,SAC1C9gB,EAAMmf,EAAiB,UAAK2B,QAAQO,KAAKe,KAAKtB,SAClD,IAAK7hB,KAAOmgB,EACNA,EAAgBzd,eAAe1C,KACjCkgB,EAAOlgB,GAAOmgB,EAAgBngB,IAgBlC,SAASojB,EAASC,GACXD,EAASE,QACZF,EAASE,MAAQ,IACdF,EAASE,MAAMD,KAClBD,EAASE,MAAMD,GAAQ,EACvBtiB,EAAIsiB,IAlBRlD,EAAkB,KACdD,EAAkB,UAElBA,EAAoB,cACtBM,EAAcN,EAAoB,aAChCA,EAAa,OACfO,EAAQP,EAAa,MAuBnBA,EAAmB,aACrB8C,EAAa9C,EAAmB,YAE9BA,EAAsB,gBACxB+C,EAAgB/C,EAAsB,eACb,iBAAhBqD,aACTC,GAAM,mCAIR,IAwMI7T,EAAQwP,EAAOE,EAAQE,EAAQE,EAASE,EAAQE,EAAS4D,EAAS1D,EAxMlE2D,EAAmB,EAEnBC,GAAQ,EAEZ,SAAS/B,EAAOgC,EAAWP,GACpBO,GACHJ,GAAM,qBAAuBH,GAGjC,SAASQ,EAAkBC,EAAMC,EAAKC,GAIpC,IAFA,IAAIC,GADJF,KAAS,GACUC,EACf3O,EAAM,KACD0O,GAAOE,IAAS,CACvB,IAAIC,EAAKJ,EAAKC,MAAU,GACxB,IAAKG,EACH,OAAO7O,EACT,GAAW,IAAL6O,EAAN,CAIA,IAAIC,EAAyB,GAApBL,EAAKC,MAAU,GACxB,GAAkB,MAAR,IAALG,GAAL,CAIA,IAAIE,EAAyB,GAApBN,EAAKC,MAAU,GAMxB,IAJEG,EADgB,MAAR,IAALA,IACQ,GAALA,IAAY,GAAKC,GAAM,EAAIC,GAEtB,EAALF,IAAW,GAAKC,GAAM,GAAKC,GAAM,EAAwB,GAApBN,EAAKC,MAAU,IAEnD,MACP1O,GAAOhB,OAAOsC,aAAauN,OACtB,CACL,IAAIG,EAAKH,EAAK,MACd7O,GAAOhB,OAAOsC,aAAa,MAAQ0N,GAAM,GAAI,MAAa,KAALA,SAbrDhP,GAAOhB,OAAOsC,cAAmB,GAALuN,IAAY,EAAIC,QAL5C9O,GAAOhB,OAAOsC,aAAauN,GAqB/B,OAAO7O,EAET,SAASiP,EAAaC,EAAKP,GAEzB,OADAO,KAAS,GACIV,EAAkBzE,IAAoBmF,EAAKP,GAAkB,GAE5E,SAASQ,EAAkBnP,EAAKyO,EAAMW,EAAQC,GAE5C,KAAMA,EAAkB,GACtB,OAAO,EAGT,IAFA,IAAIC,EAHJF,KAAY,EAIRR,EAASQ,EAASC,EAAkB,EAC/BljB,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIojB,EAAIvP,EAAIzG,WAAWpN,GAKvB,GAJIojB,GAAK,OAASA,GAAK,QAErBA,EAAI,QAAc,KAAJA,IAAa,IAAW,KAD7BvP,EAAIzG,aAAapN,IAGxBojB,GAAK,IAAK,CACZ,GAAIH,GAAUR,EACZ,MACFH,EAAKW,MAAa,GAAKG,OAClB,GAAIA,GAAK,KAAM,CACpB,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAClCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,OACxB,GAAIA,GAAK,MAAO,CACrB,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAClCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,MACxB,CACL,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAClCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAAK,GACvCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,GAIjC,OADAd,EAAKW,IAAW,GAAK,EACdA,EAASE,EAElB,SAASE,EAAaxP,EAAKyP,EAAQJ,GACjC,OAAOF,EAAkBnP,EAAK+J,IAAoB0F,EAAQJ,GAE5D,SAASK,GAAgB1P,GAEvB,IADA,IAAIhK,EAAM,EACD7J,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIojB,EAAIvP,EAAIzG,WAAWpN,GACnBojB,GAAK,OAASA,GAAK,QACrBA,EAAI,QAAc,KAAJA,IAAa,IAA4B,KAAtBvP,EAAIzG,aAAapN,IAChDojB,GAAK,MACLvZ,EAEFA,GADOuZ,GAAK,KACL,EACAA,GAAK,MACL,EAEA,EAEX,OAAOvZ,EAET,SAAS2Z,GAAcT,EAAKP,GAE1B,IADA,IAAI3O,EAAM,GACD7T,EAAI,IAAKA,GAAKwiB,EAAiB,KAAMxiB,EAAG,CAC/C,IAAIyjB,EAAW3F,IAAoBiF,EAAU,EAAJ/iB,GAAS,GAClD,GAAgB,GAAZyjB,EACF,MACF5P,GAAOhB,OAAOsC,aAAasO,GAE7B,OAAO5P,EAET,SAAS6P,GAAc7P,EAAKyP,EAAQJ,GAIlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAIT,IAFA,IAAIS,EAAWL,EACXM,GAFJV,GAAmB,GAEkC,EAAbrP,EAAI5T,OAAaijB,EAAkB,EAAIrP,EAAI5T,OAC1ED,EAAI,EAAGA,EAAI4jB,IAAmB5jB,EAAG,CACxC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAC9B8d,IAAoBwF,GAAU,GAAKG,EACnCH,GAAU,EAGZ,OADAxF,IAAoBwF,GAAU,GAAK,EAC5BA,EAASK,EAElB,SAASE,GAAiBhQ,GACxB,OAAoB,EAAbA,EAAI5T,OAEb,SAAS6jB,GAAcf,EAAKP,GAG1B,IAFA,IAAIxiB,EAAI,EACJ6T,EAAM,KACD7T,GAAKwiB,EAAiB,IAAI,CACjC,IAAIuB,EAAQ7F,IAAoB6E,EAAU,EAAJ/iB,GAAS,GAC/C,GAAa,GAAT+jB,EACF,MAEF,KADE/jB,EACE+jB,GAAS,MAAO,CAClB,IAAIlB,EAAKkB,EAAQ,MACjBlQ,GAAOhB,OAAOsC,aAAa,MAAQ0N,GAAM,GAAI,MAAa,KAALA,QAErDhP,GAAOhB,OAAOsC,aAAa4O,GAG/B,OAAOlQ,EAET,SAASmQ,GAAcnQ,EAAKyP,EAAQJ,GAKlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAGT,IAFA,IAAIS,EANJL,KAAY,EAORW,EAASN,EAAWT,EAAkB,EACjCljB,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAO9B,GANIyjB,GAAY,OAASA,GAAY,QAEnCA,EAAW,QAAqB,KAAXA,IAAoB,IAAuB,KAD3C5P,EAAIzG,aAAapN,IAGxCke,IAAoBoF,GAAU,GAAKG,GACnCH,GAAU,GACG,EAAIW,EACf,MAGJ,OADA/F,IAAoBoF,GAAU,GAAK,EAC5BA,EAASK,EAElB,SAASO,GAAiBrQ,GAExB,IADA,IAAIhK,EAAM,EACD7J,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAC1ByjB,GAAY,OAASA,GAAY,SACjCzjB,EACJ6J,GAAO,EAET,OAAOA,EAmBT,SAAS6T,GAA2B5K,GAClC3E,EAAS2E,EACT4L,EAAc,MAAIf,EAAQ,IAAIwG,UAAUrR,GACxC4L,EAAe,OAAIX,EAAS,IAAIqG,WAAWtR,GAC3C4L,EAAe,OAAIP,EAAS,IAAIkG,WAAWvR,GAC3C4L,EAAe,OAAIb,EAAS,IAAI7Q,WAAW8F,GAC3C4L,EAAgB,QAAIT,EAAU,IAAIqG,YAAYxR,GAC9C4L,EAAgB,QAAIL,EAAU,IAAIkG,YAAYzR,GAC9C4L,EAAgB,QAAIuD,EAAU,IAAIuC,aAAa1R,GAC/C4L,EAAgB,QAAIH,EAAU,IAAIkG,aAAa3R,GAEjD,IAuBI4R,GAvBAC,GAAiBjG,EAAuB,gBAAK,SACjD,GAAIa,EACF9B,EAAaiB,EAAmB,WAChCvQ,EAASuQ,EAAe,YAExB,GAAIA,EAAmB,WACrBjB,EAAaiB,EAAmB,gBAGhC,MADAjB,EAAa,IAAIsE,YAAY6C,OAAO,CAAEC,QAAWF,GAAiB,MAAOG,QAAW,MAAoBC,QAAU,KACjG5W,kBAAkB6W,mBAKjC,MAJAzlB,EAAI,+NACAuf,GACFuB,QAAQ/Q,IAAI,qHAER3M,MAAM,cAId8a,IACFtP,EAASsP,EAAWtP,QAEtBwW,GAAiBxW,EAAOmC,WACxBoN,GAA2BvP,GAE3B,IAAI8W,GAAe,GACfC,GAAa,GACbC,GAAa,GAEbC,GAAgB,GAqDhBC,GAAkB,EAElBC,GAAwB,KAI5B,SAASC,GAAiBC,GACxBpF,GAAQb,EAAwB,uDAChC8F,KACI3G,EAA+B,wBACjCA,EAA+B,uBAAE2G,IAGrC,SAASI,GAAoBD,GAK3B,GAJAH,KACI3G,EAA+B,wBACjCA,EAA+B,uBAAE2G,IAEZ,GAAnBA,IAKEC,GAAuB,CACzB,IAAII,EAAWJ,GACfA,GAAwB,KACxBI,KAMN,SAAS1D,GAAM2D,GACTjH,EAAgB,SAClBA,EAAgB,QAAEiH,GAEhBpG,GACFc,QAAQzhB,MAAM,wBAAyB,IAAI+D,OAAQijB,OAErDrmB,EADAomB,GAAQ,IAERxD,GAAQ,EAERwD,EAAO,SAAWA,EAAO,+CACzB,IAAIxc,EAAI,IAAI4Y,YAAY8D,aAAaF,GAErC,MADAlH,EAAmBtV,GACbA,EAER,SAAS2c,GAAUjS,EAAKkS,GACtB,OAAOlT,OAAOlS,UAAUqlB,WAAanS,EAAImS,WAAWD,GAAkC,IAAxBlS,EAAIrB,QAAQuT,GAG5E,SAASE,GAAU/F,GACjB,OAAO4F,GAAU5F,EAFC,yCAKpB,SAASgG,GAAUhG,GACjB,OAAO4F,GAAU5F,EAFC,WAxBpBxB,EAAwB,gBAAI,GAC5BA,EAAwB,gBAAI,GA2B5B,IAwFIyH,GACAC,GAzFAC,GAAiB,kBAIrB,SAASC,KACP,IACE,GAAI9E,EACF,OAAO,IAAIxU,WAAWwU,GAExB,GAAI/B,EACF,OAAOA,EAAW4G,IAElB,KAAM,kDAER,MAAOE,GACPvE,GAAMuE,IAdLN,GAAUI,MACbA,GAAiBxG,EAAWwG,KAwF9B,IAAIG,GAAa,CAAE,MAAO,SAASC,EAAIC,GACrCxd,YAAW,WACTyd,GAAkCF,EAAIC,KACrC,IACF,MAAO,WACR,KAAM,cAKR,SAASE,GAAqBC,GAC5B,KAAOA,EAAU5mB,OAAS,GAAG,CAC3B,IAAIylB,EAAWmB,EAAUC,QACzB,GAAuB,mBAAZpB,EAAX,CAIA,IAAIqB,EAAOrB,EAASqB,KACA,iBAATA,OACY,IAAjBrB,EAASjnB,IACXimB,GAAUsC,IAAID,EAAdrC,GAEAA,GAAUsC,IAAID,EAAdrC,CAAoBgB,EAASjnB,KAG/BsoB,OAAsB,IAAjBrB,EAASjnB,IAAiB,KAAOinB,EAASjnB,UAX/CinB,EAAShH,IAqBf,SAASuI,GAAQC,EAAKnE,EAAK3jB,GACzB,OAAyB,GAArB8nB,EAAI1U,QAAQ,KAPlB,SAAuB0U,EAAKnE,EAAK3jB,GAC/B,OAAIA,GAAQA,EAAKa,OACRye,EAAO,WAAawI,GAAK5nB,MAAM,KAAM,CAACyjB,GAAKrZ,OAAOtK,IAEpDsf,EAAO,WAAawI,GAAKvjB,KAAK,KAAMof,GAIlCoE,CAAcD,EAAKnE,EAAK3jB,GAE1BslB,GAAUsC,IAAIjE,GAAKzjB,MAAM,KAAMF,GAExCsf,EAAgB,QAAIuI,GACpB,IAAIG,GAAgB,EAChBC,GAAmC,EACnCC,GAAmC,EACvC,SAASC,GAAmBC,EAAYC,EAAqBC,GAI3DN,GAHAI,GAA0B,EAI1BF,GAHAG,GAA4C,EAI5CJ,GAHAK,GAA4C,EAK9ChJ,EAA2B,mBAAI6I,GAC/B,IAAII,GAA8C,GAA9CA,GAAyR,GAC7R,SAASC,GAAuBC,EAAMC,GACpC,GAAID,GAAQ,GAAKA,EAAOrK,IAAmBvd,SAAiB,EAAP4nB,GAAeC,EAAQ,EAC1E,OAAQ,GACV,GAAa,GAATA,EACF,OAAO,EACLA,GAAS,aACXA,EAAQ9Y,EAAAA,GACV,IAAI+Y,EAAwBC,QAAQC,KAAK/J,IAAqBgK,GAAQC,iBAAmB,GACrFC,EAAkB,EACtB,GAAIL,GAAyBF,GACVG,QAAQK,gBAAgBnK,IAAqBgK,GAAQC,iBAAmB,EAAGJ,EAAuB,IACjGA,IAEhBK,EAAkB,IADhBN,GAEW,GACX,OAAO,EAGb,IAAI5Q,EAAM8Q,QAAQM,OAAOpK,IAAqB2J,GAAQ,EAAGC,GACzD,GAAI5Q,GAAO,EACT,OAAOA,EAAMkR,EACf,KAAM,+CAAiDlR,EAEzDwH,EAA+B,uBAAIkJ,GAiCnC,IAqMIW,GArMAL,GAAU,CAAEM,eAAgB,EAAGC,eAAgB,CAAEC,YAAa,EAAGC,UAAW,GAAKC,cAAe,GAAIC,eAAgB,GAAIC,oBAAqB,WAE/I,IADA,IAAIC,EAAkBC,UAAUC,oBACvBjpB,EAAI,EAAGA,EAAI+oB,IAAmB/oB,EACrCkoB,GAAQgB,wBAETC,YAAa,WACdjB,GAAQkB,gBAAkBC,GAAQ,KAClC,IAAK,IAAIrpB,EAAI,EAAGA,EAAI,KAAWA,EAC7Boe,IAAoB8J,GAAQkB,gBAAkB,EAAIppB,GAAK,EACzDke,IAAoBgK,GAAQkB,gBAAkB,IAAM,GAAKlB,GAAQkB,gBACjE,IAAIE,EAAUpB,GAAQkB,gBAAkB,IACxClL,IAAoBoL,GAAW,GAAKA,EACpC,IAAIC,EAAYF,GAAQ,KACxB,IAASrpB,EAAI,EAAGA,EAAI,MAAOA,EACzBoe,IAAoBmL,EAAY,EAAIvpB,GAAK,EAC3CgoB,QAAQwB,MAAMpL,IAAqB8J,GAAQkB,gBAAkB,KAAO,EAAGG,GACvEvB,QAAQwB,MAAMpL,IAAqB8J,GAAQkB,gBAAkB,IAAM,EAAGlB,GAAQkB,iBAC9EpB,QAAQwB,MAAMpL,IAAqB8J,GAAQkB,gBAAkB,IAAM,EAAG,IACtElB,GAAQuB,aACRlC,GAAmBW,GAAQkB,iBAAkBvK,EAAuB,GACpE6K,GAA4CxB,GAAQkB,kBACnDO,WAAY,WACbzB,GAAQuB,aACRjL,EAAoBE,IACnB+K,WAAY,WACbvB,GAAQC,gBAAkByB,IACzBC,SAAU,GAAIC,mBAAoB,GAAIC,gBAAiB,aACvDC,gBAAiB,WAClB,KAAO9B,GAAQ4B,mBAAmB7pB,OAAS,GACzCioB,GAAQ4B,mBAAmB/iB,KAA3BmhB,GAEE3I,GAA0B2C,GAC5B+H,MACDC,WAAY,SAASC,GACtB,IAAIC,EAAKC,KACLD,IACFpC,QAAQwB,MAAMpL,IAAqBgM,EAAK,GAAK,EAAGD,GAChDnC,QAAQwB,MAAMpL,IAAqBgM,EAAK,GAAK,EAAG,GAChDpC,QAAQwB,MAAMpL,IAAqBgM,EAAK,IAAM,EAAG,GACjDpC,QAAQwB,MAAMpL,IAAqBgM,EAAK,IAAM,EAAG,GACjDlC,GAAQ8B,kBACRpC,GAAuBwC,EAAK,EAAG,YAC/B7C,GAAmB,EAAG,EAAG,GACzBrF,EAAmB,EACf3C,GACF+K,YAAY,CAAEC,IAAO,WAGxBC,aAAc,WACftC,GAAQ8B,kBACRhC,QAAQwB,MAAMpL,IAAqB8D,EAAmB,GAAK,GAAI,GAC/D8F,QAAQwB,MAAMpL,IAAqB8D,EAAmB,GAAK,EAAG,GAC9D0F,GAAuB1F,EAAmB,EAAG,YAC7CA,EAAkC,EAClCqF,GAAmB,EAAG,EAAG,GACzB+C,YAAY,CAAEC,IAAO,gBACpBE,oBAAqB,WACtB,IAAK,IAAIC,KAAKxC,GAAQ2B,UAChBc,EAAUzC,GAAQ2B,SAASa,KAChBC,EAAQC,QACrB1C,GAAQ2C,mBAAmBF,EAAQC,QAGvC1C,GAAQ2B,SAAW,GACnB,IAAK,IAAI7pB,EAAI,EAAGA,EAAIkoB,GAAQU,cAAc3oB,SAAUD,GAC9C4qB,EAAS1C,GAAQU,cAAc5oB,IAC5B8qB,YAGT,IADA5C,GAAQU,cAAgB,GACf5oB,EAAI,EAAGA,EAAIkoB,GAAQW,eAAe5oB,SAAUD,EAAG,CACtD,IAAI4qB,EACAD,GADAC,EAAS1C,GAAQW,eAAe7oB,IACf2qB,QACrBzC,GAAQ6C,eAAeJ,GACvBC,EAAOE,YAET5C,GAAQW,eAAiB,IACxBkC,eAAgB,SAASJ,GAC1B,GAAKA,EAAL,CAEA,GAAIA,EAAQzI,iBAAkB,CAC5B,IAAIqH,EAAYrL,IAAoByM,EAAQzI,iBAAmB,KAAO,GACtEhE,IAAoByM,EAAQzI,iBAAmB,KAAO,GAAK,EAC3D8I,GAAMzB,GACNyB,GAAML,EAAQzI,kBAEhByI,EAAQzI,iBAAmB,EACvByI,EAAQM,mBAAqBN,EAAQO,WACvCF,GAAML,EAAQO,WAChBP,EAAQO,UAAY,EAChBP,EAAQC,SACVD,EAAQC,OAAOD,QAAU,QAC1BE,mBAAoB,SAASD,UACvB1C,GAAQ2B,SAASe,EAAOD,QAAQQ,QACvCjD,GAAQU,cAAcnjB,KAAKmlB,GAC3B1C,GAAQW,eAAeuC,OAAOlD,GAAQW,eAAerW,QAAQoY,GAAS,GACtE1C,GAAQ6C,eAAeH,EAAOD,SAC9BC,EAAOD,aAAU,GAChBU,sBAAuB,SAASna,KAChCoa,uBAAwB,SAASV,EAAQW,GAC1CX,EAAOY,UAAY,SAASriB,GAC1B,IAAI0F,EAAI1F,EAAQ,KACZohB,EAAM1b,EAAO,IAGjB,GAFI+b,EAAOD,UACTzC,GAAQuD,oCAAsCb,EAAOD,QAAQzI,kBAC3DrT,EAAgB,cAAKA,EAAgB,cAAKwb,KAAiB,CAC7D,IAAIc,EAASjD,GAAQ2B,SAAShb,EAAE6c,cAOhC,OANIP,EACFA,EAAOP,OAAON,YAAYnhB,EAAE+H,KAAMrC,EAAgB,cAElDwR,QAAQzhB,MAAM,0CAA4C2rB,EAAM,uBAAyB1b,EAAgB,aAAI,4CAE/GqZ,GAAQuD,yCAAsC,GAGpC,gCAARlB,EACFoB,KACiB,gBAARpB,EACTqB,GAAYziB,EAAE+H,MACG,kBAARqZ,EAlIf,SAAuBsB,GACrB,GAAItM,EACF,KAAM,wFACR,IAAKsM,EACH,KAAM,qDACR3N,IAAoB2N,EAAc,IAAM,GAAK,EAC7C,IAAIlB,EAAUzC,GAAQ2B,SAASgC,GAC/B,GAAIlB,EAAS,CACX,IAAIC,EAASD,EAAQC,OACrB1C,GAAQ2C,mBAAmBD,IA0HzBkB,CAAcjd,EAAU,QACP,eAAR0b,EAxJf,SAAoBsB,GAClB,GAAItM,EACF,KAAM,qFACR,IAAKsM,EACH,KAAM,kDACR3N,IAAoB2N,EAAc,IAAM,GAAK,EAC7C,IAAIlB,EAAUzC,GAAQ2B,SAASgC,GAC/BlB,EAAQC,OAAOE,YACf5C,GAAQ6C,eAAeJ,GACvBzC,GAAQW,eAAeuC,OAAOlD,GAAQW,eAAerW,QAAQmY,EAAQC,QAAS,GAC9ED,EAAQC,OAAOD,aAAU,EA+IrBoB,CAAWld,EAAU,QACJ,iBAAR0b,EA9If,SAAsBsB,GACpB,GAAItM,EACF,KAAM,uFACR,IAAKsM,EACH,KAAM,oDACM3D,GAAQ2B,SAASgC,GACvBjB,OAAON,YAAY,CAAEC,IAAO,WAyIhCyB,CAAand,EAAU,QACN,WAAR0b,GACTK,EAAOqB,QAAS,EACZV,GACFA,EAAkBX,GAChBA,EAAOsB,aACTtB,EAAOsB,oBACAtB,EAAOsB,aAEC,UAAR3B,EACTpT,EAAI,UAAYtI,EAAY,SAAI,KAAOA,EAAQ,MAC9B,aAAR0b,EACThrB,EAAI,UAAYsP,EAAY,SAAI,KAAOA,EAAQ,MAC9B,UAAR0b,EACT4B,MAAM,UAAYtd,EAAY,SAAI,KAAOA,EAAQ,MAChC,SAAR0b,EACMK,EAAOD,SAAW3C,QAAQC,KAAK7J,IAAqBwM,EAAOD,QAAQQ,OAAS,IAAM,IAE/FjD,GAAQ2C,mBAAmBD,GAEZ,eAARL,EACTrC,GAAQ2C,mBAAmBD,GACV,mBAARL,EACTrC,GAAQmD,sBAAsBliB,EAAE+H,MACL,iBAAlB/H,EAAE+H,KAAKpR,OAChB8qB,EAAON,YAAYnhB,EAAE+H,MAErB3R,EAAI,kCAAoCgrB,GAE1CrC,GAAQuD,yCAAsC,GAEhDb,EAAOwB,QAAU,SAASjjB,GACxB5J,EAAI,0BAA4B4J,EAAE+W,SAAW,IAAM/W,EAAEkjB,OAAS,KAAOljB,EAAEmjB,UAErExN,IACF8L,EAAOxgB,GAAG,WAAW,SAAS8G,GAC5B0Z,EAAOY,UAAU,CAAEta,KAAAA,OAErB0Z,EAAOxgB,GAAG,SAAS,SAAS8G,GAC1B0Z,EAAOwB,QAAQlb,MAEjB0Z,EAAOxgB,GAAG,QAAQ,SAAS8G,QAG7B0Z,EAAON,YAAY,CAAEC,IAAO,OAAQgC,UAAa7N,EAA4B,qBAAKxB,EAAYO,WAAcA,EAAYiE,WAAcA,KACrIwH,qBAAsB,WACvB,IAAIsD,EAAgB3M,EAAW,wBAC/BqI,GAAQU,cAAcnjB,KAAK,IAAI6a,OAAOkM,KACrCC,aAAc,WAKf,OAJoC,GAAhCvE,GAAQU,cAAc3oB,SACxBioB,GAAQgB,uBACRhB,GAAQoD,uBAAuBpD,GAAQU,cAAc,KAEnDV,GAAQU,cAAc3oB,OAAS,EAC1BioB,GAAQU,cAAc7hB,MAEtB,MACR2lB,aAAc,SAASC,GAExB,IADA,IAAIjC,EAAI/f,YAAYE,MAAQ8hB,EACrBhiB,YAAYE,MAAQ6f,OAO7BhM,EAA4B,oBAJ5B,SAA6BkO,EAAUC,GACrCC,GAA6BF,EAAUC,GACvCE,GAAaH,IAMflO,EAAyB,iBAHzB,WACE,OAAO+C,GAQP8G,GADEzJ,EACoB,WACpB,IAAI4L,EAAIrL,EAAgB,SACxB,OAAc,IAAPqL,EAAE,GAAWA,EAAE,GAAK,KAEpBnL,EACa,WACpB,OAAO5U,YAAYE,MAAQ6T,EAAsC,+BAEvC,oBAAZsO,QACMA,QAEA,WACpB,OAAOriB,YAAYE,OAqBvB,IAAIoiB,GAA0C,EAA1CA,GAA8D,EAA9DA,GAA8E,EAA9EA,GAAgG,GAAhGA,GAAqH,GAArHA,GAA+H,GAQnI,SAASC,GAAcC,GACrBhuB,KAAKguB,OAASA,EACdhuB,KAAK4jB,IAAMoK,EAASF,GACpB9tB,KAAKiuB,SAAW,SAAS5pB,GACvB0a,IAAoB/e,KAAK4jB,IAAMkK,IAAkC,GAAKzpB,GAExErE,KAAKkuB,SAAW,WACd,OAAOnP,IAAoB/e,KAAK4jB,IAAMkK,IAAkC,IAE1E9tB,KAAKmuB,eAAiB,SAASC,GAC7BrP,IAAoB/e,KAAK4jB,IAAMkK,IAAwC,GAAKM,GAE9EpuB,KAAKquB,eAAiB,WACpB,OAAOtP,IAAoB/e,KAAK4jB,IAAMkK,IAAwC,IAEhF9tB,KAAKsuB,aAAe,SAASC,GAC3BxP,IAAoB/e,KAAK4jB,IAAMkK,IAAsC,GAAKS,GAE5EvuB,KAAKwuB,WAAa,SAASjmB,GACzBA,EAASA,EAAS,EAAI,EACtB8V,IAAmBre,KAAK4jB,IAAMkK,IAAoC,GAAKvlB,GAEzEvI,KAAKyuB,WAAa,WAChB,OAA+E,GAAxEpQ,IAAmBre,KAAK4jB,IAAMkK,IAAoC,IAE3E9tB,KAAK0uB,aAAe,SAASC,GAC3BA,EAAWA,EAAW,EAAI,EAC1BtQ,IAAmBre,KAAK4jB,IAAMkK,IAAsC,GAAKa,GAE3E3uB,KAAK4uB,aAAe,WAClB,OAAiF,GAA1EvQ,IAAmBre,KAAK4jB,IAAMkK,IAAsC,IAE7E9tB,KAAK+N,KAAO,SAAS1J,EAAM+pB,GACzBpuB,KAAKiuB,SAAS5pB,GACdrE,KAAKmuB,eAAeC,GACpBpuB,KAAKsuB,aAAa,GAClBtuB,KAAKwuB,YAAW,GAChBxuB,KAAK0uB,cAAa,IAEpB1uB,KAAK6uB,QAAU,WACbhG,QAAQiG,IAAI/P,IAAqB/e,KAAK4jB,IAAMkK,IAAsC,EAAG,IAEvF9tB,KAAK+uB,YAAc,WAEjB,OAAgB,IADLlG,QAAQhO,IAAIkE,IAAqB/e,KAAK4jB,IAAMkK,IAAsC,EAAG,IAapG,IAAIkB,GAAO,CAAEC,UAAW,SAASlO,GAE/B,MADkB,gEACCmO,KAAKnO,GAAU/Y,MAAM,IACvCmnB,eAAgB,SAASvgB,EAAOwgB,GAEjC,IADA,IAAIC,EAAK,EACAxuB,EAAI+N,EAAM9N,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC1C,IAAIyuB,EAAO1gB,EAAM/N,GACJ,MAATyuB,EACF1gB,EAAMqd,OAAOprB,EAAG,GACE,OAATyuB,GACT1gB,EAAMqd,OAAOprB,EAAG,GAChBwuB,KACSA,IACTzgB,EAAMqd,OAAOprB,EAAG,GAChBwuB,KAGJ,GAAID,EACF,KAAOC,EAAIA,IACTzgB,EAAM2gB,QAAQ,MAGlB,OAAO3gB,GACN4gB,UAAW,SAAS7O,GACrB,IAAI8O,EAAgC,MAAnB9O,EAAK5Y,OAAO,GAAY2nB,EAAoC,MAApB/O,EAAKrM,QAAQ,GAUtE,OATAqM,EAAOqO,GAAKG,eAAexO,EAAKgP,MAAM,KAAKC,QAAO,SAASC,GACzD,QAASA,MACNJ,GAAYhhB,KAAK,OACRghB,IACZ9O,EAAO,KAELA,GAAQ+O,IACV/O,GAAQ,MAEF8O,EAAa,IAAM,IAAM9O,GAChCE,QAAS,SAASF,GACnB,IAAIrb,EAAS0pB,GAAKC,UAAUtO,GAAOmP,EAAOxqB,EAAO,GAAIuH,EAAMvH,EAAO,GAClE,OAAKwqB,GAASjjB,GAGVA,IACFA,EAAMA,EAAIyH,OAAO,EAAGzH,EAAI/L,OAAS,IAE5BgvB,EAAOjjB,GALL,KAMRkjB,SAAU,SAASpP,GACpB,GAAa,MAATA,EACF,MAAO,IAGT,IAAIqP,GADJrP,GADAA,EAAOqO,GAAKQ,UAAU7O,IACVzE,QAAQ,MAAO,KACN5I,YAAY,KACjC,OAAmB,IAAf0c,EACKrP,EACFA,EAAKrM,OAAO0b,EAAY,IAC9BC,QAAS,SAAStP,GACnB,OAAOqO,GAAKC,UAAUtO,GAAM,IAC3BlS,KAAM,WACP,IAAIyhB,EAAQ/jB,MAAM3K,UAAUwG,MAAMxD,KAAKtE,UAAW,GAClD,OAAO8uB,GAAKQ,UAAUU,EAAMzhB,KAAK,OAChC0hB,MAAO,SAAStU,EAAGuU,GACpB,OAAOpB,GAAKQ,UAAU3T,EAAI,IAAMuU,KAsB9BC,GAAU,CAAEpxB,QAAS,WAEvB,IADA,IAAIqxB,EAAe,GAAIC,GAAmB,EACjC1vB,EAAIX,UAAUY,OAAS,EAAGD,IAAM,IAAM0vB,EAAkB1vB,IAAK,CACpE,IAAI8f,EAAO9f,GAAK,EAAIX,UAAUW,GAAK2vB,GAAG7jB,MACtC,GAAoB,iBAATgU,EACT,MAAM,IAAIlgB,UAAU,6CACf,IAAKkgB,EACV,MAAO,GAET2P,EAAe3P,EAAO,IAAM2P,EAC5BC,EAAsC,MAAnB5P,EAAK5Y,OAAO,GAKjC,OAAQwoB,EAAmB,IAAM,KAHjCD,EAAetB,GAAKG,eAAemB,EAAaX,MAAM,KAAKC,QAAO,SAASC,GACzE,QAASA,MACNU,GAAkB9hB,KAAK,OAC2B,KACtDgiB,SAAU,SAASzf,EAAM0f,GAG1B,SAASzU,EAAK1L,GAEZ,IADA,IAAInC,EAAQ,EACLA,EAAQmC,EAAIzP,QACE,KAAfyP,EAAInC,GADiBA,KAK3B,IADA,IAAIC,EAAMkC,EAAIzP,OAAS,EAChBuN,GAAO,GACK,KAAbkC,EAAIlC,GADOA,KAIjB,OAAID,EAAQC,EACH,GACFkC,EAAIvI,MAAMoG,EAAOC,EAAMD,EAAQ,GAfxC4C,EAAOqf,GAAQpxB,QAAQ+R,GAAMsD,OAAO,GACpCoc,EAAKL,GAAQpxB,QAAQyxB,GAAIpc,OAAO,GAoBhC,IAJA,IAAIqc,EAAY1U,EAAKjL,EAAK2e,MAAM,MAC5BiB,EAAU3U,EAAKyU,EAAGf,MAAM,MACxB7uB,EAASqM,KAAKkI,IAAIsb,EAAU7vB,OAAQ8vB,EAAQ9vB,QAC5C+vB,EAAkB/vB,EACbD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,GAAI8vB,EAAU9vB,KAAO+vB,EAAQ/vB,GAAI,CAC/BgwB,EAAkBhwB,EAClB,MAGJ,IAAIiwB,EAAc,GAClB,IAASjwB,EAAIgwB,EAAiBhwB,EAAI8vB,EAAU7vB,OAAQD,IAClDiwB,EAAYxqB,KAAK,MAGnB,OADAwqB,EAAcA,EAAYvmB,OAAOqmB,EAAQ5oB,MAAM6oB,KAC5BpiB,KAAK,OAEtBsiB,GAAM,CAAEC,KAAM,GAAIjjB,KAAM,aACzBkjB,SAAU,aACVC,SAAU,SAASC,EAAKC,GACzBL,GAAIC,KAAKG,GAAO,CAAEE,MAAO,GAAI7iB,OAAQ,GAAI4iB,IAAAA,GACzCZ,GAAGc,eAAeH,EAAKJ,GAAIQ,aAC1BA,WAAY,CAAEvP,KAAM,SAASwP,GAC9B,IAAIC,EAAMV,GAAIC,KAAKQ,EAAOrR,KAAKuR,MAC/B,IAAKD,EACH,MAAM,IAAIjB,GAAGmB,WAAW,IAE1BH,EAAOC,IAAMA,EACbD,EAAOI,UAAW,GACjBC,MAAO,SAASL,GACjBA,EAAOC,IAAIL,IAAIU,MAAMN,EAAOC,MAC3BK,MAAO,SAASN,GACjBA,EAAOC,IAAIL,IAAIU,MAAMN,EAAOC,MAC3B1iB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GACjD,IAAKwa,EAAOC,MAAQD,EAAOC,IAAIL,IAAIY,SACjC,MAAM,IAAIxB,GAAGmB,WAAW,IAG1B,IADA,IAAIM,EAAY,EACPpxB,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,IAAIyE,EACJ,IACEA,EAASksB,EAAOC,IAAIL,IAAIY,SAASR,EAAOC,KACxC,MAAOznB,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAE1B,QAAe,IAAXrsB,GAAmC,IAAd2sB,EACvB,MAAM,IAAIzB,GAAGmB,WAAW,GAE1B,GAAIrsB,MAAAA,EACF,MACF2sB,IACAF,EAAQ9iB,EAASpO,GAAKyE,EAKxB,OAHI2sB,IACFT,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExBumB,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,IAAKwa,EAAOC,MAAQD,EAAOC,IAAIL,IAAIe,SACjC,MAAM,IAAI3B,GAAGmB,WAAW,IAE1B,IACE,IAAK,IAAI9wB,EAAI,EAAGA,EAAIC,EAAQD,IAC1B2wB,EAAOC,IAAIL,IAAIe,SAASX,EAAOC,IAAKM,EAAQ9iB,EAASpO,IAEvD,MAAOmJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAK1B,OAHI7wB,IACF0wB,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExB7K,IACJuxB,gBAAiB,CAAEJ,SAAU,SAASP,GACzC,IAAKA,EAAIJ,MAAMvwB,OAAQ,CACrB,IAAIwE,EAAS,KACb,GAAIqa,EAAqB,CACvB,IACIhM,EAAMlD,GAAO2F,MAAQ3F,GAAO2F,MADlB,KACmC,IAAI3F,GADvC,KAEVwhB,EAAY,EAChB,IACEA,EAAY1R,EAAO8R,SAASnS,EAAQoS,MAAMC,GAAI5e,EAAK,EAJvC,IAImD,MAC/D,MAAO3J,GACP,IAAoC,GAAhCA,EAAEqG,WAAWgD,QAAQ,OAGvB,MAAMrJ,EAFNioB,EAAY,EAKd3sB,EADE2sB,EAAY,EACLte,EAAI3L,MAAM,EAAGiqB,GAAW5hB,SAAS,SAEjC,SAEe,oBAAV7G,QAAiD,mBAAjBA,OAAOgpB,OAExC,QADfltB,EAASkE,OAAOgpB,OAAO,cAErBltB,GAAU,MAEgB,mBAAZmtB,UAED,QADfntB,EAASmtB,cAEPntB,GAAU,MAGd,IAAKA,EACH,OAAO,KAETmsB,EAAIJ,MAAQqB,GAAmBptB,GAAQ,GAEzC,OAAOmsB,EAAIJ,MAAM1J,SAChBwK,SAAU,SAASV,EAAK3f,GACb,OAARA,GAAwB,KAARA,GAClBkG,EAAIkL,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,IAEF,GAAPsD,GACF2f,EAAIjjB,OAAOlI,KAAKwL,IAEnBggB,MAAO,SAASL,GACbA,EAAIjjB,QAAUijB,EAAIjjB,OAAO1N,OAAS,IACpCkX,EAAIkL,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,MAEZmkB,iBAAkB,CAAER,SAAU,SAASV,EAAK3f,GACnC,OAARA,GAAwB,KAARA,GAClB1R,EAAI8iB,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,IAEF,GAAPsD,GACF2f,EAAIjjB,OAAOlI,KAAKwL,IAEnBggB,MAAO,SAASL,GACbA,EAAIjjB,QAAUijB,EAAIjjB,OAAO1N,OAAS,IACpCV,EAAI8iB,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,OAGjB,SAASokB,GAAU1gB,GAGjB,IAFA,IAAI2gB,EA3mCN,SAAqB3gB,EAAM4gB,GAGzB,OAFKA,IACHA,EAHc,IAIT3lB,KAAK4lB,KAAK7gB,EAAO4gB,GAAUA,EAwmChBE,CAAY9gB,EAAM,OAChC0R,EAAMsG,GAAQ2I,GACX3gB,EAAO2gB,GACZxU,IAAmBuF,EAAM1R,KAAU,EACrC,OAAO0R,EAET,IAAIqP,GAAQ,CAAEC,UAAW,KAAMC,MAAO,SAASA,GAC7C,OAAOF,GAAMG,WAAW,KAAM,IAAK,MAAa,IAC/CA,WAAY,SAASC,EAAQC,EAAOC,EAAMpC,GAC3C,GAAIX,GAAGgD,SAASD,IAAS/C,GAAGiD,OAAOF,GACjC,MAAM,IAAI/C,GAAGmB,WAAW,IAErBsB,GAAMC,YACTD,GAAMC,UAAY,CAAErmB,IAAK,CAAEsT,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASlmB,OAAQulB,GAAMU,SAASjmB,OAAQmmB,MAAOZ,GAAMU,SAASE,MAAOC,OAAQb,GAAMU,SAASG,OAAQC,OAAQd,GAAMU,SAASI,OAAQC,MAAOf,GAAMU,SAASK,MAAOC,QAAShB,GAAMU,SAASM,QAASC,QAASjB,GAAMU,SAASO,SAAW1C,OAAQ,CAAE2C,OAAQlB,GAAM1B,WAAW4C,SAAYC,KAAM,CAAEjU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWpC,OAAQ,CAAE2C,OAAQlB,GAAM1B,WAAW4C,OAAQplB,KAAMkkB,GAAM1B,WAAWxiB,KAAMgB,MAAOkjB,GAAM1B,WAAWxhB,MAAOskB,SAAUpB,GAAM1B,WAAW8C,SAAUC,KAAMrB,GAAM1B,WAAW+C,KAAMC,MAAOtB,GAAM1B,WAAWgD,QAAWC,KAAM,CAAErU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASa,SAAUxB,GAAMU,SAASc,UAAYjD,OAAQ,IAAMkD,OAAQ,CAAEvU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWpC,OAAQhB,GAAGmE,qBAEv3B,IAAIxU,EAAOqQ,GAAG4C,WAAWC,EAAQC,EAAOC,EAAMpC,GAqB9C,OApBIX,GAAGoE,MAAMzU,EAAKoT,OAChBpT,EAAKwT,SAAWV,GAAMC,UAAUrmB,IAAIsT,KACpCA,EAAKoR,WAAa0B,GAAMC,UAAUrmB,IAAI2kB,OACtCrR,EAAK0U,SAAW,IACPrE,GAAGsE,OAAO3U,EAAKoT,OACxBpT,EAAKwT,SAAWV,GAAMC,UAAUkB,KAAKjU,KACrCA,EAAKoR,WAAa0B,GAAMC,UAAUkB,KAAK5C,OACvCrR,EAAK4U,UAAY,EACjB5U,EAAK0U,SAAW,MACPrE,GAAGwE,OAAO7U,EAAKoT,OACxBpT,EAAKwT,SAAWV,GAAMC,UAAUsB,KAAKrU,KACrCA,EAAKoR,WAAa0B,GAAMC,UAAUsB,KAAKhD,QAC9BhB,GAAGyE,SAAS9U,EAAKoT,QAC1BpT,EAAKwT,SAAWV,GAAMC,UAAUwB,OAAOvU,KACvCA,EAAKoR,WAAa0B,GAAMC,UAAUwB,OAAOlD,QAE3CrR,EAAK+R,UAAYnmB,KAAKL,MAClB2nB,IACFA,EAAOwB,SAASvB,GAASnT,GAEpBA,GACN+U,0BAA2B,SAAS/U,GACrC,GAAIA,EAAK0U,UAAY1U,EAAK0U,SAAS7b,SAAU,CAE3C,IADA,IAAIzI,EAAM,GACD1P,EAAI,EAAGA,EAAIsf,EAAK4U,YAAal0B,EACpC0P,EAAIjK,KAAK6Z,EAAK0U,SAASh0B,IACzB,OAAO0P,EAET,OAAO4P,EAAK0U,UACXM,wBAAyB,SAAShV,GACnC,OAAKA,EAAK0U,SAEN1U,EAAK0U,SAAS7b,SACTmH,EAAK0U,SAAS7b,SAAS,EAAGmH,EAAK4U,WACjC,IAAIlnB,WAAWsS,EAAK0U,UAHlB,IAAIhnB,WAAW,IAIvBunB,kBAAmB,SAASjV,EAAMkV,GACnCA,KAAiB,EACjB,IAAIC,EAAenV,EAAK0U,SAAW1U,EAAK0U,SAAS/zB,OAAS,EAC1D,KAAIw0B,GAAgBD,GAApB,CAGAA,EAAcloB,KAAKmL,IAAI+c,EAAaC,GAAgBA,EADxB,QAC+D,EAAI,SAAW,GACtF,GAAhBA,IACFD,EAAcloB,KAAKmL,IAAI+c,EAAa,MACtC,IAAIE,EAAcpV,EAAK0U,SACvB1U,EAAK0U,SAAW,IAAIhnB,WAAWwnB,GAC3BlV,EAAK4U,UAAY,GACnB5U,EAAK0U,SAASpZ,IAAI8Z,EAAYvc,SAAS,EAAGmH,EAAK4U,WAAY,KAE5DS,kBAAmB,SAASrV,EAAMsV,GAEnC,GADAA,KAAa,EACTtV,EAAK4U,WAAaU,EAAtB,CAEA,GAAe,GAAXA,EAGF,OAFAtV,EAAK0U,SAAW,UAChB1U,EAAK4U,UAAY,GAGnB,IAAK5U,EAAK0U,UAAY1U,EAAK0U,SAAS7b,SAAU,CAC5C,IAAIuc,EAAcpV,EAAK0U,SAMvB,OALA1U,EAAK0U,SAAW,IAAIhnB,WAAW4nB,GAC3BF,GACFpV,EAAK0U,SAASpZ,IAAI8Z,EAAYvc,SAAS,EAAG7L,KAAKkI,IAAIogB,EAAStV,EAAK4U,kBAEnE5U,EAAK4U,UAAYU,GAKnB,GAFKtV,EAAK0U,WACR1U,EAAK0U,SAAW,IACd1U,EAAK0U,SAAS/zB,OAAS20B,EACzBtV,EAAK0U,SAAS/zB,OAAS20B,OAEvB,KAAOtV,EAAK0U,SAAS/zB,OAAS20B,GAC5BtV,EAAK0U,SAASvuB,KAAK,GACvB6Z,EAAK4U,UAAYU,IAChB9B,SAAU,CAAED,QAAS,SAASvT,GAC/B,IAAIuV,EAAO,GAsBX,OArBAA,EAAKvE,IAAMX,GAAGyE,SAAS9U,EAAKoT,MAAQpT,EAAKkG,GAAK,EAC9CqP,EAAKC,IAAMxV,EAAKkG,GAChBqP,EAAKnC,KAAOpT,EAAKoT,KACjBmC,EAAKE,MAAQ,EACbF,EAAKG,IAAM,EACXH,EAAKI,IAAM,EACXJ,EAAKhE,KAAOvR,EAAKuR,KACblB,GAAGoE,MAAMzU,EAAKoT,MAChBmC,EAAKxjB,KAAO,KACHse,GAAGsE,OAAO3U,EAAKoT,MACxBmC,EAAKxjB,KAAOiO,EAAK4U,UACRvE,GAAGwE,OAAO7U,EAAKoT,MACxBmC,EAAKxjB,KAAOiO,EAAKqU,KAAK1zB,OAEtB40B,EAAKxjB,KAAO,EAEdwjB,EAAKK,MAAQ,IAAIhqB,KAAKoU,EAAK+R,WAC3BwD,EAAKM,MAAQ,IAAIjqB,KAAKoU,EAAK+R,WAC3BwD,EAAKO,MAAQ,IAAIlqB,KAAKoU,EAAK+R,WAC3BwD,EAAKQ,QAAU,KACfR,EAAKS,OAAShpB,KAAK4lB,KAAK2C,EAAKxjB,KAAOwjB,EAAKQ,SAClCR,GACN9B,QAAS,SAASzT,EAAMuV,QACP,IAAdA,EAAKnC,OACPpT,EAAKoT,KAAOmC,EAAKnC,WAEI,IAAnBmC,EAAKxD,YACP/R,EAAK+R,UAAYwD,EAAKxD,gBAEN,IAAdwD,EAAKxjB,MACP+gB,GAAMuC,kBAAkBrV,EAAMuV,EAAKxjB,OAEpCxE,OAAQ,SAAS2lB,EAAQC,GAC1B,MAAM9C,GAAG4F,cAAc,KACtBvC,MAAO,SAASR,EAAQC,EAAOC,EAAMpC,GACtC,OAAO8B,GAAMG,WAAWC,EAAQC,EAAOC,EAAMpC,IAC5C2C,OAAQ,SAASuC,EAAUC,EAASC,GACrC,GAAI/F,GAAGoE,MAAMyB,EAAS9C,MAAO,CAC3B,IAAIiD,EACJ,IACEA,EAAWhG,GAAGiG,WAAWH,EAASC,GAClC,MAAOvsB,IAET,GAAIwsB,EACF,IAAK,IAAI31B,KAAK21B,EAAS3B,SACrB,MAAM,IAAIrE,GAAGmB,WAAW,WAIvB0E,EAAShD,OAAOwB,SAASwB,EAASnvB,MACzCmvB,EAASnvB,KAAOqvB,EAChBD,EAAQzB,SAAS0B,GAAYF,EAC7BA,EAAShD,OAASiD,GACjBvC,OAAQ,SAASV,EAAQC,UACnBD,EAAOwB,SAASvB,IACtBU,MAAO,SAASX,EAAQC,GACzB,IAAInT,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GACjC,IAAK,IAAIzyB,KAAKsf,EAAK0U,SACjB,MAAM,IAAIrE,GAAGmB,WAAW,WAEnB0B,EAAOwB,SAASvB,IACtBW,QAAS,SAAS9T,GACnB,IAAIuW,EAAU,CAAC,IAAK,MACpB,IAAK,IAAIC,KAAQxW,EAAK0U,SACf1U,EAAK0U,SAAS9yB,eAAe40B,IAGlCD,EAAQpwB,KAAKqwB,GAEf,OAAOD,GACNxC,QAAS,SAASb,EAAQuD,EAASC,GACpC,IAAI1W,EAAO8S,GAAMG,WAAWC,EAAQuD,EAAS,MAAa,GAE1D,OADAzW,EAAKqU,KAAOqC,EACL1W,GACNsU,SAAU,SAAStU,GACpB,IAAKqQ,GAAGwE,OAAO7U,EAAKoT,MAClB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKqU,OACTjD,WAAY,CAAExiB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GACjE,IAAIjC,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAIiC,GAAYtF,EAAOrR,KAAK4U,UAC1B,OAAO,EACT,IAAI7iB,EAAO/E,KAAKkI,IAAImc,EAAOrR,KAAK4U,UAAY+B,EAAUh2B,GACtD,GAAIoR,EAAO,GAAK2iB,EAAS7b,SACvB+Y,EAAQtW,IAAIoZ,EAAS7b,SAAS8d,EAAUA,EAAW5kB,GAAOjD,QAE1D,IAAK,IAAIpO,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAASiC,EAAWj2B,GAE9C,OAAOqR,GACNnC,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GAI5D,GAHIhF,EAAQ/iB,SAAWqP,IAAmBrP,SACxC+nB,GAAS,IAENj2B,EACH,OAAO,EACT,IAAIqf,EAAOqR,EAAOrR,KAElB,GADAA,EAAK+R,UAAYnmB,KAAKL,MAClBqmB,EAAQ/Y,YAAcmH,EAAK0U,UAAY1U,EAAK0U,SAAS7b,UAAW,CAClE,GAAI+d,EAGF,OAFA5W,EAAK0U,SAAW9C,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAClDqf,EAAK4U,UAAYj0B,EACVA,EACF,GAAuB,IAAnBqf,EAAK4U,WAAgC,IAAb+B,EAGjC,OAFA3W,EAAK0U,SAAW9C,EAAQ/pB,MAAMiH,EAAQA,EAASnO,GAC/Cqf,EAAK4U,UAAYj0B,EACVA,EACF,GAAIg2B,EAAWh2B,GAAUqf,EAAK4U,UAEnC,OADA5U,EAAK0U,SAASpZ,IAAIsW,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAASg2B,GACtDh2B,EAIX,GADAmyB,GAAMmC,kBAAkBjV,EAAM2W,EAAWh2B,GACrCqf,EAAK0U,SAAS7b,UAAY+Y,EAAQ/Y,SACpCmH,EAAK0U,SAASpZ,IAAIsW,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAASg2B,QAE7D,IAAK,IAAIj2B,EAAI,EAAGA,EAAIC,EAAQD,IAC1Bsf,EAAK0U,SAASiC,EAAWj2B,GAAKkxB,EAAQ9iB,EAASpO,GAInD,OADAsf,EAAK4U,UAAY5nB,KAAKmL,IAAI6H,EAAK4U,UAAW+B,EAAWh2B,GAC9CA,GACNqzB,OAAQ,SAAS3C,EAAQviB,EAAQ+nB,GAClC,IAAIF,EAAW7nB,EAQf,GAPe,IAAX+nB,EACFF,GAAYtF,EAAOsF,SACC,IAAXE,GACLxG,GAAGsE,OAAOtD,EAAOrR,KAAKoT,QACxBuD,GAAYtF,EAAOrR,KAAK4U,WAGxB+B,EAAW,EACb,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,OAAOmF,GACNzC,SAAU,SAAS7C,EAAQviB,EAAQnO,GACpCmyB,GAAMmC,kBAAkB5D,EAAOrR,KAAMlR,EAASnO,GAC9C0wB,EAAOrR,KAAK4U,UAAY5nB,KAAKmL,IAAIkZ,EAAOrR,KAAK4U,UAAW9lB,EAASnO,IAChEwzB,KAAM,SAAS9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,GAEzD,GADAlW,EAAmB,IAAZgW,IACFzG,GAAGsE,OAAOtD,EAAOrR,KAAKoT,MACzB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI/N,EACAwT,EACAvC,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAc,EAARsC,GAActC,EAAS7lB,SAAWA,EAGjC,CAUL,IATI8nB,EAAW,GAAKA,EAAWh2B,EAAS+zB,EAAS/zB,UAE7C+zB,EADEA,EAAS7b,SACA6b,EAAS7b,SAAS8d,EAAUA,EAAWh2B,GAEvCqL,MAAM3K,UAAUwG,MAAMxD,KAAKqwB,EAAUiC,EAAUA,EAAWh2B,IAGzEs2B,GAAY,IACZxT,EAAMgP,GAAU9xB,IAEd,MAAM,IAAI0vB,GAAGmB,WAAW,IAE1B/N,KAAS,EACTvF,IAAmB5C,IAAIoZ,EAAUjR,QAhBjCwT,GAAY,EACZxT,EAAMiR,EAAS3jB,WAiBjB,MAAO,CAAE0S,IAAAA,EAAKwT,UAAAA,IACb7C,MAAO,SAAS/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAClD,IAAK7G,GAAGsE,OAAOtD,EAAOrR,KAAKoT,MACzB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,OAAgB,EAAZ0F,GAGepE,GAAM1B,WAAWxhB,MAAMyhB,EAAQO,EAAS,EAAGjxB,EAAQmO,GAAQ,GAFrE,KAKPuhB,GAAK,CAAEV,KAAM,KAAMwH,OAAQ,GAAIC,QAAS,GAAIC,QAAS,GAAIC,UAAW,EAAGC,UAAW,KAAMC,YAAa,IAAKC,aAAa,EAAOC,mBAAmB,EAAMC,iBAAkB,GAAIC,SAAU,CAAEC,UAAW,CAAEC,KAAM,EAAGC,MAAO,IAAOvG,WAAY,KAAMyE,cAAe,GAAI+B,YAAa,KAAMC,eAAgB,EAAGC,WAAY,SAAS1X,EAAM2X,GAGrU,GADAA,EAAOA,GAAQ,KADf3X,EAAO0P,GAAQpxB,QAAQuxB,GAAG7jB,MAAOgU,IAG/B,MAAO,CAAEA,KAAM,GAAIR,KAAM,MAC3B,IAAIoY,EAAW,CAAEC,cAAc,EAAMC,cAAe,GACpD,IAAK,IAAI9B,KAAQ4B,OACI,IAAfD,EAAK3B,KACP2B,EAAK3B,GAAQ4B,EAAS5B,IAG1B,GAAI2B,EAAKG,cAAgB,EACvB,MAAM,IAAIjI,GAAGmB,WAAW,IAO1B,IALA,IAAI/iB,EAAQogB,GAAKG,eAAexO,EAAKgP,MAAM,KAAKC,QAAO,SAASC,GAC9D,QAASA,MACP,GACA6I,EAAUlI,GAAGV,KACb6I,EAAe,IACV93B,EAAI,EAAGA,EAAI+N,EAAM9N,OAAQD,IAAK,CACrC,IAAI+3B,EAAS/3B,IAAM+N,EAAM9N,OAAS,EAClC,GAAI83B,GAAUN,EAAKjF,OACjB,MASF,GAPAqF,EAAUlI,GAAGiG,WAAWiC,EAAS9pB,EAAM/N,IACvC83B,EAAe3J,GAAKmB,MAAMwI,EAAc/pB,EAAM/N,IAC1C2vB,GAAGqI,aAAaH,MACbE,GAAUA,GAAUN,EAAKE,gBAC5BE,EAAUA,EAAQI,QAAQhJ,OAGzB8I,GAAUN,EAAKS,OAElB,IADA,IAAIpQ,EAAQ,EACL6H,GAAGwE,OAAO0D,EAAQnF,OAAO,CAC9B,IAAIiB,EAAOhE,GAAGiE,SAASkE,GAIvB,GAHAA,EAAetI,GAAQpxB,QAAQ+vB,GAAKnO,QAAQ8X,GAAenE,GAE3DkE,EADalI,GAAG6H,WAAWM,EAAc,CAAEF,cAAeH,EAAKG,gBAC9CtY,KACbwI,IAAU,GACZ,MAAM,IAAI6H,GAAGmB,WAAW,KAKhC,MAAO,CAAEhR,KAAMgY,EAAcxY,KAAMuY,IAClCM,QAAS,SAAS7Y,GAEnB,IADA,IAAIQ,IACS,CACX,GAAI6P,GAAGyI,OAAO9Y,GAAO,CACnB,IAAIgT,EAAQhT,EAAKgT,MAAM+F,WACvB,OAAKvY,EAE8B,MAA5BwS,EAAMA,EAAMryB,OAAS,GAAaqyB,EAAQ,IAAMxS,EAAOwS,EAAQxS,EAD7DwS,EAGXxS,EAAOA,EAAOR,EAAKjZ,KAAO,IAAMyZ,EAAOR,EAAKjZ,KAC5CiZ,EAAOA,EAAKkT,SAEb8F,SAAU,SAASC,EAAU9F,GAE9B,IADA,IAAI+F,EAAO,EACFx4B,EAAI,EAAGA,EAAIyyB,EAAMxyB,OAAQD,IAChCw4B,GAAQA,GAAQ,GAAKA,EAAO/F,EAAMrlB,WAAWpN,GAAK,EAEpD,OAAQu4B,EAAWC,IAAS,GAAK7I,GAAGkH,UAAU52B,QAC7Cw4B,YAAa,SAASnZ,GACvB,IAAIkZ,EAAO7I,GAAG2I,SAAShZ,EAAKkT,OAAOhN,GAAIlG,EAAKjZ,MAC5CiZ,EAAKoZ,UAAY/I,GAAGkH,UAAU2B,GAC9B7I,GAAGkH,UAAU2B,GAAQlZ,GACpBqZ,eAAgB,SAASrZ,GAC1B,IAAIkZ,EAAO7I,GAAG2I,SAAShZ,EAAKkT,OAAOhN,GAAIlG,EAAKjZ,MAC5C,GAAIspB,GAAGkH,UAAU2B,KAAUlZ,EACzBqQ,GAAGkH,UAAU2B,GAAQlZ,EAAKoZ,eAG1B,IADA,IAAIb,EAAUlI,GAAGkH,UAAU2B,GACpBX,GAAS,CACd,GAAIA,EAAQa,YAAcpZ,EAAM,CAC9BuY,EAAQa,UAAYpZ,EAAKoZ,UACzB,MAEFb,EAAUA,EAAQa,YAGrB9C,WAAY,SAASpD,EAAQC,GAC9B,IAAImG,EAAUjJ,GAAGkJ,UAAUrG,GAC3B,GAAIoG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,EAASpG,GAGnC,IADA,IAAIgG,EAAO7I,GAAG2I,SAAS9F,EAAOhN,GAAIiN,GACzBnT,EAAOqQ,GAAGkH,UAAU2B,GAAOlZ,EAAMA,EAAOA,EAAKoZ,UAAW,CAC/D,IAAII,EAAWxZ,EAAKjZ,KACpB,GAAIiZ,EAAKkT,OAAOhN,KAAOgN,EAAOhN,IAAMsT,IAAarG,EAC/C,OAAOnT,EAGX,OAAOqQ,GAAG9iB,OAAO2lB,EAAQC,IACxBF,WAAY,SAASC,EAAQC,EAAOC,EAAM7B,GAC3C,IAAIvR,EAAO,IAAIqQ,GAAGoJ,OAAOvG,EAAQC,EAAOC,EAAM7B,GAE9C,OADAlB,GAAG8I,YAAYnZ,GACRA,GACN0Z,YAAa,SAAS1Z,GACvBqQ,GAAGgJ,eAAerZ,IACjB8Y,OAAQ,SAAS9Y,GAClB,OAAOA,IAASA,EAAKkT,QACpBwF,aAAc,SAAS1Y,GACxB,QAASA,EAAK2Y,SACbhE,OAAQ,SAASvB,GAClB,OAA0B,QAAX,MAAPA,IACPqB,MAAO,SAASrB,GACjB,OAA0B,QAAX,MAAPA,IACPyB,OAAQ,SAASzB,GAClB,OAA0B,QAAX,MAAPA,IACP0B,SAAU,SAAS1B,GACpB,OAA0B,OAAX,MAAPA,IACPC,SAAU,SAASD,GACpB,OAA0B,QAAX,MAAPA,IACPE,OAAQ,SAASF,GAClB,OAA0B,OAAX,MAAPA,IACPuG,SAAU,SAASvG,GACpB,OAA0B,QAAX,MAAPA,IACPwG,UAAW,CAAE3J,EAAK,EAAG,KAAM,EAAG4J,EAAK,IAAK,KAAM,IAAKpjB,EAAK,KAAM,KAAM,MAAQqjB,kBAAmB,SAASvlB,GACzG,IAAIyiB,EAAQ3G,GAAGuJ,UAAUrlB,GACzB,QAAqB,IAAVyiB,EACT,MAAM,IAAI3zB,MAAM,2BAA6BkR,GAE/C,OAAOyiB,GACN+C,wBAAyB,SAASC,GACnC,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHW,IAAPA,IACFC,GAAS,KAEJA,GACNC,gBAAiB,SAASla,EAAMia,GACjC,OAAI5J,GAAGqH,qBAGqB,IAAxBuC,EAAM/mB,QAAQ,MAA6B,IAAZ8M,EAAKoT,SAEL,IAAxB6G,EAAM/mB,QAAQ,MAA6B,IAAZ8M,EAAKoT,SAEZ,IAAxB6G,EAAM/mB,QAAQ,MAA6B,GAAZ8M,EAAKoT,MANtC,EAGA,GAORmG,UAAW,SAAS7sB,GACrB,IAAI4sB,EAAUjJ,GAAG6J,gBAAgBxtB,EAAK,KACtC,OAAI4sB,IAEC5sB,EAAI8mB,SAASjmB,OAEX,EADE,IAER4sB,UAAW,SAASztB,EAAKymB,GAC1B,IAEE,OADW9C,GAAGiG,WAAW5pB,EAAKymB,GACvB,GACP,MAAOtpB,IAET,OAAOwmB,GAAG6J,gBAAgBxtB,EAAK,OAC9B0tB,UAAW,SAAS1tB,EAAKymB,EAAOkH,GACjC,IAAIra,EACJ,IACEA,EAAOqQ,GAAGiG,WAAW5pB,EAAKymB,GAC1B,MAAOtpB,GACP,OAAOA,EAAEywB,MAEX,IAAIhB,EAAUjJ,GAAG6J,gBAAgBxtB,EAAK,MACtC,GAAI4sB,EACF,OAAOA,EAET,GAAIe,EAAO,CACT,IAAKhK,GAAGoE,MAAMzU,EAAKoT,MACjB,OAAO,GAET,GAAI/C,GAAGyI,OAAO9Y,IAASqQ,GAAGwI,QAAQ7Y,KAAUqQ,GAAG7jB,MAC7C,OAAO,QAGT,GAAI6jB,GAAGoE,MAAMzU,EAAKoT,MAChB,OAAO,GAGX,OAAO,GACNmH,QAAS,SAASva,EAAMgX,GACzB,OAAKhX,EAGDqQ,GAAGwE,OAAO7U,EAAKoT,MACV,GACE/C,GAAGoE,MAAMzU,EAAKoT,QACmB,MAAtC/C,GAAG0J,wBAAwB/C,IAA0B,IAARA,GACxC,GAGJ3G,GAAG6J,gBAAgBla,EAAMqQ,GAAG0J,wBAAwB/C,IATlD,IAURwD,aAAc,KAAMC,OAAQ,SAASC,EAAUC,GAChDD,EAAWA,GAAY,EACvBC,EAASA,GAAUtK,GAAGmK,aACtB,IAAK,IAAIpI,EAAKsI,EAAUtI,GAAMuI,EAAQvI,IACpC,IAAK/B,GAAGgH,QAAQjF,GACd,OAAOA,EAGX,MAAM,IAAI/B,GAAGmB,WAAW,KACvBoJ,UAAW,SAASxI,GACrB,OAAO/B,GAAGgH,QAAQjF,IACjByI,aAAc,SAASxJ,EAAQqJ,EAAUC,GACrCtK,GAAGyK,WACNzK,GAAGyK,SAAW,aAEdzK,GAAGyK,SAASz5B,UAAY,CAAEkG,OAAQ,CAAEmgB,IAAK,WACvC,OAAO7nB,KAAKmgB,MACX1E,IAAK,SAAS3J,GACf9R,KAAKmgB,KAAOrO,IACTopB,OAAQ,CAAErT,IAAK,WAClB,OAAkC,IAAb,QAAb7nB,KAAKm3B,SACVgE,QAAS,CAAEtT,IAAK,WACnB,OAAkC,IAAb,QAAb7nB,KAAKm3B,SACViE,SAAU,CAAEvT,IAAK,WACpB,OAAoB,KAAb7nB,KAAKm3B,UAGhB,IAAIkE,EAAY,IAAI7K,GAAGyK,SACvB,IAAK,IAAIpL,KAAK2B,EACZ6J,EAAUxL,GAAK2B,EAAO3B,GAExB2B,EAAS6J,EACT,IAAI9I,EAAK/B,GAAGoK,OAAOC,EAAUC,GAG7B,OAFAtJ,EAAOe,GAAKA,EACZ/B,GAAGgH,QAAQjF,GAAMf,EACVA,GACN8J,YAAa,SAAS/I,GACvB/B,GAAGgH,QAAQjF,GAAM,MAChBoC,kBAAmB,CAAE3S,KAAM,SAASwP,GACrC,IAAI+J,EAAS/K,GAAGgL,UAAUhK,EAAOrR,KAAKuR,MACtCF,EAAOD,WAAagK,EAAOhK,WACvBC,EAAOD,WAAWvP,MACpBwP,EAAOD,WAAWvP,KAAKwP,IAExB2C,OAAQ,WACT,MAAM,IAAI3D,GAAGmB,WAAW,MACrB8J,MAAO,SAAStK,GACnB,OAAOA,GAAO,GACbuK,MAAO,SAASvK,GACjB,OAAa,IAANA,GACNwK,QAAS,SAASC,EAAIC,GACvB,OAAOD,GAAM,EAAIC,GAChBvK,eAAgB,SAASH,EAAKC,GAC/BZ,GAAG+G,QAAQpG,GAAO,CAAEI,WAAYH,IAC/BoK,UAAW,SAASrK,GACrB,OAAOX,GAAG+G,QAAQpG,IACjB2K,UAAW,SAAS3I,GAGrB,IAFA,IAAImE,EAAS,GACTyE,EAAQ,CAAC5I,GACN4I,EAAMj7B,QAAQ,CACnB,IAAIuO,EAAI0sB,EAAMn0B,MACd0vB,EAAOhxB,KAAK+I,GACZ0sB,EAAMz1B,KAAKnG,MAAM47B,EAAO1sB,EAAEioB,QAE5B,OAAOA,GACN0E,OAAQ,SAASC,EAAU1V,GACJ,mBAAb0V,IACT1V,EAAW0V,EACXA,GAAW,GAEbzL,GAAG4H,iBACC5H,GAAG4H,eAAiB,GACtBh4B,EAAI,YAAcowB,GAAG4H,eAAiB,2EAExC,IAAId,EAAS9G,GAAGsL,UAAUtL,GAAGV,KAAKqD,OAC9B+I,EAAY,EAChB,SAASC,EAAW1C,GAElB,OADAjJ,GAAG4H,iBACI7R,EAASkT,GAElB,SAAS/5B,EAAK+5B,GACZ,GAAIA,EACF,OAAK/5B,EAAK08B,aAIV,GAHE18B,EAAK08B,SAAU,EACRD,EAAW1C,MAIhByC,GAAa5E,EAAOx2B,QACxBq7B,EAAW,MAGf7E,EAAOpyB,SAAQ,SAASiuB,GACtB,IAAKA,EAAM9uB,KAAK23B,OACd,OAAOt8B,EAAK,MAEdyzB,EAAM9uB,KAAK23B,OAAO7I,EAAO8I,EAAUv8B,OAEpCyzB,MAAO,SAAS9uB,EAAMi0B,EAAMY,GAC7B,IAEI/Y,EAFA2P,EAAsB,MAAfoJ,EACPmD,GAAUnD,EAEd,GAAIpJ,GAAQU,GAAGV,KACb,MAAM,IAAIU,GAAGmB,WAAW,IACnB,IAAK7B,IAASuM,EAAQ,CAC3B,IAAI3uB,EAAS8iB,GAAG6H,WAAWa,EAAY,CAAEV,cAAc,IAGvD,GAFAU,EAAaxrB,EAAOiT,KACpBR,EAAOzS,EAAOyS,KACVqQ,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGoE,MAAMzU,EAAKoT,MACjB,MAAM,IAAI/C,GAAGmB,WAAW,IAG5B,IAAIwB,EAAQ,CAAE9uB,KAAAA,EAAMi0B,KAAAA,EAAMY,WAAAA,EAAY5B,OAAQ,IAC1CgF,EAAYj4B,EAAK8uB,MAAMA,GAW3B,OAVAmJ,EAAUnJ,MAAQA,EAClBA,EAAMrD,KAAOwM,EACTxM,EACFU,GAAGV,KAAOwM,EACDnc,IACTA,EAAK2Y,QAAU3F,EACXhT,EAAKgT,OACPhT,EAAKgT,MAAMmE,OAAOhxB,KAAK6sB,IAGpBmJ,GACNC,QAAS,SAASrD,GACnB,IAAIxrB,EAAS8iB,GAAG6H,WAAWa,EAAY,CAAEV,cAAc,IACvD,IAAKhI,GAAGqI,aAAanrB,EAAOyS,MAC1B,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAIxR,EAAOzS,EAAOyS,KACdgT,EAAQhT,EAAK2Y,QACbxB,EAAS9G,GAAGsL,UAAU3I,GAC1BhyB,OAAOsG,KAAK+oB,GAAGkH,WAAWxyB,SAAQ,SAASm0B,GAEzC,IADA,IAAIX,EAAUlI,GAAGkH,UAAU2B,GACpBX,GAAS,CACd,IAAI9yB,EAAO8yB,EAAQa,WACoB,IAAnCjC,EAAOjkB,QAAQqlB,EAAQvF,QACzB3C,GAAGqJ,YAAYnB,GAEjBA,EAAU9yB,MAGdua,EAAK2Y,QAAU,KACf,IAAI1V,EAAMjD,EAAKgT,MAAMmE,OAAOjkB,QAAQ8f,GACpChT,EAAKgT,MAAMmE,OAAOrL,OAAO7I,EAAK,IAC7B1V,OAAQ,SAAS2lB,EAAQC,GAC1B,OAAOD,EAAOM,SAASjmB,OAAO2lB,EAAQC,IACrCO,MAAO,SAASlT,EAAM4S,EAAMpC,GAC7B,IACIkC,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GAC1B,IAAK2S,GAAmB,MAAVA,GAA2B,OAAVA,EAC7B,MAAM,IAAI9C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG8J,UAAUjH,EAAQC,GACnC,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASE,MACnB,MAAM,IAAIrD,GAAGmB,WAAW,IAE1B,OAAO0B,EAAOM,SAASE,MAAMR,EAAQC,EAAOC,EAAMpC,IACjDnuB,OAAQ,SAAS2d,EAAM4S,GAIxB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACD/C,GAAGqD,MAAMlT,EAAM4S,EAAM,IAC3BiJ,MAAO,SAAS7b,EAAM4S,GAIvB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACD/C,GAAGqD,MAAMlT,EAAM4S,EAAM,IAC3BkJ,UAAW,SAAS9b,EAAM4S,GAG3B,IAFA,IAAImJ,EAAO/b,EAAKgP,MAAM,KAClBjgB,EAAI,GACC7O,EAAI,EAAGA,EAAI67B,EAAK57B,SAAUD,EACjC,GAAK67B,EAAK77B,GAAV,CAEA6O,GAAK,IAAMgtB,EAAK77B,GAChB,IACE2vB,GAAGgM,MAAM9sB,EAAG6jB,GACZ,MAAOvpB,GACP,GAAe,IAAXA,EAAEywB,MACJ,MAAMzwB,KAGX2yB,MAAO,SAAShc,EAAM4S,EAAMpC,GAM7B,YALmB,IAARA,IACTA,EAAMoC,EACNA,EAAO,KAETA,GAAQ,KACD/C,GAAGqD,MAAMlT,EAAM4S,EAAMpC,IAC3B+C,QAAS,SAAS2C,EAAS+F,GAC5B,IAAKvM,GAAQpxB,QAAQ43B,GACnB,MAAM,IAAIrG,GAAGmB,WAAW,IAE1B,IACI0B,EADS7C,GAAG6H,WAAWuE,EAAS,CAAEvJ,QAAQ,IAC1BlT,KACpB,IAAKkT,EACH,MAAM,IAAI7C,GAAGmB,WAAW,IAE1B,IAAIiF,EAAU5H,GAAKe,SAAS6M,GACxBnD,EAAUjJ,GAAG8J,UAAUjH,EAAQuD,GACnC,GAAI6C,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASO,QACnB,MAAM,IAAI1D,GAAGmB,WAAW,IAE1B,OAAO0B,EAAOM,SAASO,QAAQb,EAAQuD,EAASC,IAC/C/C,OAAQ,SAAS+I,EAAUC,GAC5B,IAIYC,EAASzG,EAJjB0G,EAAchO,GAAKnO,QAAQgc,GAC3BI,EAAcjO,GAAKnO,QAAQic,GAC3BI,EAAWlO,GAAKe,SAAS8M,GACzBtG,EAAWvH,GAAKe,SAAS+M,GAM7B,GAHAC,EADSvM,GAAG6H,WAAWwE,EAAU,CAAExJ,QAAQ,IAC1BlT,KAEjBmW,EADS9F,GAAG6H,WAAWyE,EAAU,CAAEzJ,QAAQ,IAC1BlT,MACZ4c,IAAYzG,EACf,MAAM,IAAI9F,GAAGmB,WAAW,IAC1B,GAAIoL,EAAQ5J,QAAUmD,EAAQnD,MAC5B,MAAM,IAAI3C,GAAGmB,WAAW,IAE1B,IASI6E,EATAH,EAAW7F,GAAGiG,WAAWsG,EAASG,GAClCzM,EAAWJ,GAAQI,SAASoM,EAAUI,GAC1C,GAA2B,MAAvBxM,EAAS1oB,OAAO,GAClB,MAAM,IAAIyoB,GAAGmB,WAAW,IAG1B,GAA2B,OAD3BlB,EAAWJ,GAAQI,SAASqM,EAAUE,IACzBj1B,OAAO,GAClB,MAAM,IAAIyoB,GAAGmB,WAAW,IAG1B,IACE6E,EAAWhG,GAAGiG,WAAWH,EAASC,GAClC,MAAOvsB,IAET,GAAIqsB,IAAaG,EAAjB,CAGA,IAAIgE,EAAQhK,GAAGoE,MAAMyB,EAAS9C,MAC1BkG,EAAUjJ,GAAG+J,UAAUwC,EAASG,EAAU1C,GAC9C,GAAIf,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAG1B,GADAA,EAAUjD,EAAWhG,GAAG+J,UAAUjE,EAASC,EAAUiE,GAAShK,GAAG8J,UAAUhE,EAASC,GAElF,MAAM,IAAI/F,GAAGmB,WAAW8H,GAE1B,IAAKsD,EAAQpJ,SAASG,OACpB,MAAM,IAAItD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAaxC,IAAaG,GAAYhG,GAAGqI,aAAarC,GAC3D,MAAM,IAAIhG,GAAGmB,WAAW,IAE1B,GAAI2E,IAAYyG,IACdtD,EAAUjJ,GAAG6J,gBAAgB0C,EAAS,MAEpC,MAAM,IAAIvM,GAAGmB,WAAW8H,GAG5B,IACMjJ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAE+E,EAAUC,GAEhD,MAAO9yB,GACP5J,EAAI,wCAA0Cy8B,EAAW,OAASC,EAAW,0BAA4B9yB,EAAEmjB,SAE7GqD,GAAGgJ,eAAenD,GAClB,IACE0G,EAAQpJ,SAASG,OAAOuC,EAAUC,EAASC,GAC3C,MAAOvsB,GACP,MAAMA,UAENwmB,GAAG8I,YAAYjD,GAEjB,IACM7F,GAAGsH,iBAA6B,YAClCtH,GAAGsH,iBAA6B,WAAE+E,EAAUC,GAC9C,MAAO9yB,GACP5J,EAAI,sCAAwCy8B,EAAW,OAASC,EAAW,0BAA4B9yB,EAAEmjB,YAE1G6G,MAAO,SAASrT,GACjB,IACI0S,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GACtBR,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GAC7BmG,EAAUjJ,GAAG+J,UAAUlH,EAAQC,GAAO,GAC1C,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASK,MACnB,MAAM,IAAIxD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IACMnB,GAAGsH,iBAAiC,gBACtCtH,GAAGsH,iBAAiC,eAAEnX,GAExC,MAAO3W,GACP5J,EAAI,0CAA4CugB,EAAO,0BAA4B3W,EAAEmjB,SAEvFkG,EAAOM,SAASK,MAAMX,EAAQC,GAC9B9C,GAAGqJ,YAAY1Z,GACf,IACMqQ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAEnX,GACtC,MAAO3W,GACP5J,EAAI,wCAA0CugB,EAAO,0BAA4B3W,EAAEmjB,WAEpF8G,QAAS,SAAStT,GACnB,IACIR,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IACzB5Y,KAClB,IAAKA,EAAKwT,SAASM,QACjB,MAAM,IAAIzD,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKwT,SAASM,QAAQ9T,IAC5B4T,OAAQ,SAASpT,GAClB,IACI0S,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GACtBR,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GAC7BmG,EAAUjJ,GAAG+J,UAAUlH,EAAQC,GAAO,GAC1C,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASI,OACnB,MAAM,IAAIvD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IACMnB,GAAGsH,iBAAiC,gBACtCtH,GAAGsH,iBAAiC,eAAEnX,GAExC,MAAO3W,GACP5J,EAAI,0CAA4CugB,EAAO,0BAA4B3W,EAAEmjB,SAEvFkG,EAAOM,SAASI,OAAOV,EAAQC,GAC/B9C,GAAGqJ,YAAY1Z,GACf,IACMqQ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAEnX,GACtC,MAAO3W,GACP5J,EAAI,wCAA0CugB,EAAO,0BAA4B3W,EAAEmjB,WAEpFsH,SAAU,SAAS9T,GACpB,IACI6T,EADShE,GAAG6H,WAAW1X,GACTR,KAClB,IAAKqU,EACH,MAAM,IAAIhE,GAAGmB,WAAW,IAE1B,IAAK6C,EAAKb,SAASc,SACjB,MAAM,IAAIjE,GAAGmB,WAAW,IAE1B,OAAOtB,GAAQpxB,QAAQuxB,GAAGwI,QAAQxE,EAAKnB,QAASmB,EAAKb,SAASc,SAASD,KACtE2I,KAAM,SAASxc,EAAMyc,GACtB,IACIjd,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC1Bjd,KAClB,IAAKA,EACH,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKxR,EAAKwT,SAASD,QACjB,MAAM,IAAIlD,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKwT,SAASD,QAAQvT,IAC5Bkd,MAAO,SAAS1c,GACjB,OAAO6P,GAAG2M,KAAKxc,GAAM,IACpB2c,MAAO,SAAS3c,EAAM4S,EAAM6J,GAC7B,IAAIjd,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC9Bjd,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1BxR,EAAKwT,SAASC,QAAQzT,EAAM,CAAEoT,KAAa,KAAPA,GAA0B,KAAZpT,EAAKoT,KAAcrB,UAAWnmB,KAAKL,SACpF6xB,OAAQ,SAAS5c,EAAM4S,GACxB/C,GAAG8M,MAAM3c,EAAM4S,GAAM,IACpBiK,OAAQ,SAASjL,EAAIgB,GACtB,IAAI/B,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1BnB,GAAG8M,MAAM9L,EAAOrR,KAAMoT,IACrBkK,MAAO,SAAS9c,EAAMkV,EAAKC,EAAKsH,GACjC,IAAIjd,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC9Bjd,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1BxR,EAAKwT,SAASC,QAAQzT,EAAM,CAAE+R,UAAWnmB,KAAKL,SAC7CgyB,OAAQ,SAAS/c,EAAMkV,EAAKC,GAC7BtF,GAAGiN,MAAM9c,EAAMkV,EAAKC,GAAK,IACxB6H,OAAQ,SAASpL,EAAIsD,EAAKC,GAC3B,IAAItE,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1BnB,GAAGiN,MAAMjM,EAAOrR,KAAM0V,EAAKC,IAC1B8H,SAAU,SAASjd,EAAMjW,GAC1B,GAAIA,EAAM,EACR,MAAM,IAAI8lB,GAAGmB,WAAW,IAE1B,IAAIxR,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC7B5Y,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGoE,MAAMzU,EAAKoT,MAChB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGsE,OAAO3U,EAAKoT,MAClB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG6J,gBAAgBla,EAAM,KACvC,GAAIsZ,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1BtZ,EAAKwT,SAASC,QAAQzT,EAAM,CAAEjO,KAAMxH,EAAKwnB,UAAWnmB,KAAKL,SACxDmyB,UAAW,SAAStL,EAAI7nB,GACzB,IAAI8mB,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,IAE1BnB,GAAGoN,SAASpM,EAAOrR,KAAMzV,IACxBozB,MAAO,SAASnd,EAAMoV,EAAOC,GAC9B,IACI7V,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IACzB5Y,KAClBA,EAAKwT,SAASC,QAAQzT,EAAM,CAAE+R,UAAW/kB,KAAKmL,IAAIyd,EAAOC,MACxDhU,KAAM,SAASrB,EAAMwW,EAAO5D,EAAMsH,EAAUC,GAC7C,GAAa,KAATna,EACF,MAAM,IAAI6P,GAAGmB,WAAW,IAS1B,IAAIxR,EACJ,GAPAoT,OAAuB,IAATA,EAAuB,IAAMA,EAEzCA,EADU,IAFZ4D,EAAyB,iBAAVA,EAAqB3G,GAAGyJ,kBAAkB9C,GAASA,GAGlD,KAAP5D,EAAc,MAEd,EAGW,iBAAT5S,EACTR,EAAOQ,MACF,CACLA,EAAOqO,GAAKQ,UAAU7O,GACtB,IAEER,EADaqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,SAAkB,OAAR5B,KAC/BhX,KACd,MAAOnW,KAGX,IAAI+zB,GAAU,EACd,GAAY,GAAR5G,EACF,GAAIhX,GACF,GAAY,IAARgX,EACF,MAAM,IAAI3G,GAAGmB,WAAW,SAG1BxR,EAAOqQ,GAAGqD,MAAMlT,EAAM4S,EAAM,GAC5BwK,GAAU,EAGd,IAAK5d,EACH,MAAM,IAAIqQ,GAAGmB,WAAW,IAK1B,GAHInB,GAAGyE,SAAS9U,EAAKoT,QACnB4D,IAAS,KAEC,MAARA,IAAkB3G,GAAGoE,MAAMzU,EAAKoT,MAClC,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKoM,EAAS,CACZ,IAAItE,EAAUjJ,GAAGkK,QAAQva,EAAMgX,GAC/B,GAAIsC,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAGhB,IAARtC,GACF3G,GAAGoN,SAASzd,EAAM,GAEpBgX,IAAS,OACT,IAAI3F,EAAShB,GAAGwK,aAAa,CAAE7a,KAAAA,EAAMQ,KAAM6P,GAAGwI,QAAQ7Y,GAAOgX,MAAAA,EAAOvF,UAAU,EAAMkF,SAAU,EAAGvF,WAAYpR,EAAKoR,WAAYyM,SAAU,GAAIv+B,OAAO,GAASo7B,EAAUC,GAClKtJ,EAAOD,WAAWvP,MACpBwP,EAAOD,WAAWvP,KAAKwP,IAErBjS,EAAqB,cAAe,EAAR4X,IACzB3G,GAAGyN,YACNzN,GAAGyN,UAAY,IACXtd,KAAQ6P,GAAGyN,YACfzN,GAAGyN,UAAUtd,GAAQ,EACrBvgB,EAAI,2CAA6CugB,KAGrD,IACE,GAAI6P,GAAGsH,iBAA6B,WAAG,CACrC,IAAIoG,EAAgB,EACM,IAAb,QAAR/G,KACH+G,GAAiB1N,GAAGuH,SAASC,UAAUC,MAEf,IAAb,QAARd,KACH+G,GAAiB1N,GAAGuH,SAASC,UAAUE,OAEzC1H,GAAGsH,iBAA6B,WAAEnX,EAAMud,IAE1C,MAAOl0B,GACP5J,EAAI,sCAAwCugB,EAAO,iCAAmC3W,EAAEmjB,SAE1F,OAAOqE,GACNK,MAAO,SAASL,GACjB,GAAIhB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAEtBH,EAAO4M,WACT5M,EAAO4M,SAAW,MACpB,IACM5M,EAAOD,WAAWM,OACpBL,EAAOD,WAAWM,MAAML,GAE1B,MAAOxnB,GACP,MAAMA,UAENwmB,GAAG8K,YAAY9J,EAAOe,IAExBf,EAAOe,GAAK,MACX4L,SAAU,SAAS3M,GACpB,OAAqB,OAAdA,EAAOe,IACb4B,OAAQ,SAAS3C,EAAQviB,EAAQ+nB,GAClC,GAAIxG,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,IAAKH,EAAOI,WAAaJ,EAAOD,WAAW4C,OACzC,MAAM,IAAI3D,GAAGmB,WAAW,IAE1B,GAAc,GAAVqF,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAIxG,GAAGmB,WAAW,IAI1B,OAFAH,EAAOsF,SAAWtF,EAAOD,WAAW4C,OAAO3C,EAAQviB,EAAQ+nB,GAC3DxF,EAAOwM,SAAW,GACXxM,EAAOsF,UACb/nB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAEjD,GADA7nB,KAAY,EACRnO,EAAS,GAAKg2B,EAAW,EAC3B,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,GAAInB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAInB,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACvB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAWxiB,KACrB,MAAM,IAAIyhB,GAAGmB,WAAW,IAE1B,IAAI0M,OAA8B,IAAbvH,EACrB,GAAKuH,GAEE,IAAK7M,EAAOI,SACjB,MAAM,IAAIpB,GAAGmB,WAAW,SAFxBmF,EAAWtF,EAAOsF,SAIpB,IAAI7E,EAAYT,EAAOD,WAAWxiB,KAAKyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAGxE,OAFKuH,IACH7M,EAAOsF,UAAY7E,GACdA,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GAE5D,GADA9nB,KAAY,EACRnO,EAAS,GAAKg2B,EAAW,EAC3B,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,GAAInB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAInB,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACvB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAWxhB,MACrB,MAAM,IAAIygB,GAAGmB,WAAW,IAEtBH,EAAOI,UAA2B,KAAfJ,EAAO2F,OAC5B3G,GAAG2D,OAAO3C,EAAQ,EAAG,GAEvB,IAAI6M,OAA8B,IAAbvH,EACrB,GAAKuH,GAEE,IAAK7M,EAAOI,SACjB,MAAM,IAAIpB,GAAGmB,WAAW,SAFxBmF,EAAWtF,EAAOsF,SAIpB,IAAIwH,EAAe9M,EAAOD,WAAWxhB,MAAMyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GACjFsH,IACH7M,EAAOsF,UAAYwH,GACrB,IACM9M,EAAO7Q,MAAQ6P,GAAGsH,iBAAgC,eACpDtH,GAAGsH,iBAAgC,cAAEtG,EAAO7Q,MAC9C,MAAO3W,GACP5J,EAAI,yCAA2CoxB,EAAO7Q,KAAO,0BAA4B3W,EAAEmjB,SAE7F,OAAOmR,GACNjK,SAAU,SAAS7C,EAAQviB,EAAQnO,GACpC,GAAI0vB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAI1iB,EAAS,GAAKnO,GAAU,EAC1B,MAAM,IAAI0vB,GAAGmB,WAAW,IAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,IAAKnB,GAAGsE,OAAOtD,EAAOrR,KAAKoT,QAAU/C,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACxD,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAW8C,SACrB,MAAM,IAAI7D,GAAGmB,WAAW,KAE1BH,EAAOD,WAAW8C,SAAS7C,EAAQviB,EAAQnO,IAC1CwzB,KAAM,SAAS9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,GAEzD,GADAF,KAAa,EACM,IAAP,EAAPC,IAAmC,IAAP,EAARC,IAAiD,IAAb,QAAf3F,EAAO2F,OACnD,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,IAAKH,EAAOD,WAAW+C,KACrB,MAAM,IAAI9D,GAAGmB,WAAW,IAE1B,OAAOH,EAAOD,WAAW+C,KAAK9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,IACtE5C,MAAO,SAAS/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAElD,OADApoB,KAAY,EACPuiB,GAAWA,EAAOD,WAAWgD,MAG3B/C,EAAOD,WAAWgD,MAAM/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAFvD,GAGRkH,OAAQ,SAAS/M,GAClB,OAAO,GACNgN,MAAO,SAAShN,EAAQpG,EAAK9rB,GAC9B,IAAKkyB,EAAOD,WAAWiN,MACrB,MAAM,IAAIhO,GAAGmB,WAAW,IAE1B,OAAOH,EAAOD,WAAWiN,MAAMhN,EAAQpG,EAAK9rB,IAC3Cm/B,SAAU,SAAS9d,EAAM2X,GAI1B,IAHAA,EAAOA,GAAQ,IACVnB,MAAQmB,EAAKnB,OAAS,EAC3BmB,EAAK/mB,SAAW+mB,EAAK/mB,UAAY,SACX,SAAlB+mB,EAAK/mB,UAAyC,WAAlB+mB,EAAK/mB,SACnC,MAAM,IAAI/N,MAAM,0BAA4B80B,EAAK/mB,SAAW,KAE9D,IAAIwG,EACAyZ,EAAShB,GAAGxO,KAAKrB,EAAM2X,EAAKnB,OAE5Br2B,EADO0vB,GAAG2M,KAAKxc,GACDzO,KACdyB,EAAM,IAAI9F,WAAW/M,GAQzB,OAPA0vB,GAAGzhB,KAAKyiB,EAAQ7d,EAAK,EAAG7S,EAAQ,GACV,SAAlBw3B,EAAK/mB,SACPwG,EAAMmL,EAAkBvP,EAAK,GACF,WAAlB2kB,EAAK/mB,WACdwG,EAAMpE,GAER6c,GAAGqB,MAAML,GACFzZ,GACN2mB,UAAW,SAAS/d,EAAM5O,EAAMumB,IACjCA,EAAOA,GAAQ,IACVnB,MAAQmB,EAAKnB,OAAS,IAC3B,IAAI3F,EAAShB,GAAGxO,KAAKrB,EAAM2X,EAAKnB,MAAOmB,EAAK/E,MAC5C,GAAoB,iBAATxhB,EAAmB,CAC5B,IAAI4B,EAAM,IAAI9F,WAAWuW,GAAgBrS,GAAQ,GAC7C4sB,EAAiB9a,EAAkB9R,EAAM4B,EAAK,EAAGA,EAAI7S,QACzD0vB,GAAGzgB,MAAMyhB,EAAQ7d,EAAK,EAAGgrB,OAAgB,EAAQrG,EAAKvB,YACjD,CAAA,IAAI9lB,YAAYoB,OAAON,GAG5B,MAAM,IAAIvO,MAAM,yBAFhBgtB,GAAGzgB,MAAMyhB,EAAQzf,EAAM,EAAGA,EAAKZ,gBAAY,EAAQmnB,EAAKvB,QAI1DvG,GAAGqB,MAAML,IACR7kB,IAAK,WACN,OAAO6jB,GAAGmH,aACT/qB,MAAO,SAAS+T,GACjB,IAAIjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC3C,GAAoB,OAAhBrrB,EAAOyS,KACT,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGoE,MAAMlnB,EAAOyS,KAAKoT,MACxB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG6J,gBAAgB3sB,EAAOyS,KAAM,KAC9C,GAAIsZ,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1BjJ,GAAGmH,YAAcjqB,EAAOiT,MACvBie,yBAA0B,WAC3BpO,GAAGgM,MAAM,QACThM,GAAGgM,MAAM,SACThM,GAAGgM,MAAM,mBACRqC,qBAAsB,WACvBrO,GAAGgM,MAAM,QACThM,GAAGc,eAAed,GAAGmL,QAAQ,EAAG,GAAI,CAAE5sB,KAAM,WAC1C,OAAO,GACNgB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,OAAOlW,KAET0vB,GAAGmM,MAAM,YAAanM,GAAGmL,QAAQ,EAAG,IACpC5K,GAAIG,SAASV,GAAGmL,QAAQ,EAAG,GAAI5K,GAAIqB,iBACnCrB,GAAIG,SAASV,GAAGmL,QAAQ,EAAG,GAAI5K,GAAI4B,kBACnCnC,GAAGmM,MAAM,WAAYnM,GAAGmL,QAAQ,EAAG,IACnCnL,GAAGmM,MAAM,YAAanM,GAAGmL,QAAQ,EAAG,IACpC,IAAImD,EA72CN,WACE,GAAsB,iBAAXC,QAA4D,mBAA9BA,OAAwB,gBAAkB,CACjF,IAAIC,EAAe,IAAInxB,WAAW,GAClC,OAAO,WAEL,OADAkxB,OAAOE,gBAAgBD,GAChBA,EAAa,IAEjB,GAAIrf,EACT,IACE,IAAIuf,EAAgBrhB,KACpB,OAAO,WACL,OAAOqhB,EAA2B,YAAE,GAAG,IAEzC,MAAOl1B,IAGX,OAAO,WACL6Y,GAAM,iBA41CYsc,GACpB3O,GAAG4O,aAAa,OAAQ,SAAUN,GAClCtO,GAAG4O,aAAa,OAAQ,UAAWN,GACnCtO,GAAGgM,MAAM,YACThM,GAAGgM,MAAM,iBACR6C,yBAA0B,WAC3B7O,GAAGgM,MAAM,SACThM,GAAGgM,MAAM,cACThM,GAAGgM,MAAM,iBACThM,GAAG2C,MAAM,CAAEA,MAAO,WAChB,IAAIhT,EAAOqQ,GAAG4C,WAAW,aAAc,KAAM,MAAa,IAY1D,OAXAjT,EAAKwT,SAAW,CAAEjmB,OAAQ,SAAS2lB,EAAQC,GACzC,IAAIf,GAAMe,EACN9B,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAC1B,IAAI5Z,EAAM,CAAEsb,OAAQ,KAAMF,MAAO,CAAE+F,WAAY,QAAUvF,SAAU,CAAEc,SAAU,WAC7E,OAAOjD,EAAO7Q,QAGhB,OADA5I,EAAIsb,OAAStb,EACNA,IAEFoI,IACJ,GAAI,kBACRmf,sBAAuB,WACpB/f,EAAc,MAChBiR,GAAG4O,aAAa,OAAQ,QAAS7f,EAAc,OAE/CiR,GAAG0D,QAAQ,WAAY,cAErB3U,EAAe,OACjBiR,GAAG4O,aAAa,OAAQ,SAAU,KAAM7f,EAAe,QAEvDiR,GAAG0D,QAAQ,WAAY,eAErB3U,EAAe,OACjBiR,GAAG4O,aAAa,OAAQ,SAAU,KAAM7f,EAAe,QAEvDiR,GAAG0D,QAAQ,YAAa,eAEd1D,GAAGxO,KAAK,aAAc,GACrBwO,GAAGxO,KAAK,cAAe,GACvBwO,GAAGxO,KAAK,cAAe,IACnCud,iBAAkB,WACf/O,GAAGmB,aAEPnB,GAAGmB,WAAa,SAAoB8I,EAAOta,GACzCngB,KAAKmgB,KAAOA,EACZngB,KAAKw/B,SAAW,SAASC,GACvBz/B,KAAKy6B,MAAQgF,GAEfz/B,KAAKw/B,SAAS/E,GACdz6B,KAAKmtB,QAAU,YAEjBqD,GAAGmB,WAAWnwB,UAAY,IAAIgC,MAC9BgtB,GAAGmB,WAAWnwB,UAAUyF,YAAcupB,GAAGmB,WACzC,CAAC,IAAIzsB,SAAQ,SAAS8I,GACpBwiB,GAAG4F,cAAcpoB,GAAQ,IAAIwiB,GAAGmB,WAAW3jB,GAC3CwiB,GAAG4F,cAAcpoB,GAAMyY,MAAQ,iCAEhCiZ,WAAY,WACblP,GAAG+O,mBACH/O,GAAGkH,UAAY,IAAIvrB,MAAM,MACzBqkB,GAAG2C,MAAMF,GAAO,GAAI,KACpBzC,GAAGoO,2BACHpO,GAAGqO,uBACHrO,GAAG6O,2BACH7O,GAAG2H,YAAc,CAAElF,MAASA,KAC3BllB,KAAM,SAASsjB,EAAO7iB,EAAQ/O,GAC/B+wB,GAAGziB,KAAK6pB,aAAc,EACtBpH,GAAG+O,mBACHhgB,EAAc,MAAI8R,GAAS9R,EAAc,MACzCA,EAAe,OAAI/Q,GAAU+Q,EAAe,OAC5CA,EAAe,OAAI9f,GAAS8f,EAAe,OAC3CiR,GAAG8O,yBACF/d,KAAM,WACPiP,GAAGziB,KAAK6pB,aAAc,EACtB,IAAI+H,EAASpgB,EAAgB,QACzBogB,GACFA,EAAO,GACT,IAAK,IAAI9+B,EAAI,EAAGA,EAAI2vB,GAAGgH,QAAQ12B,OAAQD,IAAK,CAC1C,IAAI2wB,EAAShB,GAAGgH,QAAQ32B,GACnB2wB,GAGLhB,GAAGqB,MAAML,KAEVoO,QAAS,SAASC,EAASC,GAC5B,IAAIvM,EAAO,EAKX,OAJIsM,IACFtM,GAAQ,KACNuM,IACFvM,GAAQ,KACHA,GACNwM,WAAY,SAASpf,EAAMqf,GAC5B,IAAIjoB,EAAMyY,GAAGyP,YAAYtf,EAAMqf,GAC/B,OAAIjoB,EAAImoB,OACCnoB,EAAIrQ,OAEJ,MAERu4B,YAAa,SAAStf,EAAMqf,GAC7B,IAEErf,GADIjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASiH,KAC9Brf,KACd,MAAO3W,IAET,IAAI+N,EAAM,CAAEkhB,QAAQ,EAAOiH,QAAQ,EAAOzgC,MAAO,EAAGyH,KAAM,KAAMyZ,KAAM,KAAMjZ,OAAQ,KAAMy4B,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAC/I,IACE,IAAI3yB,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IAC3Ctb,EAAIooB,cAAe,EACnBpoB,EAAIqoB,WAAa1yB,EAAOiT,KACxB5I,EAAIsoB,aAAe3yB,EAAOyS,KAC1BpI,EAAI7Q,KAAO8nB,GAAKe,SAASpP,GACzBjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASiH,IACxCjoB,EAAImoB,QAAS,EACbnoB,EAAI4I,KAAOjT,EAAOiT,KAClB5I,EAAIrQ,OAASgG,EAAOyS,KACpBpI,EAAI7Q,KAAOwG,EAAOyS,KAAKjZ,KACvB6Q,EAAIkhB,OAAyB,MAAhBvrB,EAAOiT,KACpB,MAAO3W,GACP+N,EAAItY,MAAQuK,EAAEywB,MAEhB,OAAO1iB,GACNuoB,WAAY,SAASjN,EAAQ1S,EAAMkf,EAASC,GAC7CzM,EAA2B,iBAAXA,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAE1D,IADA,IAAIzkB,EAAQ+R,EAAKgP,MAAM,KAAKhoB,UACrBiH,EAAM9N,QAAQ,CACnB,IAAIy/B,EAAO3xB,EAAMhH,MACjB,GAAK24B,EAAL,CAEA,IAAI7H,EAAU1J,GAAKmB,MAAMkD,EAAQkN,GACjC,IACE/P,GAAGgM,MAAM9D,GACT,MAAO1uB,IAETqpB,EAASqF,GAEX,OAAOA,GACN8H,WAAY,SAASnN,EAAQC,EAAOmN,EAAYZ,EAASC,GAC1D,IAAInf,EAAOqO,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAC5EC,EAAO/C,GAAGoP,QAAQC,EAASC,GAC/B,OAAOtP,GAAGxtB,OAAO2d,EAAM4S,IACtBmN,eAAgB,SAASrN,EAAQC,EAAOvhB,EAAM8tB,EAASC,EAAU/I,GAClE,IAAIpW,EAAO2S,EAAQtE,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAASD,EAC7FE,EAAO/C,GAAGoP,QAAQC,EAASC,GAC3B3f,EAAOqQ,GAAGxtB,OAAO2d,EAAM4S,GAC3B,GAAIxhB,EAAM,CACR,GAAoB,iBAATA,EAAmB,CAE5B,IADA,IAAIxB,EAAM,IAAIpE,MAAM4F,EAAKjR,QAChBD,EAAI,EAAG6J,EAAMqH,EAAKjR,OAAQD,EAAI6J,IAAO7J,EAC5C0P,EAAI1P,GAAKkR,EAAK9D,WAAWpN,GAC3BkR,EAAOxB,EAETigB,GAAG8M,MAAMnd,EAAa,IAAPoT,GACf,IAAI/B,EAAShB,GAAGxO,KAAK7B,EAAM,KAC3BqQ,GAAGzgB,MAAMyhB,EAAQzf,EAAM,EAAGA,EAAKjR,OAAQ,EAAGi2B,GAC1CvG,GAAGqB,MAAML,GACThB,GAAG8M,MAAMnd,EAAMoT,GAEjB,OAAOpT,GACNif,aAAc,SAAS/L,EAAQC,EAAOjC,EAAO7iB,GAC9C,IAAImS,EAAOqO,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAC5EC,EAAO/C,GAAGoP,UAAUvO,IAAS7iB,GAC5BgiB,GAAG4O,aAAa3D,QACnBjL,GAAG4O,aAAa3D,MAAQ,IAC1B,IAAItK,EAAMX,GAAGmL,QAAQnL,GAAG4O,aAAa3D,QAAS,GAyC9C,OAxCAjL,GAAGc,eAAeH,EAAK,CAAEnP,KAAM,SAASwP,GACtCA,EAAOI,UAAW,GACjBC,MAAO,SAASL,GACbhjB,GAAUA,EAAOQ,QAAUR,EAAOQ,OAAOlO,QAC3C0N,EAAO,KAERO,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAEjD,IADA,IAAIib,EAAY,EACPpxB,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,IAAIyE,EACJ,IACEA,EAAS+rB,IACT,MAAOrnB,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAE1B,QAAe,IAAXrsB,GAAmC,IAAd2sB,EACvB,MAAM,IAAIzB,GAAGmB,WAAW,GAE1B,GAAIrsB,MAAAA,EACF,MACF2sB,IACAF,EAAQ9iB,EAASpO,GAAKyE,EAKxB,OAHI2sB,IACFT,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExBumB,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,IAAK,IAAInW,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,IACE2N,EAAOujB,EAAQ9iB,EAASpO,IACxB,MAAOmJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAM5B,OAHI7wB,IACF0wB,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExB7K,KAEF2vB,GAAGmM,MAAMhc,EAAM4S,EAAMpC,IAC3BwP,cAAe,SAASj/B,GACzB,GAAIA,EAAIk/B,UAAYl/B,EAAIm/B,UAAYn/B,EAAI8yB,MAAQ9yB,EAAImzB,SAClD,OAAO,EACT,GAA8B,oBAAnB9S,eACT,MAAM,IAAIve,MAAM,oMACX,IAAI6c,EAQT,MAAM,IAAI7c,MAAM,iDAPhB,IACE9B,EAAImzB,SAAWnC,GAAmBrS,EAAM3e,EAAImgB,MAAM,GAClDngB,EAAIqzB,UAAYrzB,EAAImzB,SAAS/zB,OAC7B,MAAOkJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,MAK3BmP,eAAgB,SAASzN,EAAQC,EAAOzR,EAAKge,EAASC,GACvD,SAASiB,IACP/gC,KAAKghC,aAAc,EACnBhhC,KAAKihC,OAAS,GAuEhB,GArEAF,EAAev/B,UAAUqmB,IAAM,SAA4BzE,GACzD,KAAIA,EAAMpjB,KAAKc,OAAS,GAAKsiB,EAAM,GAAnC,CAGA,IAAI8d,EAAc9d,EAAMpjB,KAAKmhC,UACzBC,EAAWhe,EAAMpjB,KAAKmhC,UAAY,EACtC,OAAOnhC,KAAKqhC,OAAOD,GAAUF,KAE/BH,EAAev/B,UAAU8/B,cAAgB,SAAsCD,GAC7ErhC,KAAKqhC,OAASA,GAEhBN,EAAev/B,UAAU+/B,YAAc,WACrC,IAAIzf,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,KAAK,QACHH,EAAI/B,QAAU,KAAO+B,EAAI/B,OAAS,KAAsB,MAAf+B,EAAI/B,QACjD,MAAM,IAAIvc,MAAM,iBAAmBqe,EAAM,aAAeC,EAAI/B,QAC9D,IACIyhB,EADAC,EAAaxtB,OAAO6N,EAAI4f,kBAAkB,mBAE1CC,GAAkBH,EAAS1f,EAAI4f,kBAAkB,mBAAgC,UAAXF,EACtEI,GAAYJ,EAAS1f,EAAI4f,kBAAkB,sBAAmC,SAAXF,EACnEL,EAAY,QACXQ,IACHR,EAAYM,GACd,IAuBII,EAAa7hC,KACjB6hC,EAAWP,eAAc,SAASF,GAChC,IAAIhzB,EAAQgzB,EAAWD,EACnB9yB,GAAO+yB,EAAW,GAAKD,EAAY,EAKvC,GAJA9yB,EAAMlB,KAAKkI,IAAIhH,EAAKozB,EAAa,QACU,IAAhCI,EAAWZ,OAAOG,KAC3BS,EAAWZ,OAAOG,GA7BV,SAASpwB,EAAM0f,GACzB,GAAI1f,EAAO0f,EACT,MAAM,IAAIltB,MAAM,kBAAoBwN,EAAO,KAAO0f,EAAK,4BACzD,GAAIA,EAAK+Q,EAAa,EACpB,MAAM,IAAIj+B,MAAM,QAAUi+B,EAAa,uCACzC,IAAIK,EAAO,IAAI/f,eAUf,GATA+f,EAAK9f,KAAK,MAAOH,GAAK,GAClB4f,IAAeN,GACjBW,EAAKC,iBAAiB,QAAS,SAAW/wB,EAAO,IAAM0f,GAChC,oBAAd7iB,aACTi0B,EAAK3f,aAAe,eAClB2f,EAAKE,kBACPF,EAAKE,iBAAiB,sCAExBF,EAAK7f,KAAK,QACJ6f,EAAK/hB,QAAU,KAAO+hB,EAAK/hB,OAAS,KAAuB,MAAhB+hB,EAAK/hB,QACpD,MAAM,IAAIvc,MAAM,iBAAmBqe,EAAM,aAAeigB,EAAK/hB,QAC/D,YAAsB,IAAlB+hB,EAAK1f,SACA,IAAIvU,WAAWi0B,EAAK1f,UAAY,IAEhCsQ,GAAmBoP,EAAK5f,cAAgB,IAAI,GASrB+f,CAAM7zB,EAAOC,SAEF,IAAhCwzB,EAAWZ,OAAOG,GAC3B,MAAM,IAAI59B,MAAM,iBAClB,OAAOq+B,EAAWZ,OAAOG,OAEvBQ,GAAaH,IACfN,EAAYM,EAAa,EACzBA,EAAazhC,KAAKqhC,OAAO,GAAGvgC,OAC5BqgC,EAAYM,EACZzpB,EAAI,gFAENhY,KAAKkiC,QAAUT,EACfzhC,KAAKmiC,WAAahB,EAClBnhC,KAAKghC,aAAc,GAES,oBAAnBjf,eAAgC,CACzC,IAAKrC,EACH,KAAM,sHACR,IAAI0iB,EAAY,IAAIrB,EACpB5/B,OAAOkhC,iBAAiBD,EAAW,CAAEthC,OAAQ,CAAE+mB,IAAK,WAIlD,OAHK7nB,KAAKghC,aACRhhC,KAAKuhC,cAEAvhC,KAAKkiC,UACTf,UAAW,CAAEtZ,IAAK,WAIrB,OAHK7nB,KAAKghC,aACRhhC,KAAKuhC,cAEAvhC,KAAKmiC,eAEd,IAAI1B,EAAa,CAAEG,UAAU,EAAO/L,SAAUuN,QAE1C3B,EAAa,CAAEG,UAAU,EAAO/e,IAAAA,GAEtC,IAAI1B,EAAOqQ,GAAGgQ,WAAWnN,EAAQC,EAAOmN,EAAYZ,EAASC,GACzDW,EAAW5L,SACb1U,EAAK0U,SAAW4L,EAAW5L,SAClB4L,EAAW5e,MACpB1B,EAAK0U,SAAW,KAChB1U,EAAK0B,IAAM4e,EAAW5e,KAExB1gB,OAAOkhC,iBAAiBliB,EAAM,CAAE4U,UAAW,CAAElN,IAAK,WAChD,OAAO7nB,KAAK60B,SAAS/zB,WAEvB,IAAIywB,EAAa,GA2BjB,OA1BWpwB,OAAOsG,KAAK0Y,EAAKoR,YACvBrsB,SAAQ,SAASyxB,GACpB,IAAI72B,EAAKqgB,EAAKoR,WAAWoF,GACzBpF,EAAWoF,GAAQ,WAEjB,OADAnG,GAAGmQ,cAAcxgB,GACVrgB,EAAGK,MAAM,KAAMD,eAG1BqxB,EAAWxiB,KAAO,SAAyByiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAC1EtG,GAAGmQ,cAAcxgB,GACjB,IAAI0U,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAIiC,GAAYjC,EAAS/zB,OACvB,OAAO,EACT,IAAIoR,EAAO/E,KAAKkI,IAAIwf,EAAS/zB,OAASg2B,EAAUh2B,GAChD,GAAI+zB,EAAS7sB,MACX,IAAK,IAAInH,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAASiC,EAAWj2B,QAG5C,IAASA,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAAShN,IAAIiP,EAAWj2B,GAGlD,OAAOqR,GAETiO,EAAKoR,WAAaA,EACXpR,GACNmiB,oBAAqB,SAASjP,EAAQC,EAAOzR,EAAKge,EAASC,EAAUyC,EAAQtV,EAASuV,EAAgBzL,EAAQ0L,GAC/GC,QAAQ30B,OACR,IAAI40B,EAAWrP,EAAQjD,GAAQpxB,QAAQ+vB,GAAKmB,MAAMkD,EAAQC,IAAUD,EAEpE,SAASuP,EAAYjuB,GACnB,SAAS/L,EAAOi6B,GACVJ,GACFA,IACGD,GACHhS,GAAGkQ,eAAerN,EAAQC,EAAOuP,EAAYhD,EAASC,EAAU/I,GAE9DwL,GACFA,IACFjc,KAEF,IAAIwc,GAAU,EACdvjB,EAAuB,eAAEra,SAAQ,SAAS69B,GACpCD,GAEAC,EAAkB,UAAEJ,KACtBI,EAAe,OAAEpuB,EAAWguB,EAAU/5B,GAAQ,WACxCqkB,GACFA,IACF3G,QAEFwc,GAAU,MAGTA,GACHl6B,EAAO+L,GAEXyR,KACkB,iBAAPvE,EACT6gB,QAAQM,UAAUnhB,GAAK,SAASlN,GAC9BiuB,EAAYjuB,KACXsY,GAEH2V,EAAY/gB,IAEbohB,UAAW,WACZ,OAAOz5B,OAAOy5B,WAAaz5B,OAAO05B,cAAgB15B,OAAO25B,iBAAmB35B,OAAO45B,aAClFC,QAAS,WACV,MAAO,SAAW75B,OAAOmY,SAAS2hB,UACjCC,WAAY,GAAIC,cAAe,YAAaC,cAAe,SAASvT,EAAOqS,EAAQtV,GACpFsV,EAASA,GAAU,aAEnBtV,EAAUA,GAAW,aAErB,IAAIgW,EAAYzS,GAAGyS,YACnB,IACE,IAAIS,EAAcT,EAAUjhB,KAAKwO,GAAG6S,UAAW7S,GAAG+S,YAClD,MAAOv5B,GACP,OAAOijB,EAAQjjB,GAEjB05B,EAAYC,gBAAkB,WAC5B3rB,EAAI,eACK0rB,EAAYp+B,OAClBs+B,kBAAkBpT,GAAGgT,gBAE1BE,EAAYG,UAAY,WACtB,IACIC,EADKJ,EAAYp+B,OACAw+B,YAAY,CAACtT,GAAGgT,eAAgB,aACjDO,EAAQD,EAAYE,YAAYxT,GAAGgT,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQjU,EAAMpvB,OACpC,SAAS8H,IACK,GAARs7B,EACF3B,IAEAtV,IAEJiD,EAAMhrB,SAAQ,SAASyb,GACrB,IAAIyjB,EAAaL,EAAMM,IAAI7T,GAAGyP,YAAYtf,GAAMjZ,OAAOmtB,SAAUlU,GACjEyjB,EAAWP,UAAY,aACrBI,EACSC,GAAQC,GACfv7B,KAEJw7B,EAAWnX,QAAU,WACnBiX,IACID,EAAKC,GAAQC,GACfv7B,QAGNk7B,EAAY7W,QAAUA,GAExByW,EAAYzW,QAAUA,GACrBqX,gBAAiB,SAASpU,EAAOqS,EAAQtV,GAC1CsV,EAASA,GAAU,aAEnBtV,EAAUA,GAAW,aAErB,IAAIgW,EAAYzS,GAAGyS,YACnB,IACE,IAAIS,EAAcT,EAAUjhB,KAAKwO,GAAG6S,UAAW7S,GAAG+S,YAClD,MAAOv5B,GACP,OAAOijB,EAAQjjB,GAEjB05B,EAAYC,gBAAkB1W,EAC9ByW,EAAYG,UAAY,WACtB,IAAIU,EAAKb,EAAYp+B,OACrB,IACE,IAAIw+B,EAAcS,EAAGT,YAAY,CAACtT,GAAGgT,eAAgB,YACrD,MAAOx5B,GAEP,YADAijB,EAAQjjB,GAGV,IAAI+5B,EAAQD,EAAYE,YAAYxT,GAAGgT,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQjU,EAAMpvB,OACpC,SAAS8H,IACK,GAARs7B,EACF3B,IAEAtV,IAEJiD,EAAMhrB,SAAQ,SAASyb,GACrB,IAAI6jB,EAAaT,EAAMlc,IAAIlH,GAC3B6jB,EAAWX,UAAY,WACjBrT,GAAGyP,YAAYtf,GAAMuf,QACvB1P,GAAGuD,OAAOpT,GAEZ6P,GAAGkQ,eAAe1R,GAAKnO,QAAQF,GAAOqO,GAAKe,SAASpP,GAAO6jB,EAAWl/B,QAAQ,GAAM,GAAM,KAC1F2+B,EACSC,GAAQC,GACfv7B,KAEJ47B,EAAWvX,QAAU,WACnBiX,IACID,EAAKC,GAAQC,GACfv7B,QAGNk7B,EAAY7W,QAAUA,GAExByW,EAAYzW,QAAUA,IAEpBwX,GAAW,CAAEC,SAAU,GAAIC,iBAAkB,EAAG73B,MAAO,IAAK83B,YAAa,SAASC,EAAOlkB,GAC3F,GAAgB,MAAZA,EAAK,GAAY,CACnB,IAAI9T,EACJ,IAAe,MAAXg4B,EACFh4B,EAAM2jB,GAAG7jB,UACJ,CACL,IAAIm4B,EAAYtU,GAAGuK,UAAU8J,GAC7B,IAAKC,EACH,MAAM,IAAItU,GAAGmB,WAAW,GAC1B9kB,EAAMi4B,EAAUnkB,KAElBA,EAAOqO,GAAKmB,MAAMtjB,EAAK8T,GAEzB,OAAOA,GACNokB,OAAQ,SAASnd,EAAMjH,EAAMhN,GAC9B,IACE,IAAIwpB,EAAOvV,EAAKjH,GAChB,MAAO3W,GACP,GAAIA,GAAKA,EAAEmW,MAAQ6O,GAAKQ,UAAU7O,KAAUqO,GAAKQ,UAAUgB,GAAGwI,QAAQhvB,EAAEmW,OACtE,OAAQ,GAEV,MAAMnW,EAqBR,OAnBA+U,IAAoBpL,GAAO,GAAKwpB,EAAKhM,IACrCpS,IAAoBpL,EAAM,GAAK,GAAK,EACpCoL,IAAoBpL,EAAM,GAAK,GAAKwpB,EAAKxH,IACzC5W,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAK5J,KAC1CxU,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKvH,MAC1C7W,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKtH,IAC1C9W,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKrH,IAC1C/W,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKzL,KAC1C3S,IAAoBpL,EAAM,IAAM,GAAK,EACrCsT,GAAU,CAACkW,EAAKjrB,OAAS,GAAI8U,GAAamW,EAAKjrB,MAAO/E,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKjI,IAAoBpL,EAAM,IAAM,GAAKsT,GAAQ,GAAIlI,IAAoBpL,EAAM,IAAM,GAAKsT,GAAQ,GACvVlI,IAAoBpL,EAAM,IAAM,GAAK,KACrCoL,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKhH,OAC1CpX,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKpH,MAAM/pB,UAAY,IAAM,EAClE+S,IAAoBpL,EAAM,IAAM,GAAK,EACrCoL,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKnH,MAAMhqB,UAAY,IAAM,EAClE+S,IAAoBpL,EAAM,IAAM,GAAK,EACrCoL,IAAoBpL,EAAM,IAAM,GAAKwpB,EAAKlH,MAAMjqB,UAAY,IAAM,EAClE+S,IAAoBpL,EAAM,IAAM,GAAK,EACrCsT,GAAU,CAACkW,EAAKxH,MAAQ,GAAI3O,GAAamW,EAAKxH,KAAMxoB,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKjI,IAAoBpL,EAAM,IAAM,GAAKsT,GAAQ,GAAIlI,IAAoBpL,EAAM,IAAM,GAAKsT,GAAQ,GAC9U,GACN+d,QAAS,SAAStc,EAAM8I,EAAQ9mB,EAAKysB,EAAOloB,GAC7C,IAAI8iB,EAAUtT,IAAmBzW,MAAM0gB,EAAMA,EAAOhe,GACpD8lB,GAAG+D,MAAM/C,EAAQO,EAAS9iB,EAAQvE,EAAKysB,IACtC8N,QAAS,SAAStkB,EAAM4S,GAKzB,MAH8B,OAD9B5S,EAAOqO,GAAKQ,UAAU7O,IACbA,EAAK7f,OAAS,KACrB6f,EAAOA,EAAKrM,OAAO,EAAGqM,EAAK7f,OAAS,IACtC0vB,GAAGgM,MAAM7b,EAAM4S,EAAM,GACd,GACN2R,QAAS,SAASvkB,EAAM4S,EAAMpC,GAC/B,OAAe,MAAPoC,GACN,KAAK,MACL,KAAK,KACL,KAAK,MACL,KAAK,KACL,KAAK,MACH,MACF,QACE,OAAQ,GAGZ,OADA/C,GAAGqD,MAAMlT,EAAM4S,EAAMpC,GACd,GACNgU,WAAY,SAASxkB,EAAMhN,EAAKyxB,GACjC,GAAIA,GAAW,EACb,OAAQ,GACV,IAAIrtB,EAAMyY,GAAGiE,SAAS9T,GAClBjW,EAAMyC,KAAKkI,IAAI+vB,EAAShhB,GAAgBrM,IACxCstB,EAAUhnB,IAAmB1K,EAAMjJ,GAGvC,OAFAwZ,EAAanM,EAAKpE,EAAKyxB,EAAU,GACjC/mB,IAAmB1K,EAAMjJ,GAAO26B,EACzB36B,GACN46B,SAAU,SAAS3kB,EAAM4kB,GAC1B,IAAY,EAARA,EACF,OAAQ,GAEV,IAAIplB,EAGJ,KADAA,EADaqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC7B5Y,MAEZ,OAAQ,GAEV,IAAIia,EAAQ,GAOZ,OANY,EAARmL,IACFnL,GAAS,KACC,EAARmL,IACFnL,GAAS,KACC,EAARmL,IACFnL,GAAS,KACPA,GAAS5J,GAAG6J,gBAAgBla,EAAMia,IAC5B,EAEH,GACNoL,MAAO,SAAS7kB,EAAMwW,EAAOsO,GAC9B,IAAIC,EAAUlV,GAAGuK,UAAU0K,GAG3B,OAFIC,GACFlV,GAAGqB,MAAM6T,GACJlV,GAAGxO,KAAKrB,EAAMwW,EAAO,EAAGsO,EAAWA,GAAWlT,IACpDoT,QAAS,SAASnU,EAAQoU,EAAKC,EAAQ52B,GAExC,IADA,IAAI8I,EAAM,EACDlX,EAAI,EAAGA,EAAIglC,EAAQhlC,IAAK,CAC/B,IAAI+iB,EAAM7E,IAAoB6mB,EAAU,EAAJ/kC,GAAS,GACzC6J,EAAMqU,IAAoB6mB,GAAW,EAAJ/kC,EAAQ,IAAM,GAC/CilC,EAAOtV,GAAGzhB,KAAKyiB,EAAQnT,IAAoBuF,EAAKlZ,EAAKuE,GACzD,GAAI62B,EAAO,EACT,OAAQ,EAEV,GADA/tB,GAAO+tB,EACHA,EAAOp7B,EACT,MAEJ,OAAOqN,GACNguB,SAAU,SAASvU,EAAQoU,EAAKC,EAAQ52B,GAEzC,IADA,IAAI8I,EAAM,EACDlX,EAAI,EAAGA,EAAIglC,EAAQhlC,IAAK,CAC/B,IAAI+iB,EAAM7E,IAAoB6mB,EAAU,EAAJ/kC,GAAS,GACzC6J,EAAMqU,IAAoB6mB,GAAW,EAAJ/kC,EAAQ,IAAM,GAC/CilC,EAAOtV,GAAGzgB,MAAMyhB,EAAQnT,IAAoBuF,EAAKlZ,EAAKuE,GAC1D,GAAI62B,EAAO,EACT,OAAQ,EACV/tB,GAAO+tB,EAET,OAAO/tB,GACNiuB,aAAS,EAAQne,IAAK,WAGvB,OAFA4c,GAASuB,SAAW,EACVjnB,IAAoB0lB,GAASuB,QAAU,GAAK,IAErDC,OAAQ,SAASriB,GAElB,OADUD,EAAaC,IAEtBsiB,gBAAiB,SAAS3T,GAC3B,IAAIf,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAC1B,OAAOH,GACN2U,MAAO,SAASC,EAAKC,GACtB,OAAOD,IAET,SAASE,GAAa/T,EAAIgU,EAAIP,GAC5B,GAAI5lB,EACF,OAAOomB,GAAoC,EAAG,EAAGjU,EAAIgU,EAAIP,GAC3DvB,GAASuB,QAAUA,EACnB,IACE,IAAIxU,EAASiT,GAASyB,gBAAgB3T,GACtC,OAAQgU,GACN,KAAK,MACL,KAAK,MAKL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MAqBL,KAAK,MAKL,KAAK,MACH,OAAK/U,EAAOC,IAEL,GADG,GAvBZ,KAAK,MACH,IAAKD,EAAOC,IACV,OAAQ,GACV,IAAIgV,EAAOhC,GAAS5c,MAEpB,OADA9I,IAAoB0nB,GAAQ,GAAK,EAC1B,EAET,KAAK,MACH,OAAKjV,EAAOC,KAEJ,IADE,GAGZ,KAAK,MAEH,OADIgV,EAAOhC,GAAS5c,MACb2I,GAAGgO,MAAMhN,EAAQ+U,EAAIE,GAY9B,QACE5jB,GAAM,qBAAuB0jB,IAEjC,MAAOv8B,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,IACAA,EAAEywB,OAGd,SAASiM,GAAY/lB,EAAMwW,EAAO6O,GAChC,GAAI5lB,EACF,OAAOomB,GAAoC,EAAG,EAAG7lB,EAAMwW,EAAO6O,GAChEvB,GAASuB,QAAUA,EACnB,IACE,IAAI1C,EAAWmB,GAASwB,OAAOtlB,GAC3B4S,EAAOkR,GAAS5c,MAEpB,OADa2I,GAAGxO,KAAKshB,EAAUnM,EAAO5D,GACxBhB,GACd,MAAOvoB,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,IACAA,EAAEywB,OAGd,IAAIkM,GAAqB,GACzB,SAASC,GAAeC,GACtB,KAAOA,EAAY/lC,QAAQ,CACzB,IAAI8iB,EAAMijB,EAAYj/B,MACZi/B,EAAYj/B,KACtBk/B,CAAIljB,IAGR,SAASmjB,GAA2BC,GAClC,OAAOhnC,KAAmB,aAAEif,IAAoB+nB,GAAW,IAE7D,IAAIC,GAAuB,GACvBC,GAAkB,GAClBC,GAAmB,GAGvB,SAASC,GAAsB9T,GAC7B,QAAc,IAAVA,EACF,MAAO,WAGT,IAAIlS,GADJkS,EAAQA,EAAMpX,QAAQ,iBAAkB,MAC1BjO,WAAW,GACzB,OAAImT,GARO,IAQQA,GAPR,GAQF,IAAMkS,EAENA,EAGX,SAAS+T,GAAoB/T,EAAOgU,GAElC,OADAhU,EAAQ8T,GAAsB9T,GACvB,IAAIlqB,SAAS,OAAQ,mBAAqBkqB,EAAQ,uEAAlD,CAA0HgU,GAEnI,SAASC,GAAYC,EAAeC,GAClC,IAAIC,EAAaL,GAAoBI,GAAW,SAASta,GACvDntB,KAAKkH,KAAOugC,EACZznC,KAAKmtB,QAAUA,EACf,IAAI1G,EAAQ,IAAIjjB,MAAM2pB,GAAS1G,WACjB,IAAVA,IACFzmB,KAAKymB,MAAQzmB,KAAKqQ,WAAa,KAAOoW,EAAMvK,QAAQ,qBAAsB,QAY9E,OATAwrB,EAAWlmC,UAAYL,OAAO6B,OAAOwkC,EAAchmC,WACnDkmC,EAAWlmC,UAAUyF,YAAcygC,EACnCA,EAAWlmC,UAAU6O,SAAW,WAC9B,YAAqB,IAAjBrQ,KAAKmtB,QACAntB,KAAKkH,KAELlH,KAAKkH,KAAO,KAAOlH,KAAKmtB,SAG5Bua,EAET,IAAIC,QAAgB,EACpB,SAASC,GAAmBza,GAC1B,MAAM,IAAIwa,GAAcxa,GAE1B,SAAS0a,GAA8BC,EAASC,EAAgBC,GAI9D,SAASC,EAAWC,GAClB,IAAIC,EAAmBH,EAAkBE,GACrCC,EAAiBrnC,SAAWgnC,EAAQhnC,QACtC8mC,GAAmB,mCAErB,IAAK,IAAI/mC,EAAI,EAAGA,EAAIinC,EAAQhnC,SAAUD,EACpCunC,GAAaN,EAAQjnC,GAAIsnC,EAAiBtnC,IAT9CinC,EAAQ5iC,SAAQ,SAASb,GACvB8iC,GAAiB9iC,GAAQ0jC,KAW3B,IAAIM,EAAiB,IAAIl8B,MAAM47B,EAAejnC,QAC1CwnC,EAAoB,GACpBC,EAAa,EACjBR,EAAe7iC,SAAQ,SAASsjC,EAAI3nC,GAC9BqmC,GAAgBnlC,eAAeymC,GACjCH,EAAexnC,GAAKqmC,GAAgBsB,IAEpCF,EAAkBhiC,KAAKkiC,GAClBvB,GAAqBllC,eAAeymC,KACvCvB,GAAqBuB,GAAM,IAE7BvB,GAAqBuB,GAAIliC,MAAK,WAC5B+hC,EAAexnC,GAAKqmC,GAAgBsB,KAClCD,IACiBD,EAAkBxnC,QACnCmnC,EAAWI,UAKc,IAA7BC,EAAkBxnC,QACpBmnC,EAAWI,GAsDf,IAAII,GAAsB,GAsD1B,SAASC,GAAiBx2B,GACxB,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,QACE,MAAM,IAAIzR,UAAU,sBAAwByR,IAUlD,IAAIy2B,QAAmB,EACvB,SAASC,GAAiBhlB,GAGxB,IAFA,IAAI7L,EAAM,GACN/H,EAAI4T,EACDnF,IAAmBzO,IACxB+H,GAAO4wB,GAAiBlqB,IAAmBzO,MAE7C,OAAO+H,EAET,IAAI8wB,QAAe,EACnB,SAASC,GAAkB3b,GACzB,MAAM,IAAI0b,GAAa1b,GAEzB,SAASib,GAAaW,EAASC,EAAoBC,GAEjD,GADAA,EAAUA,GAAW,KACf,mBAAoBD,GACxB,MAAM,IAAIvoC,UAAU,2DAEtB,IAAI6yB,EAAQ0V,EAAmB9hC,KAI/B,GAHK6hC,GACHD,GAAkB,SAAWxV,EAAQ,iDAEnC4T,GAAgBnlC,eAAegnC,GAAU,CAC3C,GAAIE,EAAQC,6BACV,OAEAJ,GAAkB,yBAA2BxV,EAAQ,WAKzD,GAFA4T,GAAgB6B,GAAWC,SACpB7B,GAAiB4B,GACpB9B,GAAqBllC,eAAegnC,GAAU,CAChD,IAAIrhB,EAAYuf,GAAqB8B,UAC9B9B,GAAqB8B,GAC5BrhB,EAAUxiB,SAAQ,SAASkY,GACzBA,QAyBN,SAAS+rB,GAAsBC,GAC7B,KAAMppC,gBAAgBqpC,IACpB,OAAO,EAET,KAAMD,aAAiBC,IACrB,OAAO,EAMT,IAJA,IAAIC,EAAYtpC,KAAKupC,GAAGC,QAAQC,gBAC5BC,EAAO1pC,KAAKupC,GAAG3lB,IACf+lB,EAAaP,EAAMG,GAAGC,QAAQC,gBAC9BG,EAAQR,EAAMG,GAAG3lB,IACd0lB,EAAUO,WACfH,EAAOJ,EAAUQ,OAAOJ,GACxBJ,EAAYA,EAAUO,UAExB,KAAOF,EAAWE,WAChBD,EAAQD,EAAWG,OAAOF,GAC1BD,EAAaA,EAAWE,UAE1B,OAAOP,IAAcK,GAAcD,IAASE,EAK9C,SAASG,GAA4BroC,GAInConC,GAAsCpnC,EAFtB6nC,GAAGC,QAAQC,gBAAgBviC,KAEE,6BAE/C,IAAI8iC,IAAoB,EACxB,SAASC,GAAgB5hC,IASzB,SAAS6hC,GAAmBX,GAC1BA,EAAG5gB,MAAMnpB,OAAS,EACgB,IAAnB+pC,EAAG5gB,MAAMnpB,OAT1B,SAAuB+pC,GACjBA,EAAGY,SACLZ,EAAGa,aAAaC,cAAcd,EAAGY,UAEjCZ,EAAGC,QAAQC,gBAAgBY,cAAcd,EAAG3lB,KAO5C0mB,CAAcf,GAGlB,SAASgB,GAAgBliC,GACvB,MAAiC,oBAAtBmiC,mBACTD,GAAkB,SAASE,GACzB,OAAOA,GAEFpiC,IAET2hC,GAAoB,IAAIQ,mBAAkB,SAAShjC,GACjD,IAAK,IAAIlC,EAASkC,EAAK5B,QAASN,EAAO5F,KAAM4F,EAASkC,EAAK5B,OAAQ,CACjE,IAAI2jC,EAAKjkC,EAAO9F,MACX+pC,EAAG3lB,IAGNsmB,GAAmBX,GAFnBroB,QAAQO,KAAK,2BAA6B8nB,EAAG3lB,SAUnDqmB,GAAkB,SAASQ,GACzBT,GAAkBU,WAAWD,EAAQlB,MALvCgB,GAAkB,SAASE,GAEzB,OADAT,GAAkB9Y,SAASuZ,EAASA,EAAQlB,GAAIkB,EAAQlB,IACjDkB,IAKcpiC,IAEzB,SAASsiC,KAIP,GAHK3qC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGqB,wBAEV,OADA5qC,KAAKupC,GAAG5gB,MAAMnpB,OAAS,EAChBQ,KAEP,IA5DgC6qC,EA4D5BC,EAAQP,GAAgBppC,OAAO6B,OAAO7B,OAAO0D,eAAe7E,MAAO,CAAEupC,GAAI,CAAE/pC,OA5D/CqrC,EA4DiF7qC,KAAKupC,GA3DjH,CAAE5gB,MAAOkiB,EAAEliB,MAAOoiB,gBAAiBF,EAAEE,gBAAiBH,wBAAyBC,EAAED,wBAAyBhnB,IAAKinB,EAAEjnB,IAAK4lB,QAASqB,EAAErB,QAASW,SAAUU,EAAEV,SAAUC,aAAcS,EAAET,mBA8DrL,OAFAU,EAAMvB,GAAG5gB,MAAMnpB,OAAS,EACxBsrC,EAAMvB,GAAGwB,iBAAkB,EACpBD,EAGX,SAASE,KACFhrC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGwB,kBAAoB/qC,KAAKupC,GAAGqB,yBACtC9B,GAAkB,yCAEpBmB,GAAgBjqC,MAChBkqC,GAAmBlqC,KAAKupC,IACnBvpC,KAAKupC,GAAGqB,0BACX5qC,KAAKupC,GAAGY,cAAW,EACnBnqC,KAAKupC,GAAG3lB,SAAM,GAGlB,SAASqnB,KACP,OAAQjrC,KAAKupC,GAAG3lB,IAElB,IAAIsnB,QAAgB,EAChBC,GAAgB,GACpB,SAASC,KACP,KAAOD,GAAcrqC,QAAQ,CAC3B,IAAIY,EAAMypC,GAAcvjC,MACxBlG,EAAI6nC,GAAGwB,iBAAkB,EACzBrpC,EAAY,UAGhB,SAAS2pC,KAYP,OAXKrrC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGwB,kBAAoB/qC,KAAKupC,GAAGqB,yBACtC9B,GAAkB,yCAEpBqC,GAAc7kC,KAAKtG,MACU,IAAzBmrC,GAAcrqC,QAAgBoqC,IAChCA,GAAcE,IAEhBprC,KAAKupC,GAAGwB,iBAAkB,EACnB/qC,KAST,SAASqpC,MAET,IAAIiC,GAAqB,GACzB,SAASC,GAAoBC,EAAOC,EAAYC,GAC9C,QAAwC,IAApCF,EAAMC,GAAYE,cAA0B,CAC9C,IAAIC,EAAWJ,EAAMC,GACrBD,EAAMC,GAAc,WAIlB,OAHKD,EAAMC,GAAYE,cAAc5pC,eAAe7B,UAAUY,SAC5DgoC,GAAkB,aAAe4C,EAAY,iDAAmDxrC,UAAUY,OAAS,uBAAyB0qC,EAAMC,GAAYE,cAAgB,MAEzKH,EAAMC,GAAYE,cAAczrC,UAAUY,QAAQX,MAAMH,KAAME,YAEvEsrC,EAAMC,GAAYE,cAAgB,GAClCH,EAAMC,GAAYE,cAAcC,EAASC,UAAYD,GAGzD,SAASE,GAAmBxY,EAAO9zB,EAAOusC,GACpCxsB,EAAOxd,eAAeuxB,UACH,IAAjByY,QAA2D,IAAhCxsB,EAAO+T,GAAOqY,oBAA0E,IAA9CpsB,EAAO+T,GAAOqY,cAAcI,KACnGjD,GAAkB,gCAAkCxV,EAAQ,WAE9DiY,GAAoBhsB,EAAQ+T,EAAOA,GAC/B/T,EAAOxd,eAAegqC,IACxBjD,GAAkB,uFAAyFiD,EAAe,MAE5HxsB,EAAO+T,GAAOqY,cAAcI,GAAgBvsC,IAE5C+f,EAAO+T,GAAS9zB,OACK,IAAjBusC,IACFxsB,EAAO+T,GAAOyY,aAAeA,IAInC,SAASC,GAAgB1Y,EAAOrsB,EAAaglC,EAAmB5B,EAAeR,EAAWqC,EAAepC,EAAQqC,GAC/GnsC,KAAKkH,KAAOosB,EACZtzB,KAAKiH,YAAcA,EACnBjH,KAAKisC,kBAAoBA,EACzBjsC,KAAKqqC,cAAgBA,EACrBrqC,KAAK6pC,UAAYA,EACjB7pC,KAAKksC,cAAgBA,EACrBlsC,KAAK8pC,OAASA,EACd9pC,KAAKmsC,SAAWA,EAChBnsC,KAAKosC,qBAAuB,GAE9B,SAASC,GAAczoB,EAAK0oB,EAAUC,GACpC,KAAOD,IAAaC,GACbD,EAASxC,QACZhB,GAAkB,gCAAkCyD,EAAarlC,KAAO,wBAA0BolC,EAASplC,MAE7G0c,EAAM0oB,EAASxC,OAAOlmB,GACtB0oB,EAAWA,EAASzC,UAEtB,OAAOjmB,EAET,SAAS4oB,GAAoC3F,EAAax+B,GACxD,GAAe,OAAXA,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE3C,EAEJmB,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,MAE9E,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,OADU4C,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBAG3D,SAASmD,GAAyB/F,EAAax+B,GAC7C,IAAIub,EACJ,GAAe,OAAXvb,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE9ClH,KAAK6sC,gBACPjpB,EAAM5jB,KAAK8sC,iBACS,OAAhBjG,GACFA,EAAYvgC,KAAKtG,KAAKqqC,cAAezmB,GAEhCA,GAEA,EAGNvb,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,OAEzElH,KAAK+sC,SAAW1kC,EAAOkhC,GAAGC,QAAQuD,SACrCjE,GAAkB,oCAAsCzgC,EAAOkhC,GAAGa,aAAe/hC,EAAOkhC,GAAGa,aAAaljC,KAAOmB,EAAOkhC,GAAGC,QAAQtiC,MAAQ,sBAAwBlH,KAAKkH,MAExK,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,GADA7lB,EAAMyoB,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBACjDzpC,KAAK6sC,eAIP,YAH2B,IAAvBxkC,EAAOkhC,GAAGY,UACZrB,GAAkB,mDAEZ9oC,KAAKgtC,eACX,KAAK,EACC3kC,EAAOkhC,GAAGa,eAAiBpqC,KAC7B4jB,EAAMvb,EAAOkhC,GAAGY,SAEhBrB,GAAkB,oCAAsCzgC,EAAOkhC,GAAGa,aAAe/hC,EAAOkhC,GAAGa,aAAaljC,KAAOmB,EAAOkhC,GAAGC,QAAQtiC,MAAQ,sBAAwBlH,KAAKkH,MAExK,MACF,KAAK,EACH0c,EAAMvb,EAAOkhC,GAAGY,SAChB,MACF,KAAK,EACH,GAAI9hC,EAAOkhC,GAAGa,eAAiBpqC,KAC7B4jB,EAAMvb,EAAOkhC,GAAGY,aACX,CACL,IAAI8C,EAAe5kC,EAAc,QACjCub,EAAM5jB,KAAKktC,SAAStpB,EAAKupB,IAAiB,WACxCF,EAAqB,aAEH,OAAhBpG,GACFA,EAAYvgC,KAAKtG,KAAKqqC,cAAezmB,GAGzC,MACF,QACEklB,GAAkB,+BAGxB,OAAOllB,EAET,SAASwpB,GAAuCvG,EAAax+B,GAC3D,GAAe,OAAXA,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE3C,EAEJmB,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,MAE1EmB,EAAOkhC,GAAGC,QAAQuD,SACpBjE,GAAkB,mCAAqCzgC,EAAOkhC,GAAGC,QAAQtiC,KAAO,sBAAwBlH,KAAKkH,MAE/G,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,OADU4C,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBAG3D,SAAS4D,GAA6BzpB,GAIpC,OAHI5jB,KAAKstC,gBACP1pB,EAAM5jB,KAAKstC,cAAc1pB,IAEpBA,EAET,SAAS2pB,GAA6B3pB,GAChC5jB,KAAKqqC,eACPrqC,KAAKqqC,cAAczmB,GAGvB,SAAS4pB,GAA+BnlC,GACvB,OAAXA,GACFA,EAAe,SAGnB,SAASolC,GAAgB7pB,EAAK0oB,EAAUC,GACtC,GAAID,IAAaC,EACf,OAAO3oB,EAET,QAA+B,IAA3B2oB,EAAa1C,UACf,OAAO,KAET,IAAI6D,EAAKD,GAAgB7pB,EAAK0oB,EAAUC,EAAa1C,WACrD,OAAW,OAAP6D,EACK,KAEFnB,EAAaJ,SAASuB,GAE/B,SAASC,KACP,OAAOxsC,OAAOsG,KAAKmmC,IAAqB9sC,OAE1C,SAAS+sC,KACP,IAAIH,EAAK,GACT,IAAK,IAAII,KAAKF,GACRA,GAAoB7rC,eAAe+rC,IACrCJ,EAAGpnC,KAAKsnC,GAAoBE,IAGhC,OAAOJ,EAET,SAASK,GAAiBjuC,GACxBorC,GAAgBprC,EACZqrC,GAAcrqC,QAAUoqC,IAC1BA,GAAcE,IASlB,IAAIwC,GAAsB,GAW1B,SAASI,GAAqBC,EAAQrqB,GAEpC,OADAA,EAXF,SAA0BqqB,EAAQrqB,GAIhC,SAHY,IAARA,GACFklB,GAAkB,+BAEbmF,EAAOpE,WACZjmB,EAAMqqB,EAAOnE,OAAOlmB,GACpBqqB,EAASA,EAAOpE,UAElB,OAAOjmB,EAGDsqB,CAAiBD,EAAQrqB,GACxBgqB,GAAoBhqB,GAE7B,SAASuqB,GAAgB3sC,EAAW2C,GAUlC,OATKA,EAAOqlC,SAAYrlC,EAAOyf,KAC7BgkB,GAAmB,8CAEGzjC,EAAOimC,gBACXjmC,EAAOgmC,UAEzBvC,GAAmB,oDAErBzjC,EAAOwkB,MAAQ,CAAEnpB,MAAO,GACjB+qC,GAAgBppC,OAAO6B,OAAOxB,EAAW,CAAE+nC,GAAI,CAAE/pC,MAAO2E,MAEjE,SAASiqC,GAA+BxqB,GACtC,IAAIyqB,EAAaruC,KAAKsuC,WAAW1qB,GACjC,IAAKyqB,EAEH,OADAruC,KAAKouB,WAAWxK,GACT,KAET,IAAIolB,EAAqBgF,GAAqBhuC,KAAKypC,gBAAiB4E,GACpE,QAA2B,IAAvBrF,EAA+B,CACjC,GAA0C,IAAtCA,EAAmBO,GAAG5gB,MAAMnpB,MAG9B,OAFAwpC,EAAmBO,GAAG3lB,IAAMyqB,EAC5BrF,EAAmBO,GAAGY,SAAWvmB,EAC1BolB,EAA0B,QAEjC,IAAI0E,EAAK1E,EAA0B,QAEnC,OADAhpC,KAAKouB,WAAWxK,GACT8pB,EAGX,SAASa,IACP,OAAIvuC,KAAK6sC,eACAsB,GAAgBnuC,KAAKypC,gBAAgBwC,kBAAmB,CAAEzC,QAASxpC,KAAKwuC,YAAa5qB,IAAKyqB,EAAYjE,aAAcpqC,KAAMmqC,SAAUvmB,IAEpIuqB,GAAgBnuC,KAAKypC,gBAAgBwC,kBAAmB,CAAEzC,QAASxpC,KAAM4jB,IAAAA,IAGpF,IAKI6qB,EALAC,EAAa1uC,KAAKypC,gBAAgByC,cAAcmC,GAChDM,EAA0BrD,GAAmBoD,GACjD,IAAKC,EACH,OAAOJ,EAAkB/pC,KAAKxE,MAI9ByuC,EADEzuC,KAAK+sC,QACE4B,EAAwBC,iBAExBD,EAAwBE,YAEnC,IAAIC,EAAKrB,GAAgBY,EAAYruC,KAAKypC,gBAAiBgF,EAAOhF,iBAClE,OAAW,OAAPqF,EACKP,EAAkB/pC,KAAKxE,MAE5BA,KAAK6sC,eACAsB,GAAgBM,EAAOhF,gBAAgBwC,kBAAmB,CAAEzC,QAASiF,EAAQ7qB,IAAKkrB,EAAI1E,aAAcpqC,KAAMmqC,SAAUvmB,IAEpHuqB,GAAgBM,EAAOhF,gBAAgBwC,kBAAmB,CAAEzC,QAASiF,EAAQ7qB,IAAKkrB,IAW7F,SAASC,GAAkBzb,EAAOmW,EAAiBgD,EAAaM,EAASF,EAAgB2B,EAAaxB,EAAeM,EAAeR,EAAgBI,EAAU7C,GAC5JrqC,KAAKkH,KAAOosB,EACZtzB,KAAKypC,gBAAkBA,EACvBzpC,KAAKysC,YAAcA,EACnBzsC,KAAK+sC,QAAUA,EACf/sC,KAAK6sC,eAAiBA,EACtB7sC,KAAKwuC,YAAcA,EACnBxuC,KAAKgtC,cAAgBA,EACrBhtC,KAAKstC,cAAgBA,EACrBttC,KAAK8sC,eAAiBA,EACtB9sC,KAAKktC,SAAWA,EAChBltC,KAAKqqC,cAAgBA,EAChBwC,QAAgD,IAA9BpD,EAAgBI,UASrC7pC,KAAiB,WAAI4sC,GARjBG,GACF/sC,KAAiB,WAAIwsC,GACrBxsC,KAAKgvC,mBAAqB,OAE1BhvC,KAAiB,WAAIotC,GACrBptC,KAAKgvC,mBAAqB,MAMhC,SAASC,GAAoB3b,EAAO9zB,EAAOusC,GACpCxsB,EAAOxd,eAAeuxB,IACzBsU,GAAmB,4CAEe,IAAhCroB,EAAO+T,GAAOqY,oBAA6C,IAAjBI,EAC5CxsB,EAAO+T,GAAOqY,cAAcI,GAAgBvsC,GAE5C+f,EAAO+T,GAAS9zB,EAChB+f,EAAO+T,GAAOuY,SAAWE,GAc7B,SAASmD,GAAwBC,EAAWC,GAQ1C,IAAIC,GAL6B,IAFjCF,EAAYvG,GAAiBuG,IAEb97B,QAAQ,KAd1B,SAAsB0U,EAAKnE,GACzB3C,EAAO8G,EAAI1U,QAAQ,MAAQ,EAAG,oDAC9B,IAAIi8B,EAAW,GACf,OAAO,WACLA,EAASxuC,OAASZ,UAAUY,OAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIX,UAAUY,OAAQD,IACpCyuC,EAASzuC,GAAKX,UAAUW,GAE1B,OAAOinB,GAAQC,EAAKnE,EAAK0rB,IAOhBC,CAAaJ,EAAWC,GAE1B7pB,GAAUsC,IAAIunB,GAMvB,MAHkB,mBAAPC,GACTvG,GAAkB,2CAA6CqG,EAAY,KAAOC,GAE7EC,EAET,IAAIG,QAAmB,EACvB,SAASC,GAAYprC,GACnB,IAAIuf,EAAM8rB,GAAerrC,GACrBqpC,EAAK9E,GAAiBhlB,GAE1B,OADAiI,GAAMjI,GACC8pB,EAET,SAASiC,GAAsBxiB,EAASyiB,GACtC,IAAIC,EAAe,GACfC,EAAO,GAgBX,MADAF,EAAM1qC,SAdN,SAAS6qC,EAAM1rC,GACTyrC,EAAKzrC,IAGL6iC,GAAgB7iC,KAGhB8iC,GAAiB9iC,GACnB8iC,GAAiB9iC,GAAMa,QAAQ6qC,IAGjCF,EAAavpC,KAAKjC,GAClByrC,EAAKzrC,IAAQ,OAGT,IAAImrC,GAAiBriB,EAAU,KAAO0iB,EAAaG,IAAIP,IAAahhC,KAAK,CAAC,QAkDlF,SAASwhC,GAAoBtnB,EAAOunB,GAElC,IADA,IAAInlC,EAAQ,GACHlK,EAAI,EAAGA,EAAI8nB,EAAO9nB,IACzBkK,EAAMzE,KAAKyY,KAAqBmxB,GAAgB,GAAKrvC,IAEvD,OAAOkK,EAkDT,SAASolC,GAAqBzE,EAAW0E,EAAUC,EAAWC,EAAgBC,GAC5E,IAAI1E,EAAWuE,EAAStvC,OACpB+qC,EAAW,GACb/C,GAAkB,kFAIpB,IAFA,IAAI0H,EAAoC,OAAhBJ,EAAS,IAA6B,OAAdC,EAC5CI,GAAuB,EAClB5vC,EAAI,EAAGA,EAAIuvC,EAAStvC,SAAUD,EACrC,GAAoB,OAAhBuvC,EAASvvC,SAAkD,IAAnCuvC,EAASvvC,GAAGmuC,mBAA+B,CACrEyB,GAAuB,EACvB,MAGJ,IAAIC,EAA+B,SAArBN,EAAS,GAAGlpC,KACtBypC,EAAW,GACXC,EAAgB,GACpB,IAAS/vC,EAAI,EAAGA,EAAIgrC,EAAW,IAAKhrC,EAClC8vC,IAAmB,IAAN9vC,EAAU,KAAO,IAAM,MAAQA,EAC5C+vC,IAAwB,IAAN/vC,EAAU,KAAO,IAAM,MAAQA,EAAI,QAEvD,IAAIgwC,EAAgB,mBAAqBzJ,GAAsBsE,GAAa,IAAMiF,EAAW,kCAAoC9E,EAAW,GAAK,oCAAsCH,EAAY,8DAAgEG,EAAW,GAAK,iBAC/Q4E,IACFI,GAAiB,2BAEnB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAC,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,cAC5EC,EAAQ,CAAClI,GAAmBwH,EAAgBC,EAAe3J,GAAgBwJ,EAAS,GAAIA,EAAS,IAIrG,IAHII,IACFK,GAAiB,yCAA2CC,EAAY,cAEjEjwC,EAAI,EAAGA,EAAIgrC,EAAW,IAAKhrC,EAClCgwC,GAAiB,UAAYhwC,EAAI,kBAAoBA,EAAI,eAAiBiwC,EAAY,QAAUjwC,EAAI,SAAWuvC,EAASvvC,EAAI,GAAGqG,KAAO,KACtI6pC,EAAMzqC,KAAK,UAAYzF,GACvBmwC,EAAM1qC,KAAK8pC,EAASvvC,EAAI,IAM1B,GAJI2vC,IACFI,EAAgB,aAAeA,EAAc9vC,OAAS,EAAI,KAAO,IAAM8vC,GAEzEC,IAAkBH,EAAU,YAAc,IAAM,cAAgBE,EAAc9vC,OAAS,EAAI,KAAO,IAAM8vC,EAAgB,OACpHH,EACFI,GAAiB,sCAEjB,IAAShwC,EAAI2vC,EAAoB,EAAI,EAAG3vC,EAAIuvC,EAAStvC,SAAUD,EAAG,CAChE,IAAIowC,EAAkB,IAANpwC,EAAU,YAAc,OAASA,EAAI,GAAK,QACnB,OAAnCuvC,EAASvvC,GAAGmuC,qBACd6B,GAAiBI,EAAY,SAAWA,EAAY,SAAWb,EAASvvC,GAAGqG,KAAO,KAClF6pC,EAAMzqC,KAAK2qC,EAAY,SACvBD,EAAM1qC,KAAK8pC,EAASvvC,GAAGmuC,qBAW7B,OAPI0B,IACFG,GAAiB,sDAGnBA,GAAiB,MACjBE,EAAMzqC,KAAKuqC,GAnEb,SAAc5pC,EAAaiqC,GACzB,KAAMjqC,aAAuBmC,UAC3B,MAAM,IAAI3I,UAAU,4CAA8CwG,EAAc,4BAElF,IAAIkqC,EAAQ9J,GAAoBpgC,EAAYC,MAAQ,uBAAuB,eAE3EiqC,EAAM3vC,UAAYyF,EAAYzF,UAC9B,IAAIE,EAAM,IAAIyvC,EACV/gB,EAAInpB,EAAY9G,MAAMuB,EAAKwvC,GAC/B,OAAO9gB,aAAajvB,OAASivB,EAAI1uB,EA2DX0vC,CAAKhoC,SAAU2nC,GAAO5wC,MAAM,KAAM6wC,GAuC1D,IAAIK,GAAkB,GAClBC,GAAqB,CAAC,GAAI,CAAE9xC,WAAO,GAAU,CAAEA,MAAO,MAAQ,CAAEA,OAAO,GAAQ,CAAEA,OAAO,IAC5F,SAAS+xC,GAAelpC,GAClBA,EAAS,GAA+C,KAAxCipC,GAAmBjpC,GAAQkmB,WAC7C+iB,GAAmBjpC,QAAU,EAC7BgpC,GAAgB/qC,KAAK+B,IAGzB,SAASmpC,KAEP,IADA,IAAI7oB,EAAQ,EACH9nB,EAAI,EAAGA,EAAIywC,GAAmBxwC,SAAUD,OACjB,IAA1BywC,GAAmBzwC,MACnB8nB,EAGN,OAAOA,EAET,SAAS8oB,KACP,IAAK,IAAI5wC,EAAI,EAAGA,EAAIywC,GAAmBxwC,SAAUD,EAC/C,QAA8B,IAA1BywC,GAAmBzwC,GACrB,OAAOywC,GAAmBzwC,GAG9B,OAAO,KAMT,SAASssC,GAAiB3tC,GACxB,OAAQA,GACN,UAAK,EACH,OAAO,EAET,KAAK,KACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,QACE,IAAI6I,EAASgpC,GAAgBvwC,OAASuwC,GAAgBzpC,MAAQ0pC,GAAmBxwC,OAEjF,OADAwwC,GAAmBjpC,GAAU,CAAEkmB,SAAU,EAAG/uB,MAAAA,GACrC6I,GAcb,SAASqpC,GAAyBpe,EAAO3L,EAAOgqB,GAC9C,OAAQhqB,GACN,KAAK,EACH,OAAO,SAASqf,GACd,IAAI7jB,EAAOwuB,EAAStzB,IAAqBI,IACzC,OAAOze,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,KAAK,EACH,OAAO,SAASA,GACd,IAAI7jB,EAAOwuB,EAAShzB,IAAsBE,IAC1C,OAAO7e,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,KAAK,EACH,OAAO,SAASA,GACd,IAAI7jB,EAAOwuB,EAAS5yB,IAAsBE,IAC1C,OAAOjf,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,QACE,MAAM,IAAIvmC,UAAU,yBAA2B6yB,IAgBrD,SAASse,GAAsB7I,EAAS2C,GACtC,IAAImG,EAAO3K,GAAgB6B,GAI3B,YAHa,IAAT8I,GACF/I,GAAkB4C,EAAY,qBAAuB+D,GAAY1G,IAE5D8I,EAWT,SAASnF,GAAaoF,GACpB,GAAU,OAANA,EACF,MAAO,OAET,IAAIvmB,SAAWumB,EACf,MAAU,WAANvmB,GAAwB,UAANA,GAAuB,aAANA,EAC9BumB,EAAEzhC,WAEF,GAAKyhC,EAGhB,SAASC,GAA0Bze,EAAO3L,GACxC,OAAQA,GACN,KAAK,EACH,OAAO,SAASqf,GACd,OAAOhnC,KAAmB,cAnwI5Bse,EAAWtP,QAAUA,GACvBuP,GAA2BD,EAAWtP,QAEjC8T,GAgwI+CkkB,GAAW,KAE/D,KAAK,EACH,OAAO,SAASA,GACd,OAAOhnC,KAAmB,aAAEmf,IAAoB6nB,GAAW,KAE/D,QACE,MAAM,IAAIvmC,UAAU,uBAAyB6yB,IA4BnD,SAAS0e,GAA4B1e,EAAO3L,EAAOgqB,GACjD,OAAQhqB,GACN,KAAK,EACH,OAAOgqB,EAAS,SAA2B3K,GACzC,OAAO3oB,IAAmB2oB,IACxB,SAA2BA,GAC7B,OAAOvoB,IAAmBuoB,IAE9B,KAAK,EACH,OAAO2K,EAAS,SAA4B3K,GAC1C,OAAOroB,IAAoBqoB,GAAW,IACpC,SAA4BA,GAC9B,OAAOnoB,IAAoBmoB,GAAW,IAE1C,KAAK,EACH,OAAO2K,EAAS,SAA4B3K,GAC1C,OAAOjoB,IAAoBioB,GAAW,IACpC,SAA4BA,GAC9B,OAAO/nB,IAAoB+nB,GAAW,IAE1C,QACE,MAAM,IAAIvmC,UAAU,yBAA2B6yB,IAsNrD,SAAS2e,GAAc5pC,GAIrB,OAHKA,GACHygC,GAAkB,oCAAsCzgC,GAEnDipC,GAAmBjpC,GAAQ7I,MA6BpC,IAAI0yC,GAAgB,GACpB,SAASC,GAAkBlb,GACzB,IAAImb,EAASF,GAAcjb,GAC3B,YAAe,IAAXmb,EACKxJ,GAAiB3R,GAEjBmb,EAGX,SAASC,KACP,MAA0B,iBAAflpC,WACFA,WAGAC,SACL,cAFG,GAyHT,SAASo9B,GAAoC8L,EAAOC,GAKlD,IAJA,IAAIC,EAActyC,UAAUY,OAAS,EACjC2lB,EAAQgsB,KACRxyC,EAAOyyC,GAAyB,EAAdF,GAClBrgC,EAAIlS,GAAQ,EACPY,EAAI,EAAGA,EAAI2xC,EAAa3xC,IAC/Bse,IAAoBhN,EAAItR,GAAKX,UAAU,EAAIW,GAE7C,IAAIkX,EAAM46B,GAA0CL,EAAOE,EAAavyC,EAAMsyC,GAE9E,OADA3kB,GAAanH,GACN1O,EAET,IAAI66B,GAAiD,GACjDC,GAAwB,GA2B5B,SAASC,GAA0B5gC,GACjC,IAGE,OAFAoM,EAAWy0B,KAAK7gC,EAAOlD,EAAOmC,WAAa,QAAU,IACrDoN,GAA2BD,EAAWtP,QAC/B,EACP,MAAOhF,KAyBX,IAAIgpC,GAAW,CAAEC,eAAgB,EAAGC,wBAAyB,WAC3D,IAAK,IAAIryC,EAAImyC,GAASG,cAAcryC,OAAS,EAAGD,GAAK,IAAKA,EACxDmyC,GAASI,eAAevyC,GAE1BmyC,GAASG,cAAgB,GACzBH,GAASK,cAAgB,IACxBC,6BAA8B,WAC1BN,GAASO,iCAEZP,GAASO,gCAAiC,IAE3CF,cAAe,GAAIG,UAAW,SAASC,EAAgBC,EAAY/C,GACpE,SAASgD,EAAuBC,EAAMC,GACpC,GAAID,EAAK9yC,QAAU+yC,EAAK/yC,OACtB,OAAO,EACT,IAAK,IAAIgzC,KAAMF,EACb,GAAIA,EAAKE,IAAOD,EAAKC,GACnB,OAAO,EAEX,OAAO,EAET,IAAK,IAAIjzC,KAAKmyC,GAASK,cAAe,CACpC,IAAI7uC,EAAOwuC,GAASK,cAAcxyC,GAClC,GAAI2D,EAAKivC,gBAAkBA,GAAkBE,EAAuBnvC,EAAKmsC,SAAUA,GACjF,OAGJqC,GAASK,cAAc/sC,KAAK,CAAEmtC,eAAAA,EAAgBC,WAAAA,EAAY/C,SAAAA,IAC1DqC,GAASK,cAAcU,MAAK,SAASl9B,EAAGC,GACtC,OAAOD,EAAE68B,WAAa58B,EAAE48B,eAEzBM,oBAAqB,SAASP,GAC/B,IAAK,IAAI5yC,EAAI,EAAGA,EAAImyC,GAASK,cAAcvyC,SAAUD,EAC/CmyC,GAASK,cAAcxyC,GAAG4yC,gBAAkBA,IAC9CT,GAASK,cAAcpnB,OAAOprB,EAAG,KAC/BA,IAGLozC,+BAAgC,WACjC,OAAOjB,GAASC,gBAAkBD,GAASkB,oBAAoBC,qBAC9DC,iBAAkB,WACnB,GAAKpB,GAASiB,iCAGd,IAAK,IAAIpzC,EAAI,EAAGA,EAAImyC,GAASK,cAAcvyC,SAAUD,EAAG,CACtD,IAAI2D,EAAOwuC,GAASK,cAAcxyC,GAClCmyC,GAASK,cAAcpnB,OAAOprB,EAAG,KAC/BA,EACF2D,EAAKivC,eAAetzC,MAAM,KAAMqE,EAAKmsC,YAEtCwC,cAAe,GAAIkB,0BAA2B,SAAS1zC,EAAQ2zC,GAChE,IAAK,IAAIzzC,EAAI,EAAGA,EAAImyC,GAASG,cAAcryC,SAAUD,EAC/CmyC,GAASG,cAActyC,GAAGF,QAAUA,GAAY2zC,GAAmBA,GAAmBtB,GAASG,cAActyC,GAAGyzC,iBAClHtB,GAASI,eAAevyC,MAG3BuyC,eAAgB,SAASvyC,GAC1B,IAAI0zC,EAAIvB,GAASG,cAActyC,GAC/B0zC,EAAE5zC,OAAO6zC,oBAAoBD,EAAED,gBAAiBC,EAAEE,kBAAmBF,EAAEG,YACvE1B,GAASG,cAAclnB,OAAOprB,EAAG,IAChC8zC,wBAAyB,SAASC,GACnC,IAAIC,EAAiB,SAAyBC,KAC1C9B,GAASC,eACXD,GAASkB,oBAAsBU,EAC/B5B,GAASoB,mBACTQ,EAAaG,YAAYD,GACzB9B,GAASoB,qBACPpB,GAASC,gBAEb,GAAI2B,EAAaI,aACfJ,EAAaH,kBAAoBI,EACjCD,EAAaj0C,OAAOs0C,iBAAiBL,EAAaN,gBAAiBO,EAAgBD,EAAaF,YAChG1B,GAASG,cAAc7sC,KAAKsuC,GAC5B5B,GAASM,oCAET,IAAK,IAAIzyC,EAAI,EAAGA,EAAImyC,GAASG,cAAcryC,SAAUD,EAC/CmyC,GAASG,cAActyC,GAAGF,QAAUi0C,EAAaj0C,QAAUqyC,GAASG,cAActyC,GAAGyzC,iBAAmBM,EAAaN,iBACvHtB,GAASI,eAAevyC,MAI7Bq0C,+BAAgC,SAAS3oB,EAAc4oB,EAAkBC,EAAaC,EAAWC,GAClG,IAAI7nB,EAAWglB,KACXzM,EAAU0M,GAAW,IACzB3zB,IAAoBinB,GAAW,GAAKoP,EACpCr2B,IAAoBinB,EAAU,GAAK,GAAKqP,EACxCt2B,IAAoBinB,EAAU,GAAK,GAAKsP,EACxCC,GAA4B,EAAGhpB,EAAc,UAAW4oB,EAAkBE,EAAWrP,GACrFpY,GAAaH,IACZ+nB,gCAAiC,SAASjpB,GAC3C,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAOxD,GAAQuD,oCACjB,QACE,OAAOC,IAEVkpB,qBAAsB,SAAS90C,GAChC,OAAKA,EAEDA,GAAU6I,OACL,UACL7I,GAAU+0C,OACL,UACF/0C,GAAUA,EAAOg5B,SAAWh5B,EAAOg5B,SAAW,GAL5C,IAMRgc,kBAAmB,WACpB,OAAO13B,SAAS03B,mBAAqB13B,SAAS23B,0BAQhD,SAASC,GAAyDtpB,EAAcupB,EAAcC,EAAOC,GACnG,IAPuBC,EACnBn1C,EACAo1C,EAKAzoB,EAAWglB,KACXzM,EAAU0M,GAAW,IACrByD,EAAkB,EAClBL,IATAh1C,EAASsjB,GADU6xB,EAWaH,GAVK,EACrCI,EAAUhsB,GAAQppB,GACtBojB,EAAa+xB,EAAUC,EAASp1C,GAQ9Bq1C,EAPKD,GASPn3B,IAAoBinB,GAAW,GAAKmQ,EACpCp3B,IAAoBinB,EAAU,GAAK,GAAK+P,EACxCh3B,IAAoBinB,EAAU,GAAK,GAAKgQ,EACxCT,GAA4B,EAAGhpB,EAAc,UAAW,EAAG4pB,EAAiBnQ,GAC5EpY,GAAaH,GASf,IAAI2oB,GAAqB,CAAC,EAAuB,oBAAbn4B,SAA2BA,SAAW,EAAqB,oBAAXzU,OAAyBA,OAAS,GACtH,SAAS6sC,GAAgB11C,GAJzB,IAAgCu1C,EAO9B,OAFAv1C,GAL8Bu1C,EAKEv1C,GAJf,EAAIgjB,EAAauyB,GAAWA,EAK5BE,GAAmBz1C,KAAgC,oBAAbsd,SAA2BA,SAASq4B,cAAc31C,QAAU,GAGrH,SAAS41C,GAAsB51C,GAC7B,OAAO01C,GAAgB11C,GAEzB,SAAS61C,GAAmD71C,EAAQo1C,EAAOC,GACzE,IAAIS,EAASF,GAAsB51C,GACnC,IAAK81C,EACH,OAAQ,EAKV,GAJIA,EAAOC,kBACT33B,IAAoB03B,EAAOC,iBAAmB,GAAKX,EACnDh3B,IAAoB03B,EAAOC,gBAAkB,GAAK,GAAKV,IAErDS,EAAOE,iBAAoBF,EAAOG,4BAa/B,OAAIH,EAAOC,iBArCpB,SAA+DnqB,EAAcupB,EAAcC,EAAOC,GAEhGH,GAAyDtpB,EADzDupB,EAAeA,EAAenyB,EAAamyB,GAAgB,GAC0BC,EAAOC,GAqC1Fa,CADmB93B,IAAoB03B,EAAOC,gBAAkB,GAAK,GACD/1C,EAAQo1C,EAAOC,GAC5E,IAEC,EAjBJS,EAAOE,kBACTF,EAASA,EAAOE,iBAClB,IAAIG,GAAqB,EACzB,GAAIL,EAAOM,aAAeN,EAAOM,YAAYC,MAAO,CAClD,IAAIC,EAAeR,EAAOM,YAAYC,MAAME,aAAa,MACzDJ,EAAyC,IAApBG,EAAa,IAAgC,IAApBA,EAAa,IAAYA,EAAa,KAAOR,EAAOV,OAASkB,EAAa,KAAOR,EAAOT,OAc1I,OAZES,EAAOV,MAAQA,EACfU,EAAOT,OAASA,EACZc,GACFL,EAAOM,YAAYC,MAAMG,SAAS,EAAG,EAAGpB,EAAOC,GAS5C,EAET,SAASoB,GAAgDz2C,EAAQo1C,EAAOC,GACtE,OAAI51B,EACKomB,GAAoC,EAAG,EAAG7lC,EAAQo1C,EAAOC,GAC3DQ,GAAmD71C,EAAQo1C,EAAOC,GA0D3E,IAAIqB,GAAK,CAAEC,QAAS,EAAGC,QAAS,GAAIC,SAAU,GAAIC,aAAc,GAAIC,cAAe,GAAIC,SAAU,GAAIC,SAAU,GAAIC,QAAS,GAAIC,KAAM,GAAIC,SAAU,GAAIC,kBAAmB,GAAIC,gBAAiB,GAAIC,aAAc,GAAIC,YAAa,GAAIC,gBAAiB,EAAGC,YAAa,SAAqBC,GACtRjB,GAAGkB,YACNlB,GAAGkB,UAAYD,IAEhBE,SAAU,SAASC,GAEpB,IADA,IAAI1gC,EAAMs/B,GAAGC,UACJz2C,EAAI43C,EAAM33C,OAAQD,EAAIkX,EAAKlX,IAClC43C,EAAM53C,GAAK,KAEb,OAAOkX,GACN2gC,UAAW,SAASC,EAAQhwB,EAAOrX,EAAQxQ,GAE5C,IADA,IAAI83C,EAAS,GACJ/3C,EAAI,EAAGA,EAAI8nB,IAAS9nB,EAAG,CAC9B,IAAI6J,EAAM5J,EAASie,IAAoBje,EAAa,EAAJD,GAAS,IAAM,EAC/D+3C,GAAUj1B,EAAa5E,IAAoBzN,EAAa,EAAJzQ,GAAS,GAAI6J,EAAM,OAAI,EAASA,GAEtF,OAAOkuC,GACNC,cAAe,SAASpC,EAAQqC,GACjC,IAAIC,EAAMtC,EAAOuC,WAAW,QAASF,GACrC,OAAKC,EAEQ1B,GAAG4B,gBAAgBF,EAAKD,GAD5B,GAGRG,gBAAiB,SAASF,EAAKD,GAChC,IAAIzwC,EAAS6hB,GAAQ,GACrBnL,IAAoB1W,EAAS,GAAK,GAAK6iB,KACvC,IAAIjoB,EAAU,CAAEoF,OAAAA,EAAQ6wC,WAAYJ,EAAwBtsC,QAASssC,EAAuBK,aAAcnC,MAAO+B,GAOjH,OANIA,EAAItC,SACNsC,EAAItC,OAAOM,YAAc9zC,GAC3Bo0C,GAAGU,SAAS1vC,GAAUpF,QAC0C,IAArD61C,EAAuBM,2BAA6CN,EAAuBM,4BACpG/B,GAAGgC,eAAep2C,GAEboF,GACNixC,mBAAoB,SAASC,GAG9B,OAFAlC,GAAGmC,eAAiBnC,GAAGU,SAASwB,GAChCh6B,EAAOw5B,IAAM/B,GAAQK,GAAGmC,gBAAkBnC,GAAGmC,eAAexC,QACnDuC,IAAkBvC,KAC1BgC,WAAY,SAASO,GACtB,OAAOlC,GAAGU,SAASwB,IAClBE,cAAe,SAASF,GACrBlC,GAAGmC,iBAAmBnC,GAAGU,SAASwB,KACpClC,GAAGmC,eAAiB,MACE,iBAAbxG,IACTA,GAASqB,0BAA0BgD,GAAGU,SAASwB,GAAevC,MAAMP,QAClEY,GAAGU,SAASwB,IAAkBlC,GAAGU,SAASwB,GAAevC,MAAMP,SACjEY,GAAGU,SAASwB,GAAevC,MAAMP,OAAOM,iBAAc,GACxDlrB,GAAMwrB,GAAGU,SAASwB,GAAelxC,QACjCgvC,GAAGU,SAASwB,GAAiB,MAC5BF,eAAgB,SAASp2C,GAG1B,GAFKA,IACHA,EAAUo0C,GAAGmC,iBACXv2C,EAAQy2C,mBAAZ,CAEAz2C,EAAQy2C,oBAAqB,EAC7B,IA1DuCX,EA0DnCY,EAAS12C,EAAQ+zC,OApGvB,SAA+C+B,GAC7C,IAAI3gC,EAAM2gC,EAAIa,aAAa,0BACvBxhC,IACF2gC,EAAyB,oBAAI,SAASzG,EAAOuH,GAC3CzhC,EAA8B,yBAAEk6B,EAAOuH,IAEzCd,EAAyB,oBAAI,SAASxlB,EAAMumB,EAAOnxB,EAAOoxB,GACxD3hC,EAA8B,yBAAEmb,EAAMumB,EAAOnxB,EAAOoxB,IAEtDhB,EAA2B,sBAAI,SAASxlB,EAAM5K,EAAOtkB,EAAM21C,EAASD,GAClE3hC,EAAgC,2BAAEmb,EAAM5K,EAAOtkB,EAAM21C,EAASD,KA2FlEE,CAAsCN,GAtFxC,SAAgDZ,GAC9C,IAAI3gC,EAAM2gC,EAAIa,aAAa,2BACvBxhC,IACF2gC,EAAuB,kBAAI,WACzB,OAAO3gC,EAA0B,wBAEnC2gC,EAAuB,kBAAI,SAASmB,GAClC9hC,EAA0B,qBAAE8hC,IAE9BnB,EAAqB,gBAAI,SAASmB,GAChC9hC,EAAwB,mBAAE8hC,IAE5BnB,EAAmB,cAAI,SAASmB,GAC9B,OAAO9hC,EAAsB,iBAAE8hC,KA0EnCC,CAAuCR,GArEzC,SAA2CZ,GACzC,IAAI3gC,EAAM2gC,EAAIa,aAAa,sBACvBxhC,IACF2gC,EAAiB,YAAI,SAAS7lC,EAAGknC,GAC/BhiC,EAAsB,iBAAElF,EAAGknC,KAkE/BC,CAAkCV,GAClCA,EAAOW,sBAAwBX,EAAOC,aAAa,6BA9DZb,EA+DPY,GA9DlBY,eAAiBxB,EAAIa,aAAa,oBA+DhD,IAAIY,EAAiC,CAAC,oBAAqB,yBAA0B,2BAA4B,0BAA2B,gCAAiC,sBAAuB,yBAA0B,iCAAkC,iBAAkB,qBAAsB,yBAA0B,2BAA4B,gCAAiC,mBAAoB,yBAA0B,qBAAsB,iCAAkC,8BAA+B,2BAA4B,WAAY,gCAAiC,2BAA4B,+BAAgC,gCAAiC,yBAA0B,qCAAsC,kCAAmC,0CAClwBb,EAAOc,0BAA4B,IACzCv1C,SAAQ,SAASkT,IACgC,GAAhDoiC,EAA+BnnC,QAAQ+E,IACzCuhC,EAAOC,aAAaxhC,QAGvBsiC,qBAAsB,SAASC,GAKhC,IAJA,IAAI9qB,EAAIwnB,GAAGG,SAASmD,GAChBC,EAASvD,GAAGa,aAAayC,GAAW,CAAE/C,SAAU,GAAIiD,iBAAkB,EAAGC,oBAAqB,EAAGC,2BAA4B,GAC7HC,EAASJ,EAAOhD,SAChBqD,EAAcjE,GAAMkE,oBAAoBrrB,EAAG,OACtChvB,EAAI,EAAGA,EAAIo6C,IAAep6C,EAAG,CACpC,IAAIojB,EAAI+yB,GAAMmE,iBAAiBtrB,EAAGhvB,GAC9ByyB,EAAQrP,EAAE/c,KACd0zC,EAAOC,iBAAmB1tC,KAAKmL,IAAIsiC,EAAOC,iBAAkBvnB,EAAMxyB,OAAS,GACpD,KAAnBwyB,EAAMtrB,OAAO,KACfsrB,EAAQA,EAAMtrB,MAAM,EAAGsrB,EAAMhgB,YAAY,OAE3C,IAAIhL,EAAM0uC,GAAMoE,mBAAmBvrB,EAAGyD,GACtC,GAAIhrB,EAAK,CACP,IAAI+d,EAAKgxB,GAAGmB,SAASnB,GAAGO,UACxBoD,EAAO1nB,GAAS,CAACrP,EAAE/R,KAAMmU,GACzBgxB,GAAGO,SAASvxB,GAAM/d,EAClB,IAAK,IAAIyL,EAAI,EAAGA,EAAIkQ,EAAE/R,OAAQ6B,EAAG,CAC/B,IAAIb,EAAIogB,EAAQ,IAAMvf,EAAI,IAC1BzL,EAAM0uC,GAAMoE,mBAAmBvrB,EAAG3c,GAClCmT,EAAKgxB,GAAGmB,SAASnB,GAAGO,UACpBP,GAAGO,SAASvxB,GAAM/d,OAKtB+yC,GAAuC,CAAC,UAAW,YAAa,oBAkBhEC,GAAM,GAIV,SAASC,KACP,IAAKA,GAAcC,QAAS,CAC1B,IACIlvC,EAAM,CAAEmvC,KAAQ,WAAYC,QAAW,WAAY1sB,KAAQ,IAAK2sB,IAAO,IAAKC,KAAQ,iBAAkBC,MADzE,iBAAdhyB,WAA0BA,UAAUiyB,WAAajyB,UAAUiyB,UAAU,IAAM,KAAK5/B,QAAQ,IAAK,KAAO,SACC6/B,EALnHl8B,GAAe,kBAMpB,IAAK,IAAIhJ,KAAKykC,GACZhvC,EAAIuK,GAAKykC,GAAIzkC,GAEf,IAAI2kC,EAAU,GACd,IAAK,IAAI3kC,KAAKvK,EACZkvC,EAAQl1C,KAAKuQ,EAAI,IAAMvK,EAAIuK,IAE7B0kC,GAAcC,QAAUA,EAE1B,OAAOD,GAAcC,QAEvB,SAASQ,GAAaC,EAAWC,GAC/B,GAAI97B,EACF,OAAOomB,GAAoC,EAAG,EAAGyV,EAAWC,GAC9D,IACE,IAAIC,EAAU,EAOd,OANAZ,KAAgBr2C,SAAQ,SAASoM,EAAQzQ,GACvC,IAAI+iB,EAAMs4B,EAAcC,EACxBp9B,IAAoBk9B,EAAgB,EAAJp7C,GAAS,GAAK+iB,EAlsJpD,SAA4BlP,EAAKqd,EAASqqB,GACxC,IAAK,IAAIv7C,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAChCwd,IAAmB0T,KAAa,GAAKrd,EAAIzG,WAAWpN,GAEjDu7C,IACH/9B,IAAmB0T,GAAW,GAAK,GA8rJjCsqB,CAAmB/qC,EAAQsS,GAC3Bu4B,GAAW7qC,EAAOxQ,OAAS,KAEtB,EACP,MAAOkJ,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAGb,SAAS6hB,GAAmBC,EAAgBC,GAC1C,GAAIp8B,EACF,OAAOomB,GAAoC,EAAG,EAAG+V,EAAgBC,GACnE,IACE,IAAIhB,EAAUD,KACdx8B,IAAoBw9B,GAAkB,GAAKf,EAAQ16C,OACnD,IAAIq7C,EAAU,EAKd,OAJAX,EAAQt2C,SAAQ,SAASoM,GACvB6qC,GAAW7qC,EAAOxQ,OAAS,KAE7Bie,IAAoBy9B,GAAqB,GAAKL,EACvC,EACP,MAAOnyC,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAGb,SAASgiB,GAAUlqB,GACjB,GAAInS,EACF,OAAOomB,GAAoC,EAAG,EAAGjU,GACnD,IACE,IAAIf,EAASiT,GAASyB,gBAAgB3T,GAEtC,OADA/B,GAAGqB,MAAML,GACF,EACP,MAAOxnB,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAGb,SAASiiB,GAASnqB,EAAIqT,EAAKC,EAAQ8W,GACjC,GAAIv8B,EACF,OAAOomB,GAAoC,EAAG,EAAGjU,EAAIqT,EAAKC,EAAQ8W,GACpE,IACE,IAAInrB,EAASiT,GAASyB,gBAAgB3T,GAClChkB,EAAMk2B,GAASkB,QAAQnU,EAAQoU,EAAKC,GAExC,OADA9mB,IAAoB49B,GAAQ,GAAKpuC,EAC1B,EACP,MAAOvE,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAGb,SAASmiB,GAASrqB,EAAIsqB,EAAYC,EAAa9lB,EAAQ+lB,GACrD,GAAI38B,EACF,OAAOomB,GAAoC,EAAG,EAAGjU,EAAIsqB,EAAYC,EAAa9lB,EAAQ+lB,GACxF,IACE,IAAIvrB,EAASiT,GAASyB,gBAAgB3T,GAElCtjB,EADc,WACL6tC,GAA6BD,IAAe,GACrDG,EAAe,iBACnB,OAAI/tC,IAAW+tC,GAAgB/tC,GAAU+tC,GAC/B,IAEVxsB,GAAG2D,OAAO3C,EAAQviB,EAAQ+nB,GAC1B/P,GAAU,CAACuK,EAAOsF,WAAa,GAAI9P,GAAawK,EAAOsF,UAAW3pB,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKjI,IAAoBg+B,GAAa,GAAK91B,GAAQ,GAAIlI,IAAoBg+B,EAAY,GAAK,GAAK91B,GAAQ,GACrWuK,EAAO4M,UAAuB,IAAXnvB,GAA2B,IAAX+nB,IACrCxF,EAAO4M,SAAW,MACb,GACP,MAAOp0B,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAGb,SAASwiB,GAAU1qB,EAAIqT,EAAKC,EAAQ8W,GAClC,GAAIv8B,EACF,OAAOomB,GAAoC,GAAI,EAAGjU,EAAIqT,EAAKC,EAAQ8W,GACrE,IACE,IAAInrB,EAASiT,GAASyB,gBAAgB3T,GAClChkB,EAAMk2B,GAASsB,SAASvU,EAAQoU,EAAKC,GAEzC,OADA9mB,IAAoB49B,GAAQ,GAAKpuC,EAC1B,EACP,MAAOvE,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,OAQb,SAAShO,GAAYywB,GACnB,GAAI98B,EACF,KAAM,sFACR,IAAIqL,EAAS1C,GAAQuE,eACrB,QAAuB,IAAnB7B,EAAOD,QACT,KAAM,kBACR,IAAK0xB,EAAaxwB,YAChB,KAAM,kCACR3D,GAAQW,eAAepjB,KAAKmlB,GAE5B,IADA,IAAIrB,EAAYF,GAAQ,KACfrpB,EAAI,EAAGA,EAAI,MAAOA,EACzBke,IAAoBqL,EAAgB,EAAJvpB,GAAS,GAAK,EAEhD,IAAIs8C,EAAYD,EAAanxB,UAAYmxB,EAAaE,UAClD5xB,EAAUzC,GAAQ2B,SAASwyB,EAAaxwB,aAAe,CAAEjB,OAAAA,EAAQM,UAAWmxB,EAAanxB,UAAWqxB,UAAWF,EAAaE,UAAWtxB,kBAAmBoxB,EAAapxB,kBAAmBE,OAAQkxB,EAAaxwB,YAAa3J,iBAAkBm6B,EAAaxwB,aAC3P2wB,EAAM7xB,EAAQzI,kBAAoB,EACtC8F,QAAQwB,MAAMpL,IAAqBo+B,IAAgB,GACnDx0B,QAAQwB,MAAMpL,IAAqBo+B,IAAgB,GACnDx0B,QAAQwB,MAAMpL,IAAqBo+B,IAAgB,GACnDx0B,QAAQwB,MAAMpL,IAAqBo+B,KAAiBH,EAAaI,UACjEz0B,QAAQwB,MAAMpL,IAAqBo+B,KAAkBjzB,GACrDvB,QAAQwB,MAAMpL,IAAqBo+B,KAAiB,GACpDx0B,QAAQwB,MAAMpL,IAAqBo+B,KAAiB7xB,EAAQzI,kBAC5D8F,QAAQwB,MAAMpL,IAAqBo+B,KAAiB,IACpDx0B,QAAQwB,MAAMpL,IAAqBo+B,KAAkBH,EAAaE,WAClEv0B,QAAQwB,MAAMpL,IAAqBo+B,KAAiBH,EAAaE,WACjEv0B,QAAQwB,MAAMpL,IAAqBo+B,KAAiBF,GACpDt0B,QAAQwB,MAAMpL,IAAqBo+B,KAAsBF,GACzDt0B,QAAQwB,MAAMpL,IAAqBo+B,KAAuBH,EAAaI,UACvEz0B,QAAQwB,MAAMpL,IAAqBo+B,KAAuBH,EAAa3zB,aACvEV,QAAQwB,MAAMpL,IAAqBo+B,KAAuBH,EAAa1zB,WACvE,IACI+zB,EADcC,KACgB,GAClC30B,QAAQwB,MAAMpL,IAAqBo+B,KAAkBE,GACrD9xB,EAAOD,QAAUA,EACjB,IAAIiyB,EAAM,CAAEryB,IAAO,MAAOsyB,cAAiBR,EAAaS,aAAcr+C,IAAO49C,EAAa59C,IAAKyjB,iBAAoBm6B,EAAaxwB,YAAakxB,aAAgBV,EAAaxwB,YAAamxB,eAAkBX,EAAaY,mBAAoB/xB,UAAamxB,EAAanxB,UAAWqxB,UAAaF,EAAaE,WACzS3xB,EAAOsB,WAAa,WAClB0wB,EAAIM,KAAOvyC,YAAYE,MACvB+f,EAAON,YAAYsyB,EAAKP,EAAac,eAEnCvyB,EAAOqB,SACTrB,EAAOsB,oBACAtB,EAAOsB,YAuBlB,SAAS7B,KACP,OAAuB,EAAhBjD,GAwET,SAASg2B,GAAaC,GACpB,OAAOA,EAAO,GAAM,IAAMA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,GAE/D,SAASC,GAAWpzC,EAAOunC,GAEzB,IADA,IAAI8L,EAAM,EACDv9C,EAAI,EAAGA,GAAKyxC,EAAO8L,GAAOrzC,EAAMlK,MAEzC,OAAOu9C,EA7ET7+B,EAAsB,cAAI2L,GA+E1B,IAAImzB,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjEC,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxE,SAASC,GAAUC,EAAMC,GAEvB,IADA,IAAIC,EAAU,IAAI3yC,KAAKyyC,EAAKxyC,WACrByyC,EAAO,GAAG,CACf,IAAIE,EAAOV,GAAaS,EAAQE,eAC5BC,EAAeH,EAAQI,WACvBC,GAAsBJ,EAAON,GAAoBC,IAAsBO,GAC3E,KAAIJ,EAAOM,EAAqBL,EAAQM,WAWtC,OADAN,EAAQO,QAAQP,EAAQM,UAAYP,GAC7BC,EAVPD,GAAQM,EAAqBL,EAAQM,UAAY,EACjDN,EAAQO,QAAQ,GACZJ,EAAe,GACjBH,EAAQQ,SAASL,EAAe,IAEhCH,EAAQQ,SAAS,GACjBR,EAAQS,YAAYT,EAAQE,cAAgB,IAOlD,OAAOF,EAET,SAASU,GAAUzvC,EAAG0vC,EAASC,EAAQC,GACrC,IAAIC,EAAUzgC,IAAoBwgC,EAAK,IAAM,GACzCf,EAAO,CAAEiB,OAAQ1gC,IAAoBwgC,GAAM,GAAIG,OAAQ3gC,IAAoBwgC,EAAK,GAAK,GAAII,QAAS5gC,IAAoBwgC,EAAK,GAAK,GAAIK,QAAS7gC,IAAoBwgC,EAAK,IAAM,GAAIM,OAAQ9gC,IAAoBwgC,EAAK,IAAM,GAAIO,QAAS/gC,IAAoBwgC,EAAK,IAAM,GAAIQ,QAAShhC,IAAoBwgC,EAAK,IAAM,GAAIS,QAASjhC,IAAoBwgC,EAAK,IAAM,GAAIU,SAAUlhC,IAAoBwgC,EAAK,IAAM,GAAIW,UAAWnhC,IAAoBwgC,EAAK,IAAM,GAAIC,QAASA,EAAU77B,EAAa67B,GAAW,IACreW,EAAUx8B,EAAa27B,GACvBc,EAAoB,CAAE,KAAM,uBAAwB,KAAM,WAAY,KAAM,WAAY,KAAM,KAAM,KAAM,cAAe,KAAM,QAAS,KAAM,WAAY,KAAM,WAAY,KAAM,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,WAAY,MAAO,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAC/b,IAAK,IAAIC,KAAQD,EACfD,EAAUA,EAAQjkC,QAAQ,IAAIokC,OAAOD,EAAM,KAAMD,EAAkBC,IAErE,IAAIE,EAAW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9EC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5H,SAASC,EAAiBjhD,EAAOkhD,EAAQC,GAEvC,IADA,IAAIjsC,EAAuB,iBAAVlV,EAAqBA,EAAM6Q,WAAa7Q,GAAS,GAC3DkV,EAAI5T,OAAS4/C,GAClBhsC,EAAMisC,EAAU,GAAKjsC,EAEvB,OAAOA,EAET,SAASksC,EAAaphD,EAAOkhD,GAC3B,OAAOD,EAAiBjhD,EAAOkhD,EAAQ,KAEzC,SAASG,EAAaC,EAAOC,GAC3B,SAASC,EAAIxhD,GACX,OAAOA,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,EAE1C,IAAImX,EAMJ,OALmE,KAA9DA,EAAUqqC,EAAIF,EAAMlC,cAAgBmC,EAAMnC,iBACgB,KAAxDjoC,EAAUqqC,EAAIF,EAAMhC,WAAaiC,EAAMjC,eAC1CnoC,EAAUqqC,EAAIF,EAAM9B,UAAY+B,EAAM/B,YAGnCroC,EAET,SAASsqC,EAAsBC,GAC7B,OAAQA,EAAUC,UAChB,KAAK,EACH,OAAO,IAAIp1C,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAOsC,EACT,KAAK,EACH,OAAO,IAAIn1C,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,KAGvD,SAASwC,EAAiBL,GACxB,IAAIM,EAAW9C,GAAU,IAAIxyC,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACjEsB,EAAoB,IAAIv1C,KAAKs1C,EAASzC,cAAe,EAAG,GACxD2C,EAAoB,IAAIx1C,KAAKs1C,EAASzC,cAAgB,EAAG,EAAG,GAC5D4C,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GACnD,OAAIV,EAAaW,EAAwBH,IAAa,EAChDR,EAAaY,EAAwBJ,IAAa,EAC7CA,EAASzC,cAAgB,EAEzByC,EAASzC,cAGXyC,EAASzC,cAAgB,EAGpC,IAAI8C,EAAoB,CAAE,KAAM,SAASX,GACvC,OAAOR,EAASQ,EAAMhB,SAAS4B,UAAU,EAAG,IAC3C,KAAM,SAASZ,GAChB,OAAOR,EAASQ,EAAMhB,UACrB,KAAM,SAASgB,GAChB,OAAOP,EAAOO,EAAMlB,QAAQ8B,UAAU,EAAG,IACxC,KAAM,SAASZ,GAChB,OAAOP,EAAOO,EAAMlB,SACnB,KAAM,SAASkB,GAEhB,OAAOH,GADIG,EAAMjB,QAAU,MACA,IAAM,EAAG,IACnC,KAAM,SAASiB,GAChB,OAAOH,EAAaG,EAAMnB,QAAS,IAClC,KAAM,SAASmB,GAChB,OAAON,EAAiBM,EAAMnB,QAAS,EAAG,MACzC,KAAM,SAASmB,GAChB,OAAOK,EAAiBL,GAAO1wC,WAAWsxC,UAAU,IACnD,KAAM,SAASZ,GAChB,OAAOK,EAAiBL,IACvB,KAAM,SAASA,GAChB,OAAOH,EAAaG,EAAMpB,QAAS,IAClC,KAAM,SAASoB,GAChB,IAAIa,EAAab,EAAMpB,QAKvB,OAJkB,GAAdiC,EACFA,EAAa,GACNA,EAAa,KACpBA,GAAc,IACThB,EAAagB,EAAY,IAC/B,KAAM,SAASb,GAChB,OAAOH,EAAaG,EAAMnB,QAAUzB,GAAWF,GAAa8C,EAAMjB,QAAU,MAAQzB,GAAoBC,GAAsByC,EAAMlB,OAAS,GAAI,IAChJ,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMlB,OAAS,EAAG,IACrC,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMrB,OAAQ,IACjC,KAAM,WACP,MAAO,MACN,KAAM,SAASqB,GAChB,OAAIA,EAAMpB,SAAW,GAAKoB,EAAMpB,QAAU,GACjC,KAEA,MAER,KAAM,SAASoB,GAChB,OAAOH,EAAaG,EAAMtB,OAAQ,IACjC,KAAM,WACP,MAAO,MACN,KAAM,SAASsB,GAChB,OAAOA,EAAMhB,SAAW,GACvB,KAAM,SAASgB,GAChB,IAAIc,EAAW,IAAI91C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAC7CgC,EAAoC,IAAtBD,EAASV,SAAiBU,EAAWtD,GAAUsD,EAAU,EAAIA,EAASV,UACpFY,EAAU,IAAIh2C,KAAKg1C,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAaiB,EAAaC,GAAW,EAAG,CAC1C,IAAIC,EAA6B7D,GAAWF,GAAa8D,EAAQnD,eAAiBP,GAAoBC,GAAsByD,EAAQjD,WAAa,GAAK,GAElJL,EAD6B,GAAKqD,EAAY9C,UACVgD,EAA6BD,EAAQ/C,UAC7E,OAAO4B,EAAazzC,KAAK4lB,KAAK0rB,EAAO,GAAI,GAE3C,OAA+C,IAAxCoC,EAAaiB,EAAaD,GAAkB,KAAO,MACzD,KAAM,SAASd,GAChB,IAWIkB,EAXAX,EAAoB,IAAIv1C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GACtDyB,EAAoB,IAAIx1C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GACtD0B,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GAC/CQ,EAAUxD,GAAU,IAAIxyC,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACpE,OAAIa,EAAakB,EAASP,GAA0B,EAC3C,KAELX,EAAaY,EAAwBM,IAAY,EAC5C,MAIPE,EADET,EAAuB5C,cAAgBmC,EAAMjB,QAAU,KACxCiB,EAAMf,QAAU,GAAKwB,EAAuBxC,UAE5C+B,EAAMf,QAAU,EAAIwB,EAAuBxC,UAEvD4B,EAAazzC,KAAK4lB,KAAKkvB,EAAiB,GAAI,KAClD,KAAM,SAASlB,GAChB,OAAOA,EAAMhB,SACZ,KAAM,SAASgB,GAChB,IAAIc,EAAW,IAAI91C,KAAKg1C,EAAMjB,QAAS,EAAG,GACtCoC,EAAoC,IAAtBL,EAASV,SAAiBU,EAAWtD,GAAUsD,EAAgC,IAAtBA,EAASV,SAAiB,EAAI,EAAIU,EAASV,SAAW,GAC7HY,EAAU,IAAIh2C,KAAKg1C,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAaqB,EAAaH,GAAW,EAAG,CAC1C,IAAIC,EAA6B7D,GAAWF,GAAa8D,EAAQnD,eAAiBP,GAAoBC,GAAsByD,EAAQjD,WAAa,GAAK,GAElJL,EAD6B,GAAKyD,EAAYlD,UACVgD,EAA6BD,EAAQ/C,UAC7E,OAAO4B,EAAazzC,KAAK4lB,KAAK0rB,EAAO,GAAI,GAE3C,OAA+C,IAAxCoC,EAAaqB,EAAaL,GAAkB,KAAO,MACzD,KAAM,SAASd,GAChB,OAAQA,EAAMjB,QAAU,MAAMzvC,WAAWsxC,UAAU,IAClD,KAAM,SAASZ,GAChB,OAAOA,EAAMjB,QAAU,MACtB,KAAM,SAASiB,GAChB,IAAI31C,EAAM21C,EAAMb,UACZiC,EAAQ/2C,GAAO,EAGnB,OADAA,GADAA,EAAM+B,KAAK+C,IAAI9E,GAAO,IACV,GAAK,IAAMA,EAAM,IACrB+2C,EAAQ,IAAM,KAAOzuC,OAAO,OAAStI,GAAKpD,OAAO,IACxD,KAAM,SAAS+4C,GAChB,OAAOA,EAAMvB,SACZ,KAAM,WACP,MAAO,MAET,IAAK,IAAIa,KAAQqB,EACXvB,EAAQ9sC,QAAQgtC,IAAS,IAC3BF,EAAUA,EAAQjkC,QAAQ,IAAIokC,OAAOD,EAAM,KAAMqB,EAAkBrB,GAAM7B,KAG7E,IAloK0BzzC,EAAOgnB,EAkoK7B7Z,EAAQwa,GAAmBytB,GAAS,GACxC,OAAIjoC,EAAMpX,OAASu+C,EACV,GApoKiBt0C,EAsoKPmN,EAtoKc6Z,EAsoKPpiB,EAroK1B0O,IAAmB5C,IAAI1Q,EAAOgnB,GAsoKvB7Z,EAAMpX,OAAS,GAKnBsf,GACH2I,GAAQY,sBACV,IA6CIqtB,GA7CApd,GAAS,SAASvG,EAAQC,EAAOC,EAAM7B,GACpC2B,IACHA,EAASrzB,MAEXA,KAAKqzB,OAASA,EACdrzB,KAAKmzB,MAAQE,EAAOF,MACpBnzB,KAAK84B,QAAU,KACf94B,KAAKqmB,GAAKmK,GAAGiH,YACbz3B,KAAKkH,KAAOosB,EACZtzB,KAAKuzB,KAAOA,EACZvzB,KAAK2zB,SAAW,GAChB3zB,KAAKuxB,WAAa,GAClBvxB,KAAK0xB,KAAOA,GAEV0wB,GAAW,IACXC,GAAY,IAChBlhD,OAAOkhC,iBAAiBzI,GAAOp4B,UAAW,CAAEuN,KAAM,CAAE8Y,IAAK,WACvD,OAAQ7nB,KAAKuzB,KAAO6uB,MAAcA,IACjC3mC,IAAK,SAAS3J,GACfA,EAAM9R,KAAKuzB,MAAQ6uB,GAAWpiD,KAAKuzB,OAAQ,MACxCxjB,MAAO,CAAE8X,IAAK,WACjB,OAAQ7nB,KAAKuzB,KAAO8uB,MAAeA,IAClC5mC,IAAK,SAAS3J,GACfA,EAAM9R,KAAKuzB,MAAQ8uB,GAAYriD,KAAKuzB,OAAQ,MACzCsN,SAAU,CAAEhZ,IAAK,WACpB,OAAO2I,GAAGoE,MAAM50B,KAAKuzB,QAClBqN,SAAU,CAAE/Y,IAAK,WACpB,OAAO2I,GAAGyE,SAASj1B,KAAKuzB,UAE1B/C,GAAGoJ,OAASA,GACZpJ,GAAGkP,aACHngB,EAAsB,cAAIiR,GAAG8P,WAC7B/gB,EAA0B,kBAAIiR,GAAGkQ,eACjCnhB,EAA+B,uBAAIiR,GAAG8R,oBACtC/iB,EAA0B,kBAAIiR,GAAGsQ,eACjCvhB,EAAwB,gBAAIiR,GAAG4O,aAC/B7f,EAAkB,UAAIiR,GAAGuD,OACzB4T,GAAgBpoB,EAAsB,cAAIgoB,GAAY/jC,MAAO,iBAhuE7D,WAEE,IADA,IAAI8+C,EAAQ,IAAIn2C,MAAM,KACbtL,EAAI,EAAGA,EAAI,MAAOA,EACzByhD,EAAMzhD,GAAK6S,OAAOsC,aAAanV,GAEjC8nC,GAAmB2Z,EA4tErBC,GACA1Z,GAAetpB,EAAqB,aAAIgoB,GAAY/jC,MAAO,gBA/hEzD6lC,GAAY7nC,UAAqB,UAAI2nC,GACrCE,GAAY7nC,UAAiB,MAAImpC,GACjCtB,GAAY7nC,UAAkB,OAAIwpC,GAClC3B,GAAY7nC,UAAqB,UAAIypC,GACrC5B,GAAY7nC,UAAuB,YAAI6pC,GAyRvC0D,GAAkBvtC,UAAU8sC,WAAajB,GACzC0B,GAAkBvtC,UAAU4sB,WAAamf,GACzCwB,GAAkBvtC,UAA0B,eAAI,EAChDutC,GAAkBvtC,UAAgC,qBAAIulC,GACtDgI,GAAkBvtC,UAAwB,aAAIgsC,GAC9CuB,GAAkBvtC,UAAwB,aAAI4sC,GApF9C7uB,EAAkC,0BAAIouB,GACtCpuB,EAAkC,0BAAIsuB,GACtCtuB,EAA4B,oBAAI6rB,GAChC7rB,EAAyB,iBAAIwuB,GAk1D/ByB,GAAmBjwB,EAAyB,iBAAIgoB,GAAY/jC,MAAO,oBAv8CjE+b,EAA4B,oBAAIiyB,GAChCjyB,EAAwB,gBAAIkyB,GAy8C9B,IAAI+Q,GAAuB,CAAC,KAhmJ5B,SAAiB56B,EAAMtoB,GACrB,GAAI8gB,EACF,OAAOomB,GAAoC,EAAG,EAAG5e,EAAMtoB,IA8lJhBgnC,GAAcI,GAAa0Q,GAAiD4E,GAAcM,GAAoBG,GAAWC,GAAUE,GAAUK,IACxL,SAASvqB,GAAmB+vB,EAASrG,EAAat7C,GAChD,IAAI4J,EAAM5J,EAAS,EAAIA,EAASsjB,GAAgBq+B,GAAW,EACvDC,EAAU,IAAIv2C,MAAMzB,GACpBi4C,EAAkB9+B,EAAkB4+B,EAASC,EAAS,EAAGA,EAAQ5hD,QAGrE,OAFIs7C,IACFsG,EAAQ5hD,OAAS6hD,GACZD,EAEJtiC,GACH2F,GAAWzf,KAAK,CAAEshB,KAAM,WACtBg7B,QAEJ,IAAIC,GAAgB,CAAEhzB,EAvpJtB,SAAwB5M,EAAWlC,EAAU+hC,EAAMl7B,GACjD/E,GAAM,qBAAuBc,EAAaV,GAAa,SAAW,CAAClC,EAAW4C,EAAa5C,GAAY,mBAAoB+hC,EAAMl7B,EAAOjE,EAAaiE,GAAQ,sBAspJpHm7B,EAhnJ3C,SAAmC7wC,GACjC,OAAOgY,GAAQhY,EAAO4b,IAA2BA,IA+mJwBk1B,EAxjJ3E,SAAsBp/B,EAAKvf,EAAM+pB,GAK/B,MAJW,IAAIL,GAAcnK,GACxB7V,KAAK1J,EAAM+pB,GAGVxK,GAmjJsFq/B,GAAM3c,GAAc4c,GAAMxc,GAAayc,GA72ErI,SAAuCC,GACrC,IAAIC,EAAM1c,GAAmByc,UACtBzc,GAAmByc,GAC1B,IAAIE,EAAWD,EAAIC,SACfC,EAAiBD,EAASxiD,OAC1B0iD,EAAeF,EAAStT,KAAI,SAASyT,GACvC,OAAOA,EAAIC,oBACVn5C,OAAO+4C,EAAStT,KAAI,SAASyT,GAC9B,OAAOA,EAAIE,uBAET7W,EAAiBuW,EAAIvW,eACrBzC,EAAgBgZ,EAAIhZ,cACxBxC,GAA8B,CAACub,GAAeI,GAAc,SAASI,GAiBnE,OAhBAN,EAASp+C,SAAQ,SAASu+C,EAAK5iD,GAC7B,IAAI6iD,EAAmBE,EAAc/iD,GACjCwgC,EAASoiB,EAAIpiB,OACbwiB,EAAgBJ,EAAII,cACpBF,EAAqBC,EAAc/iD,EAAI0iD,GACvCO,EAASL,EAAIK,OACbC,EAAgBN,EAAIM,cACxBN,EAAI10C,KAAO,SAAS6U,GAClB,OAAO8/B,EAA+B,aAAEriB,EAAOwiB,EAAejgC,KAEhE6/B,EAAI1zC,MAAQ,SAAS6T,EAAKinB,GACxB,IAAIhE,EAAc,GAClBid,EAAOC,EAAengC,EAAK+/B,EAA+B,WAAE9c,EAAagE,IACzEjE,GAAeC,OAGZ,CAAC,CAAE3/B,KAAMm8C,EAAIn8C,KAAM88C,aAAgB,SAASpgC,GAEjD,IADA,IAAI8pB,EAAK,IAAIvhC,MAAMo3C,GACV1iD,EAAI,EAAGA,EAAI0iD,IAAkB1iD,EACpC6sC,EAAG7sC,GAAKyiD,EAASziD,GAAGkO,KAAK6U,GAG3B,OADAymB,EAAczmB,GACP8pB,GACNuW,WAAc,SAASpd,EAAagE,GACrC,GAAI0Y,IAAmB1Y,EAAE/pC,OACvB,MAAM,IAAIL,UAAU,0CAA4C4iD,EAAIn8C,KAAO,cAAgBq8C,EAAiB,YAAc1Y,EAAE/pC,QAG9H,IADA,IAAI8iB,EAAMkpB,IACDjsC,EAAI,EAAGA,EAAI0iD,IAAkB1iD,EACpCyiD,EAASziD,GAAGkP,MAAM6T,EAAKinB,EAAEhqC,IAK3B,OAHoB,OAAhBgmC,GACFA,EAAYvgC,KAAK+jC,EAAezmB,GAE3BA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB3E,QA6zEsErQ,EAzzE1K,SAAwCoqB,GACtC,IAAIf,EAAM5a,GAAoB2b,UACvB3b,GAAoB2b,GAC3B,IAAItX,EAAiBuW,EAAIvW,eACrBzC,EAAgBgZ,EAAIhZ,cACpBga,EAAehB,EAAIiB,OAMvBzc,GAA8B,CAACuc,GALdC,EAAarU,KAAI,SAASuU,GACzC,OAAOA,EAAMb,oBACZn5C,OAAO85C,EAAarU,KAAI,SAASuU,GAClC,OAAOA,EAAMZ,wBAEyC,SAASa,GAC/D,IAAIF,EAAS,GAiBb,OAhBAD,EAAan/C,SAAQ,SAASq/C,EAAO1jD,GACnC,IAAI4jD,EAAYF,EAAME,UAClBf,EAAmBc,EAAY3jD,GAC/BwgC,EAASkjB,EAAMljB,OACfwiB,EAAgBU,EAAMV,cACtBF,EAAqBa,EAAY3jD,EAAIwjD,EAAavjD,QAClDgjD,EAASS,EAAMT,OACfC,EAAgBQ,EAAMR,cAC1BO,EAAOG,GAAa,CAAE11C,KAAM,SAAS6U,GACnC,OAAO8/B,EAA+B,aAAEriB,EAAOwiB,EAAejgC,KAC7D7T,MAAO,SAAS6T,EAAKinB,GACtB,IAAIhE,EAAc,GAClBid,EAAOC,EAAengC,EAAK+/B,EAA+B,WAAE9c,EAAagE,IACzEjE,GAAeC,QAGZ,CAAC,CAAE3/B,KAAMm8C,EAAIn8C,KAAM88C,aAAgB,SAASpgC,GACjD,IAAI8pB,EAAK,GACT,IAAK,IAAI7sC,KAAKyjD,EACZ5W,EAAG7sC,GAAKyjD,EAAOzjD,GAAGkO,KAAK6U,GAGzB,OADAymB,EAAczmB,GACP8pB,GACNuW,WAAc,SAASpd,EAAagE,GACrC,IAAK,IAAI4Z,KAAaH,EACpB,KAAMG,KAAa5Z,GACjB,MAAM,IAAIpqC,UAAU,oBAAsBgkD,EAAY,KAG1D,IAAI7gC,EAAMkpB,IACV,IAAK2X,KAAaH,EAChBA,EAAOG,GAAW10C,MAAM6T,EAAKinB,EAAE4Z,IAKjC,OAHoB,OAAhB5d,GACFA,EAAYvgC,KAAK+jC,EAAezmB,GAE3BA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB3E,QAuwE2Gqa,GAxsE/M,SAAgC3b,EAASzV,EAAOphB,EAAMyyC,EAAWC,GAC/D,IAAIj9B,EAAQ+gB,GAAiBx2B,GAE7Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAASa,GAC5D,QAASA,GACRZ,WAAc,SAASpd,EAAagE,GACrC,OAAOA,EAAI8Z,EAAYC,GACtBV,eAAkB,EAAGC,qBAAwB,SAASnd,GACvD,IAAI7jB,EACJ,GAAa,IAATjR,EACFiR,EAAO9E,SACF,GAAa,IAATnM,EACTiR,EAAOxE,QACF,CAAA,GAAa,IAATzM,EAGT,MAAM,IAAIzR,UAAU,8BAAgC6yB,GAFpDnQ,EAAOpE,IAIT,OAAO/e,KAAmB,aAAEmjB,EAAK6jB,IAAYrf,KAC5CqnB,mBAAoB,QAqrEoN8V,EAxrD7O,SAAiC/b,EAASgc,EAAgBC,EAAqBC,EAAkBC,EAAwBhZ,EAAeiZ,EAAiBrb,EAAQsb,EAAmBjZ,EAAU7Y,EAAO+xB,EAAqBhb,GACxN/W,EAAQsV,GAAiBtV,GACzB4Y,EAAgBgD,GAAwBgW,EAAwBhZ,GAC5DpC,IACFA,EAASoF,GAAwBiW,EAAiBrb,IAEhDqC,IACFA,EAAW+C,GAAwBkW,EAAmBjZ,IAExD9B,EAAgB6E,GAAwBmW,EAAqBhb,GAC7D,IAAIib,EAAoBle,GAAsB9T,GAC9CwY,GAAmBwZ,GAAmB,WACpC3V,GAAsB,oBAAsBrc,EAAQ,wBAAyB,CAAC2xB,OAEhFpd,GAA8B,CAACkB,EAASgc,EAAgBC,GAAsBC,EAAmB,CAACA,GAAoB,IAAI,SAASM,GAEjI,IAAI1b,EACA2b,EAFJD,EAAOA,EAAK,GAKVC,EAFEP,GACFpb,EAAY0b,EAAK9b,iBACSwC,kBAEV5C,GAAY7nC,UAE9B,IAAIyF,EAAcogC,GAAoBie,GAAmB,WACvD,GAAInkD,OAAO0D,eAAe7E,QAAUisC,EAClC,MAAM,IAAIpD,GAAa,0BAA4BvV,GAErD,QAAyC,IAArCmW,EAAgBgc,iBAClB,MAAM,IAAI5c,GAAavV,EAAQ,kCAEjC,IAAIgU,EAAOmC,EAAgBgc,iBAAiBvlD,UAAUY,QACtD,QAAa,IAATwmC,EACF,MAAM,IAAIuB,GAAa,2BAA6BvV,EAAQ,uCAAyCpzB,UAAUY,OAAS,iBAAmBK,OAAOsG,KAAKgiC,EAAgBgc,kBAAkBp1C,WAAa,yBAExM,OAAOi3B,EAAKnnC,MAAMH,KAAME,cAEtB+rC,EAAoB9qC,OAAO6B,OAAOwiD,EAAe,CAAEv+C,YAAa,CAAEzH,MAAOyH,KAC7EA,EAAYzF,UAAYyqC,EACxB,IAAIxC,EAAkB,IAAIuC,GAAgB1Y,EAAOrsB,EAAaglC,EAAmB5B,EAAeR,EAAWqC,EAAepC,EAAQqC,GAC9HuZ,EAAqB,IAAI3W,GAAkBzb,EAAOmW,GAAiB,GAAM,GAAO,GAChFkc,EAAmB,IAAI5W,GAAkBzb,EAAQ,IAAKmW,GAAiB,GAAO,GAAO,GACrFmc,EAAwB,IAAI7W,GAAkBzb,EAAQ,UAAWmW,GAAiB,GAAO,GAAM,GAGnG,OAFA6B,GAAmBvC,GAAW,CAAE8F,YAAa8W,EAAkB/W,iBAAkBgX,GACjF3W,GAAoBqW,EAAmBr+C,GAChC,CAACy+C,EAAoBC,EAAkBC,OA2oDyN9uC,EAjoD3Q,SAA6C+uC,EAAcha,EAAUia,EAAiBC,EAAkBC,EAASlZ,GAC/G7rB,EAAO4qB,EAAW,GAClB,IAAIoa,EAAchW,GAAoBpE,EAAUia,GAChDE,EAAU9W,GAAwB6W,EAAkBC,GACpD,IAAI/lD,EAAO,CAAC6sC,GACRjG,EAAc,GAClBgB,GAA8B,GAAI,CAACge,IAAe,SAASxV,GAEzD,IAAI3E,EAAY,gBADhB2E,EAAYA,EAAU,IACqBnpC,KAI3C,QAHmD,IAA/CmpC,EAAU5G,gBAAgBgc,mBAC5BpV,EAAU5G,gBAAgBgc,iBAAmB,SAEkB,IAA7DpV,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GACxD,MAAM,IAAIhD,GAAa,+EAAiFgD,EAAW,GAAK,gBAAkBwE,EAAUnpC,KAAO,uGAqB7J,OAnBAmpC,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GAAK,WACzD8D,GAAsB,oBAAsBU,EAAUnpC,KAAO,wBAAyB++C,IAExFpe,GAA8B,GAAIoe,GAAa,SAAS7V,GActD,OAbAC,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GAAK,WACrD3rC,UAAUY,SAAW+qC,EAAW,GAClC/C,GAAkB4C,EAAY,gBAAkBxrC,UAAUY,OAAS,yBAA2B+qC,EAAW,IAE3GhF,EAAY/lC,OAAS,EACrBb,EAAKa,OAAS+qC,EACd,IAAK,IAAIhrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAC9BZ,EAAKY,GAAKuvC,EAASvvC,GAAe,WAAEgmC,EAAa3mC,UAAUW,EAAI,IAEjE,IAAI+iB,EAAMoiC,EAAQ7lD,MAAM,KAAMF,GAE9B,OADA2mC,GAAeC,GACRuJ,EAAS,GAAiB,aAAExsB,IAE9B,MAEF,OA+lD0S5Z,EArhDrT,SAA0C67C,EAAcpa,EAAYI,EAAUia,EAAiBC,EAAkBG,EAAYjjD,EAASkjD,GACpI,IAAIF,EAAchW,GAAoBpE,EAAUia,GAChDra,EAAa7C,GAAiB6C,GAC9Bya,EAAahX,GAAwB6W,EAAkBG,GACvDre,GAA8B,GAAI,CAACge,IAAe,SAASxV,GAEzD,IAAI3E,GADJ2E,EAAYA,EAAU,IACInpC,KAAO,IAAMukC,EAIvC,SAAS2a,IACPzW,GAAsB,eAAiBjE,EAAY,wBAAyBua,GAJ1EE,GACF9V,EAAU5G,gBAAgB2C,qBAAqB9lC,KAAKmlC,GAKtD,IAAID,EAAQ6E,EAAU5G,gBAAgBwC,kBAClC3oC,EAASkoC,EAAMC,GAmBnB,YAlBe,IAAXnoC,QAA8C,IAAzBA,EAAOqoC,eAA4BroC,EAAO+iD,YAAchW,EAAUnpC,MAAQ5D,EAAOuoC,WAAaA,EAAW,GAChIua,EAAoBva,SAAWA,EAAW,EAC1Cua,EAAoBC,UAAYhW,EAAUnpC,KAC1CskC,EAAMC,GAAc2a,IAEpB7a,GAAoBC,EAAOC,EAAYC,GACvCF,EAAMC,GAAYE,cAAcE,EAAW,GAAKua,GAElDve,GAA8B,GAAIoe,GAAa,SAAS7V,GACtD,IAAIkW,EAAiBnW,GAAqBzE,EAAW0E,EAAUC,EAAW6V,EAAYjjD,GAOtF,YANwC,IAApCuoC,EAAMC,GAAYE,eACpB2a,EAAeza,SAAWA,EAAW,EACrCL,EAAMC,GAAc6a,GAEpB9a,EAAMC,GAAYE,cAAcE,EAAW,GAAKya,EAE3C,MAEF,OAo/CiVC,GA/7C5V,SAAiCxd,EAASzV,GAExC8U,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAAS37C,GAC5D,IAAIqlC,EAAK4D,GAAmBjpC,GAAQ7I,MAEpC,OADA+xC,GAAelpC,GACRqlC,GACNuW,WAAc,SAASpd,EAAarnC,GACrC,OAAO2tC,GAAiB3tC,IACvB0kD,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,QAu7CyRpT,GAh6C3X,SAAgCmN,EAASzV,EAAOphB,EAAMs0C,GACpD,IAAI7+B,EAAQ+gB,GAAiBx2B,GAE7B,SAASlL,KADTssB,EAAQsV,GAAiBtV,GAGzBtsB,EAAKjC,OAAS,GACdqjC,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAOrsB,YAAaD,EAAMg9C,aAAgB,SAASh0C,GAC/E,OAAOhQ,KAAKiH,YAAYlC,OAAOiL,IAC9Bi0C,WAAc,SAASpd,EAAa72B,GACrC,OAAOA,EAAExQ,OACR0kD,eAAkB,EAAGC,qBAAwBzS,GAAyBpe,EAAO3L,EAAO6+B,GAAWxX,mBAAoB,OACtHlD,GAAmBxY,EAAOtsB,IAq5C6Xy/C,EA54CzZ,SAAsCC,EAAapzB,EAAOqzB,GACxD,IAAIC,EAAWhV,GAAsB8U,EAAa,QAClDpzB,EAAQsV,GAAiBtV,GACzB,IAAIuzB,EAAOD,EAAS3/C,YAChB6/C,EAAS3lD,OAAO6B,OAAO4jD,EAAS3/C,YAAYzF,UAAW,CAAEhC,MAAO,CAAEA,MAAOmnD,GAAa1/C,YAAa,CAAEzH,MAAO6nC,GAAoBuf,EAAS1/C,KAAO,IAAMosB,GAAO,kBAEjKuzB,EAAK9hD,OAAO4hD,GAAaG,EACzBD,EAAKvzB,GAASwzB,GAq4C4aC,EA12C5b,SAAiChe,EAASzV,EAAOphB,GAC/C,IAAIyV,EAAQ+gB,GAAiBx2B,GAE7Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAASxkD,GAC5D,OAAOA,GACNykD,WAAc,SAASpd,EAAarnC,GACrC,GAAqB,iBAAVA,GAAuC,kBAAVA,EACtC,MAAM,IAAIiB,UAAU,mBAAqBisC,GAAaltC,GAAS,QAAUQ,KAAKkH,MAEhF,OAAO1H,GACN0kD,eAAkB,EAAGC,qBAAwBpS,GAA0Bze,EAAO3L,GAAQqnB,mBAAoB,QAg2C2WnuC,EA91C1d,SAAoCyyB,EAAOuY,EAAUia,EAAiB3W,EAAW+W,EAAYpmD,GAC3F,IAAIswC,EAAWH,GAAoBpE,EAAUia,GAC7CxyB,EAAQsV,GAAiBtV,GACzB4yB,EAAahX,GAAwBC,EAAW+W,GAChDpa,GAAmBxY,GAAO,WACxBqc,GAAsB,eAAiBrc,EAAQ,wBAAyB8c,KACvEvE,EAAW,GACdhE,GAA8B,GAAIuI,GAAU,SAAS4W,GACnD,IAAIC,EAAmB,CAACD,EAAU,GAAI,MAAMz8C,OAAOy8C,EAAUh/C,MAAM,IAEnE,OADAinC,GAAoB3b,EAAO6c,GAAqB7c,EAAO2zB,EAAkB,KAAMf,EAAYpmD,GAAK+rC,EAAW,GACpG,OAo1Cgf5nB,EAzzC3f,SAAmCijC,EAAe5zB,EAAOphB,EAAMi1C,EAAUC,GACvE9zB,EAAQsV,GAAiBtV,IACP,IAAd8zB,IACFA,EAAW,YAEb,IAAIz/B,EAAQ+gB,GAAiBx2B,GACzB8xC,EAAe,SAASxkD,GAC1B,OAAOA,GAET,GAAiB,IAAb2nD,EAAgB,CAClB,IAAIE,EAAW,GAAK,EAAIn1C,EACxB8xC,EAAe,SAASxkD,GACtB,OAAOA,GAAS6nD,IAAaA,GAGjC,IAAIC,GAA+C,GAA9Bh0B,EAAMjgB,QAAQ,YACnC+0B,GAAa8e,EAAe,CAAEhgD,KAAMosB,EAAO0wB,aAAgBA,EAAcC,WAAc,SAASpd,EAAarnC,GAC3G,GAAqB,iBAAVA,GAAuC,kBAAVA,EACtC,MAAM,IAAIiB,UAAU,mBAAqBisC,GAAaltC,GAAS,QAAUQ,KAAKkH,MAEhF,GAAI1H,EAAQ2nD,GAAY3nD,EAAQ4nD,EAC9B,MAAM,IAAI3mD,UAAU,qBAAuBisC,GAAaltC,GAAS,wDAA0D8zB,EAAQ,wCAA0C6zB,EAAW,KAAOC,EAAW,MAE5M,OAAOE,EAAiB9nD,IAAU,EAAY,EAARA,GACrC0kD,eAAkB,EAAGC,qBAAwBnS,GAA4B1e,EAAO3L,EAAoB,IAAbw/B,GAAiBnY,mBAAoB,QAiyC0ZuY,EA/xC3hB,SAAuCxe,EAASye,EAAel0B,GAC7D,IACIm0B,EADc,CAACziC,UAAWnX,WAAYoX,WAAYE,YAAaD,WAAYE,YAAaC,aAAcC,cACrFkiC,GACrB,SAASE,EAAiBr/C,GACxBA,IAAmB,EACnB,IAAI8a,EAAOlE,IACP/M,EAAOiR,EAAK9a,IAAW,GACvB0J,EAAOoR,EAAK9a,EAAS,IAAM,GAC/B,OAAO,IAAIo/C,EAAGz4C,EAAQ+C,EAAMG,GAG9Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB0D,EAAkBxD,eAAkB,EAAGC,qBAAwBuD,GAAoB,CAAExe,8BAA8B,KAoxCqZye,EAlxC/jB,SAAsC5e,EAASzV,GAE7C,IAAIs0B,EAA4B,iBADhCt0B,EAAQsV,GAAiBtV,IAEzB8U,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAO0wB,aAAgB,SAASxkD,GAC5D,IACIkV,EADA5T,EAASme,IAAoBzf,GAAS,GAE1C,GAAIooD,EAEF,IADA,IAAIC,EAAiBroD,EAAQ,EACpBqB,EAAI,EAAGA,GAAKC,IAAUD,EAAG,CAChC,IAAIinD,EAAiBtoD,EAAQ,EAAIqB,EACjC,GAAIA,GAAKC,GAAgD,GAAtC2d,IAAmBqpC,GAAsB,CAC1D,IACIC,EAAgBpkC,EAAakkC,EADnBC,EAAiBD,QAEnB,IAARnzC,EACFA,EAAMqzC,GAENrzC,GAAOhB,OAAOsC,aAAa,GAC3BtB,GAAOqzC,GAETF,EAAiBC,EAAiB,OAGjC,CACL,IAAIlxC,EAAI,IAAIzK,MAAMrL,GAClB,IAASD,EAAI,EAAGA,EAAIC,IAAUD,EAC5B+V,EAAE/V,GAAK6S,OAAOsC,aAAayI,IAAmBjf,EAAQ,EAAIqB,IAE5D6T,EAAMkC,EAAEnI,KAAK,IAGf,OADAod,GAAMrsB,GACCkV,GACNuvC,WAAc,SAASpd,EAAarnC,GACjCA,aAAiByR,cACnBzR,EAAQ,IAAIqO,WAAWrO,IAGzB,IAAIwoD,EAAuC,iBAAVxoD,EAC3BwoD,GAAuBxoD,aAAiBqO,YAAcrO,aAAiByoD,mBAAqBzoD,aAAiBwlB,WACjH8jB,GAAkB,yCAWpB,IAAIhoC,GATA8mD,GAAmBI,EACT,WACV,OAAO5jC,GAAgB5kB,IAGb,WACV,OAAOA,EAAMsB,WAIb8iB,EAAMsG,GAAQ,EAAIppB,EAAS,GAG/B,GAFA8iB,KAAS,EACT3E,IAAoB2E,GAAO,GAAK9iB,EAC5B8mD,GAAmBI,EACrB9jC,EAAa1kB,EAAOokB,EAAM,EAAG9iB,EAAS,QAEtC,GAAIknD,EACF,IAAK,IAAInnD,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAC/B,IAAIqnD,EAAW1oD,EAAMyO,WAAWpN,GAC5BqnD,EAAW,MACbr8B,GAAMjI,GACNklB,GAAkB,2DAEpBrqB,IAAmBmF,EAAM,EAAI/iB,GAAKqnD,OAGpC,IAASrnD,EAAI,EAAGA,EAAIC,IAAUD,EAC5B4d,IAAmBmF,EAAM,EAAI/iB,GAAKrB,EAAMqB,GAO9C,OAHoB,OAAhBgmC,GACFA,EAAYvgC,KAAKulB,GAAOjI,GAEnBA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,SAASprB,GACvGiI,GAAMjI,OAssCwlBukC,EAnsClmB,SAAuCpf,EAASqf,EAAU90B,GAExD,IAAI+0B,EAAcC,EAAcC,EAASC,EAAgB7gC,EADzD2L,EAAQsV,GAAiBtV,GAER,IAAb80B,GACFC,EAAehkC,GACfikC,EAAe/jC,GACfikC,EAAiB9jC,GACjB6jC,EAAU,WACR,OAAO1pC,KAET8I,EAAQ,GACc,IAAbygC,IACTC,EAAe1jC,GACf2jC,EAAezjC,GACf2jC,EAAiBzjC,GACjBwjC,EAAU,WACR,OAAOtpC,KAET0I,EAAQ,GAEVygB,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAO0wB,aAAgB,SAASxkD,GAK5D,IAJA,IAEIkV,EAFA5T,EAASme,IAAoBzf,GAAS,GACtCipD,EAAOF,IAEPV,EAAiBroD,EAAQ,EACpBqB,EAAI,EAAGA,GAAKC,IAAUD,EAAG,CAChC,IAAIinD,EAAiBtoD,EAAQ,EAAIqB,EAAIunD,EACrC,GAAIvnD,GAAKC,GAA4C,GAAlC2nD,EAAKX,IAAmBngC,GAAa,CACtD,IACIogC,EAAgBM,EAAaR,EADdC,EAAiBD,QAExB,IAARnzC,EACFA,EAAMqzC,GAENrzC,GAAOhB,OAAOsC,aAAa,GAC3BtB,GAAOqzC,GAETF,EAAiBC,EAAiBM,GAItC,OADAv8B,GAAMrsB,GACCkV,GACNuvC,WAAc,SAASpd,EAAarnC,GACd,iBAAVA,GACXspC,GAAkB,6CAA+CxV,GAEnE,IAAIxyB,EAAS0nD,EAAehpD,GACxBokB,EAAMsG,GAAQ,EAAIppB,EAASsnD,GAO/B,OANAxkC,KAAS,EACT3E,IAAoB2E,GAAO,GAAK9iB,GAAU6mB,EAC1C2gC,EAAa9oD,EAAOokB,EAAM,EAAG9iB,EAASsnD,GAClB,OAAhBvhB,GACFA,EAAYvgC,KAAKulB,GAAOjI,GAEnBA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,SAASprB,GACvGiI,GAAMjI,OA4oC4nB8kC,GAzoCtoB,SAAuC3f,EAASzV,EAAOq1B,EAAsB7b,EAAgBuY,EAAqBhb,GAChH1D,GAAmBoC,GAAW,CAAE7hC,KAAM0hC,GAAiBtV,GAAQwZ,eAAgBoC,GAAwByZ,EAAsB7b,GAAiBzC,cAAe6E,GAAwBmW,EAAqBhb,GAAgBiZ,SAAU,KAwoCqcznC,EAtoC3qB,SAA+CunC,EAAcM,EAAkBkF,EAAiBvnB,EAAQwiB,EAAeF,EAAoBkF,EAAiB/E,EAAQC,GAClKpd,GAAmByc,GAAcE,SAASh9C,KAAK,CAAEo9C,iBAAAA,EAAkBriB,OAAQ6N,GAAwB0Z,EAAiBvnB,GAASwiB,cAAAA,EAAeF,mBAAAA,EAAoBG,OAAQ5U,GAAwB2Z,EAAiB/E,GAASC,cAAAA,KAqoC2fltC,EAnoCvtB,SAAwCkyB,EAASzV,EAAOq1B,EAAsB7b,EAAgBuY,EAAqBhb,GACjH5B,GAAoBM,GAAW,CAAE7hC,KAAM0hC,GAAiBtV,GAAQwZ,eAAgBoC,GAAwByZ,EAAsB7b,GAAiBzC,cAAe6E,GAAwBmW,EAAqBhb,GAAgBia,OAAQ,KAkoCuhB/P,EAhoC5vB,SAA8C6P,EAAYK,EAAWf,EAAkBkF,EAAiBvnB,EAAQwiB,EAAeF,EAAoBkF,EAAiB/E,EAAQC,GAC1Ktb,GAAoB2b,GAAYE,OAAOh+C,KAAK,CAAEm+C,UAAW7b,GAAiB6b,GAAYf,iBAAAA,EAAkBriB,OAAQ6N,GAAwB0Z,EAAiBvnB,GAASwiB,cAAAA,EAAeF,mBAAAA,EAAoBG,OAAQ5U,GAAwB2Z,EAAiB/E,GAASC,cAAAA,KA+nCsiB+E,GA7nCvyB,SAAgC/f,EAASzV,GAEvC8U,GAAaW,EAAS,CAAEggB,QAAQ,EAAM7hD,KADtCosB,EAAQsV,GAAiBtV,GAC0B4wB,eAAkB,EAAGF,aAAgB,aAErFC,WAAc,SAASpd,EAAagE,QAynC4xBme,EArnCr0B,SAA0CC,EAAgBC,GACxD,GAAID,GAAkBC,EACpB/9B,YAAY,CAAEC,IAAO,qCAChB,GAAIhL,EACT+K,YAAY,CAAEoB,aAAgB08B,EAAgB79B,IAAO,2BAChD,CACL,IAAII,EAAUzC,GAAQ2B,SAASu+B,GAC3Bx9B,EAASD,GAAWA,EAAQC,OAChC,IAAKA,EACH,OAEFA,EAAON,YAAY,CAAEC,IAAO,uBAE9B,OAAO,GAwmCm2Bzb,EAhmC52B,SAAoBtH,EAAQ8gD,EAAYC,GACtC/gD,EAAS4pC,GAAc5pC,GACvB8gD,EAAavX,GAAsBuX,EAAY,aAC/C,IAAItiB,EAAc,GACdwiB,EAAKlc,GAAiBtG,GAE1B,OADA9nB,IAAoBqqC,GAAkB,GAAKC,EACpCF,EAAuB,WAAEtiB,EAAax+B,IA0lC80BihD,EAjlC73B,SAAsBjhD,EAAQwjC,EAAUuE,EAAU7jC,GAChDlE,EAAS4pC,GAAc5pC,GAGvB,IAFA,IAAIunC,EATN,SAA6B/D,EAAUuE,GAErC,IADA,IAAIx5B,EAAI,IAAIzK,MAAM0/B,GACThrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAC9B+V,EAAE/V,GAAK+wC,GAAsB7yB,KAAqBqxB,GAAY,GAAKvvC,GAAI,aAAeA,GAExF,OAAO+V,EAIK2yC,CAAoB1d,EAAUuE,GACtCnwC,EAAO,IAAIkM,MAAM0/B,GACZhrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAAG,CACjC,IAAIwD,EAAOurC,EAAM/uC,GACjBZ,EAAKY,GAAKwD,EAA2B,qBAAEkI,GACvCA,GAAQlI,EAAqB,eAG/B,OAAO8oC,GADE9kC,EAAOlI,WAAM,EAAQF,KAwkCg3BkS,EAAKo/B,GAAgBiY,EApjCr6B,SAA4Bl2B,GAC1B,OAAc,IAAVA,EACK6Z,GAAiBkF,OAExB/e,EAAQ6e,GAAkB7e,GACnB6Z,GAAiBkF,KAAmB/e,MA+iC+4B/H,EA5iC97B,SAA8BljB,EAAQsuB,GAGpC,OAAOwW,IAFP9kC,EAAS4pC,GAAc5pC,IACvBsuB,EAAOsb,GAActb,MA0iCk8BkU,EAviCz9B,SAAwBxiC,GAClBA,EAAS,IACXipC,GAAmBjpC,GAAQkmB,UAAY,IAqiCm8Bk7B,GAliC9+B,SAA4B/hD,EAAQT,GAGlC,OAFAS,EAASuqC,GAAcvqC,cACvBT,EAAcgrC,GAAchrC,KAgiC0+ByiD,EA7hCxgC,SAA2BrhD,GAEzB,MAAyB,iBADzBA,EAAS4pC,GAAc5pC,KA4hCugCshD,EAzhChiC,WACE,OAAOxc,GAAiB,KAwhC8hCp5B,EAthCxjC,SAA6B+9B,GAC3B,OAAO3E,GAAiBgF,GAAkBL,KAqhCsiC8X,EAnhCllC,WACE,OAAOzc,GAAiB,KAkhCilC/c,EAhhC3mC,SAAiC/nB,GAE/Bu+B,GADkB0K,GAAmBjpC,GAAQ7I,OAE7C+xC,GAAelpC,IA6gCwnCgH,EA3gCzoC,SAA8BhH,EAAQsuB,EAAMn3B,GAC1C6I,EAAS4pC,GAAc5pC,GACvBsuB,EAAOsb,GAActb,GACrBn3B,EAAQyyC,GAAczyC,GACtB6I,EAAOsuB,GAAQn3B,GAugCmpCqqD,EArgCpqC,SAA4BxlD,EAAMkI,GAGhC,OAAO4gC,IAFP9oC,EAAOutC,GAAsBvtC,EAAM,sBACA,qBAAEkI,KAmgCspCu9C,EAhgC7rC,WACEjnC,MA+/BwsCknC,GA/nJ1sC,SAAwBC,EAAQC,GAC9B,IAAIv+C,EALYlM,EAMhB,GAAe,IAAXwqD,EACFt+C,EAAMK,KAAKL,UACN,CAAA,GAAgB,IAAXs+C,GAA2B,IAAXA,EAI1B,OAZcxqD,EAWL,GAVXuf,IAAoBmrC,MAAuB,GAAK1qD,GAWtC,EAHRkM,EAAM0d,KAOR,OAFArK,IAAoBkrC,GAAM,GAAKv+C,EAAM,IAAM,EAC3CqT,IAAoBkrC,EAAK,GAAK,GAAKv+C,EAAM,IAAM,IAAM,IAAM,EACpD,GAmnJutCy+C,EA7/BhuC,SAAmCn8C,EAAMo8C,EAAQC,GAC/C,IAAIpqD,EA2EN,SAA0BmqD,EAAQz2C,GAEhC,IAAI+P,EAEJ,IAHAmvB,GAAsB/xC,OAAS,EAE/B6S,IAAQ,EACD+P,EAAKjF,IAAmB2rC,MAAW,CACxC,IAAIE,EAAS5mC,EAAK,IACd4mC,GAAgB,EAAN32C,GACZA,IACFk/B,GAAsBvsC,KAAKgkD,EAASnrC,IAAoBxL,KAAS,GAAKoL,IAAoBpL,MACxFA,EAEJ,OAAOk/B,GAtFI0X,CAAiBH,EAAQC,GACpC,OAAOhjC,GAAWrZ,GAAM7N,MAAM,KAAMF,IA2/B0tCuqD,GAz/BhwC,WACM7qC,GAEAD,GAEJ+C,EAAS,6IAo/B+xCgoC,EAl/B1yC,SAA2DC,EAAgBC,KAk/BuxC7c,EA9+Bl2C,SAAgCplB,EAAM5W,EAAKrH,GACzC,GAAIie,GAAQ,GAAKA,EAAOrK,IAAmBvd,SAAiB,EAAP4nB,EACnD,OAAQ,GACV,GAAKjJ,EASE,CACL,GAAIoJ,QAAQC,KAAK/J,IAAqB2J,GAAQ,IAAM5W,EAClD,OAAQ,EAEV,IAAI84C,EAAOp/C,YAAYE,MACnBm/C,EAAOD,EAAOngD,EAElB,IADeoe,QAAQiiC,SAAS/rC,IAAqBgK,GAAQC,iBAAmB,EAAGN,KACzE,CAER,IADAkiC,EAAOp/C,YAAYE,OACRm/C,EAET,OADWhiC,QAAQiiC,SAAS/rC,IAAqBgK,GAAQC,iBAAmB,EAAG,IACvE,GAGV,GAAgB,GADLH,QAAQiiC,SAAS/rC,IAAqBgK,GAAQC,iBAAmB,EAAG,GAE7E,MAGF,GADAwD,KACI3D,QAAQC,KAAK/J,IAAqB2J,GAAQ,IAAM5W,EAClD,OAAQ,EAEC+W,QAAQiiC,SAAS/rC,IAAqBgK,GAAQC,iBAAmB,EAAGN,GAEjF,OAAO,EA/BP,IAAI3Q,EAAM8Q,QAAQkiC,KAAKhsC,IAAqB2J,GAAQ,EAAG5W,EAAKrH,GAC5D,GAAY,cAARsN,EACF,OAAQ,GACV,GAAY,cAARA,EACF,OAAQ,EACV,GAAY,OAARA,EACF,OAAO,EACT,KAAM,6CAA+CA,GAm+Bs0C7E,EAAKuV,GAAwB/Y,EAAK0Z,GAAqB4hC,EAx8Bt7C,WACE,OAA0C,EAAnC7iC,IAu8Bs9C8iC,EAr8B/9C,WACE,OAA0C,EAAnC/iC,IAo8B+/CgjC,EAl8BxgD,SAAgCC,EAAM9uC,EAAK9N,GACzCkQ,IAAmB2sC,WAAWD,EAAM9uC,EAAKA,EAAM9N,IAi8Bo/C88C,EAp6BriD,SAA+C/Y,EAAOE,EAAavyC,GACjE2yC,GAA+C9xC,OAAS0xC,EAExD,IADA,IAAIrgC,EAAIlS,GAAQ,EACPY,EAAI,EAAGA,EAAI2xC,EAAa3xC,IAC/B+xC,GAA+C/xC,GAAKse,IAAoBhN,EAAItR,GAI9E,OAFmByxC,EAAQ,EAC8BjrB,IAAYirB,EAAQ,GAAlDkQ,GAAqBlQ,IACpCnyC,MAAM,KAAMyyC,KA45BujDd,EA/4BjlD,SAAiCwZ,GAC/BA,KAAkC,EAClC,IAAIC,EAZG9sC,IAAmB3d,OAa1B,GAAIwqD,GAAiBC,EACnB,OAAO,EAET,IAAIC,EAAc,WAClB,GAAIF,EAAgBE,EAClB,OAAO,EAGT,IADA,IA1zIe30C,EAAG40C,EA2zITC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBJ,GAAW,EAAI,GAAMG,GAI7C,GAHAC,EAAoBx+C,KAAKkI,IAAIs2C,EAAmBL,EAAgB,WAE9CxY,GADJ3lC,KAAKkI,IAAIm2C,IA9zIV30C,EA8zI+B1J,KAAKmL,IAJjC,SAIkDgzC,EAAeK,KA9zIjEF,EA8zIqF,OA7zIpF,IACjB50C,GAAK40C,EAAW50C,EAAI40C,GAEf50C,KA6zIH,OAAO,EAGX,OAAO,GA23BsmD+0C,EAtsB/mD,SAA6CjrD,EAAQo1C,EAAOC,GAE1D,OADaO,GAAsB51C,GAE1B61C,GAAmD71C,EAAQo1C,EAAOC,GAElEoB,GAAgDz2C,EAAQo1C,EAAOC,IAisB+kD50B,EA9rBzpD,SAA+CupC,KA8rBspDkB,EAjiBrsD,SAA0CC,EAAIC,GAC5C,OAf2CprD,EAeAmrD,EAdvCl1C,EAc2Cm1C,GAdzB,EAClBC,EAAkBjtC,IAAoBnI,KACtCq1C,EAAoB,CAAEC,QAAWntC,IAAoBnI,KAAeu1C,QAAWptC,IAAoBnI,KAAew1C,UAAartC,IAAoBnI,KAAey1C,YAAettC,IAAoBnI,KAAgB01C,qBAAwBvtC,IAAoBnI,KAAgB21C,wBAA2BxtC,IAAoBnI,KAAgBo1C,gBAAmB3Q,GAAqC2Q,GAAkBQ,+BAAkCztC,IAAoBnI,KAAgBuiC,aAAcp6B,IAAoBnI,KAAgB61C,aAAc1tC,IAAoBnI,KAAgBwiC,0BAA2Br6B,IAAoBnI,MAAgB81C,oBAAqB3tC,IAAoBnI,MAAgB+1C,yBAA0B5tC,IAAoBnI,MAAgBg2C,6BAA8B7tC,IAAoBnI,QAC5yB6/B,EAASF,GAAsB51C,IAI/BsrD,EAAkBS,oBACb,EAEWrV,GAAGwB,cAAcpC,EAAQwV,GALpC,EANX,IAA6CtrD,EACvCiW,EACAo1C,EACAC,EACAxV,GA2iBsuDoW,GAAM7Q,GAAc8Q,GAAMxQ,GAAoByQ,EAAKtQ,GAAWuQ,GAAMtQ,GAAUuQ,EAAKrQ,GAAU7gC,EAAKkhC,GAAWiQ,EAj8Jz1D,WACEnkC,GAAQiB,eAg8Jo2DpT,EAAK0H,GAAciB,EAAmB,WAAG4tC,EAxav5D,SAA+BC,EAAS9tD,GACtCypB,GAAQ4B,mBAAmBrkB,MAAK,WAC9Bif,GAAUsC,IAAIulC,EAAd7nC,CAAuBjmB,OAsaw5Dy8C,EA9Vn7D,SAAyBrvB,EAAagJ,EAAMgoB,EAAep+C,GACzD,GAAiC,oBAAtBumB,kBAET,OADAzlB,EAAI,uFACG,EAET,IAAKssB,EAEH,OADAtsB,EAAI,qDACG,GAET,IAAI49C,EAAe,GAEnB,GAAI59B,GAAmD,IAAxB49B,EAAal9C,OAC1C,OAAOusD,GAAsC,UAAW3gC,EAAagJ,EAAMgoB,EAAep+C,GAI5F,IAAI89C,EAAY,EACZrxB,EAAY,EACZuxB,EAAW,EACX/zB,EAAc,EACdC,EAAY,EAChB,GAAIkM,EAMF,GALA0nB,EAAYr+B,IAAoB2W,GAAQ,GACxC0nB,GAAa,MACbrxB,EAAYhN,IAAoB2W,EAAO,GAAK,GAC5C4nB,EAAmD,IAAxCv+B,IAAoB2W,EAAO,IAAM,GACe,IAAxC3W,IAAoB2W,EAAO,IAAM,GAClC,CAChB,IAAI43B,EAAkBvuC,IAAoB2W,EAAO,IAAM,GACnD63B,EAAgBxuC,IAAoB2W,EAAO,IAAM,IArD3D,SAAgC1J,EAAQwhC,EAAQC,GAC9C,IAAKD,IAAWC,EACd,OAAOjlC,GACT,IAAKwD,EAEH,OADA5rB,EAAI,4DACGooB,GAGT,GADYzJ,IAAoBiN,EAAS,IAAM,KACjCA,EAEZ,OADA5rB,EAAI,6CAA+C4rB,EAAS,wEACrDxD,GAET,IAAIe,EAAcV,QAAQC,KAAK7J,IAAqB+M,EAAS,IAAM,IAAM,GACrExC,EAAYX,QAAQC,KAAK7J,IAAqB+M,EAAS,IAAM,IAAM,GACnEwhC,IACFzuC,IAAoByuC,GAAU,GAAKjkC,GACjCkkC,IACF1uC,IAAoB0uC,GAAc,GAAKjkC,GAsCrCkkC,CADsB3kC,GAAQuD,oCAAsCvD,GAAQuD,oCAAsCpB,KAC1EwK,EAAO,GAAIA,EAAO,IAC1DnM,EAAcxK,IAAoB2W,EAAO,IAAM,GAC/ClM,EAAYzK,IAAoB2W,EAAO,IAAM,GAC7C3W,IAAoB2W,EAAO,IAAM,GAAK43B,EACtCvuC,IAAoB2W,EAAO,IAAM,GAAK63B,OAEtChkC,EAAcxK,IAAoB2W,EAAO,IAAM,GAC/ClM,EAAYzK,IAAoB2W,EAAO,IAAM,QAG/C0nB,EAAY,QAEd,IAAItxB,EAAiC,GAAbC,EACpBD,EACFC,EAAY4hC,GAAU,GAAIvQ,GAG1Bn8B,GADA8K,GAAaqxB,GACM,GAGrB,IADA,IAAIwQ,EAAoB1jC,GAAQ,KACvBrpB,EAAI,EAAGA,EAAI,KAAYA,EAC9Boe,KAAqB2uC,GAAqB,GAAK/sD,GAAK,EACtDke,IAAoB2N,GAAe,GAAKkhC,EACxC7uC,IAAoB6uC,EAAoB,IAAM,GAAKA,EACnD,IAAIzjC,EAAUyjC,EAAoB,IAClC7uC,IAAoBoL,GAAW,GAAKA,EACpC,IAAI+yB,EAAe,CAAEnxB,UAAAA,EAAWqxB,UAAAA,EAAWtxB,kBAAAA,EAAmBvC,YAAAA,EAAaC,UAAAA,EAAW8zB,SAAAA,EAAUK,aAAcD,EAAehxB,YAAakhC,EAAmB9P,mBAAoB5yB,KAAiB5rB,IAAAA,EAAK0+C,aAAAA,GAOvM,OANI59B,GACF88B,EAAa9xB,IAAM,cACnBD,YAAY+xB,EAAcc,IAE1BvxB,GAAYywB,GAEP,GA8Rg8DltC,EAAKkb,GAAe2iC,EA5R79D,SAAsBC,KA4R09DC,GAhEh/D,SAAqBp+C,EAAG0vC,EAASC,EAAQC,GACvC,OAAOH,GAAUzvC,EAAG0vC,EAASC,EAAQC,MAp8JvC,WACE,IAAIhgD,EAAO,CAAEqX,EAAKisC,IAClB,SAASmL,EAAgBztD,EAAU0tD,GACjC,IAAIC,EAAW3tD,EAASqB,QAIxB,GAHA2d,EAAY,IAAI2uC,EAChB3oC,GAAYhG,EAAY,IAAM,GAC9BgD,EAAa0rC,GACR7tC,EAAwB,CAC3B,IAAI+tC,EAAmBplC,GAAQU,cAAc3oB,OAC7CioB,GAAQU,cAAcvkB,SAAQ,SAAS80B,GACrCjR,GAAQoD,uBAAuB6N,GAAG,aACzBm0B,GACL7nC,YAQV,SAAS8nC,EAA0B5/C,GACjCw/C,EAAgBx/C,EAAiB,SAAGA,EAAe,QAErD,SAAS6/C,EAAuBC,GAC9B,OApCGjsC,IAAe5C,IAAsBC,GAA2C,mBAAV6uC,OAAyBxnC,GAAUG,IAUvGvnB,QAAQV,UAAUW,KAAKunB,IATrBonC,MAAMrnC,GAAgB,CAAEsnC,YAAa,gBAAiB5uD,MAAK,SAASwiB,GACzE,IAAKA,EAAa,GAChB,KAAM,uCAAyC8E,GAAiB,IAElE,OAAO9E,EAAsB,iBAC5BvZ,OAAM,WACP,OAAOse,SA6BiBvnB,MAAK,SAASohB,GACtC,OAAO4B,YAAY6rC,YAAYztC,EAAQzhB,MACtCK,KAAK0uD,GAAU,SAASI,GACzBtuD,EAAI,0CAA4CsuD,GAChD7rC,GAAM6rC,MAiBV,GA5BKtuC,GACHgG,KA2BE7G,EAAwB,gBAC1B,IAEE,OADeA,EAAwB,gBAAEhgB,EAAMyuD,GAE/C,MAAOhkD,GAEP,OADA5J,EAAI,sDAAwD4J,IACrD,GAnBJqY,GAA0D,mBAArCO,YAAY+rC,sBAAwC7nC,GAAUI,KAAoBH,GAAUG,KAAoC,mBAAVqnC,MAUvIF,EAAuBD,GATvBG,MAAMrnC,GAAgB,CAAEsnC,YAAa,gBAAiB5uD,MAAK,SAASwiB,GAEzE,OADaQ,YAAY+rC,qBAAqBvsC,EAAU7iB,GAC1CK,KAAKwuD,GAA2B,SAASM,GAGrD,OAFAtuD,EAAI,kCAAoCsuD,GACxCtuD,EAAI,6CACGiuD,EAAuBD,UAgBnBvlD,MAAMyW,GA88JjBsvC,GACV,IAAIhM,GAAqBrjC,EAA2B,mBAAI,WACtD,OAAQqjC,GAAqBrjC,EAA2B,mBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEnFqf,EAAc,MAAI,WAC5B,OAAgBA,EAAc,MAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErE,IAAIgqB,GAAU3K,EAAgB,QAAI,WAChC,OAAQ2K,GAAU3K,EAAgB,QAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErE2rB,GAAQtM,EAAc,MAAI,WAC5B,OAAQsM,GAAQtM,EAAc,MAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjEwvC,GAAiBnwB,EAAuB,eAAI,WAC9C,OAAQmwB,GAAiBnwB,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErCqf,EAAoD,4CAAI,WACxG,OAAsDA,EAAoD,4CAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjJ,IAAIgqD,GAAoB3qC,EAA0B,kBAAI,WACpD,OAAQ2qC,GAAoB3qC,EAA0B,kBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFs9C,GAA8Bj+B,EAAoC,4BAAI,WACxE,OAAQi+B,GAA8Bj+B,EAAoC,4BAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAElFqf,EAAiC,yBAAI,WAClE,OAAmCA,EAAiC,yBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE3G,IAAIuyC,GAAYlzB,EAAkB,UAAI,WACpC,OAAQkzB,GAAYlzB,EAAkB,UAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzE0tB,GAAerO,EAAqB,aAAI,WAC1C,OAAQqO,GAAerO,EAAqB,aAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE/EwyC,GAAanzB,EAAmB,WAAI,WACtC,OAAQmzB,GAAanzB,EAAmB,WAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE3EytB,GAA+BpO,EAAqC,6BAAI,WAC1E,OAAQoO,GAA+BpO,EAAqC,6BAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE/GytD,GAAYpuC,EAAkB,UAAI,WACpC,OAAQouC,GAAYpuC,EAAkB,UAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEpCqf,EAA2C,mCAAI,WACtF,OAA6CA,EAA2C,mCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE/H,IAAI4qB,GAA2BvL,EAAiC,yBAAI,WAClE,OAAQuL,GAA2BvL,EAAiC,yBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEvGssB,GAA+CjN,EAAqD,6CAAI,WAC1G,OAAQiN,GAA+CjN,EAAqD,6CAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE7Fqf,EAAwD,gDAAI,WAChH,OAA0DA,EAAwD,gDAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzJ,IAAIqqB,GAA8ChL,EAAoD,4CAAI,WACxG,OAAQgL,GAA8ChL,EAAoD,4CAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE7IsnB,GAAoCjI,EAA0C,kCAAI,WACpF,OAAQiI,GAAoCjI,EAA0C,kCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAElFqf,EAA6C,qCAAI,WAC1F,OAA+CA,EAA6C,qCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA4C,oCAAI,WACxF,OAA8CA,EAA4C,oCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE3Eqf,EAA4D,oDAAI,WACxH,OAA8DA,EAA4D,oDAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErHqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErI,IAAImtD,GAAwC9tC,EAA8C,sCAAI,WAC5F,OAAQ8tC,GAAwC9tC,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAA8C,sCAAI,WAC5F,OAAgDA,EAA8C,sCAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErI,IAAIyyC,GAA4CpzB,EAAkD,0CAAI,WACpG,OAAQozB,GAA4CpzB,EAAkD,0CAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzIq1C,GAA8Bh2B,EAAoC,4BAAI,WACxE,OAAQg2B,GAA8Bh2B,EAAoC,4BAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEtFqf,EAA6B,qBAAI,WAC1D,OAA+BA,EAA6B,qBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEhFqf,EAAqB,aAAI,WAC1C,OAAuBA,EAAqB,aAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE9Dqf,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEhEqf,EAAyB,iBAAI,WAClD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEtEqf,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjEqf,EAAwB,gBAAI,WAChD,OAA0BA,EAAwB,gBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzF,IAeI2uD,GAfApkC,GAAqBlL,EAA2B,mBAAI,MAgBxD,SAASuvC,GAAW/uC,GAClB/f,KAAKkH,KAAO,aACZlH,KAAKmtB,QAAU,gCAAkCpN,EAAS,IAC1D/f,KAAK+f,OAASA,EAShB,SAASgvC,GAAS9uD,GAChB,IA6DY8f,EA7DRivC,EAAgBzvC,EAAc,MAGlC,IA0DYQ,EAzDAivC,EAHD,EACA,IAGC,GAyDI1sC,GAA4B,IAAXvC,IAG7BuC,IAEFyG,GAAQuC,sBAGJ/L,EAAe,QACjBA,EAAe,OAAEQ,GACnBiD,GAAQ,GAEVlD,EAAMC,EAAQ,IAAI+uC,GAAW/uC,KApE3B,MAAO/V,GACP,GAAIA,aAAa8kD,GACf,OACK,GAAS,UAAL9kD,EAET,YADAsY,GAAgB,GAGhB,IAAI2sC,EAAQjlD,EACRA,GAAkB,iBAANA,GAAkBA,EAAEyc,QAClCwoC,EAAQ,CAACjlD,EAAGA,EAAEyc,QAEhBrmB,EAAI,qBAAuB6uD,GAC3BnvC,EAAM,EAAG9V,IAMf,SAASW,GAAI1K,GAQX,SAASivD,IACHL,KAEJA,IAAY,EACZtvC,EAAkB,WAAI,EAClByD,IAvzKDzD,EAAiB,UAAMiR,GAAGziB,KAAK6pB,aAClCpH,GAAGziB,OAEL0Z,GAAqB1B,IAGjB3F,IAEJoQ,GAAGqH,mBAAoB,EACvBpQ,GAAqBzB,KAkzKnB3G,EAAoBE,GAChBA,EAA6B,sBAC/BA,EAA6B,uBAC3B4vC,IACFJ,KA/yKN,WACE,IAAI3uC,EAAJ,CAEA,GAAIb,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEze,QASPsc,EARHmC,EAAgB,QAAEoI,QASnC1B,GAAcsJ,QAAQnS,GADxB,IAAsBA,EALpBqK,GAAqBxB,KAsyKnBmpC,KApBElpC,GAAkB,IA1zKxB,WACE,IAAI9F,EAAJ,CAEA,GAAIb,EAAe,OAGjB,IAF+B,mBAApBA,EAAe,SACxBA,EAAe,OAAI,CAACA,EAAe,SAC9BA,EAAe,OAAEze,QAoCPsc,EAnCHmC,EAAe,OAAEoI,QAoCjC7B,GAAayJ,QAAQnS,GADvB,IAAqBA,EAhCnBqK,GAAqB3B,KAmzKrBupC,GACInpC,GAAkB,IAkBlB3G,EAAkB,WACpBA,EAAkB,UAAE,cACpBxV,YAAW,WACTA,YAAW,WACTwV,EAAkB,UAAE,MACnB,GACH2vC,MACC,IAEHA,MAmBJ,GAxGA3vC,EAAyB,iBAAI6G,GAC7B7G,EAA4B,oBAAI+G,GAChC/G,EAAsB,cAAIiR,GAAG8P,WAC7B/gB,EAA0B,kBAAIiR,GAAGkQ,eACjCnhB,EAA+B,uBAAIiR,GAAG8R,oBACtC/iB,EAA0B,kBAAIiR,GAAGsQ,eACjCvhB,EAAwB,gBAAIiR,GAAG4O,aAC/B7f,EAAkB,UAAIiR,GAAGuD,OACzBxU,EAAW,GAAIiR,GACfjR,EAAgB,QAAIwJ,GACpBxJ,EAAgB,QAAIwJ,GACpBxJ,EAAsB,cAAI2L,GAC1B3L,EAAmB,WAAIjB,EACvBiB,EAAmB,WAAIuvC,GAQvB3oC,GAAwB,SAASmpC,IAC1BT,IACHlkD,KACGkkD,KACH1oC,GAAwBmpC,IA+D5B/vC,EAAY,IAAI5U,GAgBZ4U,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEze,OAAS,GAChCye,EAAgB,QAAE3X,KAAlB2X,GAGJ,IAAI4vC,IAAe,EAUnB,OATI5vC,EAAqB,eACvB4vC,IAAe,GACZ/uC,IACHkC,GAAgB,GACblC,EAGH2I,GAAQyB,aAFR7f,KAIKyT,EAAYmxC,QAGA,iBAAZ3tD,GAA0C,iBAAXoH,EACxCA,EAAOpH,QAAUoc,EACQ,mBAAXxb,QAAyBA,OAAY,IACnDA,OAAO,IAAI,WACT,OAAOwb,KAEiB,iBAAZpc,IACdA,EAAoB,WAAIoc,MAK1BwxC,GAAkBryC,GAAW,CAC/B,kBAAkBvb,EAASoH,GACzB,IACM+U,EADFC,GAGAD,GAFEA,EAAiC,oBAAbE,UAA4BA,SAASC,cAAgBD,SAASC,cAAc7B,SAAM,IAE7E8B,EACtB,SAASC,GAEd,IACIiB,EAAqBC,EADrBC,OAAgC,KADpCnB,EAAcA,GAAe,IACqBA,EAAc,GAEhEmB,EAAc,MAAI,IAAI5f,SAAQ,SAASV,EAASC,GAC9CmgB,EAAsBpgB,EACtBqgB,EAAqBpgB,KAEvB,IACIG,EADAmgB,EAAkB,GAEtB,IAAKngB,KAAOkgB,EACNA,EAAOxd,eAAe1C,KACxBmgB,EAAgBngB,GAAOkgB,EAAOlgB,IAIlC,IAIIogB,EACAC,EACAC,EACAC,EAPAC,EAAc,iBACdC,EAAQ,SAASC,EAAQC,GAC3B,MAAMA,GAMRP,EAAuC,iBAAXjW,OAC5BkW,EAAiD,mBAAlBO,cAC/BN,EAAyC,iBAAZO,GAAoD,iBAArBA,EAAQzT,UAA0D,iBAA1ByT,EAAQzT,SAAS0T,KACrHP,GAAwBH,IAAuBE,IAAwBD,EACvE,IAOIW,EAAkBC,EAClBC,EACAC,EATAC,EAAkB,GAUlBd,GAEAc,EADEf,EACgBzC,GAAU,QAAQ4D,QAAQJ,GAAmB,IAE7CK,EAAY,IAEhCT,EAAQ,SAAoBU,EAAUC,GAMpC,OALKT,IACHA,EAAStD,GAAU,OAChBuD,IACHA,EAAWvD,GAAU,SACvB8D,EAAWP,EAAoB,UAAEO,GAC1BR,EAAqB,aAAEQ,EAAUC,EAAS,KAAO,SAE1DV,EAAa,SAAqBS,GAChC,IAAIhJ,EAAMsI,EAAMU,GAAU,GAK1B,OAJKhJ,EAAI/I,SACP+I,EAAM,IAAIlK,WAAWkK,IAEvBkJ,EAAOlJ,EAAI/I,QACJ+I,GAELmI,EAAc,KAAEpf,OAAS,IAC3B+e,EAAcK,EAAc,KAAE,GAAGhE,QAAQ,MAAO,MASlD4D,EAAQ,SAASC,GACfG,EAAc,KAAEH,IAElBR,EAAgB,QAAI,WAClB,MAAO,+BAEAK,GACU,oBAAR7Q,OACTsR,EAAQ,SAAoBe,GAC1B,OAAOrS,KAAKqS,KAGhBd,EAAa,SAAqBc,GAChC,IAAIrP,EACJ,MAA0B,mBAAfsP,WACF,IAAIxT,WAAWwT,WAAWD,KAGnCH,EAAuB,iBADvBlP,EAAOhD,KAAKqS,EAAG,YAERrP,IAEgB,oBAAduP,YACIA,WAIK,mBAATC,OACTzB,EAAQ,SAASC,GACfwB,KAAKxB,KAGY,oBAAVyB,QACc,oBAAZN,UACTA,QAAU,IACZA,QAAQ/Q,IAAMqR,MACdN,QAAQO,KAAOP,QAAQzhB,MAA4B,oBAAbiiB,SAA2BA,SAAWF,SAErE/B,GAAsBC,KAC3BA,EACFe,EAAkB1gB,KAAK4hB,SAASC,KACH,oBAAb3D,UAA4BA,SAASC,gBACrDuC,EAAkBxC,SAASC,cAAc7B,KAEvC0B,IACF0C,EAAkB1C,GAGlB0C,EADuC,IAArCA,EAAgBpN,QAAQ,SACRoN,EAAgBnM,OAAO,EAAGmM,EAAgBnN,YAAY,KAAO,GAE7D,GAGlB+M,EAAQ,SAAoBwB,GAC1B,IAAIC,EAAM,IAAIC,eAGd,OAFAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIG,KAAK,MACFH,EAAII,cAETxC,IACFY,EAAa,SAAqBuB,GAChC,IAAIC,EAAM,IAAIC,eAId,OAHAD,EAAIE,KAAK,MAAOH,GAAK,GACrBC,EAAIK,aAAe,cACnBL,EAAIG,KAAK,MACF,IAAIpU,WAAWiU,EAAIM,aAuBlC,IAwBIC,EAGAC,EAMAhE,EAjCAtG,EAAMuH,EAAc,OAAK2B,QAAQ/Q,IAAIqS,KAAKtB,SAC1C9gB,EAAMmf,EAAiB,UAAK2B,QAAQO,KAAKe,KAAKtB,SAClD,IAAK7hB,KAAOmgB,EACNA,EAAgBzd,eAAe1C,KACjCkgB,EAAOlgB,GAAOmgB,EAAgBngB,IAGlCmgB,EAAkB,KACdD,EAAkB,UAElBA,EAAoB,cACtBM,EAAcN,EAAoB,aAChCA,EAAa,OACfO,EAAQP,EAAa,MAYnBA,EAAmB,aACrB8C,EAAa9C,EAAmB,YAE9BA,EAAsB,gBACxB+C,EAAgB/C,EAAsB,eACb,iBAAhBqD,aACTC,GAAM,mCAGR,IAAIG,GAAQ,EAEZ,SAAS/B,EAAOgC,EAAWP,GACpBO,GACHJ,GAAM,qBAAuBH,GAGjC,IAAI+sC,EAAqC,oBAAhBC,YAA8B,IAAIA,YAAY,aAAU,EACjF,SAASxsC,EAAkBC,EAAMC,EAAKC,GAIpC,IAFA,IAAIC,GADJF,KAAS,GACUC,EACfyB,EAAS1B,EACND,EAAK2B,IAAW,MAAQA,GAAUxB,MACrCwB,EACJ,GAAIA,EAAS1B,EAAM,IAAMD,EAAKnK,UAAYy2C,EACxC,OAAOA,EAAYE,OAAOxsC,EAAKnK,SAASoK,IAAQ,EAAG0B,IAAW,IAG9D,IADA,IAAIpQ,EAAM,GACH0O,EAAM0B,GAAQ,CACnB,IAAIvB,EAAKJ,EAAKC,MAAU,GACxB,GAAW,IAALG,EAAN,CAIA,IAAIC,EAAyB,GAApBL,EAAKC,MAAU,GACxB,GAAkB,MAAR,IAALG,GAAL,CAIA,IAAIE,EAAyB,GAApBN,EAAKC,MAAU,GAMxB,IAJEG,EADgB,MAAR,IAALA,IACQ,GAALA,IAAY,GAAKC,GAAM,EAAIC,GAEtB,EAALF,IAAW,GAAKC,GAAM,GAAKC,GAAM,EAAwB,GAApBN,EAAKC,MAAU,IAEnD,MACP1O,GAAOhB,OAAOsC,aAAauN,OACtB,CACL,IAAIG,EAAKH,EAAK,MACd7O,GAAOhB,OAAOsC,aAAa,MAAQ0N,GAAM,GAAI,MAAa,KAALA,SAbrDhP,GAAOhB,OAAOsC,cAAmB,GAALuN,IAAY,EAAIC,QAL5C9O,GAAOhB,OAAOsC,aAAauN,GAsBjC,OAAO7O,EAET,SAASiP,EAAaC,EAAKP,GAEzB,OADAO,KAAS,GACIV,EAAkBxE,EAAQkF,EAAKP,GAAkB,GAEhE,SAASQ,EAAkBnP,EAAKyO,EAAMW,EAAQC,GAE5C,KAAMA,EAAkB,GACtB,OAAO,EAGT,IAFA,IAAIC,EAHJF,KAAY,EAIRR,EAASQ,EAASC,EAAkB,EAC/BljB,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIojB,EAAIvP,EAAIzG,WAAWpN,GAKvB,GAJIojB,GAAK,OAASA,GAAK,QAErBA,EAAI,QAAc,KAAJA,IAAa,IAAW,KAD7BvP,EAAIzG,aAAapN,IAGxBojB,GAAK,IAAK,CACZ,GAAIH,GAAUR,EACZ,MACFH,EAAKW,MAAa,GAAKG,OAClB,GAAIA,GAAK,KAAM,CACpB,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAClCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,OACxB,GAAIA,GAAK,MAAO,CACrB,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAClCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,MACxB,CACL,GAAIH,EAAS,GAAKR,EAChB,MACFH,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAClCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,GAAK,GACvCd,EAAKW,MAAa,GAAK,IAAMG,GAAK,EAAI,GACtCd,EAAKW,MAAa,GAAK,IAAU,GAAJG,GAIjC,OADAd,EAAKW,IAAW,GAAK,EACdA,EAASE,EAElB,SAASE,EAAaxP,EAAKyP,EAAQJ,GACjC,OAAOF,EAAkBnP,EAAKgK,EAAQyF,EAAQJ,GAEhD,SAASK,EAAgB1P,GAEvB,IADA,IAAIhK,EAAM,EACD7J,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIojB,EAAIvP,EAAIzG,WAAWpN,GACnBojB,GAAK,OAASA,GAAK,QACrBA,EAAI,QAAc,KAAJA,IAAa,IAA4B,KAAtBvP,EAAIzG,aAAapN,IAChDojB,GAAK,MACLvZ,EAEFA,GADOuZ,GAAK,KACL,EACAA,GAAK,MACL,EAEA,EAEX,OAAOvZ,EAET,IA2GIsE,EAAQwP,EAAOE,EAAQE,EAAQE,EAASE,EAAQE,EAAS4D,EAAS1D,EA3GlEwwC,EAAsC,oBAAhBF,YAA8B,IAAIA,YAAY,iBAAc,EACtF,SAASrrC,EAAcT,EAAKP,GAI1B,IAHA,IAAIyB,EAASlB,EACTR,EAAM0B,GAAU,EAChB+qC,EAASzsC,EAAMC,EAAiB,IAC3BD,GAAOysC,IAAW/wC,EAAQsE,IAAQ,MACvCA,EAEJ,IADA0B,EAAS1B,GAAO,GACHQ,EAAM,IAAMgsC,EACvB,OAAOA,EAAaD,OAAOjxC,EAAO1F,SAAS4K,IAAQ,EAAGkB,IAAW,IAGjE,IADA,IAAIpQ,EAAM,GACD7T,EAAI,IAAKA,GAAKwiB,EAAiB,KAAMxiB,EAAG,CAC/C,IAAIyjB,EAAW1F,EAAOgF,EAAU,EAAJ/iB,IAAU,GACtC,GAAgB,GAAZyjB,EACF,MACF5P,GAAOhB,OAAOsC,aAAasO,GAE7B,OAAO5P,EAGX,SAAS6P,EAAc7P,EAAKyP,EAAQJ,GAIlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAIT,IAFA,IAAIS,EAAWL,EACXM,GAFJV,GAAmB,GAEkC,EAAbrP,EAAI5T,OAAaijB,EAAkB,EAAIrP,EAAI5T,OAC1ED,EAAI,EAAGA,EAAI4jB,IAAmB5jB,EAAG,CACxC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAC9B+d,EAAOuF,IAAW,GAAKG,EACvBH,GAAU,EAGZ,OADAvF,EAAOuF,IAAW,GAAK,EAChBA,EAASK,EAElB,SAASE,EAAiBhQ,GACxB,OAAoB,EAAbA,EAAI5T,OAEb,SAAS6jB,EAAcf,EAAKP,GAG1B,IAFA,IAAIxiB,EAAI,EACJ6T,EAAM,KACD7T,GAAKwiB,EAAiB,IAAI,CACjC,IAAIuB,EAAQ5F,EAAO4E,EAAU,EAAJ/iB,IAAU,GACnC,GAAa,GAAT+jB,EACF,MAEF,KADE/jB,EACE+jB,GAAS,MAAO,CAClB,IAAIlB,EAAKkB,EAAQ,MACjBlQ,GAAOhB,OAAOsC,aAAa,MAAQ0N,GAAM,GAAI,MAAa,KAALA,QAErDhP,GAAOhB,OAAOsC,aAAa4O,GAG/B,OAAOlQ,EAET,SAASmQ,EAAcnQ,EAAKyP,EAAQJ,GAKlC,QAHwB,IAApBA,IACFA,EAAkB,YAEhBA,EAAkB,EACpB,OAAO,EAGT,IAFA,IAAIS,EANJL,KAAY,EAORW,EAASN,EAAWT,EAAkB,EACjCljB,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAO9B,GANIyjB,GAAY,OAASA,GAAY,QAEnCA,EAAW,QAAqB,KAAXA,IAAoB,IAAuB,KAD3C5P,EAAIzG,aAAapN,IAGxCme,EAAOmF,IAAW,GAAKG,GACvBH,GAAU,GACG,EAAIW,EACf,MAGJ,OADA9F,EAAOmF,IAAW,GAAK,EAChBA,EAASK,EAElB,SAASO,EAAiBrQ,GAExB,IADA,IAAIhK,EAAM,EACD7J,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAAG,CACnC,IAAIyjB,EAAW5P,EAAIzG,WAAWpN,GAC1ByjB,GAAY,OAASA,GAAY,SACjCzjB,EACJ6J,GAAO,EAET,OAAOA,EAmBT,SAAS6T,EAA2B5K,GAClC3E,EAAS2E,EACT4L,EAAc,MAAIf,EAAQ,IAAIwG,UAAUrR,GACxC4L,EAAe,OAAIX,EAAS,IAAIqG,WAAWtR,GAC3C4L,EAAe,OAAIP,EAAS,IAAIkG,WAAWvR,GAC3C4L,EAAe,OAAIb,EAAS,IAAI7Q,WAAW8F,GAC3C4L,EAAgB,QAAIT,EAAU,IAAIqG,YAAYxR,GAC9C4L,EAAgB,QAAIL,EAAU,IAAIkG,YAAYzR,GAC9C4L,EAAgB,QAAIuD,EAAU,IAAIuC,aAAa1R,GAC/C4L,EAAgB,QAAIH,EAAU,IAAIkG,aAAa3R,GAEjD,IAWI4R,EAXAC,EAAiBjG,EAAuB,gBAAK,UAE/CjB,EADEiB,EAAmB,WACRA,EAAmB,WAEnB,IAAIqD,YAAY6C,OAAO,CAAEC,QAAWF,EAAiB,MAAOG,QAAW,WAGpF3W,EAASsP,EAAWtP,QAEtBwW,EAAiBxW,EAAOmC,WACxBoN,EAA2BvP,GAE3B,IAAI8W,EAAe,GACfC,EAAa,GACbC,GAAa,GACbC,GAAgB,GA2ChBC,GAAkB,EAElBC,GAAwB,KAI5B,SAASC,GAAiBC,GACxBH,KACI3G,EAA+B,wBACjCA,EAA+B,uBAAE2G,IAGrC,SAASI,GAAoBD,GAK3B,GAJAH,KACI3G,EAA+B,wBACjCA,EAA+B,uBAAE2G,IAEZ,GAAnBA,IAKEC,GAAuB,CACzB,IAAII,EAAWJ,GACfA,GAAwB,KACxBI,KAMN,SAAS1D,GAAM2D,GACTjH,EAAgB,SAClBA,EAAgB,QAAEiH,GAGpBpmB,EADAomB,GAAQ,IAERxD,GAAQ,EAERwD,EAAO,SAAWA,EAAO,+CACzB,IAAIxc,EAAI,IAAI4Y,YAAY8D,aAAaF,GAErC,MADAlH,EAAmBtV,GACbA,EAER,SAAS2c,GAAUjS,EAAKkS,GACtB,OAAOlT,OAAOlS,UAAUqlB,WAAanS,EAAImS,WAAWD,GAAkC,IAAxBlS,EAAIrB,QAAQuT,GAG5E,SAASE,GAAU/F,GACjB,OAAO4F,GAAU5F,EAFC,yCAKpB,SAASgG,GAAUhG,GACjB,OAAO4F,GAAU5F,EAFC,WAtBpBxB,EAAwB,gBAAI,GAC5BA,EAAwB,gBAAI,GAyB5B,IAtfoBoB,GAmkBhBqG,GACAC,GA9EAC,GAAiB,eAIrB,SAASC,KACP,IACE,GAAI9E,EACF,OAAO,IAAIxU,WAAWwU,GAExB,GAAI/B,EACF,OAAOA,EAAW4G,IAElB,KAAM,kDAER,MAAOE,GACPvE,GAAMuE,IAgEV,SAASK,GAAqBC,GAC5B,KAAOA,EAAU5mB,OAAS,GAAG,CAC3B,IAAIylB,EAAWmB,EAAUC,QACzB,GAAuB,mBAAZpB,EAAX,CAIA,IAAIqB,EAAOrB,EAASqB,KACA,iBAATA,OACY,IAAjBrB,EAASjnB,IACXimB,EAAUsC,IAAID,EAAdrC,GAEAA,EAAUsC,IAAID,EAAdrC,CAAoBgB,EAASjnB,KAG/BsoB,OAAsB,IAAjBrB,EAASjnB,IAAiB,KAAOinB,EAASjnB,UAX/CinB,EAAShH,IAqBf,SAASuI,GAAQC,EAAKnE,EAAK3jB,GACzB,OAAyB,GAArB8nB,EAAI1U,QAAQ,KAPlB,SAAuB0U,EAAKnE,EAAK3jB,GAC/B,OAAIA,GAAQA,EAAKa,OACRye,EAAO,WAAawI,GAAK5nB,MAAM,KAAM,CAACyjB,GAAKrZ,OAAOtK,IAEpDsf,EAAO,WAAawI,GAAKvjB,KAAK,KAAMof,GAIlCoE,CAAcD,EAAKnE,EAAK3jB,GAE1BslB,EAAUsC,IAAIjE,GAAKzjB,MAAM,KAAMF,GA3GnC6mB,GAAUI,MAvfKvG,GAwfUuG,GAA5BA,GAvfI3H,EAAmB,WACdA,EAAmB,WAAEoB,GAAMF,GAE7BA,EAAkBE,IAmmB3B,IAAImN,GAA0C,EAA1CA,GAA8D,EAA9DA,GAA8E,EAA9EA,GAAgG,GAAhGA,GAAqH,GAArHA,GAA+H,GAInI,SAASC,GAAcC,GACrBhuB,KAAKguB,OAASA,EACdhuB,KAAK4jB,IAAMoK,EAASF,GACpB9tB,KAAKiuB,SAAW,SAAS5pB,GACvB2a,EAAOhf,KAAK4jB,IAAMkK,KAAmC,GAAKzpB,GAE5DrE,KAAKkuB,SAAW,WACd,OAAOlP,EAAOhf,KAAK4jB,IAAMkK,KAAmC,IAE9D9tB,KAAKmuB,eAAiB,SAASC,GAC7BpP,EAAOhf,KAAK4jB,IAAMkK,KAAyC,GAAKM,GAElEpuB,KAAKquB,eAAiB,WACpB,OAAOrP,EAAOhf,KAAK4jB,IAAMkK,KAAyC,IAEpE9tB,KAAKsuB,aAAe,SAASC,GAC3BvP,EAAOhf,KAAK4jB,IAAMkK,KAAuC,GAAKS,GAEhEvuB,KAAKwuB,WAAa,SAASjmB,GACzBA,EAASA,EAAS,EAAI,EACtBiW,EAAMxe,KAAK4jB,IAAMkK,KAAqC,GAAKvlB,GAE7DvI,KAAKyuB,WAAa,WAChB,OAAmE,GAA5DjQ,EAAMxe,KAAK4jB,IAAMkK,KAAqC,IAE/D9tB,KAAK0uB,aAAe,SAASC,GAC3BA,EAAWA,EAAW,EAAI,EAC1BnQ,EAAMxe,KAAK4jB,IAAMkK,KAAuC,GAAKa,GAE/D3uB,KAAK4uB,aAAe,WAClB,OAAqE,GAA9DpQ,EAAMxe,KAAK4jB,IAAMkK,KAAuC,IAEjE9tB,KAAK+N,KAAO,SAAS1J,EAAM+pB,GACzBpuB,KAAKiuB,SAAS5pB,GACdrE,KAAKmuB,eAAeC,GACpBpuB,KAAKsuB,aAAa,GAClBtuB,KAAKwuB,YAAW,GAChBxuB,KAAK0uB,cAAa,IAEpB1uB,KAAK6uB,QAAU,WACb,IAAIrvB,EAAQwf,EAAOhf,KAAK4jB,IAAMkK,KAAuC,GACrE9O,EAAOhf,KAAK4jB,IAAMkK,KAAuC,GAAKtuB,EAAQ,GAExEQ,KAAK+uB,YAAc,WACjB,IAAIjnB,EAAOkX,EAAOhf,KAAK4jB,IAAMkK,KAAuC,GAEpE,OADA9O,EAAOhf,KAAK4jB,IAAMkK,KAAuC,GAAKhmB,EAAO,EACrD,IAATA,GAYX,IAAIknB,GAAO,CAAEC,UAAW,SAASlO,GAE/B,MADkB,gEACCmO,KAAKnO,GAAU/Y,MAAM,IACvCmnB,eAAgB,SAASvgB,EAAOwgB,GAEjC,IADA,IAAIC,EAAK,EACAxuB,EAAI+N,EAAM9N,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC1C,IAAIyuB,EAAO1gB,EAAM/N,GACJ,MAATyuB,EACF1gB,EAAMqd,OAAOprB,EAAG,GACE,OAATyuB,GACT1gB,EAAMqd,OAAOprB,EAAG,GAChBwuB,KACSA,IACTzgB,EAAMqd,OAAOprB,EAAG,GAChBwuB,KAGJ,GAAID,EACF,KAAOC,EAAIA,IACTzgB,EAAM2gB,QAAQ,MAGlB,OAAO3gB,GACN4gB,UAAW,SAAS7O,GACrB,IAAI8O,EAAgC,MAAnB9O,EAAK5Y,OAAO,GAAY2nB,EAAoC,MAApB/O,EAAKrM,QAAQ,GAUtE,OATAqM,EAAOqO,GAAKG,eAAexO,EAAKgP,MAAM,KAAKC,QAAO,SAASC,GACzD,QAASA,MACNJ,GAAYhhB,KAAK,OACRghB,IACZ9O,EAAO,KAELA,GAAQ+O,IACV/O,GAAQ,MAEF8O,EAAa,IAAM,IAAM9O,GAChCE,QAAS,SAASF,GACnB,IAAIrb,EAAS0pB,GAAKC,UAAUtO,GAAOmP,EAAOxqB,EAAO,GAAIuH,EAAMvH,EAAO,GAClE,OAAKwqB,GAASjjB,GAGVA,IACFA,EAAMA,EAAIyH,OAAO,EAAGzH,EAAI/L,OAAS,IAE5BgvB,EAAOjjB,GALL,KAMRkjB,SAAU,SAASpP,GACpB,GAAa,MAATA,EACF,MAAO,IAGT,IAAIqP,GADJrP,GADAA,EAAOqO,GAAKQ,UAAU7O,IACVzE,QAAQ,MAAO,KACN5I,YAAY,KACjC,OAAmB,IAAf0c,EACKrP,EACFA,EAAKrM,OAAO0b,EAAY,IAC9BC,QAAS,SAAStP,GACnB,OAAOqO,GAAKC,UAAUtO,GAAM,IAC3BlS,KAAM,WACP,IAAIyhB,EAAQ/jB,MAAM3K,UAAUwG,MAAMxD,KAAKtE,UAAW,GAClD,OAAO8uB,GAAKQ,UAAUU,EAAMzhB,KAAK,OAChC0hB,MAAO,SAAStU,EAAGuU,GACpB,OAAOpB,GAAKQ,UAAU3T,EAAI,IAAMuU,KAsB9BC,GAAU,CAAEpxB,QAAS,WAEvB,IADA,IAAIqxB,EAAe,GAAIC,GAAmB,EACjC1vB,EAAIX,UAAUY,OAAS,EAAGD,IAAM,IAAM0vB,EAAkB1vB,IAAK,CACpE,IAAI8f,EAAO9f,GAAK,EAAIX,UAAUW,GAAK2vB,GAAG7jB,MACtC,GAAoB,iBAATgU,EACT,MAAM,IAAIlgB,UAAU,6CACf,IAAKkgB,EACV,MAAO,GAET2P,EAAe3P,EAAO,IAAM2P,EAC5BC,EAAsC,MAAnB5P,EAAK5Y,OAAO,GAKjC,OAAQwoB,EAAmB,IAAM,KAHjCD,EAAetB,GAAKG,eAAemB,EAAaX,MAAM,KAAKC,QAAO,SAASC,GACzE,QAASA,MACNU,GAAkB9hB,KAAK,OAC2B,KACtDgiB,SAAU,SAASzf,EAAM0f,GAG1B,SAASzU,EAAK1L,GAEZ,IADA,IAAInC,EAAQ,EACLA,EAAQmC,EAAIzP,QACE,KAAfyP,EAAInC,GADiBA,KAK3B,IADA,IAAIC,EAAMkC,EAAIzP,OAAS,EAChBuN,GAAO,GACK,KAAbkC,EAAIlC,GADOA,KAIjB,OAAID,EAAQC,EACH,GACFkC,EAAIvI,MAAMoG,EAAOC,EAAMD,EAAQ,GAfxC4C,EAAOqf,GAAQpxB,QAAQ+R,GAAMsD,OAAO,GACpCoc,EAAKL,GAAQpxB,QAAQyxB,GAAIpc,OAAO,GAoBhC,IAJA,IAAIqc,EAAY1U,EAAKjL,EAAK2e,MAAM,MAC5BiB,EAAU3U,EAAKyU,EAAGf,MAAM,MACxB7uB,EAASqM,KAAKkI,IAAIsb,EAAU7vB,OAAQ8vB,EAAQ9vB,QAC5C+vB,EAAkB/vB,EACbD,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,GAAI8vB,EAAU9vB,KAAO+vB,EAAQ/vB,GAAI,CAC/BgwB,EAAkBhwB,EAClB,MAGJ,IAAIiwB,EAAc,GAClB,IAASjwB,EAAIgwB,EAAiBhwB,EAAI8vB,EAAU7vB,OAAQD,IAClDiwB,EAAYxqB,KAAK,MAGnB,OADAwqB,EAAcA,EAAYvmB,OAAOqmB,EAAQ5oB,MAAM6oB,KAC5BpiB,KAAK,OAEtBsiB,GAAM,CAAEC,KAAM,GAAIjjB,KAAM,aACzBkjB,SAAU,aACVC,SAAU,SAASC,EAAKC,GACzBL,GAAIC,KAAKG,GAAO,CAAEE,MAAO,GAAI7iB,OAAQ,GAAI4iB,IAAAA,GACzCZ,GAAGc,eAAeH,EAAKJ,GAAIQ,aAC1BA,WAAY,CAAEvP,KAAM,SAASwP,GAC9B,IAAIC,EAAMV,GAAIC,KAAKQ,EAAOrR,KAAKuR,MAC/B,IAAKD,EACH,MAAM,IAAIjB,GAAGmB,WAAW,IAE1BH,EAAOC,IAAMA,EACbD,EAAOI,UAAW,GACjBC,MAAO,SAASL,GACjBA,EAAOC,IAAIL,IAAIU,MAAMN,EAAOC,MAC3BK,MAAO,SAASN,GACjBA,EAAOC,IAAIL,IAAIU,MAAMN,EAAOC,MAC3B1iB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GACjD,IAAKwa,EAAOC,MAAQD,EAAOC,IAAIL,IAAIY,SACjC,MAAM,IAAIxB,GAAGmB,WAAW,IAG1B,IADA,IAAIM,EAAY,EACPpxB,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,IAAIyE,EACJ,IACEA,EAASksB,EAAOC,IAAIL,IAAIY,SAASR,EAAOC,KACxC,MAAOznB,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAE1B,QAAe,IAAXrsB,GAAmC,IAAd2sB,EACvB,MAAM,IAAIzB,GAAGmB,WAAW,GAE1B,GAAIrsB,MAAAA,EACF,MACF2sB,IACAF,EAAQ9iB,EAASpO,GAAKyE,EAKxB,OAHI2sB,IACFT,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExBumB,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,IAAKwa,EAAOC,MAAQD,EAAOC,IAAIL,IAAIe,SACjC,MAAM,IAAI3B,GAAGmB,WAAW,IAE1B,IACE,IAAK,IAAI9wB,EAAI,EAAGA,EAAIC,EAAQD,IAC1B2wB,EAAOC,IAAIL,IAAIe,SAASX,EAAOC,IAAKM,EAAQ9iB,EAASpO,IAEvD,MAAOmJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAK1B,OAHI7wB,IACF0wB,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExB7K,IACJuxB,gBAAiB,CAAEJ,SAAU,SAASP,GACzC,IAAKA,EAAIJ,MAAMvwB,OAAQ,CACrB,IAAIwE,EAAS,KACb,GAAIqa,EAAqB,CACvB,IACIhM,EAAMlD,GAAO2F,MAAQ3F,GAAO2F,MADlB,KACmC,IAAI3F,GADvC,KAEVwhB,EAAY,EAChB,IACEA,EAAY1R,EAAO8R,SAASnS,EAAQoS,MAAMC,GAAI5e,EAAK,EAJvC,IAImD,MAC/D,MAAO3J,GACP,IAAoC,GAAhCA,EAAEqG,WAAWgD,QAAQ,OAGvB,MAAMrJ,EAFNioB,EAAY,EAKd3sB,EADE2sB,EAAY,EACLte,EAAI3L,MAAM,EAAGiqB,GAAW5hB,SAAS,SAEjC,SAEe,oBAAV7G,QAAiD,mBAAjBA,OAAOgpB,OAExC,QADfltB,EAASkE,OAAOgpB,OAAO,cAErBltB,GAAU,MAEgB,mBAAZmtB,UAED,QADfntB,EAASmtB,cAEPntB,GAAU,MAGd,IAAKA,EACH,OAAO,KAETmsB,EAAIJ,MAAQqB,GAAmBptB,GAAQ,GAEzC,OAAOmsB,EAAIJ,MAAM1J,SAChBwK,SAAU,SAASV,EAAK3f,GACb,OAARA,GAAwB,KAARA,GAClBkG,EAAIkL,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,IAEF,GAAPsD,GACF2f,EAAIjjB,OAAOlI,KAAKwL,IAEnBggB,MAAO,SAASL,GACbA,EAAIjjB,QAAUijB,EAAIjjB,OAAO1N,OAAS,IACpCkX,EAAIkL,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,MAEZmkB,iBAAkB,CAAER,SAAU,SAASV,EAAK3f,GACnC,OAARA,GAAwB,KAARA,GAClB1R,EAAI8iB,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,IAEF,GAAPsD,GACF2f,EAAIjjB,OAAOlI,KAAKwL,IAEnBggB,MAAO,SAASL,GACbA,EAAIjjB,QAAUijB,EAAIjjB,OAAO1N,OAAS,IACpCV,EAAI8iB,EAAkBuO,EAAIjjB,OAAQ,IAClCijB,EAAIjjB,OAAS,OAGjB,SAASokB,GAAU1gB,GAGjB,IAFA,IAAI2gB,EAlxBN,SAAqB3gB,EAAM4gB,GAGzB,OAFKA,IACHA,EAHc,IAIT3lB,KAAK4lB,KAAK7gB,EAAO4gB,GAAUA,EA+wBhBE,CAAY9gB,EAAM,OAChC0R,EAAMsG,GAAQ2I,GACX3gB,EAAO2gB,GACZrU,EAAMoF,EAAM1R,MAAW,GAAK,EAC9B,OAAO0R,EAET,IAAIqP,GAAQ,CAAEC,UAAW,KAAMC,MAAO,SAASA,GAC7C,OAAOF,GAAMG,WAAW,KAAM,IAAK,MAAa,IAC/CA,WAAY,SAASC,EAAQC,EAAOC,EAAMpC,GAC3C,GAAIX,GAAGgD,SAASD,IAAS/C,GAAGiD,OAAOF,GACjC,MAAM,IAAI/C,GAAGmB,WAAW,IAErBsB,GAAMC,YACTD,GAAMC,UAAY,CAAErmB,IAAK,CAAEsT,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASlmB,OAAQulB,GAAMU,SAASjmB,OAAQmmB,MAAOZ,GAAMU,SAASE,MAAOC,OAAQb,GAAMU,SAASG,OAAQC,OAAQd,GAAMU,SAASI,OAAQC,MAAOf,GAAMU,SAASK,MAAOC,QAAShB,GAAMU,SAASM,QAASC,QAASjB,GAAMU,SAASO,SAAW1C,OAAQ,CAAE2C,OAAQlB,GAAM1B,WAAW4C,SAAYC,KAAM,CAAEjU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWpC,OAAQ,CAAE2C,OAAQlB,GAAM1B,WAAW4C,OAAQplB,KAAMkkB,GAAM1B,WAAWxiB,KAAMgB,MAAOkjB,GAAM1B,WAAWxhB,MAAOskB,SAAUpB,GAAM1B,WAAW8C,SAAUC,KAAMrB,GAAM1B,WAAW+C,KAAMC,MAAOtB,GAAM1B,WAAWgD,QAAWC,KAAM,CAAErU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,QAASa,SAAUxB,GAAMU,SAASc,UAAYjD,OAAQ,IAAMkD,OAAQ,CAAEvU,KAAM,CAAEuT,QAAST,GAAMU,SAASD,QAASE,QAASX,GAAMU,SAASC,SAAWpC,OAAQhB,GAAGmE,qBAEv3B,IAAIxU,EAAOqQ,GAAG4C,WAAWC,EAAQC,EAAOC,EAAMpC,GAqB9C,OApBIX,GAAGoE,MAAMzU,EAAKoT,OAChBpT,EAAKwT,SAAWV,GAAMC,UAAUrmB,IAAIsT,KACpCA,EAAKoR,WAAa0B,GAAMC,UAAUrmB,IAAI2kB,OACtCrR,EAAK0U,SAAW,IACPrE,GAAGsE,OAAO3U,EAAKoT,OACxBpT,EAAKwT,SAAWV,GAAMC,UAAUkB,KAAKjU,KACrCA,EAAKoR,WAAa0B,GAAMC,UAAUkB,KAAK5C,OACvCrR,EAAK4U,UAAY,EACjB5U,EAAK0U,SAAW,MACPrE,GAAGwE,OAAO7U,EAAKoT,OACxBpT,EAAKwT,SAAWV,GAAMC,UAAUsB,KAAKrU,KACrCA,EAAKoR,WAAa0B,GAAMC,UAAUsB,KAAKhD,QAC9BhB,GAAGyE,SAAS9U,EAAKoT,QAC1BpT,EAAKwT,SAAWV,GAAMC,UAAUwB,OAAOvU,KACvCA,EAAKoR,WAAa0B,GAAMC,UAAUwB,OAAOlD,QAE3CrR,EAAK+R,UAAYnmB,KAAKL,MAClB2nB,IACFA,EAAOwB,SAASvB,GAASnT,GAEpBA,GACN+U,0BAA2B,SAAS/U,GACrC,GAAIA,EAAK0U,UAAY1U,EAAK0U,SAAS7b,SAAU,CAE3C,IADA,IAAIzI,EAAM,GACD1P,EAAI,EAAGA,EAAIsf,EAAK4U,YAAal0B,EACpC0P,EAAIjK,KAAK6Z,EAAK0U,SAASh0B,IACzB,OAAO0P,EAET,OAAO4P,EAAK0U,UACXM,wBAAyB,SAAShV,GACnC,OAAKA,EAAK0U,SAEN1U,EAAK0U,SAAS7b,SACTmH,EAAK0U,SAAS7b,SAAS,EAAGmH,EAAK4U,WACjC,IAAIlnB,WAAWsS,EAAK0U,UAHlB,IAAIhnB,WAAW,IAIvBunB,kBAAmB,SAASjV,EAAMkV,GACnCA,KAAiB,EACjB,IAAIC,EAAenV,EAAK0U,SAAW1U,EAAK0U,SAAS/zB,OAAS,EAC1D,KAAIw0B,GAAgBD,GAApB,CAGAA,EAAcloB,KAAKmL,IAAI+c,EAAaC,GAAgBA,EADxB,QAC+D,EAAI,SAAW,GACtF,GAAhBA,IACFD,EAAcloB,KAAKmL,IAAI+c,EAAa,MACtC,IAAIE,EAAcpV,EAAK0U,SACvB1U,EAAK0U,SAAW,IAAIhnB,WAAWwnB,GAC3BlV,EAAK4U,UAAY,GACnB5U,EAAK0U,SAASpZ,IAAI8Z,EAAYvc,SAAS,EAAGmH,EAAK4U,WAAY,KAE5DS,kBAAmB,SAASrV,EAAMsV,GAEnC,GADAA,KAAa,EACTtV,EAAK4U,WAAaU,EAAtB,CAEA,GAAe,GAAXA,EAGF,OAFAtV,EAAK0U,SAAW,UAChB1U,EAAK4U,UAAY,GAGnB,IAAK5U,EAAK0U,UAAY1U,EAAK0U,SAAS7b,SAAU,CAC5C,IAAIuc,EAAcpV,EAAK0U,SAMvB,OALA1U,EAAK0U,SAAW,IAAIhnB,WAAW4nB,GAC3BF,GACFpV,EAAK0U,SAASpZ,IAAI8Z,EAAYvc,SAAS,EAAG7L,KAAKkI,IAAIogB,EAAStV,EAAK4U,kBAEnE5U,EAAK4U,UAAYU,GAKnB,GAFKtV,EAAK0U,WACR1U,EAAK0U,SAAW,IACd1U,EAAK0U,SAAS/zB,OAAS20B,EACzBtV,EAAK0U,SAAS/zB,OAAS20B,OAEvB,KAAOtV,EAAK0U,SAAS/zB,OAAS20B,GAC5BtV,EAAK0U,SAASvuB,KAAK,GACvB6Z,EAAK4U,UAAYU,IAChB9B,SAAU,CAAED,QAAS,SAASvT,GAC/B,IAAIuV,EAAO,GAsBX,OArBAA,EAAKvE,IAAMX,GAAGyE,SAAS9U,EAAKoT,MAAQpT,EAAKkG,GAAK,EAC9CqP,EAAKC,IAAMxV,EAAKkG,GAChBqP,EAAKnC,KAAOpT,EAAKoT,KACjBmC,EAAKE,MAAQ,EACbF,EAAKG,IAAM,EACXH,EAAKI,IAAM,EACXJ,EAAKhE,KAAOvR,EAAKuR,KACblB,GAAGoE,MAAMzU,EAAKoT,MAChBmC,EAAKxjB,KAAO,KACHse,GAAGsE,OAAO3U,EAAKoT,MACxBmC,EAAKxjB,KAAOiO,EAAK4U,UACRvE,GAAGwE,OAAO7U,EAAKoT,MACxBmC,EAAKxjB,KAAOiO,EAAKqU,KAAK1zB,OAEtB40B,EAAKxjB,KAAO,EAEdwjB,EAAKK,MAAQ,IAAIhqB,KAAKoU,EAAK+R,WAC3BwD,EAAKM,MAAQ,IAAIjqB,KAAKoU,EAAK+R,WAC3BwD,EAAKO,MAAQ,IAAIlqB,KAAKoU,EAAK+R,WAC3BwD,EAAKQ,QAAU,KACfR,EAAKS,OAAShpB,KAAK4lB,KAAK2C,EAAKxjB,KAAOwjB,EAAKQ,SAClCR,GACN9B,QAAS,SAASzT,EAAMuV,QACP,IAAdA,EAAKnC,OACPpT,EAAKoT,KAAOmC,EAAKnC,WAEI,IAAnBmC,EAAKxD,YACP/R,EAAK+R,UAAYwD,EAAKxD,gBAEN,IAAdwD,EAAKxjB,MACP+gB,GAAMuC,kBAAkBrV,EAAMuV,EAAKxjB,OAEpCxE,OAAQ,SAAS2lB,EAAQC,GAC1B,MAAM9C,GAAG4F,cAAc,KACtBvC,MAAO,SAASR,EAAQC,EAAOC,EAAMpC,GACtC,OAAO8B,GAAMG,WAAWC,EAAQC,EAAOC,EAAMpC,IAC5C2C,OAAQ,SAASuC,EAAUC,EAASC,GACrC,GAAI/F,GAAGoE,MAAMyB,EAAS9C,MAAO,CAC3B,IAAIiD,EACJ,IACEA,EAAWhG,GAAGiG,WAAWH,EAASC,GAClC,MAAOvsB,IAET,GAAIwsB,EACF,IAAK,IAAI31B,KAAK21B,EAAS3B,SACrB,MAAM,IAAIrE,GAAGmB,WAAW,WAIvB0E,EAAShD,OAAOwB,SAASwB,EAASnvB,MACzCmvB,EAASnvB,KAAOqvB,EAChBD,EAAQzB,SAAS0B,GAAYF,EAC7BA,EAAShD,OAASiD,GACjBvC,OAAQ,SAASV,EAAQC,UACnBD,EAAOwB,SAASvB,IACtBU,MAAO,SAASX,EAAQC,GACzB,IAAInT,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GACjC,IAAK,IAAIzyB,KAAKsf,EAAK0U,SACjB,MAAM,IAAIrE,GAAGmB,WAAW,WAEnB0B,EAAOwB,SAASvB,IACtBW,QAAS,SAAS9T,GACnB,IAAIuW,EAAU,CAAC,IAAK,MACpB,IAAK,IAAIC,KAAQxW,EAAK0U,SACf1U,EAAK0U,SAAS9yB,eAAe40B,IAGlCD,EAAQpwB,KAAKqwB,GAEf,OAAOD,GACNxC,QAAS,SAASb,EAAQuD,EAASC,GACpC,IAAI1W,EAAO8S,GAAMG,WAAWC,EAAQuD,EAAS,MAAa,GAE1D,OADAzW,EAAKqU,KAAOqC,EACL1W,GACNsU,SAAU,SAAStU,GACpB,IAAKqQ,GAAGwE,OAAO7U,EAAKoT,MAClB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKqU,OACTjD,WAAY,CAAExiB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GACjE,IAAIjC,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAIiC,GAAYtF,EAAOrR,KAAK4U,UAC1B,OAAO,EACT,IAAI7iB,EAAO/E,KAAKkI,IAAImc,EAAOrR,KAAK4U,UAAY+B,EAAUh2B,GACtD,GAAIoR,EAAO,GAAK2iB,EAAS7b,SACvB+Y,EAAQtW,IAAIoZ,EAAS7b,SAAS8d,EAAUA,EAAW5kB,GAAOjD,QAE1D,IAAK,IAAIpO,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAASiC,EAAWj2B,GAE9C,OAAOqR,GACNnC,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GAI5D,GAHIhF,EAAQ/iB,SAAWwP,EAAMxP,SAC3B+nB,GAAS,IAENj2B,EACH,OAAO,EACT,IAAIqf,EAAOqR,EAAOrR,KAElB,GADAA,EAAK+R,UAAYnmB,KAAKL,MAClBqmB,EAAQ/Y,YAAcmH,EAAK0U,UAAY1U,EAAK0U,SAAS7b,UAAW,CAClE,GAAI+d,EAGF,OAFA5W,EAAK0U,SAAW9C,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAClDqf,EAAK4U,UAAYj0B,EACVA,EACF,GAAuB,IAAnBqf,EAAK4U,WAAgC,IAAb+B,EAGjC,OAFA3W,EAAK0U,SAAW9C,EAAQ/pB,MAAMiH,EAAQA,EAASnO,GAC/Cqf,EAAK4U,UAAYj0B,EACVA,EACF,GAAIg2B,EAAWh2B,GAAUqf,EAAK4U,UAEnC,OADA5U,EAAK0U,SAASpZ,IAAIsW,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAASg2B,GACtDh2B,EAIX,GADAmyB,GAAMmC,kBAAkBjV,EAAM2W,EAAWh2B,GACrCqf,EAAK0U,SAAS7b,UAAY+Y,EAAQ/Y,SACpCmH,EAAK0U,SAASpZ,IAAIsW,EAAQ/Y,SAAS/J,EAAQA,EAASnO,GAASg2B,QAE7D,IAAK,IAAIj2B,EAAI,EAAGA,EAAIC,EAAQD,IAC1Bsf,EAAK0U,SAASiC,EAAWj2B,GAAKkxB,EAAQ9iB,EAASpO,GAInD,OADAsf,EAAK4U,UAAY5nB,KAAKmL,IAAI6H,EAAK4U,UAAW+B,EAAWh2B,GAC9CA,GACNqzB,OAAQ,SAAS3C,EAAQviB,EAAQ+nB,GAClC,IAAIF,EAAW7nB,EAQf,GAPe,IAAX+nB,EACFF,GAAYtF,EAAOsF,SACC,IAAXE,GACLxG,GAAGsE,OAAOtD,EAAOrR,KAAKoT,QACxBuD,GAAYtF,EAAOrR,KAAK4U,WAGxB+B,EAAW,EACb,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,OAAOmF,GACNzC,SAAU,SAAS7C,EAAQviB,EAAQnO,GACpCmyB,GAAMmC,kBAAkB5D,EAAOrR,KAAMlR,EAASnO,GAC9C0wB,EAAOrR,KAAK4U,UAAY5nB,KAAKmL,IAAIkZ,EAAOrR,KAAK4U,UAAW9lB,EAASnO,IAChEwzB,KAAM,SAAS9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,GAEzD,GADAlW,EAAmB,IAAZgW,IACFzG,GAAGsE,OAAOtD,EAAOrR,KAAKoT,MACzB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI/N,EACAwT,EACAvC,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAc,EAARsC,GAActC,EAAS7lB,SAAWA,EAGjC,CAUL,IATI8nB,EAAW,GAAKA,EAAWh2B,EAAS+zB,EAAS/zB,UAE7C+zB,EADEA,EAAS7b,SACA6b,EAAS7b,SAAS8d,EAAUA,EAAWh2B,GAEvCqL,MAAM3K,UAAUwG,MAAMxD,KAAKqwB,EAAUiC,EAAUA,EAAWh2B,IAGzEs2B,GAAY,IACZxT,EAAMgP,GAAU9xB,IAEd,MAAM,IAAI0vB,GAAGmB,WAAW,IAE1B/N,KAAS,EACTpF,EAAM/C,IAAIoZ,EAAUjR,IAAQ,QAhB5BwT,GAAY,EACZxT,EAAMiR,EAAS3jB,WAiBjB,MAAO,CAAE0S,IAAAA,EAAKwT,UAAAA,IACb7C,MAAO,SAAS/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAClD,IAAK7G,GAAGsE,OAAOtD,EAAOrR,KAAKoT,MACzB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,OAAgB,EAAZ0F,GAGepE,GAAM1B,WAAWxhB,MAAMyhB,EAAQO,EAAS,EAAGjxB,EAAQmO,GAAQ,GAFrE,KAKPuhB,GAAK,CAAEV,KAAM,KAAMwH,OAAQ,GAAIC,QAAS,GAAIC,QAAS,GAAIC,UAAW,EAAGC,UAAW,KAAMC,YAAa,IAAKC,aAAa,EAAOC,mBAAmB,EAAMC,iBAAkB,GAAIC,SAAU,CAAEC,UAAW,CAAEC,KAAM,EAAGC,MAAO,IAAOvG,WAAY,KAAMyE,cAAe,GAAI+B,YAAa,KAAMC,eAAgB,EAAGC,WAAY,SAAS1X,EAAM2X,GAGrU,GADAA,EAAOA,GAAQ,KADf3X,EAAO0P,GAAQpxB,QAAQuxB,GAAG7jB,MAAOgU,IAG/B,MAAO,CAAEA,KAAM,GAAIR,KAAM,MAC3B,IAAIoY,EAAW,CAAEC,cAAc,EAAMC,cAAe,GACpD,IAAK,IAAI9B,KAAQ4B,OACI,IAAfD,EAAK3B,KACP2B,EAAK3B,GAAQ4B,EAAS5B,IAG1B,GAAI2B,EAAKG,cAAgB,EACvB,MAAM,IAAIjI,GAAGmB,WAAW,IAO1B,IALA,IAAI/iB,EAAQogB,GAAKG,eAAexO,EAAKgP,MAAM,KAAKC,QAAO,SAASC,GAC9D,QAASA,MACP,GACA6I,EAAUlI,GAAGV,KACb6I,EAAe,IACV93B,EAAI,EAAGA,EAAI+N,EAAM9N,OAAQD,IAAK,CACrC,IAAI+3B,EAAS/3B,IAAM+N,EAAM9N,OAAS,EAClC,GAAI83B,GAAUN,EAAKjF,OACjB,MASF,GAPAqF,EAAUlI,GAAGiG,WAAWiC,EAAS9pB,EAAM/N,IACvC83B,EAAe3J,GAAKmB,MAAMwI,EAAc/pB,EAAM/N,IAC1C2vB,GAAGqI,aAAaH,MACbE,GAAUA,GAAUN,EAAKE,gBAC5BE,EAAUA,EAAQI,QAAQhJ,OAGzB8I,GAAUN,EAAKS,OAElB,IADA,IAAIpQ,EAAQ,EACL6H,GAAGwE,OAAO0D,EAAQnF,OAAO,CAC9B,IAAIiB,EAAOhE,GAAGiE,SAASkE,GAIvB,GAHAA,EAAetI,GAAQpxB,QAAQ+vB,GAAKnO,QAAQ8X,GAAenE,GAE3DkE,EADalI,GAAG6H,WAAWM,EAAc,CAAEF,cAAeH,EAAKG,gBAC9CtY,KACbwI,IAAU,GACZ,MAAM,IAAI6H,GAAGmB,WAAW,KAKhC,MAAO,CAAEhR,KAAMgY,EAAcxY,KAAMuY,IAClCM,QAAS,SAAS7Y,GAEnB,IADA,IAAIQ,IACS,CACX,GAAI6P,GAAGyI,OAAO9Y,GAAO,CACnB,IAAIgT,EAAQhT,EAAKgT,MAAM+F,WACvB,OAAKvY,EAE8B,MAA5BwS,EAAMA,EAAMryB,OAAS,GAAaqyB,EAAQ,IAAMxS,EAAOwS,EAAQxS,EAD7DwS,EAGXxS,EAAOA,EAAOR,EAAKjZ,KAAO,IAAMyZ,EAAOR,EAAKjZ,KAC5CiZ,EAAOA,EAAKkT,SAEb8F,SAAU,SAASC,EAAU9F,GAE9B,IADA,IAAI+F,EAAO,EACFx4B,EAAI,EAAGA,EAAIyyB,EAAMxyB,OAAQD,IAChCw4B,GAAQA,GAAQ,GAAKA,EAAO/F,EAAMrlB,WAAWpN,GAAK,EAEpD,OAAQu4B,EAAWC,IAAS,GAAK7I,GAAGkH,UAAU52B,QAC7Cw4B,YAAa,SAASnZ,GACvB,IAAIkZ,EAAO7I,GAAG2I,SAAShZ,EAAKkT,OAAOhN,GAAIlG,EAAKjZ,MAC5CiZ,EAAKoZ,UAAY/I,GAAGkH,UAAU2B,GAC9B7I,GAAGkH,UAAU2B,GAAQlZ,GACpBqZ,eAAgB,SAASrZ,GAC1B,IAAIkZ,EAAO7I,GAAG2I,SAAShZ,EAAKkT,OAAOhN,GAAIlG,EAAKjZ,MAC5C,GAAIspB,GAAGkH,UAAU2B,KAAUlZ,EACzBqQ,GAAGkH,UAAU2B,GAAQlZ,EAAKoZ,eAG1B,IADA,IAAIb,EAAUlI,GAAGkH,UAAU2B,GACpBX,GAAS,CACd,GAAIA,EAAQa,YAAcpZ,EAAM,CAC9BuY,EAAQa,UAAYpZ,EAAKoZ,UACzB,MAEFb,EAAUA,EAAQa,YAGrB9C,WAAY,SAASpD,EAAQC,GAC9B,IAAImG,EAAUjJ,GAAGkJ,UAAUrG,GAC3B,GAAIoG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,EAASpG,GAGnC,IADA,IAAIgG,EAAO7I,GAAG2I,SAAS9F,EAAOhN,GAAIiN,GACzBnT,EAAOqQ,GAAGkH,UAAU2B,GAAOlZ,EAAMA,EAAOA,EAAKoZ,UAAW,CAC/D,IAAII,EAAWxZ,EAAKjZ,KACpB,GAAIiZ,EAAKkT,OAAOhN,KAAOgN,EAAOhN,IAAMsT,IAAarG,EAC/C,OAAOnT,EAGX,OAAOqQ,GAAG9iB,OAAO2lB,EAAQC,IACxBF,WAAY,SAASC,EAAQC,EAAOC,EAAM7B,GAC3C,IAAIvR,EAAO,IAAIqQ,GAAGoJ,OAAOvG,EAAQC,EAAOC,EAAM7B,GAE9C,OADAlB,GAAG8I,YAAYnZ,GACRA,GACN0Z,YAAa,SAAS1Z,GACvBqQ,GAAGgJ,eAAerZ,IACjB8Y,OAAQ,SAAS9Y,GAClB,OAAOA,IAASA,EAAKkT,QACpBwF,aAAc,SAAS1Y,GACxB,QAASA,EAAK2Y,SACbhE,OAAQ,SAASvB,GAClB,OAA0B,QAAX,MAAPA,IACPqB,MAAO,SAASrB,GACjB,OAA0B,QAAX,MAAPA,IACPyB,OAAQ,SAASzB,GAClB,OAA0B,QAAX,MAAPA,IACP0B,SAAU,SAAS1B,GACpB,OAA0B,OAAX,MAAPA,IACPC,SAAU,SAASD,GACpB,OAA0B,QAAX,MAAPA,IACPE,OAAQ,SAASF,GAClB,OAA0B,OAAX,MAAPA,IACPuG,SAAU,SAASvG,GACpB,OAA0B,QAAX,MAAPA,IACPwG,UAAW,CAAE3J,EAAK,EAAG,KAAM,EAAG4J,EAAK,IAAK,KAAM,IAAKpjB,EAAK,KAAM,KAAM,MAAQqjB,kBAAmB,SAASvlB,GACzG,IAAIyiB,EAAQ3G,GAAGuJ,UAAUrlB,GACzB,QAAqB,IAAVyiB,EACT,MAAM,IAAI3zB,MAAM,2BAA6BkR,GAE/C,OAAOyiB,GACN+C,wBAAyB,SAASC,GACnC,IAAIC,EAAQ,CAAC,IAAK,IAAK,MAAa,EAAPD,GAI7B,OAHW,IAAPA,IACFC,GAAS,KAEJA,GACNC,gBAAiB,SAASla,EAAMia,GACjC,OAAI5J,GAAGqH,qBAGqB,IAAxBuC,EAAM/mB,QAAQ,MAA6B,IAAZ8M,EAAKoT,SAEL,IAAxB6G,EAAM/mB,QAAQ,MAA6B,IAAZ8M,EAAKoT,SAEZ,IAAxB6G,EAAM/mB,QAAQ,MAA6B,GAAZ8M,EAAKoT,MANtC,EAGA,GAORmG,UAAW,SAAS7sB,GACrB,IAAI4sB,EAAUjJ,GAAG6J,gBAAgBxtB,EAAK,KACtC,OAAI4sB,IAEC5sB,EAAI8mB,SAASjmB,OAEX,EADE,IAER4sB,UAAW,SAASztB,EAAKymB,GAC1B,IAEE,OADW9C,GAAGiG,WAAW5pB,EAAKymB,GACvB,GACP,MAAOtpB,IAET,OAAOwmB,GAAG6J,gBAAgBxtB,EAAK,OAC9B0tB,UAAW,SAAS1tB,EAAKymB,EAAOkH,GACjC,IAAIra,EACJ,IACEA,EAAOqQ,GAAGiG,WAAW5pB,EAAKymB,GAC1B,MAAOtpB,GACP,OAAOA,EAAEywB,MAEX,IAAIhB,EAAUjJ,GAAG6J,gBAAgBxtB,EAAK,MACtC,GAAI4sB,EACF,OAAOA,EAET,GAAIe,EAAO,CACT,IAAKhK,GAAGoE,MAAMzU,EAAKoT,MACjB,OAAO,GAET,GAAI/C,GAAGyI,OAAO9Y,IAASqQ,GAAGwI,QAAQ7Y,KAAUqQ,GAAG7jB,MAC7C,OAAO,QAGT,GAAI6jB,GAAGoE,MAAMzU,EAAKoT,MAChB,OAAO,GAGX,OAAO,GACNmH,QAAS,SAASva,EAAMgX,GACzB,OAAKhX,EAGDqQ,GAAGwE,OAAO7U,EAAKoT,MACV,GACE/C,GAAGoE,MAAMzU,EAAKoT,QACmB,MAAtC/C,GAAG0J,wBAAwB/C,IAA0B,IAARA,GACxC,GAGJ3G,GAAG6J,gBAAgBla,EAAMqQ,GAAG0J,wBAAwB/C,IATlD,IAURwD,aAAc,KAAMC,OAAQ,SAASC,EAAUC,GAChDD,EAAWA,GAAY,EACvBC,EAASA,GAAUtK,GAAGmK,aACtB,IAAK,IAAIpI,EAAKsI,EAAUtI,GAAMuI,EAAQvI,IACpC,IAAK/B,GAAGgH,QAAQjF,GACd,OAAOA,EAGX,MAAM,IAAI/B,GAAGmB,WAAW,KACvBoJ,UAAW,SAASxI,GACrB,OAAO/B,GAAGgH,QAAQjF,IACjByI,aAAc,SAASxJ,EAAQqJ,EAAUC,GACrCtK,GAAGyK,WACNzK,GAAGyK,SAAW,aAEdzK,GAAGyK,SAASz5B,UAAY,CAAEkG,OAAQ,CAAEmgB,IAAK,WACvC,OAAO7nB,KAAKmgB,MACX1E,IAAK,SAAS3J,GACf9R,KAAKmgB,KAAOrO,IACTopB,OAAQ,CAAErT,IAAK,WAClB,OAAkC,IAAb,QAAb7nB,KAAKm3B,SACVgE,QAAS,CAAEtT,IAAK,WACnB,OAAkC,IAAb,QAAb7nB,KAAKm3B,SACViE,SAAU,CAAEvT,IAAK,WACpB,OAAoB,KAAb7nB,KAAKm3B,UAGhB,IAAIkE,EAAY,IAAI7K,GAAGyK,SACvB,IAAK,IAAIpL,KAAK2B,EACZ6J,EAAUxL,GAAK2B,EAAO3B,GAExB2B,EAAS6J,EACT,IAAI9I,EAAK/B,GAAGoK,OAAOC,EAAUC,GAG7B,OAFAtJ,EAAOe,GAAKA,EACZ/B,GAAGgH,QAAQjF,GAAMf,EACVA,GACN8J,YAAa,SAAS/I,GACvB/B,GAAGgH,QAAQjF,GAAM,MAChBoC,kBAAmB,CAAE3S,KAAM,SAASwP,GACrC,IAAI+J,EAAS/K,GAAGgL,UAAUhK,EAAOrR,KAAKuR,MACtCF,EAAOD,WAAagK,EAAOhK,WACvBC,EAAOD,WAAWvP,MACpBwP,EAAOD,WAAWvP,KAAKwP,IAExB2C,OAAQ,WACT,MAAM,IAAI3D,GAAGmB,WAAW,MACrB8J,MAAO,SAAStK,GACnB,OAAOA,GAAO,GACbuK,MAAO,SAASvK,GACjB,OAAa,IAANA,GACNwK,QAAS,SAASC,EAAIC,GACvB,OAAOD,GAAM,EAAIC,GAChBvK,eAAgB,SAASH,EAAKC,GAC/BZ,GAAG+G,QAAQpG,GAAO,CAAEI,WAAYH,IAC/BoK,UAAW,SAASrK,GACrB,OAAOX,GAAG+G,QAAQpG,IACjB2K,UAAW,SAAS3I,GAGrB,IAFA,IAAImE,EAAS,GACTyE,EAAQ,CAAC5I,GACN4I,EAAMj7B,QAAQ,CACnB,IAAIuO,EAAI0sB,EAAMn0B,MACd0vB,EAAOhxB,KAAK+I,GACZ0sB,EAAMz1B,KAAKnG,MAAM47B,EAAO1sB,EAAEioB,QAE5B,OAAOA,GACN0E,OAAQ,SAASC,EAAU1V,GACJ,mBAAb0V,IACT1V,EAAW0V,EACXA,GAAW,GAEbzL,GAAG4H,iBACC5H,GAAG4H,eAAiB,GACtBh4B,EAAI,YAAcowB,GAAG4H,eAAiB,2EAExC,IAAId,EAAS9G,GAAGsL,UAAUtL,GAAGV,KAAKqD,OAC9B+I,EAAY,EAChB,SAASC,EAAW1C,GAElB,OADAjJ,GAAG4H,iBACI7R,EAASkT,GAElB,SAAS/5B,EAAK+5B,GACZ,GAAIA,EACF,OAAK/5B,EAAK08B,aAIV,GAHE18B,EAAK08B,SAAU,EACRD,EAAW1C,MAIhByC,GAAa5E,EAAOx2B,QACxBq7B,EAAW,MAGf7E,EAAOpyB,SAAQ,SAASiuB,GACtB,IAAKA,EAAM9uB,KAAK23B,OACd,OAAOt8B,EAAK,MAEdyzB,EAAM9uB,KAAK23B,OAAO7I,EAAO8I,EAAUv8B,OAEpCyzB,MAAO,SAAS9uB,EAAMi0B,EAAMY,GAC7B,IAEI/Y,EAFA2P,EAAsB,MAAfoJ,EACPmD,GAAUnD,EAEd,GAAIpJ,GAAQU,GAAGV,KACb,MAAM,IAAIU,GAAGmB,WAAW,IACnB,IAAK7B,IAASuM,EAAQ,CAC3B,IAAI3uB,EAAS8iB,GAAG6H,WAAWa,EAAY,CAAEV,cAAc,IAGvD,GAFAU,EAAaxrB,EAAOiT,KACpBR,EAAOzS,EAAOyS,KACVqQ,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGoE,MAAMzU,EAAKoT,MACjB,MAAM,IAAI/C,GAAGmB,WAAW,IAG5B,IAAIwB,EAAQ,CAAE9uB,KAAAA,EAAMi0B,KAAAA,EAAMY,WAAAA,EAAY5B,OAAQ,IAC1CgF,EAAYj4B,EAAK8uB,MAAMA,GAW3B,OAVAmJ,EAAUnJ,MAAQA,EAClBA,EAAMrD,KAAOwM,EACTxM,EACFU,GAAGV,KAAOwM,EACDnc,IACTA,EAAK2Y,QAAU3F,EACXhT,EAAKgT,OACPhT,EAAKgT,MAAMmE,OAAOhxB,KAAK6sB,IAGpBmJ,GACNC,QAAS,SAASrD,GACnB,IAAIxrB,EAAS8iB,GAAG6H,WAAWa,EAAY,CAAEV,cAAc,IACvD,IAAKhI,GAAGqI,aAAanrB,EAAOyS,MAC1B,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAIxR,EAAOzS,EAAOyS,KACdgT,EAAQhT,EAAK2Y,QACbxB,EAAS9G,GAAGsL,UAAU3I,GAC1BhyB,OAAOsG,KAAK+oB,GAAGkH,WAAWxyB,SAAQ,SAASm0B,GAEzC,IADA,IAAIX,EAAUlI,GAAGkH,UAAU2B,GACpBX,GAAS,CACd,IAAI9yB,EAAO8yB,EAAQa,WACoB,IAAnCjC,EAAOjkB,QAAQqlB,EAAQvF,QACzB3C,GAAGqJ,YAAYnB,GAEjBA,EAAU9yB,MAGdua,EAAK2Y,QAAU,KACf,IAAI1V,EAAMjD,EAAKgT,MAAMmE,OAAOjkB,QAAQ8f,GACpChT,EAAKgT,MAAMmE,OAAOrL,OAAO7I,EAAK,IAC7B1V,OAAQ,SAAS2lB,EAAQC,GAC1B,OAAOD,EAAOM,SAASjmB,OAAO2lB,EAAQC,IACrCO,MAAO,SAASlT,EAAM4S,EAAMpC,GAC7B,IACIkC,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GAC1B,IAAK2S,GAAmB,MAAVA,GAA2B,OAAVA,EAC7B,MAAM,IAAI9C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG8J,UAAUjH,EAAQC,GACnC,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASE,MACnB,MAAM,IAAIrD,GAAGmB,WAAW,IAE1B,OAAO0B,EAAOM,SAASE,MAAMR,EAAQC,EAAOC,EAAMpC,IACjDnuB,OAAQ,SAAS2d,EAAM4S,GAIxB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACD/C,GAAGqD,MAAMlT,EAAM4S,EAAM,IAC3BiJ,MAAO,SAAS7b,EAAM4S,GAIvB,OAHAA,OAAgB,IAATA,EAAkBA,EAAO,IAChCA,GAAQ,KACRA,GAAQ,MACD/C,GAAGqD,MAAMlT,EAAM4S,EAAM,IAC3BkJ,UAAW,SAAS9b,EAAM4S,GAG3B,IAFA,IAAImJ,EAAO/b,EAAKgP,MAAM,KAClBjgB,EAAI,GACC7O,EAAI,EAAGA,EAAI67B,EAAK57B,SAAUD,EACjC,GAAK67B,EAAK77B,GAAV,CAEA6O,GAAK,IAAMgtB,EAAK77B,GAChB,IACE2vB,GAAGgM,MAAM9sB,EAAG6jB,GACZ,MAAOvpB,GACP,GAAe,IAAXA,EAAEywB,MACJ,MAAMzwB,KAGX2yB,MAAO,SAAShc,EAAM4S,EAAMpC,GAM7B,YALmB,IAARA,IACTA,EAAMoC,EACNA,EAAO,KAETA,GAAQ,KACD/C,GAAGqD,MAAMlT,EAAM4S,EAAMpC,IAC3B+C,QAAS,SAAS2C,EAAS+F,GAC5B,IAAKvM,GAAQpxB,QAAQ43B,GACnB,MAAM,IAAIrG,GAAGmB,WAAW,IAE1B,IACI0B,EADS7C,GAAG6H,WAAWuE,EAAS,CAAEvJ,QAAQ,IAC1BlT,KACpB,IAAKkT,EACH,MAAM,IAAI7C,GAAGmB,WAAW,IAE1B,IAAIiF,EAAU5H,GAAKe,SAAS6M,GACxBnD,EAAUjJ,GAAG8J,UAAUjH,EAAQuD,GACnC,GAAI6C,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASO,QACnB,MAAM,IAAI1D,GAAGmB,WAAW,IAE1B,OAAO0B,EAAOM,SAASO,QAAQb,EAAQuD,EAASC,IAC/C/C,OAAQ,SAAS+I,EAAUC,GAC5B,IAIYC,EAASzG,EAJjB0G,EAAchO,GAAKnO,QAAQgc,GAC3BI,EAAcjO,GAAKnO,QAAQic,GAC3BI,EAAWlO,GAAKe,SAAS8M,GACzBtG,EAAWvH,GAAKe,SAAS+M,GAM7B,GAHAC,EADSvM,GAAG6H,WAAWwE,EAAU,CAAExJ,QAAQ,IAC1BlT,KAEjBmW,EADS9F,GAAG6H,WAAWyE,EAAU,CAAEzJ,QAAQ,IAC1BlT,MACZ4c,IAAYzG,EACf,MAAM,IAAI9F,GAAGmB,WAAW,IAC1B,GAAIoL,EAAQ5J,QAAUmD,EAAQnD,MAC5B,MAAM,IAAI3C,GAAGmB,WAAW,IAE1B,IASI6E,EATAH,EAAW7F,GAAGiG,WAAWsG,EAASG,GAClCzM,EAAWJ,GAAQI,SAASoM,EAAUI,GAC1C,GAA2B,MAAvBxM,EAAS1oB,OAAO,GAClB,MAAM,IAAIyoB,GAAGmB,WAAW,IAG1B,GAA2B,OAD3BlB,EAAWJ,GAAQI,SAASqM,EAAUE,IACzBj1B,OAAO,GAClB,MAAM,IAAIyoB,GAAGmB,WAAW,IAG1B,IACE6E,EAAWhG,GAAGiG,WAAWH,EAASC,GAClC,MAAOvsB,IAET,GAAIqsB,IAAaG,EAAjB,CAGA,IAAIgE,EAAQhK,GAAGoE,MAAMyB,EAAS9C,MAC1BkG,EAAUjJ,GAAG+J,UAAUwC,EAASG,EAAU1C,GAC9C,GAAIf,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAG1B,GADAA,EAAUjD,EAAWhG,GAAG+J,UAAUjE,EAASC,EAAUiE,GAAShK,GAAG8J,UAAUhE,EAASC,GAElF,MAAM,IAAI/F,GAAGmB,WAAW8H,GAE1B,IAAKsD,EAAQpJ,SAASG,OACpB,MAAM,IAAItD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAaxC,IAAaG,GAAYhG,GAAGqI,aAAarC,GAC3D,MAAM,IAAIhG,GAAGmB,WAAW,IAE1B,GAAI2E,IAAYyG,IACdtD,EAAUjJ,GAAG6J,gBAAgB0C,EAAS,MAEpC,MAAM,IAAIvM,GAAGmB,WAAW8H,GAG5B,IACMjJ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAE+E,EAAUC,GAEhD,MAAO9yB,GACP5J,EAAI,wCAA0Cy8B,EAAW,OAASC,EAAW,0BAA4B9yB,EAAEmjB,SAE7GqD,GAAGgJ,eAAenD,GAClB,IACE0G,EAAQpJ,SAASG,OAAOuC,EAAUC,EAASC,GAC3C,MAAOvsB,GACP,MAAMA,UAENwmB,GAAG8I,YAAYjD,GAEjB,IACM7F,GAAGsH,iBAA6B,YAClCtH,GAAGsH,iBAA6B,WAAE+E,EAAUC,GAC9C,MAAO9yB,GACP5J,EAAI,sCAAwCy8B,EAAW,OAASC,EAAW,0BAA4B9yB,EAAEmjB,YAE1G6G,MAAO,SAASrT,GACjB,IACI0S,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GACtBR,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GAC7BmG,EAAUjJ,GAAG+J,UAAUlH,EAAQC,GAAO,GAC1C,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASK,MACnB,MAAM,IAAIxD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IACMnB,GAAGsH,iBAAiC,gBACtCtH,GAAGsH,iBAAiC,eAAEnX,GAExC,MAAO3W,GACP5J,EAAI,0CAA4CugB,EAAO,0BAA4B3W,EAAEmjB,SAEvFkG,EAAOM,SAASK,MAAMX,EAAQC,GAC9B9C,GAAGqJ,YAAY1Z,GACf,IACMqQ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAEnX,GACtC,MAAO3W,GACP5J,EAAI,wCAA0CugB,EAAO,0BAA4B3W,EAAEmjB,WAEpF8G,QAAS,SAAStT,GACnB,IACIR,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IACzB5Y,KAClB,IAAKA,EAAKwT,SAASM,QACjB,MAAM,IAAIzD,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKwT,SAASM,QAAQ9T,IAC5B4T,OAAQ,SAASpT,GAClB,IACI0S,EADS7C,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IACvBlT,KAChBmT,EAAQtE,GAAKe,SAASpP,GACtBR,EAAOqQ,GAAGiG,WAAWpD,EAAQC,GAC7BmG,EAAUjJ,GAAG+J,UAAUlH,EAAQC,GAAO,GAC1C,GAAImG,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1B,IAAKpG,EAAOM,SAASI,OACnB,MAAM,IAAIvD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGqI,aAAa1Y,GAClB,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IACMnB,GAAGsH,iBAAiC,gBACtCtH,GAAGsH,iBAAiC,eAAEnX,GAExC,MAAO3W,GACP5J,EAAI,0CAA4CugB,EAAO,0BAA4B3W,EAAEmjB,SAEvFkG,EAAOM,SAASI,OAAOV,EAAQC,GAC/B9C,GAAGqJ,YAAY1Z,GACf,IACMqQ,GAAGsH,iBAA+B,cACpCtH,GAAGsH,iBAA+B,aAAEnX,GACtC,MAAO3W,GACP5J,EAAI,wCAA0CugB,EAAO,0BAA4B3W,EAAEmjB,WAEpFsH,SAAU,SAAS9T,GACpB,IACI6T,EADShE,GAAG6H,WAAW1X,GACTR,KAClB,IAAKqU,EACH,MAAM,IAAIhE,GAAGmB,WAAW,IAE1B,IAAK6C,EAAKb,SAASc,SACjB,MAAM,IAAIjE,GAAGmB,WAAW,IAE1B,OAAOtB,GAAQpxB,QAAQuxB,GAAGwI,QAAQxE,EAAKnB,QAASmB,EAAKb,SAASc,SAASD,KACtE2I,KAAM,SAASxc,EAAMyc,GACtB,IACIjd,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC1Bjd,KAClB,IAAKA,EACH,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKxR,EAAKwT,SAASD,QACjB,MAAM,IAAIlD,GAAGmB,WAAW,IAE1B,OAAOxR,EAAKwT,SAASD,QAAQvT,IAC5Bkd,MAAO,SAAS1c,GACjB,OAAO6P,GAAG2M,KAAKxc,GAAM,IACpB2c,MAAO,SAAS3c,EAAM4S,EAAM6J,GAC7B,IAAIjd,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC9Bjd,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1BxR,EAAKwT,SAASC,QAAQzT,EAAM,CAAEoT,KAAa,KAAPA,GAA0B,KAAZpT,EAAKoT,KAAcrB,UAAWnmB,KAAKL,SACpF6xB,OAAQ,SAAS5c,EAAM4S,GACxB/C,GAAG8M,MAAM3c,EAAM4S,GAAM,IACpBiK,OAAQ,SAASjL,EAAIgB,GACtB,IAAI/B,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1BnB,GAAG8M,MAAM9L,EAAOrR,KAAMoT,IACrBkK,MAAO,SAAS9c,EAAMkV,EAAKC,EAAKsH,GACjC,IAAIjd,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASqE,IAC9Bjd,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1BxR,EAAKwT,SAASC,QAAQzT,EAAM,CAAE+R,UAAWnmB,KAAKL,SAC7CgyB,OAAQ,SAAS/c,EAAMkV,EAAKC,GAC7BtF,GAAGiN,MAAM9c,EAAMkV,EAAKC,GAAK,IACxB6H,OAAQ,SAASpL,EAAIsD,EAAKC,GAC3B,IAAItE,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1BnB,GAAGiN,MAAMjM,EAAOrR,KAAM0V,EAAKC,IAC1B8H,SAAU,SAASjd,EAAMjW,GAC1B,GAAIA,EAAM,EACR,MAAM,IAAI8lB,GAAGmB,WAAW,IAE1B,IAAIxR,EAOJ,KAJEA,EAFkB,iBAATQ,EACI6P,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC7B5Y,KAEPQ,GAECgT,SAASC,QACjB,MAAM,IAAIpD,GAAGmB,WAAW,IAE1B,GAAInB,GAAGoE,MAAMzU,EAAKoT,MAChB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGsE,OAAO3U,EAAKoT,MAClB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG6J,gBAAgBla,EAAM,KACvC,GAAIsZ,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1BtZ,EAAKwT,SAASC,QAAQzT,EAAM,CAAEjO,KAAMxH,EAAKwnB,UAAWnmB,KAAKL,SACxDmyB,UAAW,SAAStL,EAAI7nB,GACzB,IAAI8mB,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,IAE1BnB,GAAGoN,SAASpM,EAAOrR,KAAMzV,IACxBozB,MAAO,SAASnd,EAAMoV,EAAOC,GAC9B,IACI7V,EADSqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IACzB5Y,KAClBA,EAAKwT,SAASC,QAAQzT,EAAM,CAAE+R,UAAW/kB,KAAKmL,IAAIyd,EAAOC,MACxDhU,KAAM,SAASrB,EAAMwW,EAAO5D,EAAMsH,EAAUC,GAC7C,GAAa,KAATna,EACF,MAAM,IAAI6P,GAAGmB,WAAW,IAS1B,IAAIxR,EACJ,GAPAoT,OAAuB,IAATA,EAAuB,IAAMA,EAEzCA,EADU,IAFZ4D,EAAyB,iBAAVA,EAAqB3G,GAAGyJ,kBAAkB9C,GAASA,GAGlD,KAAP5D,EAAc,MAEd,EAGW,iBAAT5S,EACTR,EAAOQ,MACF,CACLA,EAAOqO,GAAKQ,UAAU7O,GACtB,IAEER,EADaqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,SAAkB,OAAR5B,KAC/BhX,KACd,MAAOnW,KAGX,IAAI+zB,GAAU,EACd,GAAY,GAAR5G,EACF,GAAIhX,GACF,GAAY,IAARgX,EACF,MAAM,IAAI3G,GAAGmB,WAAW,SAG1BxR,EAAOqQ,GAAGqD,MAAMlT,EAAM4S,EAAM,GAC5BwK,GAAU,EAGd,IAAK5d,EACH,MAAM,IAAIqQ,GAAGmB,WAAW,IAK1B,GAHInB,GAAGyE,SAAS9U,EAAKoT,QACnB4D,IAAS,KAEC,MAARA,IAAkB3G,GAAGoE,MAAMzU,EAAKoT,MAClC,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKoM,EAAS,CACZ,IAAItE,EAAUjJ,GAAGkK,QAAQva,EAAMgX,GAC/B,GAAIsC,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAGhB,IAARtC,GACF3G,GAAGoN,SAASzd,EAAM,GAEpBgX,IAAS,OACT,IAAI3F,EAAShB,GAAGwK,aAAa,CAAE7a,KAAAA,EAAMQ,KAAM6P,GAAGwI,QAAQ7Y,GAAOgX,MAAAA,EAAOvF,UAAU,EAAMkF,SAAU,EAAGvF,WAAYpR,EAAKoR,WAAYyM,SAAU,GAAIv+B,OAAO,GAASo7B,EAAUC,GAClKtJ,EAAOD,WAAWvP,MACpBwP,EAAOD,WAAWvP,KAAKwP,IAErBjS,EAAqB,cAAe,EAAR4X,IACzB3G,GAAGyN,YACNzN,GAAGyN,UAAY,IACXtd,KAAQ6P,GAAGyN,YACfzN,GAAGyN,UAAUtd,GAAQ,EACrBvgB,EAAI,2CAA6CugB,KAGrD,IACE,GAAI6P,GAAGsH,iBAA6B,WAAG,CACrC,IAAIoG,EAAgB,EACM,IAAb,QAAR/G,KACH+G,GAAiB1N,GAAGuH,SAASC,UAAUC,MAEf,IAAb,QAARd,KACH+G,GAAiB1N,GAAGuH,SAASC,UAAUE,OAEzC1H,GAAGsH,iBAA6B,WAAEnX,EAAMud,IAE1C,MAAOl0B,GACP5J,EAAI,sCAAwCugB,EAAO,iCAAmC3W,EAAEmjB,SAE1F,OAAOqE,GACNK,MAAO,SAASL,GACjB,GAAIhB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAEtBH,EAAO4M,WACT5M,EAAO4M,SAAW,MACpB,IACM5M,EAAOD,WAAWM,OACpBL,EAAOD,WAAWM,MAAML,GAE1B,MAAOxnB,GACP,MAAMA,UAENwmB,GAAG8K,YAAY9J,EAAOe,IAExBf,EAAOe,GAAK,MACX4L,SAAU,SAAS3M,GACpB,OAAqB,OAAdA,EAAOe,IACb4B,OAAQ,SAAS3C,EAAQviB,EAAQ+nB,GAClC,GAAIxG,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,IAAKH,EAAOI,WAAaJ,EAAOD,WAAW4C,OACzC,MAAM,IAAI3D,GAAGmB,WAAW,IAE1B,GAAc,GAAVqF,GAAyB,GAAVA,GAAyB,GAAVA,EAChC,MAAM,IAAIxG,GAAGmB,WAAW,IAI1B,OAFAH,EAAOsF,SAAWtF,EAAOD,WAAW4C,OAAO3C,EAAQviB,EAAQ+nB,GAC3DxF,EAAOwM,SAAW,GACXxM,EAAOsF,UACb/nB,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAEjD,GADA7nB,KAAY,EACRnO,EAAS,GAAKg2B,EAAW,EAC3B,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,GAAInB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAInB,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACvB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAWxiB,KACrB,MAAM,IAAIyhB,GAAGmB,WAAW,IAE1B,IAAI0M,OAA8B,IAAbvH,EACrB,GAAKuH,GAEE,IAAK7M,EAAOI,SACjB,MAAM,IAAIpB,GAAGmB,WAAW,SAFxBmF,EAAWtF,EAAOsF,SAIpB,IAAI7E,EAAYT,EAAOD,WAAWxiB,KAAKyiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAGxE,OAFKuH,IACH7M,EAAOsF,UAAY7E,GACdA,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GAE5D,GADA9nB,KAAY,EACRnO,EAAS,GAAKg2B,EAAW,EAC3B,MAAM,IAAItG,GAAGmB,WAAW,IAE1B,GAAInB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAInB,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACvB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAWxhB,MACrB,MAAM,IAAIygB,GAAGmB,WAAW,IAEtBH,EAAOI,UAA2B,KAAfJ,EAAO2F,OAC5B3G,GAAG2D,OAAO3C,EAAQ,EAAG,GAEvB,IAAI6M,OAA8B,IAAbvH,EACrB,GAAKuH,GAEE,IAAK7M,EAAOI,SACjB,MAAM,IAAIpB,GAAGmB,WAAW,SAFxBmF,EAAWtF,EAAOsF,SAIpB,IAAIwH,EAAe9M,EAAOD,WAAWxhB,MAAMyhB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,EAAUC,GACjFsH,IACH7M,EAAOsF,UAAYwH,GACrB,IACM9M,EAAO7Q,MAAQ6P,GAAGsH,iBAAgC,eACpDtH,GAAGsH,iBAAgC,cAAEtG,EAAO7Q,MAC9C,MAAO3W,GACP5J,EAAI,yCAA2CoxB,EAAO7Q,KAAO,0BAA4B3W,EAAEmjB,SAE7F,OAAOmR,GACNjK,SAAU,SAAS7C,EAAQviB,EAAQnO,GACpC,GAAI0vB,GAAG2N,SAAS3M,GACd,MAAM,IAAIhB,GAAGmB,WAAW,GAE1B,GAAI1iB,EAAS,GAAKnO,GAAU,EAC1B,MAAM,IAAI0vB,GAAGmB,WAAW,IAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,IAAKnB,GAAGsE,OAAOtD,EAAOrR,KAAKoT,QAAU/C,GAAGoE,MAAMpD,EAAOrR,KAAKoT,MACxD,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAKH,EAAOD,WAAW8C,SACrB,MAAM,IAAI7D,GAAGmB,WAAW,KAE1BH,EAAOD,WAAW8C,SAAS7C,EAAQviB,EAAQnO,IAC1CwzB,KAAM,SAAS9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,GAEzD,GADAF,KAAa,EACM,IAAP,EAAPC,IAAmC,IAAP,EAARC,IAAiD,IAAb,QAAf3F,EAAO2F,OACnD,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,GAAiC,IAAb,QAAfH,EAAO2F,OACV,MAAM,IAAI3G,GAAGmB,WAAW,GAE1B,IAAKH,EAAOD,WAAW+C,KACrB,MAAM,IAAI9D,GAAGmB,WAAW,IAE1B,OAAOH,EAAOD,WAAW+C,KAAK9C,EAAQyF,EAASn2B,EAAQg2B,EAAUI,EAAMC,IACtE5C,MAAO,SAAS/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAElD,OADApoB,KAAY,EACPuiB,GAAWA,EAAOD,WAAWgD,MAG3B/C,EAAOD,WAAWgD,MAAM/C,EAAQO,EAAS9iB,EAAQnO,EAAQu2B,GAFvD,GAGRkH,OAAQ,SAAS/M,GAClB,OAAO,GACNgN,MAAO,SAAShN,EAAQpG,EAAK9rB,GAC9B,IAAKkyB,EAAOD,WAAWiN,MACrB,MAAM,IAAIhO,GAAGmB,WAAW,IAE1B,OAAOH,EAAOD,WAAWiN,MAAMhN,EAAQpG,EAAK9rB,IAC3Cm/B,SAAU,SAAS9d,EAAM2X,GAI1B,IAHAA,EAAOA,GAAQ,IACVnB,MAAQmB,EAAKnB,OAAS,EAC3BmB,EAAK/mB,SAAW+mB,EAAK/mB,UAAY,SACX,SAAlB+mB,EAAK/mB,UAAyC,WAAlB+mB,EAAK/mB,SACnC,MAAM,IAAI/N,MAAM,0BAA4B80B,EAAK/mB,SAAW,KAE9D,IAAIwG,EACAyZ,EAAShB,GAAGxO,KAAKrB,EAAM2X,EAAKnB,OAE5Br2B,EADO0vB,GAAG2M,KAAKxc,GACDzO,KACdyB,EAAM,IAAI9F,WAAW/M,GAQzB,OAPA0vB,GAAGzhB,KAAKyiB,EAAQ7d,EAAK,EAAG7S,EAAQ,GACV,SAAlBw3B,EAAK/mB,SACPwG,EAAMmL,EAAkBvP,EAAK,GACF,WAAlB2kB,EAAK/mB,WACdwG,EAAMpE,GAER6c,GAAGqB,MAAML,GACFzZ,GACN2mB,UAAW,SAAS/d,EAAM5O,EAAMumB,IACjCA,EAAOA,GAAQ,IACVnB,MAAQmB,EAAKnB,OAAS,IAC3B,IAAI3F,EAAShB,GAAGxO,KAAKrB,EAAM2X,EAAKnB,MAAOmB,EAAK/E,MAC5C,GAAoB,iBAATxhB,EAAmB,CAC5B,IAAI4B,EAAM,IAAI9F,WAAWuW,EAAgBrS,GAAQ,GAC7C4sB,EAAiB9a,EAAkB9R,EAAM4B,EAAK,EAAGA,EAAI7S,QACzD0vB,GAAGzgB,MAAMyhB,EAAQ7d,EAAK,EAAGgrB,OAAgB,EAAQrG,EAAKvB,YACjD,CAAA,IAAI9lB,YAAYoB,OAAON,GAG5B,MAAM,IAAIvO,MAAM,yBAFhBgtB,GAAGzgB,MAAMyhB,EAAQzf,EAAM,EAAGA,EAAKZ,gBAAY,EAAQmnB,EAAKvB,QAI1DvG,GAAGqB,MAAML,IACR7kB,IAAK,WACN,OAAO6jB,GAAGmH,aACT/qB,MAAO,SAAS+T,GACjB,IAAIjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC3C,GAAoB,OAAhBrrB,EAAOyS,KACT,MAAM,IAAIqQ,GAAGmB,WAAW,IAE1B,IAAKnB,GAAGoE,MAAMlnB,EAAOyS,KAAKoT,MACxB,MAAM,IAAI/C,GAAGmB,WAAW,IAE1B,IAAI8H,EAAUjJ,GAAG6J,gBAAgB3sB,EAAOyS,KAAM,KAC9C,GAAIsZ,EACF,MAAM,IAAIjJ,GAAGmB,WAAW8H,GAE1BjJ,GAAGmH,YAAcjqB,EAAOiT,MACvBie,yBAA0B,WAC3BpO,GAAGgM,MAAM,QACThM,GAAGgM,MAAM,SACThM,GAAGgM,MAAM,mBACRqC,qBAAsB,WACvBrO,GAAGgM,MAAM,QACThM,GAAGc,eAAed,GAAGmL,QAAQ,EAAG,GAAI,CAAE5sB,KAAM,WAC1C,OAAO,GACNgB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,OAAOlW,KAET0vB,GAAGmM,MAAM,YAAanM,GAAGmL,QAAQ,EAAG,IACpC5K,GAAIG,SAASV,GAAGmL,QAAQ,EAAG,GAAI5K,GAAIqB,iBACnCrB,GAAIG,SAASV,GAAGmL,QAAQ,EAAG,GAAI5K,GAAI4B,kBACnCnC,GAAGmM,MAAM,WAAYnM,GAAGmL,QAAQ,EAAG,IACnCnL,GAAGmM,MAAM,YAAanM,GAAGmL,QAAQ,EAAG,IACpC,IAAImD,EA72CN,WACE,GAAsB,iBAAXC,QAA4D,mBAA9BA,OAAwB,gBAAkB,CACjF,IAAIC,EAAe,IAAInxB,WAAW,GAClC,OAAO,WAEL,OADAkxB,OAAOE,gBAAgBD,GAChBA,EAAa,IAEjB,GAAIrf,EACT,IACE,IAAIuf,EAAgBrhB,KACpB,OAAO,WACL,OAAOqhB,EAA2B,YAAE,GAAG,IAEzC,MAAOl1B,IAGX,OAAO,WACL6Y,GAAM,iBA41CYsc,GACpB3O,GAAG4O,aAAa,OAAQ,SAAUN,GAClCtO,GAAG4O,aAAa,OAAQ,UAAWN,GACnCtO,GAAGgM,MAAM,YACThM,GAAGgM,MAAM,iBACR6C,yBAA0B,WAC3B7O,GAAGgM,MAAM,SACThM,GAAGgM,MAAM,cACThM,GAAGgM,MAAM,iBACThM,GAAG2C,MAAM,CAAEA,MAAO,WAChB,IAAIhT,EAAOqQ,GAAG4C,WAAW,aAAc,KAAM,MAAa,IAY1D,OAXAjT,EAAKwT,SAAW,CAAEjmB,OAAQ,SAAS2lB,EAAQC,GACzC,IAAIf,GAAMe,EACN9B,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAC1B,IAAI5Z,EAAM,CAAEsb,OAAQ,KAAMF,MAAO,CAAE+F,WAAY,QAAUvF,SAAU,CAAEc,SAAU,WAC7E,OAAOjD,EAAO7Q,QAGhB,OADA5I,EAAIsb,OAAStb,EACNA,IAEFoI,IACJ,GAAI,kBACRmf,sBAAuB,WACpB/f,EAAc,MAChBiR,GAAG4O,aAAa,OAAQ,QAAS7f,EAAc,OAE/CiR,GAAG0D,QAAQ,WAAY,cAErB3U,EAAe,OACjBiR,GAAG4O,aAAa,OAAQ,SAAU,KAAM7f,EAAe,QAEvDiR,GAAG0D,QAAQ,WAAY,eAErB3U,EAAe,OACjBiR,GAAG4O,aAAa,OAAQ,SAAU,KAAM7f,EAAe,QAEvDiR,GAAG0D,QAAQ,YAAa,eAEd1D,GAAGxO,KAAK,aAAc,GACrBwO,GAAGxO,KAAK,cAAe,GACvBwO,GAAGxO,KAAK,cAAe,IACnCud,iBAAkB,WACf/O,GAAGmB,aAEPnB,GAAGmB,WAAa,SAAoB8I,EAAOta,GACzCngB,KAAKmgB,KAAOA,EACZngB,KAAKw/B,SAAW,SAASC,GACvBz/B,KAAKy6B,MAAQgF,GAEfz/B,KAAKw/B,SAAS/E,GACdz6B,KAAKmtB,QAAU,YAEjBqD,GAAGmB,WAAWnwB,UAAY,IAAIgC,MAC9BgtB,GAAGmB,WAAWnwB,UAAUyF,YAAcupB,GAAGmB,WACzC,CAAC,IAAIzsB,SAAQ,SAAS8I,GACpBwiB,GAAG4F,cAAcpoB,GAAQ,IAAIwiB,GAAGmB,WAAW3jB,GAC3CwiB,GAAG4F,cAAcpoB,GAAMyY,MAAQ,iCAEhCiZ,WAAY,WACblP,GAAG+O,mBACH/O,GAAGkH,UAAY,IAAIvrB,MAAM,MACzBqkB,GAAG2C,MAAMF,GAAO,GAAI,KACpBzC,GAAGoO,2BACHpO,GAAGqO,uBACHrO,GAAG6O,2BACH7O,GAAG2H,YAAc,CAAElF,MAASA,KAC3BllB,KAAM,SAASsjB,EAAO7iB,EAAQ/O,GAC/B+wB,GAAGziB,KAAK6pB,aAAc,EACtBpH,GAAG+O,mBACHhgB,EAAc,MAAI8R,GAAS9R,EAAc,MACzCA,EAAe,OAAI/Q,GAAU+Q,EAAe,OAC5CA,EAAe,OAAI9f,GAAS8f,EAAe,OAC3CiR,GAAG8O,yBACF/d,KAAM,WACPiP,GAAGziB,KAAK6pB,aAAc,EACtB,IAAI+H,EAASpgB,EAAgB,QACzBogB,GACFA,EAAO,GACT,IAAK,IAAI9+B,EAAI,EAAGA,EAAI2vB,GAAGgH,QAAQ12B,OAAQD,IAAK,CAC1C,IAAI2wB,EAAShB,GAAGgH,QAAQ32B,GACnB2wB,GAGLhB,GAAGqB,MAAML,KAEVoO,QAAS,SAASC,EAASC,GAC5B,IAAIvM,EAAO,EAKX,OAJIsM,IACFtM,GAAQ,KACNuM,IACFvM,GAAQ,KACHA,GACNwM,WAAY,SAASpf,EAAMqf,GAC5B,IAAIjoB,EAAMyY,GAAGyP,YAAYtf,EAAMqf,GAC/B,OAAIjoB,EAAImoB,OACCnoB,EAAIrQ,OAEJ,MAERu4B,YAAa,SAAStf,EAAMqf,GAC7B,IAEErf,GADIjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASiH,KAC9Brf,KACd,MAAO3W,IAET,IAAI+N,EAAM,CAAEkhB,QAAQ,EAAOiH,QAAQ,EAAOzgC,MAAO,EAAGyH,KAAM,KAAMyZ,KAAM,KAAMjZ,OAAQ,KAAMy4B,cAAc,EAAOC,WAAY,KAAMC,aAAc,MAC/I,IACE,IAAI3yB,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAE0S,QAAQ,IAC3Ctb,EAAIooB,cAAe,EACnBpoB,EAAIqoB,WAAa1yB,EAAOiT,KACxB5I,EAAIsoB,aAAe3yB,EAAOyS,KAC1BpI,EAAI7Q,KAAO8nB,GAAKe,SAASpP,GACzBjT,EAAS8iB,GAAG6H,WAAW1X,EAAM,CAAEoY,QAASiH,IACxCjoB,EAAImoB,QAAS,EACbnoB,EAAI4I,KAAOjT,EAAOiT,KAClB5I,EAAIrQ,OAASgG,EAAOyS,KACpBpI,EAAI7Q,KAAOwG,EAAOyS,KAAKjZ,KACvB6Q,EAAIkhB,OAAyB,MAAhBvrB,EAAOiT,KACpB,MAAO3W,GACP+N,EAAItY,MAAQuK,EAAEywB,MAEhB,OAAO1iB,GACNuoB,WAAY,SAASjN,EAAQ1S,EAAMkf,EAASC,GAC7CzM,EAA2B,iBAAXA,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAE1D,IADA,IAAIzkB,EAAQ+R,EAAKgP,MAAM,KAAKhoB,UACrBiH,EAAM9N,QAAQ,CACnB,IAAIy/B,EAAO3xB,EAAMhH,MACjB,GAAK24B,EAAL,CAEA,IAAI7H,EAAU1J,GAAKmB,MAAMkD,EAAQkN,GACjC,IACE/P,GAAGgM,MAAM9D,GACT,MAAO1uB,IAETqpB,EAASqF,GAEX,OAAOA,GACN8H,WAAY,SAASnN,EAAQC,EAAOmN,EAAYZ,EAASC,GAC1D,IAAInf,EAAOqO,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAC5EC,EAAO/C,GAAGoP,QAAQC,EAASC,GAC/B,OAAOtP,GAAGxtB,OAAO2d,EAAM4S,IACtBmN,eAAgB,SAASrN,EAAQC,EAAOvhB,EAAM8tB,EAASC,EAAU/I,GAClE,IAAIpW,EAAO2S,EAAQtE,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAASD,EAC7FE,EAAO/C,GAAGoP,QAAQC,EAASC,GAC3B3f,EAAOqQ,GAAGxtB,OAAO2d,EAAM4S,GAC3B,GAAIxhB,EAAM,CACR,GAAoB,iBAATA,EAAmB,CAE5B,IADA,IAAIxB,EAAM,IAAIpE,MAAM4F,EAAKjR,QAChBD,EAAI,EAAG6J,EAAMqH,EAAKjR,OAAQD,EAAI6J,IAAO7J,EAC5C0P,EAAI1P,GAAKkR,EAAK9D,WAAWpN,GAC3BkR,EAAOxB,EAETigB,GAAG8M,MAAMnd,EAAa,IAAPoT,GACf,IAAI/B,EAAShB,GAAGxO,KAAK7B,EAAM,KAC3BqQ,GAAGzgB,MAAMyhB,EAAQzf,EAAM,EAAGA,EAAKjR,OAAQ,EAAGi2B,GAC1CvG,GAAGqB,MAAML,GACThB,GAAG8M,MAAMnd,EAAMoT,GAEjB,OAAOpT,GACNif,aAAc,SAAS/L,EAAQC,EAAOjC,EAAO7iB,GAC9C,IAAImS,EAAOqO,GAAKmB,MAAwB,iBAAXkD,EAAsBA,EAAS7C,GAAGwI,QAAQ3F,GAASC,GAC5EC,EAAO/C,GAAGoP,UAAUvO,IAAS7iB,GAC5BgiB,GAAG4O,aAAa3D,QACnBjL,GAAG4O,aAAa3D,MAAQ,IAC1B,IAAItK,EAAMX,GAAGmL,QAAQnL,GAAG4O,aAAa3D,QAAS,GAyC9C,OAxCAjL,GAAGc,eAAeH,EAAK,CAAEnP,KAAM,SAASwP,GACtCA,EAAOI,UAAW,GACjBC,MAAO,SAASL,GACbhjB,GAAUA,EAAOQ,QAAUR,EAAOQ,OAAOlO,QAC3C0N,EAAO,KAERO,KAAM,SAASyiB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAEjD,IADA,IAAIib,EAAY,EACPpxB,EAAI,EAAGA,EAAIC,EAAQD,IAAK,CAC/B,IAAIyE,EACJ,IACEA,EAAS+rB,IACT,MAAOrnB,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAE1B,QAAe,IAAXrsB,GAAmC,IAAd2sB,EACvB,MAAM,IAAIzB,GAAGmB,WAAW,GAE1B,GAAIrsB,MAAAA,EACF,MACF2sB,IACAF,EAAQ9iB,EAASpO,GAAKyE,EAKxB,OAHI2sB,IACFT,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExBumB,GACNliB,MAAO,SAASyhB,EAAQO,EAAS9iB,EAAQnO,EAAQkW,GAClD,IAAK,IAAInW,EAAI,EAAGA,EAAIC,EAAQD,IAC1B,IACE2N,EAAOujB,EAAQ9iB,EAASpO,IACxB,MAAOmJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,IAM5B,OAHI7wB,IACF0wB,EAAOrR,KAAK+R,UAAYnmB,KAAKL,OAExB7K,KAEF2vB,GAAGmM,MAAMhc,EAAM4S,EAAMpC,IAC3BwP,cAAe,SAASj/B,GACzB,GAAIA,EAAIk/B,UAAYl/B,EAAIm/B,UAAYn/B,EAAI8yB,MAAQ9yB,EAAImzB,SAClD,OAAO,EACT,GAA8B,oBAAnB9S,eACT,MAAM,IAAIve,MAAM,oMACX,IAAI6c,EAQT,MAAM,IAAI7c,MAAM,iDAPhB,IACE9B,EAAImzB,SAAWnC,GAAmBrS,EAAM3e,EAAImgB,MAAM,GAClDngB,EAAIqzB,UAAYrzB,EAAImzB,SAAS/zB,OAC7B,MAAOkJ,GACP,MAAM,IAAIwmB,GAAGmB,WAAW,MAK3BmP,eAAgB,SAASzN,EAAQC,EAAOzR,EAAKge,EAASC,GACvD,SAASiB,IACP/gC,KAAKghC,aAAc,EACnBhhC,KAAKihC,OAAS,GAuEhB,GArEAF,EAAev/B,UAAUqmB,IAAM,SAA4BzE,GACzD,KAAIA,EAAMpjB,KAAKc,OAAS,GAAKsiB,EAAM,GAAnC,CAGA,IAAI8d,EAAc9d,EAAMpjB,KAAKmhC,UACzBC,EAAWhe,EAAMpjB,KAAKmhC,UAAY,EACtC,OAAOnhC,KAAKqhC,OAAOD,GAAUF,KAE/BH,EAAev/B,UAAU8/B,cAAgB,SAAsCD,GAC7ErhC,KAAKqhC,OAASA,GAEhBN,EAAev/B,UAAU+/B,YAAc,WACrC,IAAIzf,EAAM,IAAIC,eAGd,GAFAD,EAAIE,KAAK,OAAQH,GAAK,GACtBC,EAAIG,KAAK,QACHH,EAAI/B,QAAU,KAAO+B,EAAI/B,OAAS,KAAsB,MAAf+B,EAAI/B,QACjD,MAAM,IAAIvc,MAAM,iBAAmBqe,EAAM,aAAeC,EAAI/B,QAC9D,IACIyhB,EADAC,EAAaxtB,OAAO6N,EAAI4f,kBAAkB,mBAE1CC,GAAkBH,EAAS1f,EAAI4f,kBAAkB,mBAAgC,UAAXF,EACtEI,GAAYJ,EAAS1f,EAAI4f,kBAAkB,sBAAmC,SAAXF,EACnEL,EAAY,QACXQ,IACHR,EAAYM,GACd,IAuBII,EAAa7hC,KACjB6hC,EAAWP,eAAc,SAASF,GAChC,IAAIhzB,EAAQgzB,EAAWD,EACnB9yB,GAAO+yB,EAAW,GAAKD,EAAY,EAKvC,GAJA9yB,EAAMlB,KAAKkI,IAAIhH,EAAKozB,EAAa,QACU,IAAhCI,EAAWZ,OAAOG,KAC3BS,EAAWZ,OAAOG,GA7BV,SAASpwB,EAAM0f,GACzB,GAAI1f,EAAO0f,EACT,MAAM,IAAIltB,MAAM,kBAAoBwN,EAAO,KAAO0f,EAAK,4BACzD,GAAIA,EAAK+Q,EAAa,EACpB,MAAM,IAAIj+B,MAAM,QAAUi+B,EAAa,uCACzC,IAAIK,EAAO,IAAI/f,eAUf,GATA+f,EAAK9f,KAAK,MAAOH,GAAK,GAClB4f,IAAeN,GACjBW,EAAKC,iBAAiB,QAAS,SAAW/wB,EAAO,IAAM0f,GAChC,oBAAd7iB,aACTi0B,EAAK3f,aAAe,eAClB2f,EAAKE,kBACPF,EAAKE,iBAAiB,sCAExBF,EAAK7f,KAAK,QACJ6f,EAAK/hB,QAAU,KAAO+hB,EAAK/hB,OAAS,KAAuB,MAAhB+hB,EAAK/hB,QACpD,MAAM,IAAIvc,MAAM,iBAAmBqe,EAAM,aAAeigB,EAAK/hB,QAC/D,YAAsB,IAAlB+hB,EAAK1f,SACA,IAAIvU,WAAWi0B,EAAK1f,UAAY,IAEhCsQ,GAAmBoP,EAAK5f,cAAgB,IAAI,GASrB+f,CAAM7zB,EAAOC,SAEF,IAAhCwzB,EAAWZ,OAAOG,GAC3B,MAAM,IAAI59B,MAAM,iBAClB,OAAOq+B,EAAWZ,OAAOG,OAEvBQ,GAAaH,IACfN,EAAYM,EAAa,EACzBA,EAAazhC,KAAKqhC,OAAO,GAAGvgC,OAC5BqgC,EAAYM,EACZzpB,EAAI,gFAENhY,KAAKkiC,QAAUT,EACfzhC,KAAKmiC,WAAahB,EAClBnhC,KAAKghC,aAAc,GAES,oBAAnBjf,eAAgC,CACzC,IAAKrC,EACH,KAAM,sHACR,IAAI0iB,EAAY,IAAIrB,EACpB5/B,OAAOkhC,iBAAiBD,EAAW,CAAEthC,OAAQ,CAAE+mB,IAAK,WAIlD,OAHK7nB,KAAKghC,aACRhhC,KAAKuhC,cAEAvhC,KAAKkiC,UACTf,UAAW,CAAEtZ,IAAK,WAIrB,OAHK7nB,KAAKghC,aACRhhC,KAAKuhC,cAEAvhC,KAAKmiC,eAEd,IAAI1B,EAAa,CAAEG,UAAU,EAAO/L,SAAUuN,QAE1C3B,EAAa,CAAEG,UAAU,EAAO/e,IAAAA,GAEtC,IAAI1B,EAAOqQ,GAAGgQ,WAAWnN,EAAQC,EAAOmN,EAAYZ,EAASC,GACzDW,EAAW5L,SACb1U,EAAK0U,SAAW4L,EAAW5L,SAClB4L,EAAW5e,MACpB1B,EAAK0U,SAAW,KAChB1U,EAAK0B,IAAM4e,EAAW5e,KAExB1gB,OAAOkhC,iBAAiBliB,EAAM,CAAE4U,UAAW,CAAElN,IAAK,WAChD,OAAO7nB,KAAK60B,SAAS/zB,WAEvB,IAAIywB,EAAa,GA2BjB,OA1BWpwB,OAAOsG,KAAK0Y,EAAKoR,YACvBrsB,SAAQ,SAASyxB,GACpB,IAAI72B,EAAKqgB,EAAKoR,WAAWoF,GACzBpF,EAAWoF,GAAQ,WAEjB,OADAnG,GAAGmQ,cAAcxgB,GACVrgB,EAAGK,MAAM,KAAMD,eAG1BqxB,EAAWxiB,KAAO,SAAyByiB,EAAQO,EAAS9iB,EAAQnO,EAAQg2B,GAC1EtG,GAAGmQ,cAAcxgB,GACjB,IAAI0U,EAAWrD,EAAOrR,KAAK0U,SAC3B,GAAIiC,GAAYjC,EAAS/zB,OACvB,OAAO,EACT,IAAIoR,EAAO/E,KAAKkI,IAAIwf,EAAS/zB,OAASg2B,EAAUh2B,GAChD,GAAI+zB,EAAS7sB,MACX,IAAK,IAAInH,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAASiC,EAAWj2B,QAG5C,IAASA,EAAI,EAAGA,EAAIqR,EAAMrR,IACxBkxB,EAAQ9iB,EAASpO,GAAKg0B,EAAShN,IAAIiP,EAAWj2B,GAGlD,OAAOqR,GAETiO,EAAKoR,WAAaA,EACXpR,GACNmiB,oBAAqB,SAASjP,EAAQC,EAAOzR,EAAKge,EAASC,EAAUyC,EAAQtV,EAASuV,EAAgBzL,EAAQ0L,GAC/GC,QAAQ30B,OACR,IAAI40B,EAAWrP,EAAQjD,GAAQpxB,QAAQ+vB,GAAKmB,MAAMkD,EAAQC,IAAUD,EAEpE,SAASuP,EAAYjuB,GACnB,SAAS/L,EAAOi6B,GACVJ,GACFA,IACGD,GACHhS,GAAGkQ,eAAerN,EAAQC,EAAOuP,EAAYhD,EAASC,EAAU/I,GAE9DwL,GACFA,IACFjc,KAEF,IAAIwc,GAAU,EACdvjB,EAAuB,eAAEra,SAAQ,SAAS69B,GACpCD,GAEAC,EAAkB,UAAEJ,KACtBI,EAAe,OAAEpuB,EAAWguB,EAAU/5B,GAAQ,WACxCqkB,GACFA,IACF3G,QAEFwc,GAAU,MAGTA,GACHl6B,EAAO+L,GAEXyR,KACkB,iBAAPvE,EACT6gB,QAAQM,UAAUnhB,GAAK,SAASlN,GAC9BiuB,EAAYjuB,KACXsY,GAEH2V,EAAY/gB,IAEbohB,UAAW,WACZ,OAAOz5B,OAAOy5B,WAAaz5B,OAAO05B,cAAgB15B,OAAO25B,iBAAmB35B,OAAO45B,aAClFC,QAAS,WACV,MAAO,SAAW75B,OAAOmY,SAAS2hB,UACjCC,WAAY,GAAIC,cAAe,YAAaC,cAAe,SAASvT,EAAOqS,EAAQtV,GACpFsV,EAASA,GAAU,aAEnBtV,EAAUA,GAAW,aAErB,IAAIgW,EAAYzS,GAAGyS,YACnB,IACE,IAAIS,EAAcT,EAAUjhB,KAAKwO,GAAG6S,UAAW7S,GAAG+S,YAClD,MAAOv5B,GACP,OAAOijB,EAAQjjB,GAEjB05B,EAAYC,gBAAkB,WAC5B3rB,EAAI,eACK0rB,EAAYp+B,OAClBs+B,kBAAkBpT,GAAGgT,gBAE1BE,EAAYG,UAAY,WACtB,IACIC,EADKJ,EAAYp+B,OACAw+B,YAAY,CAACtT,GAAGgT,eAAgB,aACjDO,EAAQD,EAAYE,YAAYxT,GAAGgT,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQjU,EAAMpvB,OACpC,SAAS8H,IACK,GAARs7B,EACF3B,IAEAtV,IAEJiD,EAAMhrB,SAAQ,SAASyb,GACrB,IAAIyjB,EAAaL,EAAMM,IAAI7T,GAAGyP,YAAYtf,GAAMjZ,OAAOmtB,SAAUlU,GACjEyjB,EAAWP,UAAY,aACrBI,EACSC,GAAQC,GACfv7B,KAEJw7B,EAAWnX,QAAU,WACnBiX,IACID,EAAKC,GAAQC,GACfv7B,QAGNk7B,EAAY7W,QAAUA,GAExByW,EAAYzW,QAAUA,GACrBqX,gBAAiB,SAASpU,EAAOqS,EAAQtV,GAC1CsV,EAASA,GAAU,aAEnBtV,EAAUA,GAAW,aAErB,IAAIgW,EAAYzS,GAAGyS,YACnB,IACE,IAAIS,EAAcT,EAAUjhB,KAAKwO,GAAG6S,UAAW7S,GAAG+S,YAClD,MAAOv5B,GACP,OAAOijB,EAAQjjB,GAEjB05B,EAAYC,gBAAkB1W,EAC9ByW,EAAYG,UAAY,WACtB,IAAIU,EAAKb,EAAYp+B,OACrB,IACE,IAAIw+B,EAAcS,EAAGT,YAAY,CAACtT,GAAGgT,eAAgB,YACrD,MAAOx5B,GAEP,YADAijB,EAAQjjB,GAGV,IAAI+5B,EAAQD,EAAYE,YAAYxT,GAAGgT,eACnCS,EAAK,EAAGC,EAAO,EAAGC,EAAQjU,EAAMpvB,OACpC,SAAS8H,IACK,GAARs7B,EACF3B,IAEAtV,IAEJiD,EAAMhrB,SAAQ,SAASyb,GACrB,IAAI6jB,EAAaT,EAAMlc,IAAIlH,GAC3B6jB,EAAWX,UAAY,WACjBrT,GAAGyP,YAAYtf,GAAMuf,QACvB1P,GAAGuD,OAAOpT,GAEZ6P,GAAGkQ,eAAe1R,GAAKnO,QAAQF,GAAOqO,GAAKe,SAASpP,GAAO6jB,EAAWl/B,QAAQ,GAAM,GAAM,KAC1F2+B,EACSC,GAAQC,GACfv7B,KAEJ47B,EAAWvX,QAAU,WACnBiX,IACID,EAAKC,GAAQC,GACfv7B,QAGNk7B,EAAY7W,QAAUA,GAExByW,EAAYzW,QAAUA,IAEpBwX,GAAW,CAAEC,SAAU,GAAIC,iBAAkB,EAAG73B,MAAO,IAAK83B,YAAa,SAASC,EAAOlkB,GAC3F,GAAgB,MAAZA,EAAK,GAAY,CACnB,IAAI9T,EACJ,IAAe,MAAXg4B,EACFh4B,EAAM2jB,GAAG7jB,UACJ,CACL,IAAIm4B,EAAYtU,GAAGuK,UAAU8J,GAC7B,IAAKC,EACH,MAAM,IAAItU,GAAGmB,WAAW,GAC1B9kB,EAAMi4B,EAAUnkB,KAElBA,EAAOqO,GAAKmB,MAAMtjB,EAAK8T,GAEzB,OAAOA,GACNokB,OAAQ,SAASnd,EAAMjH,EAAMhN,GAC9B,IACE,IAAIwpB,EAAOvV,EAAKjH,GAChB,MAAO3W,GACP,GAAIA,GAAKA,EAAEmW,MAAQ6O,GAAKQ,UAAU7O,KAAUqO,GAAKQ,UAAUgB,GAAGwI,QAAQhvB,EAAEmW,OACtE,OAAQ,GAEV,MAAMnW,EAqBR,OAnBAgV,EAAOrL,IAAQ,GAAKwpB,EAAKhM,IACzBnS,EAAOrL,EAAM,IAAM,GAAK,EACxBqL,EAAOrL,EAAM,IAAM,GAAKwpB,EAAKxH,IAC7B3W,EAAOrL,EAAM,KAAO,GAAKwpB,EAAK5J,KAC9BvU,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKvH,MAC9B5W,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKtH,IAC9B7W,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKrH,IAC9B9W,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKzL,KAC9B1S,EAAOrL,EAAM,KAAO,GAAK,EACzBsT,GAAU,CAACkW,EAAKjrB,OAAS,GAAI8U,GAAamW,EAAKjrB,MAAO/E,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKhI,EAAOrL,EAAM,KAAO,GAAKsT,GAAQ,GAAIjI,EAAOrL,EAAM,KAAO,GAAKsT,GAAQ,GAC/TjI,EAAOrL,EAAM,KAAO,GAAK,KACzBqL,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKhH,OAC9BnX,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKpH,MAAM/pB,UAAY,IAAM,EACtDgT,EAAOrL,EAAM,KAAO,GAAK,EACzBqL,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKnH,MAAMhqB,UAAY,IAAM,EACtDgT,EAAOrL,EAAM,KAAO,GAAK,EACzBqL,EAAOrL,EAAM,KAAO,GAAKwpB,EAAKlH,MAAMjqB,UAAY,IAAM,EACtDgT,EAAOrL,EAAM,KAAO,GAAK,EACzBsT,GAAU,CAACkW,EAAKxH,MAAQ,GAAI3O,GAAamW,EAAKxH,KAAMxoB,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKhI,EAAOrL,EAAM,KAAO,GAAKsT,GAAQ,GAAIjI,EAAOrL,EAAM,KAAO,GAAKsT,GAAQ,GACtT,GACN+d,QAAS,SAAStc,EAAM8I,EAAQ9mB,EAAKysB,EAAOloB,GAC7C,IAAI8iB,EAAUrT,EAAO1W,MAAM0gB,EAAMA,EAAOhe,GACxC8lB,GAAG+D,MAAM/C,EAAQO,EAAS9iB,EAAQvE,EAAKysB,IACtC8N,QAAS,SAAStkB,EAAM4S,GAKzB,MAH8B,OAD9B5S,EAAOqO,GAAKQ,UAAU7O,IACbA,EAAK7f,OAAS,KACrB6f,EAAOA,EAAKrM,OAAO,EAAGqM,EAAK7f,OAAS,IACtC0vB,GAAGgM,MAAM7b,EAAM4S,EAAM,GACd,GACN2R,QAAS,SAASvkB,EAAM4S,EAAMpC,GAC/B,OAAe,MAAPoC,GACN,KAAK,MACL,KAAK,KACL,KAAK,MACL,KAAK,KACL,KAAK,MACH,MACF,QACE,OAAQ,GAGZ,OADA/C,GAAGqD,MAAMlT,EAAM4S,EAAMpC,GACd,GACNgU,WAAY,SAASxkB,EAAMhN,EAAKyxB,GACjC,GAAIA,GAAW,EACb,OAAQ,GACV,IAAIrtB,EAAMyY,GAAGiE,SAAS9T,GAClBjW,EAAMyC,KAAKkI,IAAI+vB,EAAShhB,EAAgBrM,IACxCstB,EAAU7mB,EAAM7K,EAAMjJ,IAAQ,GAGlC,OAFAwZ,EAAanM,EAAKpE,EAAKyxB,EAAU,GACjC5mB,EAAM7K,EAAMjJ,IAAQ,GAAK26B,EAClB36B,GACN46B,SAAU,SAAS3kB,EAAM4kB,GAC1B,IAAY,EAARA,EACF,OAAQ,GAEV,IAAIplB,EAGJ,KADAA,EADaqQ,GAAG6H,WAAW1X,EAAM,CAAEoY,QAAQ,IAC7B5Y,MAEZ,OAAQ,GAEV,IAAIia,EAAQ,GAOZ,OANY,EAARmL,IACFnL,GAAS,KACC,EAARmL,IACFnL,GAAS,KACC,EAARmL,IACFnL,GAAS,KACPA,GAAS5J,GAAG6J,gBAAgBla,EAAMia,IAC5B,EAEH,GACNoL,MAAO,SAAS7kB,EAAMwW,EAAOsO,GAC9B,IAAIC,EAAUlV,GAAGuK,UAAU0K,GAG3B,OAFIC,GACFlV,GAAGqB,MAAM6T,GACJlV,GAAGxO,KAAKrB,EAAMwW,EAAO,EAAGsO,EAAWA,GAAWlT,IACpDoT,QAAS,SAASnU,EAAQoU,EAAKC,EAAQ52B,GAExC,IADA,IAAI8I,EAAM,EACDlX,EAAI,EAAGA,EAAIglC,EAAQhlC,IAAK,CAC/B,IAAI+iB,EAAM5E,EAAO4mB,EAAU,EAAJ/kC,IAAU,GAC7B6J,EAAMsU,EAAO4mB,GAAW,EAAJ/kC,EAAQ,KAAO,GACnCilC,EAAOtV,GAAGzhB,KAAKyiB,EAAQhT,EAAOoF,EAAKlZ,EAAKuE,GAC5C,GAAI62B,EAAO,EACT,OAAQ,EAEV,GADA/tB,GAAO+tB,EACHA,EAAOp7B,EACT,MAEJ,OAAOqN,GACNguB,SAAU,SAASvU,EAAQoU,EAAKC,EAAQ52B,GAEzC,IADA,IAAI8I,EAAM,EACDlX,EAAI,EAAGA,EAAIglC,EAAQhlC,IAAK,CAC/B,IAAI+iB,EAAM5E,EAAO4mB,EAAU,EAAJ/kC,IAAU,GAC7B6J,EAAMsU,EAAO4mB,GAAW,EAAJ/kC,EAAQ,KAAO,GACnCilC,EAAOtV,GAAGzgB,MAAMyhB,EAAQhT,EAAOoF,EAAKlZ,EAAKuE,GAC7C,GAAI62B,EAAO,EACT,OAAQ,EACV/tB,GAAO+tB,EAET,OAAO/tB,GACNiuB,aAAS,EAAQne,IAAK,WAGvB,OAFA4c,GAASuB,SAAW,EACVhnB,EAAOylB,GAASuB,QAAU,IAAM,IAEzCC,OAAQ,SAASriB,GAElB,OADUD,EAAaC,IAEtBsiB,gBAAiB,SAAS3T,GAC3B,IAAIf,EAAShB,GAAGuK,UAAUxI,GAC1B,IAAKf,EACH,MAAM,IAAIhB,GAAGmB,WAAW,GAC1B,OAAOH,GACN2U,MAAO,SAASC,EAAKC,GACtB,OAAOD,IAuELO,GAAqB,GACzB,SAASC,GAAeC,GACtB,KAAOA,EAAY/lC,QAAQ,CACzB,IAAI8iB,EAAMijB,EAAYj/B,MACZi/B,EAAYj/B,KACtBk/B,CAAIljB,IAGR,SAASmjB,GAA2BC,GAClC,OAAOhnC,KAAmB,aAAEkf,EAAQ8nB,IAAY,IAElD,IAAIC,GAAuB,GACvBC,GAAkB,GAClBC,GAAmB,GAGvB,SAASC,GAAsB9T,GAC7B,QAAc,IAAVA,EACF,MAAO,WAGT,IAAIlS,GADJkS,EAAQA,EAAMpX,QAAQ,iBAAkB,MAC1BjO,WAAW,GACzB,OAAImT,GARO,IAQQA,GAPR,GAQF,IAAMkS,EAENA,EAGX,SAAS+T,GAAoB/T,EAAOgU,GAElC,OADAhU,EAAQ8T,GAAsB9T,GACvB,IAAIlqB,SAAS,OAAQ,mBAAqBkqB,EAAQ,uEAAlD,CAA0HgU,GAEnI,SAASC,GAAYC,EAAeC,GAClC,IAAIC,EAAaL,GAAoBI,GAAW,SAASta,GACvDntB,KAAKkH,KAAOugC,EACZznC,KAAKmtB,QAAUA,EACf,IAAI1G,EAAQ,IAAIjjB,MAAM2pB,GAAS1G,WACjB,IAAVA,IACFzmB,KAAKymB,MAAQzmB,KAAKqQ,WAAa,KAAOoW,EAAMvK,QAAQ,qBAAsB,QAY9E,OATAwrB,EAAWlmC,UAAYL,OAAO6B,OAAOwkC,EAAchmC,WACnDkmC,EAAWlmC,UAAUyF,YAAcygC,EACnCA,EAAWlmC,UAAU6O,SAAW,WAC9B,YAAqB,IAAjBrQ,KAAKmtB,QACAntB,KAAKkH,KAELlH,KAAKkH,KAAO,KAAOlH,KAAKmtB,SAG5Bua,EAET,IAAIC,QAAgB,EACpB,SAASC,GAAmBza,GAC1B,MAAM,IAAIwa,GAAcxa,GAE1B,SAAS0a,GAA8BC,EAASC,EAAgBC,GAI9D,SAASC,EAAWC,GAClB,IAAIC,EAAmBH,EAAkBE,GACrCC,EAAiBrnC,SAAWgnC,EAAQhnC,QACtC8mC,GAAmB,mCAErB,IAAK,IAAI/mC,EAAI,EAAGA,EAAIinC,EAAQhnC,SAAUD,EACpCunC,GAAaN,EAAQjnC,GAAIsnC,EAAiBtnC,IAT9CinC,EAAQ5iC,SAAQ,SAASb,GACvB8iC,GAAiB9iC,GAAQ0jC,KAW3B,IAAIM,EAAiB,IAAIl8B,MAAM47B,EAAejnC,QAC1CwnC,EAAoB,GACpBC,EAAa,EACjBR,EAAe7iC,SAAQ,SAASsjC,EAAI3nC,GAC9BqmC,GAAgBnlC,eAAeymC,GACjCH,EAAexnC,GAAKqmC,GAAgBsB,IAEpCF,EAAkBhiC,KAAKkiC,GAClBvB,GAAqBllC,eAAeymC,KACvCvB,GAAqBuB,GAAM,IAE7BvB,GAAqBuB,GAAIliC,MAAK,WAC5B+hC,EAAexnC,GAAKqmC,GAAgBsB,KAClCD,IACiBD,EAAkBxnC,QACnCmnC,EAAWI,UAKc,IAA7BC,EAAkBxnC,QACpBmnC,EAAWI,GAsDf,IAAII,GAAsB,GAsD1B,SAASC,GAAiBx2B,GACxB,OAAQA,GACN,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,KAAK,EACH,OAAO,EACT,QACE,MAAM,IAAIzR,UAAU,sBAAwByR,IAUlD,IAAIy2B,QAAmB,EACvB,SAASC,GAAiBhlB,GAGxB,IAFA,IAAI7L,EAAM,GACN/H,EAAI4T,EACDlF,EAAO1O,IAAM,IAClB+H,GAAO4wB,GAAiBjqB,EAAO1O,MAAQ,IAEzC,OAAO+H,EAET,IAAI8wB,QAAe,EACnB,SAASC,GAAkB3b,GACzB,MAAM,IAAI0b,GAAa1b,GAEzB,SAASib,GAAaW,EAASC,EAAoBC,GAEjD,GADAA,EAAUA,GAAW,KACf,mBAAoBD,GACxB,MAAM,IAAIvoC,UAAU,2DAEtB,IAAI6yB,EAAQ0V,EAAmB9hC,KAI/B,GAHK6hC,GACHD,GAAkB,SAAWxV,EAAQ,iDAEnC4T,GAAgBnlC,eAAegnC,GAAU,CAC3C,GAAIE,EAAQC,6BACV,OAEAJ,GAAkB,yBAA2BxV,EAAQ,WAKzD,GAFA4T,GAAgB6B,GAAWC,SACpB7B,GAAiB4B,GACpB9B,GAAqBllC,eAAegnC,GAAU,CAChD,IAAIrhB,EAAYuf,GAAqB8B,UAC9B9B,GAAqB8B,GAC5BrhB,EAAUxiB,SAAQ,SAASkY,GACzBA,QAyBN,SAAS+rB,GAAsBC,GAC7B,KAAMppC,gBAAgBqpC,IACpB,OAAO,EAET,KAAMD,aAAiBC,IACrB,OAAO,EAMT,IAJA,IAAIC,EAAYtpC,KAAKupC,GAAGC,QAAQC,gBAC5BC,EAAO1pC,KAAKupC,GAAG3lB,IACf+lB,EAAaP,EAAMG,GAAGC,QAAQC,gBAC9BG,EAAQR,EAAMG,GAAG3lB,IACd0lB,EAAUO,WACfH,EAAOJ,EAAUQ,OAAOJ,GACxBJ,EAAYA,EAAUO,UAExB,KAAOF,EAAWE,WAChBD,EAAQD,EAAWG,OAAOF,GAC1BD,EAAaA,EAAWE,UAE1B,OAAOP,IAAcK,GAAcD,IAASE,EAK9C,SAASG,GAA4BroC,GAInConC,GAAsCpnC,EAFtB6nC,GAAGC,QAAQC,gBAAgBviC,KAEE,6BAE/C,IAAI8iC,IAAoB,EACxB,SAASC,GAAgB5hC,IASzB,SAAS6hC,GAAmBX,GAC1BA,EAAG5gB,MAAMnpB,OAAS,EACgB,IAAnB+pC,EAAG5gB,MAAMnpB,OAT1B,SAAuB+pC,GACjBA,EAAGY,SACLZ,EAAGa,aAAaC,cAAcd,EAAGY,UAEjCZ,EAAGC,QAAQC,gBAAgBY,cAAcd,EAAG3lB,KAO5C0mB,CAAcf,GAGlB,SAASgB,GAAgBliC,GACvB,MAAiC,oBAAtBmiC,mBACTD,GAAkB,SAASE,GACzB,OAAOA,GAEFpiC,IAET2hC,GAAoB,IAAIQ,mBAAkB,SAAShjC,GACjD,IAAK,IAAIlC,EAASkC,EAAK5B,QAASN,EAAO5F,KAAM4F,EAASkC,EAAK5B,OAAQ,CACjE,IAAI2jC,EAAKjkC,EAAO9F,MACX+pC,EAAG3lB,IAGNsmB,GAAmBX,GAFnBroB,QAAQO,KAAK,2BAA6B8nB,EAAG3lB,SAUnDqmB,GAAkB,SAASQ,GACzBT,GAAkBU,WAAWD,EAAQlB,MALvCgB,GAAkB,SAASE,GAEzB,OADAT,GAAkB9Y,SAASuZ,EAASA,EAAQlB,GAAIkB,EAAQlB,IACjDkB,IAKcpiC,IAEzB,SAASsiC,KAIP,GAHK3qC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGqB,wBAEV,OADA5qC,KAAKupC,GAAG5gB,MAAMnpB,OAAS,EAChBQ,KAEP,IA5DgC6qC,EA4D5BC,EAAQP,GAAgBppC,OAAO6B,OAAO7B,OAAO0D,eAAe7E,MAAO,CAAEupC,GAAI,CAAE/pC,OA5D/CqrC,EA4DiF7qC,KAAKupC,GA3DjH,CAAE5gB,MAAOkiB,EAAEliB,MAAOoiB,gBAAiBF,EAAEE,gBAAiBH,wBAAyBC,EAAED,wBAAyBhnB,IAAKinB,EAAEjnB,IAAK4lB,QAASqB,EAAErB,QAASW,SAAUU,EAAEV,SAAUC,aAAcS,EAAET,mBA8DrL,OAFAU,EAAMvB,GAAG5gB,MAAMnpB,OAAS,EACxBsrC,EAAMvB,GAAGwB,iBAAkB,EACpBD,EAGX,SAASE,KACFhrC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGwB,kBAAoB/qC,KAAKupC,GAAGqB,yBACtC9B,GAAkB,yCAEpBmB,GAAgBjqC,MAChBkqC,GAAmBlqC,KAAKupC,IACnBvpC,KAAKupC,GAAGqB,0BACX5qC,KAAKupC,GAAGY,cAAW,EACnBnqC,KAAKupC,GAAG3lB,SAAM,GAGlB,SAASqnB,KACP,OAAQjrC,KAAKupC,GAAG3lB,IAElB,IAAIsnB,QAAgB,EAChBC,GAAgB,GACpB,SAASC,KACP,KAAOD,GAAcrqC,QAAQ,CAC3B,IAAIY,EAAMypC,GAAcvjC,MACxBlG,EAAI6nC,GAAGwB,iBAAkB,EACzBrpC,EAAY,UAGhB,SAAS2pC,KAYP,OAXKrrC,KAAKupC,GAAG3lB,KACXmmB,GAA4B/pC,MAE1BA,KAAKupC,GAAGwB,kBAAoB/qC,KAAKupC,GAAGqB,yBACtC9B,GAAkB,yCAEpBqC,GAAc7kC,KAAKtG,MACU,IAAzBmrC,GAAcrqC,QAAgBoqC,IAChCA,GAAcE,IAEhBprC,KAAKupC,GAAGwB,iBAAkB,EACnB/qC,KAST,SAASqpC,MAET,IAAIiC,GAAqB,GACzB,SAASC,GAAoBC,EAAOC,EAAYC,GAC9C,QAAwC,IAApCF,EAAMC,GAAYE,cAA0B,CAC9C,IAAIC,EAAWJ,EAAMC,GACrBD,EAAMC,GAAc,WAIlB,OAHKD,EAAMC,GAAYE,cAAc5pC,eAAe7B,UAAUY,SAC5DgoC,GAAkB,aAAe4C,EAAY,iDAAmDxrC,UAAUY,OAAS,uBAAyB0qC,EAAMC,GAAYE,cAAgB,MAEzKH,EAAMC,GAAYE,cAAczrC,UAAUY,QAAQX,MAAMH,KAAME,YAEvEsrC,EAAMC,GAAYE,cAAgB,GAClCH,EAAMC,GAAYE,cAAcC,EAASC,UAAYD,GAGzD,SAASE,GAAmBxY,EAAO9zB,EAAOusC,GACpCxsB,EAAOxd,eAAeuxB,UACH,IAAjByY,QAA2D,IAAhCxsB,EAAO+T,GAAOqY,oBAA0E,IAA9CpsB,EAAO+T,GAAOqY,cAAcI,KACnGjD,GAAkB,gCAAkCxV,EAAQ,WAE9DiY,GAAoBhsB,EAAQ+T,EAAOA,GAC/B/T,EAAOxd,eAAegqC,IACxBjD,GAAkB,uFAAyFiD,EAAe,MAE5HxsB,EAAO+T,GAAOqY,cAAcI,GAAgBvsC,IAE5C+f,EAAO+T,GAAS9zB,OACK,IAAjBusC,IACFxsB,EAAO+T,GAAOyY,aAAeA,IAInC,SAASC,GAAgB1Y,EAAOrsB,EAAaglC,EAAmB5B,EAAeR,EAAWqC,EAAepC,EAAQqC,GAC/GnsC,KAAKkH,KAAOosB,EACZtzB,KAAKiH,YAAcA,EACnBjH,KAAKisC,kBAAoBA,EACzBjsC,KAAKqqC,cAAgBA,EACrBrqC,KAAK6pC,UAAYA,EACjB7pC,KAAKksC,cAAgBA,EACrBlsC,KAAK8pC,OAASA,EACd9pC,KAAKmsC,SAAWA,EAChBnsC,KAAKosC,qBAAuB,GAE9B,SAASC,GAAczoB,EAAK0oB,EAAUC,GACpC,KAAOD,IAAaC,GACbD,EAASxC,QACZhB,GAAkB,gCAAkCyD,EAAarlC,KAAO,wBAA0BolC,EAASplC,MAE7G0c,EAAM0oB,EAASxC,OAAOlmB,GACtB0oB,EAAWA,EAASzC,UAEtB,OAAOjmB,EAET,SAAS4oB,GAAoC3F,EAAax+B,GACxD,GAAe,OAAXA,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE3C,EAEJmB,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,MAE9E,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,OADU4C,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBAG3D,SAASmD,GAAyB/F,EAAax+B,GAC7C,IAAIub,EACJ,GAAe,OAAXvb,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE9ClH,KAAK6sC,gBACPjpB,EAAM5jB,KAAK8sC,iBACS,OAAhBjG,GACFA,EAAYvgC,KAAKtG,KAAKqqC,cAAezmB,GAEhCA,GAEA,EAGNvb,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,OAEzElH,KAAK+sC,SAAW1kC,EAAOkhC,GAAGC,QAAQuD,SACrCjE,GAAkB,oCAAsCzgC,EAAOkhC,GAAGa,aAAe/hC,EAAOkhC,GAAGa,aAAaljC,KAAOmB,EAAOkhC,GAAGC,QAAQtiC,MAAQ,sBAAwBlH,KAAKkH,MAExK,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,GADA7lB,EAAMyoB,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBACjDzpC,KAAK6sC,eAIP,YAH2B,IAAvBxkC,EAAOkhC,GAAGY,UACZrB,GAAkB,mDAEZ9oC,KAAKgtC,eACX,KAAK,EACC3kC,EAAOkhC,GAAGa,eAAiBpqC,KAC7B4jB,EAAMvb,EAAOkhC,GAAGY,SAEhBrB,GAAkB,oCAAsCzgC,EAAOkhC,GAAGa,aAAe/hC,EAAOkhC,GAAGa,aAAaljC,KAAOmB,EAAOkhC,GAAGC,QAAQtiC,MAAQ,sBAAwBlH,KAAKkH,MAExK,MACF,KAAK,EACH0c,EAAMvb,EAAOkhC,GAAGY,SAChB,MACF,KAAK,EACH,GAAI9hC,EAAOkhC,GAAGa,eAAiBpqC,KAC7B4jB,EAAMvb,EAAOkhC,GAAGY,aACX,CACL,IAAI8C,EAAe5kC,EAAc,QACjCub,EAAM5jB,KAAKktC,SAAStpB,EAAKupB,IAAiB,WACxCF,EAAqB,aAEH,OAAhBpG,GACFA,EAAYvgC,KAAKtG,KAAKqqC,cAAezmB,GAGzC,MACF,QACEklB,GAAkB,+BAGxB,OAAOllB,EAET,SAASwpB,GAAuCvG,EAAax+B,GAC3D,GAAe,OAAXA,EAIF,OAHIrI,KAAKysC,aACP3D,GAAkB,uBAAyB9oC,KAAKkH,MAE3C,EAEJmB,EAAOkhC,IACVT,GAAkB,gBAAkB4D,GAAarkC,GAAU,UAAYrI,KAAKkH,MAEzEmB,EAAOkhC,GAAG3lB,KACbklB,GAAkB,mDAAqD9oC,KAAKkH,MAE1EmB,EAAOkhC,GAAGC,QAAQuD,SACpBjE,GAAkB,mCAAqCzgC,EAAOkhC,GAAGC,QAAQtiC,KAAO,sBAAwBlH,KAAKkH,MAE/G,IAAIylC,EAActkC,EAAOkhC,GAAGC,QAAQC,gBAEpC,OADU4C,GAAchkC,EAAOkhC,GAAG3lB,IAAK+oB,EAAa3sC,KAAKypC,iBAG3D,SAAS4D,GAA6BzpB,GAIpC,OAHI5jB,KAAKstC,gBACP1pB,EAAM5jB,KAAKstC,cAAc1pB,IAEpBA,EAET,SAAS2pB,GAA6B3pB,GAChC5jB,KAAKqqC,eACPrqC,KAAKqqC,cAAczmB,GAGvB,SAAS4pB,GAA+BnlC,GACvB,OAAXA,GACFA,EAAe,SAGnB,SAASolC,GAAgB7pB,EAAK0oB,EAAUC,GACtC,GAAID,IAAaC,EACf,OAAO3oB,EAET,QAA+B,IAA3B2oB,EAAa1C,UACf,OAAO,KAET,IAAI6D,EAAKD,GAAgB7pB,EAAK0oB,EAAUC,EAAa1C,WACrD,OAAW,OAAP6D,EACK,KAEFnB,EAAaJ,SAASuB,GAE/B,SAASC,KACP,OAAOxsC,OAAOsG,KAAKmmC,IAAqB9sC,OAE1C,SAAS+sC,KACP,IAAIH,EAAK,GACT,IAAK,IAAII,KAAKF,GACRA,GAAoB7rC,eAAe+rC,IACrCJ,EAAGpnC,KAAKsnC,GAAoBE,IAGhC,OAAOJ,EAET,SAASK,GAAiBjuC,GACxBorC,GAAgBprC,EACZqrC,GAAcrqC,QAAUoqC,IAC1BA,GAAcE,IASlB,IAAIwC,GAAsB,GAW1B,SAASI,GAAqBC,EAAQrqB,GAEpC,OADAA,EAXF,SAA0BqqB,EAAQrqB,GAIhC,SAHY,IAARA,GACFklB,GAAkB,+BAEbmF,EAAOpE,WACZjmB,EAAMqqB,EAAOnE,OAAOlmB,GACpBqqB,EAASA,EAAOpE,UAElB,OAAOjmB,EAGDsqB,CAAiBD,EAAQrqB,GACxBgqB,GAAoBhqB,GAE7B,SAASuqB,GAAgB3sC,EAAW2C,GAUlC,OATKA,EAAOqlC,SAAYrlC,EAAOyf,KAC7BgkB,GAAmB,8CAEGzjC,EAAOimC,gBACXjmC,EAAOgmC,UAEzBvC,GAAmB,oDAErBzjC,EAAOwkB,MAAQ,CAAEnpB,MAAO,GACjB+qC,GAAgBppC,OAAO6B,OAAOxB,EAAW,CAAE+nC,GAAI,CAAE/pC,MAAO2E,MAEjE,SAASiqC,GAA+BxqB,GACtC,IAAIyqB,EAAaruC,KAAKsuC,WAAW1qB,GACjC,IAAKyqB,EAEH,OADAruC,KAAKouB,WAAWxK,GACT,KAET,IAAIolB,EAAqBgF,GAAqBhuC,KAAKypC,gBAAiB4E,GACpE,QAA2B,IAAvBrF,EAA+B,CACjC,GAA0C,IAAtCA,EAAmBO,GAAG5gB,MAAMnpB,MAG9B,OAFAwpC,EAAmBO,GAAG3lB,IAAMyqB,EAC5BrF,EAAmBO,GAAGY,SAAWvmB,EAC1BolB,EAA0B,QAEjC,IAAI0E,EAAK1E,EAA0B,QAEnC,OADAhpC,KAAKouB,WAAWxK,GACT8pB,EAGX,SAASa,IACP,OAAIvuC,KAAK6sC,eACAsB,GAAgBnuC,KAAKypC,gBAAgBwC,kBAAmB,CAAEzC,QAASxpC,KAAKwuC,YAAa5qB,IAAKyqB,EAAYjE,aAAcpqC,KAAMmqC,SAAUvmB,IAEpIuqB,GAAgBnuC,KAAKypC,gBAAgBwC,kBAAmB,CAAEzC,QAASxpC,KAAM4jB,IAAAA,IAGpF,IAKI6qB,EALAC,EAAa1uC,KAAKypC,gBAAgByC,cAAcmC,GAChDM,EAA0BrD,GAAmBoD,GACjD,IAAKC,EACH,OAAOJ,EAAkB/pC,KAAKxE,MAI9ByuC,EADEzuC,KAAK+sC,QACE4B,EAAwBC,iBAExBD,EAAwBE,YAEnC,IAAIC,EAAKrB,GAAgBY,EAAYruC,KAAKypC,gBAAiBgF,EAAOhF,iBAClE,OAAW,OAAPqF,EACKP,EAAkB/pC,KAAKxE,MAE5BA,KAAK6sC,eACAsB,GAAgBM,EAAOhF,gBAAgBwC,kBAAmB,CAAEzC,QAASiF,EAAQ7qB,IAAKkrB,EAAI1E,aAAcpqC,KAAMmqC,SAAUvmB,IAEpHuqB,GAAgBM,EAAOhF,gBAAgBwC,kBAAmB,CAAEzC,QAASiF,EAAQ7qB,IAAKkrB,IAW7F,SAASC,GAAkBzb,EAAOmW,EAAiBgD,EAAaM,EAASF,EAAgB2B,EAAaxB,EAAeM,EAAeR,EAAgBI,EAAU7C,GAC5JrqC,KAAKkH,KAAOosB,EACZtzB,KAAKypC,gBAAkBA,EACvBzpC,KAAKysC,YAAcA,EACnBzsC,KAAK+sC,QAAUA,EACf/sC,KAAK6sC,eAAiBA,EACtB7sC,KAAKwuC,YAAcA,EACnBxuC,KAAKgtC,cAAgBA,EACrBhtC,KAAKstC,cAAgBA,EACrBttC,KAAK8sC,eAAiBA,EACtB9sC,KAAKktC,SAAWA,EAChBltC,KAAKqqC,cAAgBA,EAChBwC,QAAgD,IAA9BpD,EAAgBI,UASrC7pC,KAAiB,WAAI4sC,GARjBG,GACF/sC,KAAiB,WAAIwsC,GACrBxsC,KAAKgvC,mBAAqB,OAE1BhvC,KAAiB,WAAIotC,GACrBptC,KAAKgvC,mBAAqB,MAMhC,SAASC,GAAoB3b,EAAO9zB,EAAOusC,GACpCxsB,EAAOxd,eAAeuxB,IACzBsU,GAAmB,4CAEe,IAAhCroB,EAAO+T,GAAOqY,oBAA6C,IAAjBI,EAC5CxsB,EAAO+T,GAAOqY,cAAcI,GAAgBvsC,GAE5C+f,EAAO+T,GAAS9zB,EAChB+f,EAAO+T,GAAOuY,SAAWE,GAc7B,SAASmD,GAAwBC,EAAWC,GAQ1C,IAAIC,GAL6B,IAFjCF,EAAYvG,GAAiBuG,IAEb97B,QAAQ,KAd1B,SAAsB0U,EAAKnE,GACzB3C,EAAO8G,EAAI1U,QAAQ,MAAQ,EAAG,oDAC9B,IAAIi8B,EAAW,GACf,OAAO,WACLA,EAASxuC,OAASZ,UAAUY,OAC5B,IAAK,IAAID,EAAI,EAAGA,EAAIX,UAAUY,OAAQD,IACpCyuC,EAASzuC,GAAKX,UAAUW,GAE1B,OAAOinB,GAAQC,EAAKnE,EAAK0rB,IAOhBC,CAAaJ,EAAWC,GAE1B7pB,EAAUsC,IAAIunB,GAMvB,MAHkB,mBAAPC,GACTvG,GAAkB,2CAA6CqG,EAAY,KAAOC,GAE7EC,EAET,IAAIG,QAAmB,EACvB,SAASC,GAAYprC,GACnB,IAAIuf,EAAM8rB,GAAerrC,GACrBqpC,EAAK9E,GAAiBhlB,GAE1B,OADAiI,GAAMjI,GACC8pB,EAET,SAASiC,GAAsBxiB,EAASyiB,GACtC,IAAIC,EAAe,GACfC,EAAO,GAgBX,MADAF,EAAM1qC,SAdN,SAAS6qC,EAAM1rC,GACTyrC,EAAKzrC,IAGL6iC,GAAgB7iC,KAGhB8iC,GAAiB9iC,GACnB8iC,GAAiB9iC,GAAMa,QAAQ6qC,IAGjCF,EAAavpC,KAAKjC,GAClByrC,EAAKzrC,IAAQ,OAGT,IAAImrC,GAAiBriB,EAAU,KAAO0iB,EAAaG,IAAIP,IAAahhC,KAAK,CAAC,QAkDlF,SAASwhC,GAAoBtnB,EAAOunB,GAElC,IADA,IAAInlC,EAAQ,GACHlK,EAAI,EAAGA,EAAI8nB,EAAO9nB,IACzBkK,EAAMzE,KAAK0Y,GAAQkxB,GAAgB,GAAKrvC,IAAM,IAEhD,OAAOkK,EAkDT,SAASolC,GAAqBzE,EAAW0E,EAAUC,EAAWC,EAAgBC,GAC5E,IAAI1E,EAAWuE,EAAStvC,OACpB+qC,EAAW,GACb/C,GAAkB,kFAIpB,IAFA,IAAI0H,EAAoC,OAAhBJ,EAAS,IAA6B,OAAdC,EAC5CI,GAAuB,EAClB5vC,EAAI,EAAGA,EAAIuvC,EAAStvC,SAAUD,EACrC,GAAoB,OAAhBuvC,EAASvvC,SAAkD,IAAnCuvC,EAASvvC,GAAGmuC,mBAA+B,CACrEyB,GAAuB,EACvB,MAGJ,IAAIC,EAA+B,SAArBN,EAAS,GAAGlpC,KACtBypC,EAAW,GACXC,EAAgB,GACpB,IAAS/vC,EAAI,EAAGA,EAAIgrC,EAAW,IAAKhrC,EAClC8vC,IAAmB,IAAN9vC,EAAU,KAAO,IAAM,MAAQA,EAC5C+vC,IAAwB,IAAN/vC,EAAU,KAAO,IAAM,MAAQA,EAAI,QAEvD,IAAIgwC,EAAgB,mBAAqBzJ,GAAsBsE,GAAa,IAAMiF,EAAW,kCAAoC9E,EAAW,GAAK,oCAAsCH,EAAY,8DAAgEG,EAAW,GAAK,iBAC/Q4E,IACFI,GAAiB,2BAEnB,IAAIC,EAAYL,EAAuB,cAAgB,OACnDM,EAAQ,CAAC,oBAAqB,UAAW,KAAM,iBAAkB,UAAW,cAC5EC,EAAQ,CAAClI,GAAmBwH,EAAgBC,EAAe3J,GAAgBwJ,EAAS,GAAIA,EAAS,IAIrG,IAHII,IACFK,GAAiB,yCAA2CC,EAAY,cAEjEjwC,EAAI,EAAGA,EAAIgrC,EAAW,IAAKhrC,EAClCgwC,GAAiB,UAAYhwC,EAAI,kBAAoBA,EAAI,eAAiBiwC,EAAY,QAAUjwC,EAAI,SAAWuvC,EAASvvC,EAAI,GAAGqG,KAAO,KACtI6pC,EAAMzqC,KAAK,UAAYzF,GACvBmwC,EAAM1qC,KAAK8pC,EAASvvC,EAAI,IAM1B,GAJI2vC,IACFI,EAAgB,aAAeA,EAAc9vC,OAAS,EAAI,KAAO,IAAM8vC,GAEzEC,IAAkBH,EAAU,YAAc,IAAM,cAAgBE,EAAc9vC,OAAS,EAAI,KAAO,IAAM8vC,EAAgB,OACpHH,EACFI,GAAiB,sCAEjB,IAAShwC,EAAI2vC,EAAoB,EAAI,EAAG3vC,EAAIuvC,EAAStvC,SAAUD,EAAG,CAChE,IAAIowC,EAAkB,IAANpwC,EAAU,YAAc,OAASA,EAAI,GAAK,QACnB,OAAnCuvC,EAASvvC,GAAGmuC,qBACd6B,GAAiBI,EAAY,SAAWA,EAAY,SAAWb,EAASvvC,GAAGqG,KAAO,KAClF6pC,EAAMzqC,KAAK2qC,EAAY,SACvBD,EAAM1qC,KAAK8pC,EAASvvC,GAAGmuC,qBAW7B,OAPI0B,IACFG,GAAiB,sDAGnBA,GAAiB,MACjBE,EAAMzqC,KAAKuqC,GAnEb,SAAc5pC,EAAaiqC,GACzB,KAAMjqC,aAAuBmC,UAC3B,MAAM,IAAI3I,UAAU,4CAA8CwG,EAAc,4BAElF,IAAIkqC,EAAQ9J,GAAoBpgC,EAAYC,MAAQ,uBAAuB,eAE3EiqC,EAAM3vC,UAAYyF,EAAYzF,UAC9B,IAAIE,EAAM,IAAIyvC,EACV/gB,EAAInpB,EAAY9G,MAAMuB,EAAKwvC,GAC/B,OAAO9gB,aAAajvB,OAASivB,EAAI1uB,EA2DX0vC,CAAKhoC,SAAU2nC,GAAO5wC,MAAM,KAAM6wC,GAuC1D,IAAIK,GAAkB,GAClBC,GAAqB,CAAC,GAAI,CAAE9xC,WAAO,GAAU,CAAEA,MAAO,MAAQ,CAAEA,OAAO,GAAQ,CAAEA,OAAO,IAC5F,SAAS+xC,GAAelpC,GAClBA,EAAS,GAA+C,KAAxCipC,GAAmBjpC,GAAQkmB,WAC7C+iB,GAAmBjpC,QAAU,EAC7BgpC,GAAgB/qC,KAAK+B,IAGzB,SAASmpC,KAEP,IADA,IAAI7oB,EAAQ,EACH9nB,EAAI,EAAGA,EAAIywC,GAAmBxwC,SAAUD,OACjB,IAA1BywC,GAAmBzwC,MACnB8nB,EAGN,OAAOA,EAET,SAAS8oB,KACP,IAAK,IAAI5wC,EAAI,EAAGA,EAAIywC,GAAmBxwC,SAAUD,EAC/C,QAA8B,IAA1BywC,GAAmBzwC,GACrB,OAAOywC,GAAmBzwC,GAG9B,OAAO,KAMT,SAASssC,GAAiB3tC,GACxB,OAAQA,GACN,UAAK,EACH,OAAO,EAET,KAAK,KACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,QACE,IAAI6I,EAASgpC,GAAgBvwC,OAASuwC,GAAgBzpC,MAAQ0pC,GAAmBxwC,OAEjF,OADAwwC,GAAmBjpC,GAAU,CAAEkmB,SAAU,EAAG/uB,MAAAA,GACrC6I,GAcb,SAASqpC,GAAyBpe,EAAO3L,EAAOgqB,GAC9C,OAAQhqB,GACN,KAAK,EACH,OAAO,SAASqf,GACd,IAAI7jB,EAAOwuB,EAASnzB,EAAQE,EAC5B,OAAO1e,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,KAAK,EACH,OAAO,SAASA,GACd,IAAI7jB,EAAOwuB,EAAS/yB,EAASE,EAC7B,OAAO9e,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,KAAK,EACH,OAAO,SAASA,GACd,IAAI7jB,EAAOwuB,EAAS3yB,EAASE,EAC7B,OAAOlf,KAAmB,aAAEmjB,EAAK6jB,IAAY,KAEjD,QACE,MAAM,IAAIvmC,UAAU,yBAA2B6yB,IAgBrD,SAASse,GAAsB7I,EAAS2C,GACtC,IAAImG,EAAO3K,GAAgB6B,GAI3B,YAHa,IAAT8I,GACF/I,GAAkB4C,EAAY,qBAAuB+D,GAAY1G,IAE5D8I,EAWT,SAASnF,GAAaoF,GACpB,GAAU,OAANA,EACF,MAAO,OAET,IAAIvmB,SAAWumB,EACf,MAAU,WAANvmB,GAAwB,UAANA,GAAuB,aAANA,EAC9BumB,EAAEzhC,WAEF,GAAKyhC,EAGhB,SAASC,GAA0Bze,EAAO3L,GACxC,OAAQA,GACN,KAAK,EACH,OAAO,SAASqf,GACd,OAAOhnC,KAAmB,aAAE8iB,EAAQkkB,IAAY,KAEpD,KAAK,EACH,OAAO,SAASA,GACd,OAAOhnC,KAAmB,aAAEof,EAAQ4nB,IAAY,KAEpD,QACE,MAAM,IAAIvmC,UAAU,uBAAyB6yB,IA4BnD,SAAS0e,GAA4B1e,EAAO3L,EAAOgqB,GACjD,OAAQhqB,GACN,KAAK,EACH,OAAOgqB,EAAS,SAA2B3K,GACzC,OAAOxoB,EAAMwoB,IAAY,IACvB,SAA2BA,GAC7B,OAAOtoB,EAAOsoB,IAAY,IAE9B,KAAK,EACH,OAAO2K,EAAS,SAA4B3K,GAC1C,OAAOpoB,EAAOooB,IAAY,IACxB,SAA4BA,GAC9B,OAAOloB,EAAQkoB,IAAY,IAE/B,KAAK,EACH,OAAO2K,EAAS,SAA4B3K,GAC1C,OAAOhoB,EAAOgoB,IAAY,IACxB,SAA4BA,GAC9B,OAAO9nB,EAAQ8nB,IAAY,IAE/B,QACE,MAAM,IAAIvmC,UAAU,yBAA2B6yB,IAuMrD,SAAS2e,GAAc5pC,GAIrB,OAHKA,GACHygC,GAAkB,oCAAsCzgC,GAEnDipC,GAAmBjpC,GAAQ7I,MA6BpC,IAwEI4pB,GAxEA8oB,GAAgB,GACpB,SAASC,GAAkBlb,GACzB,IAAImb,EAASF,GAAcjb,GAC3B,YAAe,IAAXmb,EACKxJ,GAAiB3R,GAEjBmb,EAGX,SAASC,KACP,MAA0B,iBAAflpC,WACFA,WAGAC,SACL,cAFG,GAgGT,SAAS0pC,GAA0B5gC,GACjC,IAGE,OAFAoM,EAAWy0B,KAAK7gC,EAAOlD,EAAOmC,WAAa,QAAU,IACrDoN,EAA2BD,EAAWtP,QAC/B,EACP,MAAOhF,KAxCTof,GADEzJ,EACoB,WACpB,IAAI4L,EAAIrL,EAAgB,SACxB,OAAc,IAAPqL,EAAE,GAAWA,EAAE,GAAK,KAED,oBAAZsC,QACMA,QAEA,WACpB,OAAOriB,YAAYE,OAsDvB,IAAI4vC,GAAM,GAIV,SAASC,KACP,IAAKA,GAAcC,QAAS,CAC1B,IACIlvC,EAAM,CAAEmvC,KAAQ,WAAYC,QAAW,WAAY1sB,KAAQ,IAAK2sB,IAAO,IAAKC,KAAQ,iBAAkBC,MADzE,iBAAdhyB,WAA0BA,UAAUiyB,WAAajyB,UAAUiyB,UAAU,IAAM,KAAK5/B,QAAQ,IAAK,KAAO,SACC6/B,EALnHl8B,GAAe,kBAMpB,IAAK,IAAIhJ,KAAKykC,GACZhvC,EAAIuK,GAAKykC,GAAIzkC,GAEf,IAAI2kC,EAAU,GACd,IAAK,IAAI3kC,KAAKvK,EACZkvC,EAAQl1C,KAAKuQ,EAAI,IAAMvK,EAAIuK,IAE7B0kC,GAAcC,QAAUA,EAE1B,OAAOD,GAAcC,QAkGvB,SAASyC,GAAaC,GACpB,OAAOA,EAAO,GAAM,IAAMA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,GAE/D,SAASC,GAAWpzC,EAAOunC,GAEzB,IADA,IAAI8L,EAAM,EACDv9C,EAAI,EAAGA,GAAKyxC,EAAO8L,GAAOrzC,EAAMlK,MAEzC,OAAOu9C,EAET,IAAIC,GAAoB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjEC,GAAuB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxE,SAASC,GAAUC,EAAMC,GAEvB,IADA,IAAIC,EAAU,IAAI3yC,KAAKyyC,EAAKxyC,WACrByyC,EAAO,GAAG,CACf,IAAIE,EAAOV,GAAaS,EAAQE,eAC5BC,EAAeH,EAAQI,WACvBC,GAAsBJ,EAAON,GAAoBC,IAAsBO,GAC3E,KAAIJ,EAAOM,EAAqBL,EAAQM,WAWtC,OADAN,EAAQO,QAAQP,EAAQM,UAAYP,GAC7BC,EAVPD,GAAQM,EAAqBL,EAAQM,UAAY,EACjDN,EAAQO,QAAQ,GACZJ,EAAe,GACjBH,EAAQQ,SAASL,EAAe,IAEhCH,EAAQQ,SAAS,GACjBR,EAAQS,YAAYT,EAAQE,cAAgB,IAOlD,OAAOF,EAET,SAASU,GAAUzvC,EAAG0vC,EAASC,EAAQC,GACrC,IAAIC,EAAUxgC,EAAOugC,EAAK,KAAO,GAC7Bf,EAAO,CAAEiB,OAAQzgC,EAAOugC,IAAO,GAAIG,OAAQ1gC,EAAOugC,EAAK,IAAM,GAAII,QAAS3gC,EAAOugC,EAAK,IAAM,GAAIK,QAAS5gC,EAAOugC,EAAK,KAAO,GAAIM,OAAQ7gC,EAAOugC,EAAK,KAAO,GAAIO,QAAS9gC,EAAOugC,EAAK,KAAO,GAAIQ,QAAS/gC,EAAOugC,EAAK,KAAO,GAAIS,QAAShhC,EAAOugC,EAAK,KAAO,GAAIU,SAAUjhC,EAAOugC,EAAK,KAAO,GAAIW,UAAWlhC,EAAOugC,EAAK,KAAO,GAAIC,QAASA,EAAU77B,EAAa67B,GAAW,IAC7WW,EAAUx8B,EAAa27B,GACvBc,EAAoB,CAAE,KAAM,uBAAwB,KAAM,WAAY,KAAM,WAAY,KAAM,KAAM,KAAM,cAAe,KAAM,QAAS,KAAM,WAAY,KAAM,WAAY,KAAM,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,WAAY,MAAO,WAAY,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,KAAM,MAAO,MAC/b,IAAK,IAAIC,KAAQD,EACfD,EAAUA,EAAQjkC,QAAQ,IAAIokC,OAAOD,EAAM,KAAMD,EAAkBC,IAErE,IAAIE,EAAW,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9EC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC5H,SAASC,EAAiBjhD,EAAOkhD,EAAQC,GAEvC,IADA,IAAIjsC,EAAuB,iBAAVlV,EAAqBA,EAAM6Q,WAAa7Q,GAAS,GAC3DkV,EAAI5T,OAAS4/C,GAClBhsC,EAAMisC,EAAU,GAAKjsC,EAEvB,OAAOA,EAET,SAASksC,EAAaphD,EAAOkhD,GAC3B,OAAOD,EAAiBjhD,EAAOkhD,EAAQ,KAEzC,SAASG,EAAaC,EAAOC,GAC3B,SAASC,EAAIxhD,GACX,OAAOA,EAAQ,GAAK,EAAIA,EAAQ,EAAI,EAAI,EAE1C,IAAImX,EAMJ,OALmE,KAA9DA,EAAUqqC,EAAIF,EAAMlC,cAAgBmC,EAAMnC,iBACgB,KAAxDjoC,EAAUqqC,EAAIF,EAAMhC,WAAaiC,EAAMjC,eAC1CnoC,EAAUqqC,EAAIF,EAAM9B,UAAY+B,EAAM/B,YAGnCroC,EAET,SAASsqC,EAAsBC,GAC7B,OAAQA,EAAUC,UAChB,KAAK,EACH,OAAO,IAAIp1C,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAOsC,EACT,KAAK,EACH,OAAO,IAAIn1C,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAe,EAAG,GAC9C,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,IACnD,KAAK,EACH,OAAO,IAAI7yC,KAAKm1C,EAAUtC,cAAgB,EAAG,GAAI,KAGvD,SAASwC,EAAiBL,GACxB,IAAIM,EAAW9C,GAAU,IAAIxyC,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACjEsB,EAAoB,IAAIv1C,KAAKs1C,EAASzC,cAAe,EAAG,GACxD2C,EAAoB,IAAIx1C,KAAKs1C,EAASzC,cAAgB,EAAG,EAAG,GAC5D4C,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GACnD,OAAIV,EAAaW,EAAwBH,IAAa,EAChDR,EAAaY,EAAwBJ,IAAa,EAC7CA,EAASzC,cAAgB,EAEzByC,EAASzC,cAGXyC,EAASzC,cAAgB,EAGpC,IAAI8C,EAAoB,CAAE,KAAM,SAASX,GACvC,OAAOR,EAASQ,EAAMhB,SAAS4B,UAAU,EAAG,IAC3C,KAAM,SAASZ,GAChB,OAAOR,EAASQ,EAAMhB,UACrB,KAAM,SAASgB,GAChB,OAAOP,EAAOO,EAAMlB,QAAQ8B,UAAU,EAAG,IACxC,KAAM,SAASZ,GAChB,OAAOP,EAAOO,EAAMlB,SACnB,KAAM,SAASkB,GAEhB,OAAOH,GADIG,EAAMjB,QAAU,MACA,IAAM,EAAG,IACnC,KAAM,SAASiB,GAChB,OAAOH,EAAaG,EAAMnB,QAAS,IAClC,KAAM,SAASmB,GAChB,OAAON,EAAiBM,EAAMnB,QAAS,EAAG,MACzC,KAAM,SAASmB,GAChB,OAAOK,EAAiBL,GAAO1wC,WAAWsxC,UAAU,IACnD,KAAM,SAASZ,GAChB,OAAOK,EAAiBL,IACvB,KAAM,SAASA,GAChB,OAAOH,EAAaG,EAAMpB,QAAS,IAClC,KAAM,SAASoB,GAChB,IAAIa,EAAab,EAAMpB,QAKvB,OAJkB,GAAdiC,EACFA,EAAa,GACNA,EAAa,KACpBA,GAAc,IACThB,EAAagB,EAAY,IAC/B,KAAM,SAASb,GAChB,OAAOH,EAAaG,EAAMnB,QAAUzB,GAAWF,GAAa8C,EAAMjB,QAAU,MAAQzB,GAAoBC,GAAsByC,EAAMlB,OAAS,GAAI,IAChJ,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMlB,OAAS,EAAG,IACrC,KAAM,SAASkB,GAChB,OAAOH,EAAaG,EAAMrB,OAAQ,IACjC,KAAM,WACP,MAAO,MACN,KAAM,SAASqB,GAChB,OAAIA,EAAMpB,SAAW,GAAKoB,EAAMpB,QAAU,GACjC,KAEA,MAER,KAAM,SAASoB,GAChB,OAAOH,EAAaG,EAAMtB,OAAQ,IACjC,KAAM,WACP,MAAO,MACN,KAAM,SAASsB,GAChB,OAAOA,EAAMhB,SAAW,GACvB,KAAM,SAASgB,GAChB,IAAIc,EAAW,IAAI91C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAC7CgC,EAAoC,IAAtBD,EAASV,SAAiBU,EAAWtD,GAAUsD,EAAU,EAAIA,EAASV,UACpFY,EAAU,IAAIh2C,KAAKg1C,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAaiB,EAAaC,GAAW,EAAG,CAC1C,IAAIC,EAA6B7D,GAAWF,GAAa8D,EAAQnD,eAAiBP,GAAoBC,GAAsByD,EAAQjD,WAAa,GAAK,GAElJL,EAD6B,GAAKqD,EAAY9C,UACVgD,EAA6BD,EAAQ/C,UAC7E,OAAO4B,EAAazzC,KAAK4lB,KAAK0rB,EAAO,GAAI,GAE3C,OAA+C,IAAxCoC,EAAaiB,EAAaD,GAAkB,KAAO,MACzD,KAAM,SAASd,GAChB,IAWIkB,EAXAX,EAAoB,IAAIv1C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GACtDyB,EAAoB,IAAIx1C,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GACtD0B,EAAyBP,EAAsBK,GAC/CG,EAAyBR,EAAsBM,GAC/CQ,EAAUxD,GAAU,IAAIxyC,KAAKg1C,EAAMjB,QAAU,KAAM,EAAG,GAAIiB,EAAMf,SACpE,OAAIa,EAAakB,EAASP,GAA0B,EAC3C,KAELX,EAAaY,EAAwBM,IAAY,EAC5C,MAIPE,EADET,EAAuB5C,cAAgBmC,EAAMjB,QAAU,KACxCiB,EAAMf,QAAU,GAAKwB,EAAuBxC,UAE5C+B,EAAMf,QAAU,EAAIwB,EAAuBxC,UAEvD4B,EAAazzC,KAAK4lB,KAAKkvB,EAAiB,GAAI,KAClD,KAAM,SAASlB,GAChB,OAAOA,EAAMhB,SACZ,KAAM,SAASgB,GAChB,IAAIc,EAAW,IAAI91C,KAAKg1C,EAAMjB,QAAS,EAAG,GACtCoC,EAAoC,IAAtBL,EAASV,SAAiBU,EAAWtD,GAAUsD,EAAgC,IAAtBA,EAASV,SAAiB,EAAI,EAAIU,EAASV,SAAW,GAC7HY,EAAU,IAAIh2C,KAAKg1C,EAAMjB,QAAU,KAAMiB,EAAMlB,OAAQkB,EAAMnB,SACjE,GAAIiB,EAAaqB,EAAaH,GAAW,EAAG,CAC1C,IAAIC,EAA6B7D,GAAWF,GAAa8D,EAAQnD,eAAiBP,GAAoBC,GAAsByD,EAAQjD,WAAa,GAAK,GAElJL,EAD6B,GAAKyD,EAAYlD,UACVgD,EAA6BD,EAAQ/C,UAC7E,OAAO4B,EAAazzC,KAAK4lB,KAAK0rB,EAAO,GAAI,GAE3C,OAA+C,IAAxCoC,EAAaqB,EAAaL,GAAkB,KAAO,MACzD,KAAM,SAASd,GAChB,OAAQA,EAAMjB,QAAU,MAAMzvC,WAAWsxC,UAAU,IAClD,KAAM,SAASZ,GAChB,OAAOA,EAAMjB,QAAU,MACtB,KAAM,SAASiB,GAChB,IAAI31C,EAAM21C,EAAMb,UACZiC,EAAQ/2C,GAAO,EAGnB,OADAA,GADAA,EAAM+B,KAAK+C,IAAI9E,GAAO,IACV,GAAK,IAAMA,EAAM,IACrB+2C,EAAQ,IAAM,KAAOzuC,OAAO,OAAStI,GAAKpD,OAAO,IACxD,KAAM,SAAS+4C,GAChB,OAAOA,EAAMvB,SACZ,KAAM,WACP,MAAO,MAET,IAAK,IAAIa,KAAQqB,EACXvB,EAAQ9sC,QAAQgtC,IAAS,IAC3BF,EAAUA,EAAQjkC,QAAQ,IAAIokC,OAAOD,EAAM,KAAMqB,EAAkBrB,GAAM7B,KAG7E,IAluI0BzzC,EAAOgnB,EAkuI7B7Z,EAAQwa,GAAmBytB,GAAS,GACxC,OAAIjoC,EAAMpX,OAASu+C,EACV,GApuIiBt0C,EAsuIPmN,EAtuIc6Z,EAsuIPpiB,EAruI1B6O,EAAM/C,IAAI1Q,EAAOgnB,IAAY,GAsuItB7Z,EAAMpX,OAAS,GAKxB,IAAI84B,GAAS,SAASvG,EAAQC,EAAOC,EAAM7B,GACpC2B,IACHA,EAASrzB,MAEXA,KAAKqzB,OAASA,EACdrzB,KAAKmzB,MAAQE,EAAOF,MACpBnzB,KAAK84B,QAAU,KACf94B,KAAKqmB,GAAKmK,GAAGiH,YACbz3B,KAAKkH,KAAOosB,EACZtzB,KAAKuzB,KAAOA,EACZvzB,KAAK2zB,SAAW,GAChB3zB,KAAKuxB,WAAa,GAClBvxB,KAAK0xB,KAAOA,GAEV0wB,GAAW,IACXC,GAAY,IA8BhB,SAAS3vB,GAAmB+vB,EAASrG,EAAat7C,GAChD,IAAI4J,EAAM5J,EAAS,EAAIA,EAASsjB,EAAgBq+B,GAAW,EACvDC,EAAU,IAAIv2C,MAAMzB,GACpBi4C,EAAkB9+B,EAAkB4+B,EAASC,EAAS,EAAGA,EAAQ5hD,QAGrE,OAFIs7C,IACFsG,EAAQ5hD,OAAS6hD,GACZD,EAnCTvhD,OAAOkhC,iBAAiBzI,GAAOp4B,UAAW,CAAEuN,KAAM,CAAE8Y,IAAK,WACvD,OAAQ7nB,KAAKuzB,KAAO6uB,MAAcA,IACjC3mC,IAAK,SAAS3J,GACfA,EAAM9R,KAAKuzB,MAAQ6uB,GAAWpiD,KAAKuzB,OAAQ,MACxCxjB,MAAO,CAAE8X,IAAK,WACjB,OAAQ7nB,KAAKuzB,KAAO8uB,MAAeA,IAClC5mC,IAAK,SAAS3J,GACfA,EAAM9R,KAAKuzB,MAAQ8uB,GAAYriD,KAAKuzB,OAAQ,MACzCsN,SAAU,CAAEhZ,IAAK,WACpB,OAAO2I,GAAGoE,MAAM50B,KAAKuzB,QAClBqN,SAAU,CAAE/Y,IAAK,WACpB,OAAO2I,GAAGyE,SAASj1B,KAAKuzB,UAE1B/C,GAAGoJ,OAASA,GACZpJ,GAAGkP,aACHngB,EAAsB,cAAIiR,GAAG8P,WAC7B/gB,EAA0B,kBAAIiR,GAAGkQ,eACjCnhB,EAA+B,uBAAIiR,GAAG8R,oBACtC/iB,EAA0B,kBAAIiR,GAAGsQ,eACjCvhB,EAAwB,gBAAIiR,GAAG4O,aAC/B7f,EAAkB,UAAIiR,GAAGuD,OACzB4T,GAAgBpoB,EAAsB,cAAIgoB,GAAY/jC,MAAO,iBA9pD7D,WAEE,IADA,IAAI8+C,EAAQ,IAAIn2C,MAAM,KACbtL,EAAI,EAAGA,EAAI,MAAOA,EACzByhD,EAAMzhD,GAAK6S,OAAOsC,aAAanV,GAEjC8nC,GAAmB2Z,EA0pDrBC,GACA1Z,GAAetpB,EAAqB,aAAIgoB,GAAY/jC,MAAO,gBA79CzD6lC,GAAY7nC,UAAqB,UAAI2nC,GACrCE,GAAY7nC,UAAiB,MAAImpC,GACjCtB,GAAY7nC,UAAkB,OAAIwpC,GAClC3B,GAAY7nC,UAAqB,UAAIypC,GACrC5B,GAAY7nC,UAAuB,YAAI6pC,GAyRvC0D,GAAkBvtC,UAAU8sC,WAAajB,GACzC0B,GAAkBvtC,UAAU4sB,WAAamf,GACzCwB,GAAkBvtC,UAA0B,eAAI,EAChDutC,GAAkBvtC,UAAgC,qBAAIulC,GACtDgI,GAAkBvtC,UAAwB,aAAIgsC,GAC9CuB,GAAkBvtC,UAAwB,aAAI4sC,GApF9C7uB,EAAkC,0BAAIouB,GACtCpuB,EAAkC,0BAAIsuB,GACtCtuB,EAA4B,oBAAI6rB,GAChC7rB,EAAyB,iBAAIwuB,GAgxC/ByB,GAAmBjwB,EAAyB,iBAAIgoB,GAAY/jC,MAAO,oBAr4BjE+b,EAA4B,oBAAIiyB,GAChCjyB,EAAwB,gBAAIkyB,GA84B9B1rB,EAAWzf,KAAK,CAAEshB,KAAM,WACtBg7B,QAEF,IAAIC,GAAgB,CAAEiC,EAziItB,SAAwB7hC,EAAWlC,EAAU+hC,EAAMl7B,GACjD/E,GAAM,qBAAuBc,EAAaV,GAAa,SAAW,CAAClC,EAAW4C,EAAa5C,GAAY,mBAAoB+hC,EAAMl7B,EAAOjE,EAAaiE,GAAQ,sBAwiIpH9Q,EAriI3C,SAAmC5E,GACjC,OAAOgY,GAAQhY,EAAO4b,IAA2BA,IAoiIwBjX,EA/+H3E,SAAsB+M,EAAKvf,EAAM+pB,GAK/B,MAJW,IAAIL,GAAcnK,GACxB7V,KAAK1J,EAAM+pB,GAGVxK,GA0+HsFupC,EA18D9F,SAAsB56B,EAAIgU,EAAIP,GAC5BvB,GAASuB,QAAUA,EACnB,IACE,IAAIxU,EAASiT,GAASyB,gBAAgB3T,GACtC,OAAQgU,GACN,KAAK,MACL,KAAK,MAKL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MAqBL,KAAK,MAKL,KAAK,MACH,OAAK/U,EAAOC,IAEL,GADG,GAvBZ,KAAK,MACH,IAAKD,EAAOC,IACV,OAAQ,GACV,IAAIgV,EAAOhC,GAAS5c,MAEpB,OADA7I,EAAOynB,IAAS,GAAK,EACd,EAET,KAAK,MACH,OAAKjV,EAAOC,KAEJ,IADE,GAGZ,KAAK,MAEH,OADIgV,EAAOhC,GAAS5c,MACb2I,GAAGgO,MAAMhN,EAAQ+U,EAAIE,GAY9B,QACE5jB,GAAM,qBAAuB0jB,IAEjC,MAAOv8B,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,IACAA,EAAEywB,QAq5DmG4wB,EAl5DjH,SAAqB1qC,EAAMwW,EAAO6O,GAChCvB,GAASuB,QAAUA,EACnB,IACE,IAAI1C,EAAWmB,GAASwB,OAAOtlB,GAC3B4S,EAAOkR,GAAS5c,MAEpB,OADa2I,GAAGxO,KAAKshB,EAAUnM,EAAO5D,GACxBhB,GACd,MAAOvoB,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,IACAA,EAAEywB,QAw4DqHuuB,EAxyDnI,SAAuC5F,GACrC,IAAIC,EAAM1c,GAAmByc,UACtBzc,GAAmByc,GAC1B,IAAIE,EAAWD,EAAIC,SACfC,EAAiBD,EAASxiD,OAC1B0iD,EAAeF,EAAStT,KAAI,SAASyT,GACvC,OAAOA,EAAIC,oBACVn5C,OAAO+4C,EAAStT,KAAI,SAASyT,GAC9B,OAAOA,EAAIE,uBAET7W,EAAiBuW,EAAIvW,eACrBzC,EAAgBgZ,EAAIhZ,cACxBxC,GAA8B,CAACub,GAAeI,GAAc,SAASI,GAiBnE,OAhBAN,EAASp+C,SAAQ,SAASu+C,EAAK5iD,GAC7B,IAAI6iD,EAAmBE,EAAc/iD,GACjCwgC,EAASoiB,EAAIpiB,OACbwiB,EAAgBJ,EAAII,cACpBF,EAAqBC,EAAc/iD,EAAI0iD,GACvCO,EAASL,EAAIK,OACbC,EAAgBN,EAAIM,cACxBN,EAAI10C,KAAO,SAAS6U,GAClB,OAAO8/B,EAA+B,aAAEriB,EAAOwiB,EAAejgC,KAEhE6/B,EAAI1zC,MAAQ,SAAS6T,EAAKinB,GACxB,IAAIhE,EAAc,GAClBid,EAAOC,EAAengC,EAAK+/B,EAA+B,WAAE9c,EAAagE,IACzEjE,GAAeC,OAGZ,CAAC,CAAE3/B,KAAMm8C,EAAIn8C,KAAM88C,aAAgB,SAASpgC,GAEjD,IADA,IAAI8pB,EAAK,IAAIvhC,MAAMo3C,GACV1iD,EAAI,EAAGA,EAAI0iD,IAAkB1iD,EACpC6sC,EAAG7sC,GAAKyiD,EAASziD,GAAGkO,KAAK6U,GAG3B,OADAymB,EAAczmB,GACP8pB,GACNuW,WAAc,SAASpd,EAAagE,GACrC,GAAI0Y,IAAmB1Y,EAAE/pC,OACvB,MAAM,IAAIL,UAAU,0CAA4C4iD,EAAIn8C,KAAO,cAAgBq8C,EAAiB,YAAc1Y,EAAE/pC,QAG9H,IADA,IAAI8iB,EAAMkpB,IACDjsC,EAAI,EAAGA,EAAI0iD,IAAkB1iD,EACpCyiD,EAASziD,GAAGkP,MAAM6T,EAAKinB,EAAEhqC,IAK3B,OAHoB,OAAhBgmC,GACFA,EAAYvgC,KAAK+jC,EAAezmB,GAE3BA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB3E,QAwvDmEkd,EApvDvK,SAAwCnD,GACtC,IAAIf,EAAM5a,GAAoB2b,UACvB3b,GAAoB2b,GAC3B,IAAItX,EAAiBuW,EAAIvW,eACrBzC,EAAgBgZ,EAAIhZ,cACpBga,EAAehB,EAAIiB,OAMvBzc,GAA8B,CAACuc,GALdC,EAAarU,KAAI,SAASuU,GACzC,OAAOA,EAAMb,oBACZn5C,OAAO85C,EAAarU,KAAI,SAASuU,GAClC,OAAOA,EAAMZ,wBAEyC,SAASa,GAC/D,IAAIF,EAAS,GAiBb,OAhBAD,EAAan/C,SAAQ,SAASq/C,EAAO1jD,GACnC,IAAI4jD,EAAYF,EAAME,UAClBf,EAAmBc,EAAY3jD,GAC/BwgC,EAASkjB,EAAMljB,OACfwiB,EAAgBU,EAAMV,cACtBF,EAAqBa,EAAY3jD,EAAIwjD,EAAavjD,QAClDgjD,EAASS,EAAMT,OACfC,EAAgBQ,EAAMR,cAC1BO,EAAOG,GAAa,CAAE11C,KAAM,SAAS6U,GACnC,OAAO8/B,EAA+B,aAAEriB,EAAOwiB,EAAejgC,KAC7D7T,MAAO,SAAS6T,EAAKinB,GACtB,IAAIhE,EAAc,GAClBid,EAAOC,EAAengC,EAAK+/B,EAA+B,WAAE9c,EAAagE,IACzEjE,GAAeC,QAGZ,CAAC,CAAE3/B,KAAMm8C,EAAIn8C,KAAM88C,aAAgB,SAASpgC,GACjD,IAAI8pB,EAAK,GACT,IAAK,IAAI7sC,KAAKyjD,EACZ5W,EAAG7sC,GAAKyjD,EAAOzjD,GAAGkO,KAAK6U,GAGzB,OADAymB,EAAczmB,GACP8pB,GACNuW,WAAc,SAASpd,EAAagE,GACrC,IAAK,IAAI4Z,KAAaH,EACpB,KAAMG,KAAa5Z,GACjB,MAAM,IAAIpqC,UAAU,oBAAsBgkD,EAAY,KAG1D,IAAI7gC,EAAMkpB,IACV,IAAK2X,KAAaH,EAChBA,EAAOG,GAAW10C,MAAM6T,EAAKinB,EAAE4Z,IAKjC,OAHoB,OAAhB5d,GACFA,EAAYvgC,KAAK+jC,EAAezmB,GAE3BA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB3E,QAksDwGwhB,EAnoD5M,SAAgC9iB,EAASzV,EAAOphB,EAAMyyC,EAAWC,GAC/D,IAAIj9B,EAAQ+gB,GAAiBx2B,GAE7Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAASa,GAC5D,QAASA,GACRZ,WAAc,SAASpd,EAAagE,GACrC,OAAOA,EAAI8Z,EAAYC,GACtBV,eAAkB,EAAGC,qBAAwB,SAASnd,GACvD,IAAI7jB,EACJ,GAAa,IAATjR,EACFiR,EAAO3E,OACF,GAAa,IAATtM,EACTiR,EAAOvE,MACF,CAAA,GAAa,IAAT1M,EAGT,MAAM,IAAIzR,UAAU,8BAAgC6yB,GAFpDnQ,EAAOnE,EAIT,OAAOhf,KAAmB,aAAEmjB,EAAK6jB,IAAYrf,KAC5CqnB,mBAAoB,QAgnDgNzjB,EAnnCzO,SAAiCwd,EAASgc,EAAgBC,EAAqBC,EAAkBC,EAAwBhZ,EAAeiZ,EAAiBrb,EAAQsb,EAAmBjZ,EAAU7Y,EAAO+xB,EAAqBhb,GACxN/W,EAAQsV,GAAiBtV,GACzB4Y,EAAgBgD,GAAwBgW,EAAwBhZ,GAC5DpC,IACFA,EAASoF,GAAwBiW,EAAiBrb,IAEhDqC,IACFA,EAAW+C,GAAwBkW,EAAmBjZ,IAExD9B,EAAgB6E,GAAwBmW,EAAqBhb,GAC7D,IAAIib,EAAoBle,GAAsB9T,GAC9CwY,GAAmBwZ,GAAmB,WACpC3V,GAAsB,oBAAsBrc,EAAQ,wBAAyB,CAAC2xB,OAEhFpd,GAA8B,CAACkB,EAASgc,EAAgBC,GAAsBC,EAAmB,CAACA,GAAoB,IAAI,SAASM,GAEjI,IAAI1b,EACA2b,EAFJD,EAAOA,EAAK,GAKVC,EAFEP,GACFpb,EAAY0b,EAAK9b,iBACSwC,kBAEV5C,GAAY7nC,UAE9B,IAAIyF,EAAcogC,GAAoBie,GAAmB,WACvD,GAAInkD,OAAO0D,eAAe7E,QAAUisC,EAClC,MAAM,IAAIpD,GAAa,0BAA4BvV,GAErD,QAAyC,IAArCmW,EAAgBgc,iBAClB,MAAM,IAAI5c,GAAavV,EAAQ,kCAEjC,IAAIgU,EAAOmC,EAAgBgc,iBAAiBvlD,UAAUY,QACtD,QAAa,IAATwmC,EACF,MAAM,IAAIuB,GAAa,2BAA6BvV,EAAQ,uCAAyCpzB,UAAUY,OAAS,iBAAmBK,OAAOsG,KAAKgiC,EAAgBgc,kBAAkBp1C,WAAa,yBAExM,OAAOi3B,EAAKnnC,MAAMH,KAAME,cAEtB+rC,EAAoB9qC,OAAO6B,OAAOwiD,EAAe,CAAEv+C,YAAa,CAAEzH,MAAOyH,KAC7EA,EAAYzF,UAAYyqC,EACxB,IAAIxC,EAAkB,IAAIuC,GAAgB1Y,EAAOrsB,EAAaglC,EAAmB5B,EAAeR,EAAWqC,EAAepC,EAAQqC,GAC9HuZ,EAAqB,IAAI3W,GAAkBzb,EAAOmW,GAAiB,GAAM,GAAO,GAChFkc,EAAmB,IAAI5W,GAAkBzb,EAAQ,IAAKmW,GAAiB,GAAO,GAAO,GACrFmc,EAAwB,IAAI7W,GAAkBzb,EAAQ,UAAWmW,GAAiB,GAAO,GAAM,GAGnG,OAFA6B,GAAmBvC,GAAW,CAAE8F,YAAa8W,EAAkB/W,iBAAkBgX,GACjF3W,GAAoBqW,EAAmBr+C,GAChC,CAACy+C,EAAoBC,EAAkBC,OAskCqNj2C,EA5jCvQ,SAA6Ck2C,EAAcha,EAAUia,EAAiBC,EAAkBC,EAASlZ,GAC/G7rB,EAAO4qB,EAAW,GAClB,IAAIoa,EAAchW,GAAoBpE,EAAUia,GAChDE,EAAU9W,GAAwB6W,EAAkBC,GACpD,IAAI/lD,EAAO,CAAC6sC,GACRjG,EAAc,GAClBgB,GAA8B,GAAI,CAACge,IAAe,SAASxV,GAEzD,IAAI3E,EAAY,gBADhB2E,EAAYA,EAAU,IACqBnpC,KAI3C,QAHmD,IAA/CmpC,EAAU5G,gBAAgBgc,mBAC5BpV,EAAU5G,gBAAgBgc,iBAAmB,SAEkB,IAA7DpV,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GACxD,MAAM,IAAIhD,GAAa,+EAAiFgD,EAAW,GAAK,gBAAkBwE,EAAUnpC,KAAO,uGAqB7J,OAnBAmpC,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GAAK,WACzD8D,GAAsB,oBAAsBU,EAAUnpC,KAAO,wBAAyB++C,IAExFpe,GAA8B,GAAIoe,GAAa,SAAS7V,GActD,OAbAC,EAAU5G,gBAAgBgc,iBAAiB5Z,EAAW,GAAK,WACrD3rC,UAAUY,SAAW+qC,EAAW,GAClC/C,GAAkB4C,EAAY,gBAAkBxrC,UAAUY,OAAS,yBAA2B+qC,EAAW,IAE3GhF,EAAY/lC,OAAS,EACrBb,EAAKa,OAAS+qC,EACd,IAAK,IAAIhrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAC9BZ,EAAKY,GAAKuvC,EAASvvC,GAAe,WAAEgmC,EAAa3mC,UAAUW,EAAI,IAEjE,IAAI+iB,EAAMoiC,EAAQ7lD,MAAM,KAAMF,GAE9B,OADA2mC,GAAeC,GACRuJ,EAAS,GAAiB,aAAExsB,IAE9B,MAEF,OA0hCsS5T,EAh9BjT,SAA0C61C,EAAcpa,EAAYI,EAAUia,EAAiBC,EAAkBG,EAAYjjD,EAASkjD,GACpI,IAAIF,EAAchW,GAAoBpE,EAAUia,GAChDra,EAAa7C,GAAiB6C,GAC9Bya,EAAahX,GAAwB6W,EAAkBG,GACvDre,GAA8B,GAAI,CAACge,IAAe,SAASxV,GAEzD,IAAI3E,GADJ2E,EAAYA,EAAU,IACInpC,KAAO,IAAMukC,EAIvC,SAAS2a,IACPzW,GAAsB,eAAiBjE,EAAY,wBAAyBua,GAJ1EE,GACF9V,EAAU5G,gBAAgB2C,qBAAqB9lC,KAAKmlC,GAKtD,IAAID,EAAQ6E,EAAU5G,gBAAgBwC,kBAClC3oC,EAASkoC,EAAMC,GAmBnB,YAlBe,IAAXnoC,QAA8C,IAAzBA,EAAOqoC,eAA4BroC,EAAO+iD,YAAchW,EAAUnpC,MAAQ5D,EAAOuoC,WAAaA,EAAW,GAChIua,EAAoBva,SAAWA,EAAW,EAC1Cua,EAAoBC,UAAYhW,EAAUnpC,KAC1CskC,EAAMC,GAAc2a,IAEpB7a,GAAoBC,EAAOC,EAAYC,GACvCF,EAAMC,GAAYE,cAAcE,EAAW,GAAKua,GAElDve,GAA8B,GAAIoe,GAAa,SAAS7V,GACtD,IAAIkW,EAAiBnW,GAAqBzE,EAAW0E,EAAUC,EAAW6V,EAAYjjD,GAOtF,YANwC,IAApCuoC,EAAMC,GAAYE,eACpB2a,EAAeza,SAAWA,EAAW,EACrCL,EAAMC,GAAc6a,GAEpB9a,EAAMC,GAAYE,cAAcE,EAAW,GAAKya,EAE3C,MAEF,OA+6B6UsF,EA13BxV,SAAiC7iB,EAASzV,GAExC8U,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAAS37C,GAC5D,IAAIqlC,EAAK4D,GAAmBjpC,GAAQ7I,MAEpC,OADA+xC,GAAelpC,GACRqlC,GACNuW,WAAc,SAASpd,EAAarnC,GACrC,OAAO2tC,GAAiB3tC,IACvB0kD,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,QAk3BoR+M,EA31BtX,SAAgChT,EAASzV,EAAOphB,EAAMs0C,GACpD,IAAI7+B,EAAQ+gB,GAAiBx2B,GAE7B,SAASlL,KADTssB,EAAQsV,GAAiBtV,GAGzBtsB,EAAKjC,OAAS,GACdqjC,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAOrsB,YAAaD,EAAMg9C,aAAgB,SAASh0C,GAC/E,OAAOhQ,KAAKiH,YAAYlC,OAAOiL,IAC9Bi0C,WAAc,SAASpd,EAAa72B,GACrC,OAAOA,EAAExQ,OACR0kD,eAAkB,EAAGC,qBAAwBzS,GAAyBpe,EAAO3L,EAAO6+B,GAAWxX,mBAAoB,OACtHlD,GAAmBxY,EAAOtsB,IAg1BuX8qC,EAv0BnZ,SAAsC4U,EAAapzB,EAAOqzB,GACxD,IAAIC,EAAWhV,GAAsB8U,EAAa,QAClDpzB,EAAQsV,GAAiBtV,GACzB,IAAIuzB,EAAOD,EAAS3/C,YAChB6/C,EAAS3lD,OAAO6B,OAAO4jD,EAAS3/C,YAAYzF,UAAW,CAAEhC,MAAO,CAAEA,MAAOmnD,GAAa1/C,YAAa,CAAEzH,MAAO6nC,GAAoBuf,EAAS1/C,KAAO,IAAMosB,GAAO,kBAEjKuzB,EAAK9hD,OAAO4hD,GAAaG,EACzBD,EAAKvzB,GAASwzB,GAg0BsaqB,EAryBtb,SAAiCpf,EAASzV,EAAOphB,GAC/C,IAAIyV,EAAQ+gB,GAAiBx2B,GAE7Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB,SAASxkD,GAC5D,OAAOA,GACNykD,WAAc,SAASpd,EAAarnC,GACrC,GAAqB,iBAAVA,GAAuC,kBAAVA,EACtC,MAAM,IAAIiB,UAAU,mBAAqBisC,GAAaltC,GAAS,QAAUQ,KAAKkH,MAEhF,OAAO1H,GACN0kD,eAAkB,EAAGC,qBAAwBpS,GAA0Bze,EAAO3L,GAAQqnB,mBAAoB,QA2xBqW5tB,EAzxBpd,SAAoCkS,EAAOuY,EAAUia,EAAiB3W,EAAW+W,EAAYpmD,GAC3F,IAAIswC,EAAWH,GAAoBpE,EAAUia,GAC7CxyB,EAAQsV,GAAiBtV,GACzB4yB,EAAahX,GAAwBC,EAAW+W,GAChDpa,GAAmBxY,GAAO,WACxBqc,GAAsB,eAAiBrc,EAAQ,wBAAyB8c,KACvEvE,EAAW,GACdhE,GAA8B,GAAIuI,GAAU,SAAS4W,GACnD,IAAIC,EAAmB,CAACD,EAAU,GAAI,MAAMz8C,OAAOy8C,EAAUh/C,MAAM,IAEnE,OADAinC,GAAoB3b,EAAO6c,GAAqB7c,EAAO2zB,EAAkB,KAAMf,EAAYpmD,GAAK+rC,EAAW,GACpG,OA+wB0ehB,EApvBrf,SAAmCqc,EAAe5zB,EAAOphB,EAAMi1C,EAAUC,GACvE9zB,EAAQsV,GAAiBtV,IACP,IAAd8zB,IACFA,EAAW,YAEb,IAAIz/B,EAAQ+gB,GAAiBx2B,GACzB8xC,EAAe,SAASxkD,GAC1B,OAAOA,GAET,GAAiB,IAAb2nD,EAAgB,CAClB,IAAIE,EAAW,GAAK,EAAIn1C,EACxB8xC,EAAe,SAASxkD,GACtB,OAAOA,GAAS6nD,IAAaA,GAGjC,IAAIC,GAA+C,GAA9Bh0B,EAAMjgB,QAAQ,YACnC+0B,GAAa8e,EAAe,CAAEhgD,KAAMosB,EAAO0wB,aAAgBA,EAAcC,WAAc,SAASpd,EAAarnC,GAC3G,GAAqB,iBAAVA,GAAuC,kBAAVA,EACtC,MAAM,IAAIiB,UAAU,mBAAqBisC,GAAaltC,GAAS,QAAUQ,KAAKkH,MAEhF,GAAI1H,EAAQ2nD,GAAY3nD,EAAQ4nD,EAC9B,MAAM,IAAI3mD,UAAU,qBAAuBisC,GAAaltC,GAAS,wDAA0D8zB,EAAQ,wCAA0C6zB,EAAW,KAAOC,EAAW,MAE5M,OAAOE,EAAiB9nD,IAAU,EAAY,EAARA,GACrC0kD,eAAkB,EAAGC,qBAAwBnS,GAA4B1e,EAAO3L,EAAoB,IAAbw/B,GAAiBnY,mBAAoB,QA4tBoZlB,EA1tBrhB,SAAuC/E,EAASye,EAAel0B,GAC7D,IACIm0B,EADc,CAACziC,UAAWnX,WAAYoX,WAAYE,YAAaD,WAAYE,YAAaC,aAAcC,cACrFkiC,GACrB,SAASE,EAAiBr/C,GAExB,IAAI8a,EAAOjE,EACPhN,EAAOiR,GAFX9a,IAAmB,KAEQ,GACvB0J,EAAOoR,EAAK9a,EAAS,IAAM,GAC/B,OAAO,IAAIo/C,EAAGz4C,EAAQ+C,EAAMG,GAG9Bk2B,GAAaW,EAAS,CAAE7hC,KADxBosB,EAAQsV,GAAiBtV,GACY0wB,aAAgB0D,EAAkBxD,eAAkB,EAAGC,qBAAwBuD,GAAoB,CAAExe,8BAA8B,KA+sB+Y8Z,EA7sBzjB,SAAsCja,EAASzV,GAE7C,IAAIs0B,EAA4B,iBADhCt0B,EAAQsV,GAAiBtV,IAEzB8U,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAO0wB,aAAgB,SAASxkD,GAC5D,IACIkV,EADA5T,EAASoe,EAAQ1f,IAAU,GAE/B,GAAIooD,EAEF,IADA,IAAIC,EAAiBroD,EAAQ,EACpBqB,EAAI,EAAGA,GAAKC,IAAUD,EAAG,CAChC,IAAIinD,EAAiBtoD,EAAQ,EAAIqB,EACjC,GAAIA,GAAKC,GAA0C,GAAhC4d,EAAOopC,IAAmB,GAAS,CACpD,IACIC,EAAgBpkC,EAAakkC,EADnBC,EAAiBD,QAEnB,IAARnzC,EACFA,EAAMqzC,GAENrzC,GAAOhB,OAAOsC,aAAa,GAC3BtB,GAAOqzC,GAETF,EAAiBC,EAAiB,OAGjC,CACL,IAAIlxC,EAAI,IAAIzK,MAAMrL,GAClB,IAASD,EAAI,EAAGA,EAAIC,IAAUD,EAC5B+V,EAAE/V,GAAK6S,OAAOsC,aAAa0I,EAAOlf,EAAQ,EAAIqB,IAAM,IAEtD6T,EAAMkC,EAAEnI,KAAK,IAGf,OADAod,GAAMrsB,GACCkV,GACNuvC,WAAc,SAASpd,EAAarnC,GACjCA,aAAiByR,cACnBzR,EAAQ,IAAIqO,WAAWrO,IAGzB,IAAIwoD,EAAuC,iBAAVxoD,EAC3BwoD,GAAuBxoD,aAAiBqO,YAAcrO,aAAiByoD,mBAAqBzoD,aAAiBwlB,WACjH8jB,GAAkB,yCAWpB,IAAIhoC,GATA8mD,GAAmBI,EACT,WACV,OAAO5jC,EAAgB5kB,IAGb,WACV,OAAOA,EAAMsB,WAIb8iB,EAAMsG,GAAQ,EAAIppB,EAAS,GAG/B,GADAoe,GADA0E,KAAS,KACO,GAAK9iB,EACjB8mD,GAAmBI,EACrB9jC,EAAa1kB,EAAOokB,EAAM,EAAG9iB,EAAS,QAEtC,GAAIknD,EACF,IAAK,IAAInnD,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAC/B,IAAIqnD,EAAW1oD,EAAMyO,WAAWpN,GAC5BqnD,EAAW,MACbr8B,GAAMjI,GACNklB,GAAkB,2DAEpBpqB,EAAOkF,EAAM,EAAI/iB,IAAM,GAAKqnD,OAG9B,IAASrnD,EAAI,EAAGA,EAAIC,IAAUD,EAC5B6d,EAAOkF,EAAM,EAAI/iB,IAAM,GAAKrB,EAAMqB,GAOxC,OAHoB,OAAhBgmC,GACFA,EAAYvgC,KAAKulB,GAAOjI,GAEnBA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,SAASprB,GACvGiI,GAAMjI,OAioBklBoW,EA9nB5lB,SAAuC+O,EAASqf,EAAU90B,GAExD,IAAI+0B,EAAcC,EAAcC,EAASC,EAAgB7gC,EADzD2L,EAAQsV,GAAiBtV,GAER,IAAb80B,GACFC,EAAehkC,EACfikC,EAAe/jC,EACfikC,EAAiB9jC,EACjB6jC,EAAU,WACR,OAAOzpC,GAET6I,EAAQ,GACc,IAAbygC,IACTC,EAAe1jC,EACf2jC,EAAezjC,EACf2jC,EAAiBzjC,EACjBwjC,EAAU,WACR,OAAOrpC,GAETyI,EAAQ,GAEVygB,GAAaW,EAAS,CAAE7hC,KAAMosB,EAAO0wB,aAAgB,SAASxkD,GAK5D,IAJA,IAEIkV,EAFA5T,EAASoe,EAAQ1f,IAAU,GAC3BipD,EAAOF,IAEPV,EAAiBroD,EAAQ,EACpBqB,EAAI,EAAGA,GAAKC,IAAUD,EAAG,CAChC,IAAIinD,EAAiBtoD,EAAQ,EAAIqB,EAAIunD,EACrC,GAAIvnD,GAAKC,GAA4C,GAAlC2nD,EAAKX,IAAmBngC,GAAa,CACtD,IACIogC,EAAgBM,EAAaR,EADdC,EAAiBD,QAExB,IAARnzC,EACFA,EAAMqzC,GAENrzC,GAAOhB,OAAOsC,aAAa,GAC3BtB,GAAOqzC,GAETF,EAAiBC,EAAiBM,GAItC,OADAv8B,GAAMrsB,GACCkV,GACNuvC,WAAc,SAASpd,EAAarnC,GACd,iBAAVA,GACXspC,GAAkB,6CAA+CxV,GAEnE,IAAIxyB,EAAS0nD,EAAehpD,GACxBokB,EAAMsG,GAAQ,EAAIppB,EAASsnD,GAO/B,OALAlpC,GADA0E,KAAS,KACO,GAAK9iB,GAAU6mB,EAC/B2gC,EAAa9oD,EAAOokB,EAAM,EAAG9iB,EAASsnD,GAClB,OAAhBvhB,GACFA,EAAYvgC,KAAKulB,GAAOjI,GAEnBA,GACNsgC,eAAkB,EAAGC,qBAAwBpd,GAA4BiI,mBAAoB,SAASprB,GACvGiI,GAAMjI,OAukBsnB4mC,GApkBhoB,SAAuCzhB,EAASzV,EAAOq1B,EAAsB7b,EAAgBuY,EAAqBhb,GAChH1D,GAAmBoC,GAAW,CAAE7hC,KAAM0hC,GAAiBtV,GAAQwZ,eAAgBoC,GAAwByZ,EAAsB7b,GAAiBzC,cAAe6E,GAAwBmW,EAAqBhb,GAAgBiZ,SAAU,KAmkB+b/O,EAjkBrqB,SAA+C6O,EAAcM,EAAkBkF,EAAiBvnB,EAAQwiB,EAAeF,EAAoBkF,EAAiB/E,EAAQC,GAClKpd,GAAmByc,GAAcE,SAASh9C,KAAK,CAAEo9C,iBAAAA,EAAkBriB,OAAQ6N,GAAwB0Z,EAAiBvnB,GAASwiB,cAAAA,EAAeF,mBAAAA,EAAoBG,OAAQ5U,GAAwB2Z,EAAiB/E,GAASC,cAAAA,KAgkBqf3zB,EA9jBjtB,SAAwC2Y,EAASzV,EAAOq1B,EAAsB7b,EAAgBuY,EAAqBhb,GACjH5B,GAAoBM,GAAW,CAAE7hC,KAAM0hC,GAAiBtV,GAAQwZ,eAAgBoC,GAAwByZ,EAAsB7b,GAAiBzC,cAAe6E,GAAwBmW,EAAqBhb,GAAgBia,OAAQ,KA6jBihBt6C,EA3jBtvB,SAA8Co6C,EAAYK,EAAWf,EAAkBkF,EAAiBvnB,EAAQwiB,EAAeF,EAAoBkF,EAAiB/E,EAAQC,GAC1Ktb,GAAoB2b,GAAYE,OAAOh+C,KAAK,CAAEm+C,UAAW7b,GAAiB6b,GAAYf,iBAAAA,EAAkBriB,OAAQ6N,GAAwB0Z,EAAiBvnB,GAASwiB,cAAAA,EAAeF,mBAAAA,EAAoBG,OAAQ5U,GAAwB2Z,EAAiB/E,GAASC,cAAAA,KA0jBgiByF,EAxjBjyB,SAAgCzgB,EAASzV,GAEvC8U,GAAaW,EAAS,CAAEggB,QAAQ,EAAM7hD,KADtCosB,EAAQsV,GAAiBtV,GAC0B4wB,eAAkB,EAAGF,aAAgB,aAErFC,WAAc,SAASpd,EAAagE,QAojBqxBx7B,EA1iB9zB,SAAoBhH,EAAQ8gD,EAAYC,GACtC/gD,EAAS4pC,GAAc5pC,GACvB8gD,EAAavX,GAAsBuX,EAAY,aAC/C,IAAItiB,EAAc,GACdwiB,EAAKlc,GAAiBtG,GAE1B,OADA7nB,EAAOoqC,IAAmB,GAAKC,EACxBF,EAAuB,WAAEtiB,EAAax+B,IAoiBgyB06C,EA3hB/0B,SAAsB16C,EAAQwjC,EAAUuE,EAAU7jC,GAChDlE,EAAS4pC,GAAc5pC,GAGvB,IAFA,IAAIunC,EATN,SAA6B/D,EAAUuE,GAErC,IADA,IAAIx5B,EAAI,IAAIzK,MAAM0/B,GACThrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAC9B+V,EAAE/V,GAAK+wC,GAAsB5yB,GAAQoxB,GAAY,GAAKvvC,IAAM,GAAI,aAAeA,GAEjF,OAAO+V,EAIK2yC,CAAoB1d,EAAUuE,GACtCnwC,EAAO,IAAIkM,MAAM0/B,GACZhrC,EAAI,EAAGA,EAAIgrC,IAAYhrC,EAAG,CACjC,IAAIwD,EAAOurC,EAAM/uC,GACjBZ,EAAKY,GAAKwD,EAA2B,qBAAEkI,GACvCA,GAAQlI,EAAqB,eAG/B,OAAO8oC,GADE9kC,EAAOlI,WAAM,EAAQF,KAkhBk0BkS,EAAKo/B,GAAgBkZ,EA9fv3B,SAA4Bn3B,GAC1B,OAAc,IAAVA,EACK6Z,GAAiBkF,OAExB/e,EAAQ6e,GAAkB7e,GACnB6Z,GAAiBkF,KAAmB/e,MAyfi2BpgB,EAtfh5B,SAA8B7K,EAAQsuB,GAGpC,OAAOwW,IAFP9kC,EAAS4pC,GAAc5pC,IACvBsuB,EAAOsb,GAActb,MAofo5B5iB,EAjf36B,SAAwB1L,GAClBA,EAAS,IACXipC,GAAmBjpC,GAAQkmB,UAAY,IA+eq5Bw4B,EA5eh8B,SAA4Br/C,EAAQT,GAGlC,OAFAS,EAASuqC,GAAcvqC,cACvBT,EAAcgrC,GAAchrC,KA0e27B0iD,EAvez9B,SAA2BthD,GAEzB,MAAyB,iBADzBA,EAAS4pC,GAAc5pC,KAsew9BuhD,EAnej/B,WACE,OAAOzc,GAAiB,KAke++B0c,EAhezgC,SAA6B/X,GAC3B,OAAO3E,GAAiBgF,GAAkBL,KA+du/B7tB,EA7dniC,WACE,OAAOkpB,GAAiB,KA4dkiCtxB,EA1d5jC,SAAiCxT,GAE/Bu+B,GADkB0K,GAAmBjpC,GAAQ7I,OAE7C+xC,GAAelpC,IAudykCxH,EArd1lC,SAA8BwH,EAAQsuB,EAAMn3B,GAC1C6I,EAAS4pC,GAAc5pC,GACvBsuB,EAAOsb,GAActb,GACrBn3B,EAAQyyC,GAAczyC,GACtB6I,EAAOsuB,GAAQn3B,GAidomCkQ,EA/crnC,SAA4BrL,EAAMkI,GAGhC,OAAO4gC,IAFP9oC,EAAOutC,GAAsBvtC,EAAM,sBACA,qBAAEkI,KA6cumC0+C,EA1c9oC,WACEpoC,MAycypCqqC,EAtb3pC,SAAwBlD,EAAQC,GAC9B,IAAIv+C,EALYlM,EAMhB,GAAe,IAAXwqD,EACFt+C,EAAMK,KAAKL,UACN,CAAA,GAAgB,IAAXs+C,GAA2B,IAAXA,EAI1B,OAZcxqD,EAWL,GAVXwf,EAAOkrC,OAAwB,GAAK1qD,GAW1B,EAHRkM,EAAM0d,KAOR,OAFApK,EAAOirC,IAAO,GAAKv+C,EAAM,IAAM,EAC/BsT,EAAOirC,EAAK,IAAM,GAAKv+C,EAAM,IAAM,IAAM,IAAM,EACxC,GA0auqCqhD,EAxahrC,SAAgC5B,EAAM9uC,EAAK9N,GACzCmQ,EAAO0sC,WAAWD,IAAS,EAAG9uC,IAAQ,EAAGA,EAAM9N,IAAQ,IAuaopCshB,EA1Z7sC,SAAiCy7B,GAC/BA,KAAkC,EAClC,IAAIC,EAZG7sC,EAAO5d,OAaV0qD,EAAc,WAClB,GAAIF,EAAgBE,EAClB,OAAO,EAGT,IADA,IAv4He30C,EAAG40C,EAw4HTC,EAAU,EAAGA,GAAW,EAAGA,GAAW,EAAG,CAChD,IAAIC,EAAoBJ,GAAW,EAAI,GAAMG,GAI7C,GAHAC,EAAoBx+C,KAAKkI,IAAIs2C,EAAmBL,EAAgB,WAE9CxY,GADJ3lC,KAAKkI,IAAIm2C,IA34HV30C,EA24H+B1J,KAAKmL,IAJjC,SAIkDgzC,EAAeK,KA34HjEF,EA24HqF,OA14HpF,IACjB50C,GAAK40C,EAAW50C,EAAI40C,GAEf50C,KA04HH,OAAO,EAGX,OAAO,GAyYkuCo2C,EApX3uC,SAAsBhR,EAAWC,GAC/B,IACE,IAAIC,EAAU,EAOd,OANAZ,KAAgBr2C,SAAQ,SAASoM,EAAQzQ,GACvC,IAAI+iB,EAAMs4B,EAAcC,EACxBn9B,EAAOi9B,EAAgB,EAAJp7C,IAAU,GAAK+iB,EAl7HxC,SAA4BlP,EAAKqd,EAASqqB,GACxC,IAAK,IAAIv7C,EAAI,EAAGA,EAAI6T,EAAI5T,SAAUD,EAChC2d,EAAMuT,MAAc,GAAKrd,EAAIzG,WAAWpN,GAErCu7C,IACH59B,EAAMuT,IAAY,GAAK,GA86HrBsqB,CAAmB/qC,EAAQsS,GAC3Bu4B,GAAW7qC,EAAOxQ,OAAS,KAEtB,EACP,MAAOkJ,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QAuWivCozB,EApW9vC,SAA4BtR,EAAgBC,GAC1C,IACE,IAAIhB,EAAUD,KACdv8B,EAAOu9B,IAAmB,GAAKf,EAAQ16C,OACvC,IAAIq7C,EAAU,EAKd,OAJAX,EAAQt2C,SAAQ,SAASoM,GACvB6qC,GAAW7qC,EAAOxQ,OAAS,KAE7Bke,EAAOw9B,IAAsB,GAAKL,EAC3B,EACP,MAAOnyC,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QAuV0wCgsB,EApVvxC,SAAmBl0B,GACjB,IACE,IAAIf,EAASiT,GAASyB,gBAAgB3T,GAEtC,OADA/B,GAAGqB,MAAML,GACF,EACP,MAAOxnB,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QA4U0xCywB,EAzUvyC,SAAkB34B,EAAIqT,EAAKC,EAAQ8W,GACjC,IACE,IAAInrB,EAASiT,GAASyB,gBAAgB3T,GAClChkB,EAAMk2B,GAASkB,QAAQnU,EAAQoU,EAAKC,GAExC,OADA7mB,EAAO29B,IAAS,GAAKpuC,EACd,EACP,MAAOvE,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QAgUyyCqvB,EA7TtzC,SAAkBv3B,EAAIsqB,EAAYC,EAAa9lB,EAAQ+lB,GACrD,IACE,IAAIvrB,EAASiT,GAASyB,gBAAgB3T,GAElCtjB,EADc,WACL6tC,GAA6BD,IAAe,GACrDG,EAAe,iBACnB,OAAI/tC,IAAW+tC,GAAgB/tC,GAAU+tC,GAC/B,IAEVxsB,GAAG2D,OAAO3C,EAAQviB,EAAQ+nB,GAC1B/P,GAAU,CAACuK,EAAOsF,WAAa,GAAI9P,GAAawK,EAAOsF,UAAW3pB,KAAK+C,IAAI8W,KAAe,EAAIA,GAAa,GAAkE,EAA7D7Z,KAAKkI,KAAKlI,KAAKC,MAAM4Z,GAAa,YAAa,eAAqB,KAAO7Z,KAAK4lB,MAAM/L,OAAiBA,KAAe,IAAM,cAAgB,EAAI,IAAKhI,EAAO+9B,IAAc,GAAK91B,GAAQ,GAAIjI,EAAO+9B,EAAY,IAAM,GAAK91B,GAAQ,GAC7UuK,EAAO4M,UAAuB,IAAXnvB,GAA2B,IAAX+nB,IACrCxF,EAAO4M,SAAW,MACb,GACP,MAAOp0B,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QA4SwzCuwB,EAzSr0C,SAAmBz4B,EAAIqT,EAAKC,EAAQ8W,GAClC,IACE,IAAInrB,EAASiT,GAASyB,gBAAgB3T,GAClChkB,EAAMk2B,GAASsB,SAASvU,EAAQoU,EAAKC,GAEzC,OADA7mB,EAAO29B,IAAS,GAAKpuC,EACd,EACP,MAAOvE,GAGP,YAFkB,IAAPwmB,IAAwBxmB,aAAawmB,GAAGmB,YACjD9O,GAAM7Y,GACDA,EAAEywB,QAgSw0C7jB,EAAK0H,EAAY6rC,EA7Rt2C,aA6Ru4Cb,EA3Rv4C,aA2Rq6C3B,EAzRr6C,aAyRs8C5rC,EAvRt8C,SAAsB+xC,KAuRm8CpE,EA3Dz9C,SAAqB/5C,EAAG0vC,EAASC,EAAQC,GACvC,OAAOH,GAAUzvC,EAAG0vC,EAASC,EAAQC,MA9jIvC,WACE,IAAIhgD,EAAO,CAAEqX,EAAKisC,IAClB,SAASmL,EAAgBztD,EAAU0tD,GACjC,IAAIC,EAAW3tD,EAASqB,QACxB2d,EAAY,IAAI2uC,EAChB3oC,EAAYhG,EAAY,IAAM,GAC9B+G,KAGF,SAAS8nC,EAA0B5/C,GACjCw/C,EAAgBx/C,EAAiB,UAEnC,SAAS6/C,EAAuBC,GAC9B,OAzBGjsC,IAAe5C,IAAsBC,GAA2C,mBAAV6uC,OAAyBxnC,GAAUG,IAUvGvnB,QAAQV,UAAUW,KAAKunB,IATrBonC,MAAMrnC,GAAgB,CAAEsnC,YAAa,gBAAiB5uD,MAAK,SAASwiB,GACzE,IAAKA,EAAa,GAChB,KAAM,uCAAyC8E,GAAiB,IAElE,OAAO9E,EAAsB,iBAC5BvZ,OAAM,WACP,OAAOse,SAkBiBvnB,MAAK,SAASohB,GACtC,OAAO4B,YAAY6rC,YAAYztC,EAAQzhB,MACtCK,KAAK0uD,GAAU,SAASI,GACzBtuD,EAAI,0CAA4CsuD,GAChD7rC,GAAM6rC,MAiBV,GA1BAtoC,KA0BI7G,EAAwB,gBAC1B,IAEE,OADeA,EAAwB,gBAAEhgB,EAAMyuD,GAE/C,MAAOhkD,GAEP,OADA5J,EAAI,sDAAwD4J,IACrD,GAnBJqY,GAA0D,mBAArCO,YAAY+rC,sBAAwC7nC,GAAUI,KAAoBH,GAAUG,KAAoC,mBAAVqnC,MAUvIF,EAAuBD,GATvBG,MAAMrnC,GAAgB,CAAEsnC,YAAa,gBAAiB5uD,MAAK,SAASwiB,GAEzE,OADaQ,YAAY+rC,qBAAqBvsC,EAAU7iB,GAC1CK,KAAKwuD,GAA2B,SAASM,GAGrD,OAFAtuD,EAAI,kCAAoCsuD,GACxCtuD,EAAI,6CACGiuD,EAAuBD,UAgBnBvlD,MAAMyW,GA8kIjBsvC,GACV,IAAIhM,GAAqBrjC,EAA2B,mBAAI,WACtD,OAAQqjC,GAAqBrjC,EAA2B,mBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEnFqf,EAAc,MAAI,WAC5B,OAAgBA,EAAc,MAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErE,IAAIgqB,GAAU3K,EAAgB,QAAI,WAChC,OAAQ2K,GAAU3K,EAAgB,QAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErE2rB,GAAQtM,EAAc,MAAI,WAC5B,OAAQsM,GAAQtM,EAAc,MAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjEwvC,GAAiBnwB,EAAuB,eAAI,WAC9C,OAAQmwB,GAAiBnwB,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAErCqf,EAAoD,4CAAI,WACxG,OAAsDA,EAAoD,4CAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjJ,IA2BI2uD,GA3BA3E,GAAoB3qC,EAA0B,kBAAI,WACpD,OAAQ2qC,GAAoB3qC,EAA0B,kBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YA2B7F,SAAS4uD,GAAW/uC,GAClB/f,KAAKkH,KAAO,aACZlH,KAAKmtB,QAAU,gCAAkCpN,EAAS,IAC1D/f,KAAK+f,OAASA,EAShB,SAASgvC,GAAS9uD,GAChB,IA6DY8f,EA7DRivC,EAAgBzvC,EAAc,MAGlC,IA0DYQ,EAzDAivC,EAHD,EACA,IAGC,GAyDI1sC,GAA4B,IAAXvC,IAG7BuC,IAIE/C,EAAe,QACjBA,EAAe,OAAEQ,GACnBiD,GAAQ,GAEVlD,EAAMC,EAAQ,IAAI+uC,GAAW/uC,KAnE3B,MAAO/V,GACP,GAAIA,aAAa8kD,GACf,OACK,GAAS,UAAL9kD,EAET,YADAsY,GAAgB,GAGhB,IAAI2sC,EAAQjlD,EACRA,GAAkB,iBAANA,GAAkBA,EAAEyc,QAClCwoC,EAAQ,CAACjlD,EAAGA,EAAEyc,QAEhBrmB,EAAI,qBAAuB6uD,GAC3BnvC,EAAM,EAAG9V,IAMf,SAASW,GAAI1K,GAQX,SAASivD,IACHL,KAEJA,IAAY,EACZtvC,EAAkB,WAAI,EAClByD,IA50IDzD,EAAiB,UAAMiR,GAAGziB,KAAK6pB,aAClCpH,GAAGziB,OAEL0Z,GAAqB1B,GAGrByK,GAAGqH,mBAAoB,EACvBpQ,GAAqBzB,IAy0InB3G,EAAoBE,GAChBA,EAA6B,sBAC/BA,EAA6B,uBAC3B4vC,IACFJ,KAx0IN,WACE,GAAIxvC,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEze,QASPsc,EARHmC,EAAgB,QAAEoI,QASnC1B,GAAcsJ,QAAQnS,GADxB,IAAsBA,EALpBqK,GAAqBxB,IAi0InBmpC,KApBElpC,GAAkB,IA70IxB,WACE,GAAI3G,EAAe,OAGjB,IAF+B,mBAApBA,EAAe,SACxBA,EAAe,OAAI,CAACA,EAAe,SAC9BA,EAAe,OAAEze,QA8BPsc,EA7BHmC,EAAe,OAAEoI,QA8BjC7B,EAAayJ,QAAQnS,GADvB,IAAqBA,EA1BnBqK,GAAqB3B,GAw0IrBupC,GACInpC,GAAkB,IAkBlB3G,EAAkB,WACpBA,EAAkB,UAAE,cACpBxV,YAAW,WACTA,YAAW,WACTwV,EAAkB,UAAE,MACnB,GACH2vC,MACC,IAEHA,MAkBJ,GAjHmB3vC,EAAqB,aAAI,WAC1C,OAAuBA,EAAqB,aAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAE9Dqf,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEhEqf,EAAyB,iBAAI,WAClD,OAA2BA,EAAyB,iBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEtEqf,EAAuB,eAAI,WAC9C,OAAyBA,EAAuB,eAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEjEqf,EAAwB,gBAAI,WAChD,OAA0BA,EAAwB,gBAAIA,EAAY,IAAM,IAAGpf,MAAM,KAAMD,YAEzFqf,EAAyB,iBAAI6G,GAC7B7G,EAA4B,oBAAI+G,GAChC/G,EAAsB,cAAIiR,GAAG8P,WAC7B/gB,EAA0B,kBAAIiR,GAAGkQ,eACjCnhB,EAA+B,uBAAIiR,GAAG8R,oBACtC/iB,EAA0B,kBAAIiR,GAAGsQ,eACjCvhB,EAAwB,gBAAIiR,GAAG4O,aAC/B7f,EAAkB,UAAIiR,GAAGuD,OACzBxU,EAAW,GAAIiR,GAQfrK,GAAwB,SAASmpC,IAC1BT,IACHlkD,KACGkkD,KACH1oC,GAAwBmpC,IA+D5B/vC,EAAY,IAAI5U,GAeZ4U,EAAgB,QAGlB,IAFgC,mBAArBA,EAAgB,UACzBA,EAAgB,QAAI,CAACA,EAAgB,UAChCA,EAAgB,QAAEze,OAAS,GAChCye,EAAgB,QAAE3X,KAAlB2X,GAGJ,IAAI4vC,IAAe,EAKnB,OAJI5vC,EAAqB,eACvB4vC,IAAe,GACjB7sC,GAAgB,EAChB3X,KACOyT,EAAYmxC,QAGA,iBAAZ3tD,GAA0C,iBAAXoH,EACxCA,EAAOpH,QAAUoc,EACQ,mBAAXxb,QAAyBA,OAAY,IACnDA,OAAO,IAAI,WACT,OAAOwb,KAEiB,iBAAZpc,IACdA,EAAoB,WAAIoc,MAQ1B8xC,GAAc,WAMdC,GAAiB,WACjBC,GAAoB,UAGpBC,GAA0B,WAE1BC,GAAW,WAEXC,GAAe,UAUfC,GAAgB,WAWhBC,GAA0B,UAS1BC,GAAU,UACVC,GAAsB,WAEtBC,GAAa,WAIbC,GAAY,SAcZC,GAAY,UACZC,GAAgB,UAChBC,GAAc,WACdC,GAAqB,WACrBC,GAAyB,WAEzBC,GAA0B,WAG1BC,GAAoB,WAEpBC,GAAY,WAGZC,GAAyB,UAEzBC,GAAyB,WAEzBC,GAAkB,WAElBC,GAAkB,WAElBC,GAAuB,WAYvBC,GAAa,WAEbC,GAAa,WAMbC,GAAkB,WAKlBC,GAAU,UAKVC,GAAY,UACZC,GAAwB,UAExBC,GAA6B,WAQ7BC,GAAgB,WAEhBC,GAAe,WAsBfC,GAAgB,SAIhBC,GAAgB,WAEhBC,GAAkB,WAOlBC,GAAc,WAOdC,GAAiB,WAWjBC,GAAY,WAEZC,GAAoB,WAOpBC,GAAuB,WAGvBC,GAAgC,WAGhCC,GAAgC,WAEhCC,GAAyB,WAEzBC,GAA6B,WAE7BC,GAAsB,WACtBC,GAAwB,WAIxBC,GAAU,UAGVC,GAAsB,WAKtBC,GAAiB,UAEjBC,GAAiB,WAEjBC,GAAkB,WAKlBC,GAAuB,WAEvBC,GAA+B,UAE/BC,GAA+B,WAE/BC,GAAuB,UAEvBC,GAAmB,UAEnBC,GAAyB,WAEzBC,GAAa,WACbC,GAAqB,WAErBC,GAAsB,WAOtBC,GAA4B,WAE5BC,GAAY,WAEZC,GAAuB,WAEvBC,GAAgB,UAShBC,GAA4B,WAC5BC,GAAqC,WAarCC,GAAc,SACdC,GAAkB,WAElBC,GAAS,WAETC,GAAc,UAEdC,GAAoB,WACpBC,GAA4B,WAC5BC,GAA+B,WAI/BC,GAAY,UAEZC,GAA6B,WAG7BC,GAAoB,WAEpBC,GAAiB,WAEjBC,GAAoB,UAEpBC,GAAe,WAEfC,GAAsB,WAEtBC,GAAiB,UAEjBC,GAAuB,UAEvBC,GAAkB,WAElBC,GAAyB,WAEzBC,GAAa,UAEbC,GAAuB,UAEvBC,GAAe,WAEfC,GAAuB,WAOvBC,GAAU,WAGVC,GAAW,WAEXC,GAAmB,WAEnBC,GAAgB,WAUhBC,GAAiB,WAMjBC,GAAiB,WAMjBC,GAAU,SAKVC,GAAkB,UAYlBC,GAA8B,WA0B9BC,GAAwB,UAExBC,GAAmB,WAEnBC,GAAY,WACZC,GAAwB,WAKxBC,GAAqB,WAarBC,GAAoB,WACpBC,GAAyB,WAMzBC,GAAY,WAcZC,GAAU,WAEVC,GAAiB,UAEjBC,GAAiB,WAOjBC,GAAW,WACXC,GAAuB,WASvBC,GAAU,WACVC,GAAwB,WAgBxBC,GAAa,WAKbC,GAAa,UAIbC,GAAuB,WAiBvBC,GAAsB,UACtBC,GAAkC,WAGlCC,GAAW,WACXC,GAAU,SASVC,GAAa,WAEbC,GAAU,WACVC,GAAgB,WAWhBC,GAAc,WAIdC,GAAoB,UAEpBC,GAAwB,WAExBC,GAAqB,WAErBC,GAAmB,UAInBC,GAAuB,WAWvBC,GAA2B,WAI3BC,GAA8B,WAC9BC,GAAsB,WAKtBC,GAAoC,WAOpCC,GAA4B,WAE5BC,GAAsB,UAItBC,GAAc,WAMdC,GAAsB,WAGtBC,GAAqB,WAgBrBC,GAAU,WAKVC,GAAsB,WAStBC,GAAY,WAEZC,GAAmB,WAQnBC,GAAU,WACVC,GAAU,WACVC,GAAuB,WACvBC,GAAsB,WAGtBC,GAAiB,WAGjBC,GAAW,WACXC,GAAiB,WAGjBC,GAAoB,WAEpBC,GAA6B,WAE7BC,GAAiB,UAIjBC,GAAmB,WAEnBC,GAAW,UACXC,GAAiB,WAGjBC,GAAsB,UACtBC,GAAwB,WAExBC,GAA0B,WAE1BC,GAA2B,WAC3BC,GAA+B,WAC/BC,GAA2B,UAC3BC,GAAkC,WAClCC,GAA6B,WAC7BC,GAAoB,WACpBC,GAA4B,WAc5BC,GAAsB,UACtBC,GAA4B,WAC5BC,GAA2B,WAC3BC,GAA+B,UAC/BC,GAA6B,WAC7BC,GAAwB,WAExBC,GAA6B,WAC7BC,GAAiC,WACjCC,GAA6B,WAC7BC,GAAoC,WACpCC,GAA+B,UAU/BC,GAAoB,WAepBC,GAAqB,WAErBC,GAAY,WACZC,GAA4B,UAM5BC,GAAU,UAOVC,GAAY,WACZC,GAAkB,WAElBC,GAAmB,WAsBnBC,GAAiB,WAGjBC,GAAsB,WAMtBC,GAAgB,WAEhBC,GAAgB,WAKhBC,GAAoB,UACpBC,GAA2B,UAE3BC,GAAsB,WAEtBC,GAAW,WAMXC,GAAqB,WAErBC,GAAuB,WAEvBC,GAAoB,WAEpBC,GAAoB,UACpBC,GAAU,WACVC,GAAuB,WACvBC,GAAsB,WAEtBC,GAAmB,WAEnBC,GAAY,WAGZC,GAAwB,UAUxBC,GAAc,CAChkB,CACtBA,WAAqChtD,GAC5BitD,GAAiBC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA6BhtD,GACpBotD,GAASF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAiChtD,GACxBqtD,GAAaH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvBstD,GAAYJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3ButD,GAAgBL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAA+BhtD,GACtBwtD,GAAWN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAoChtD,GAC3BytD,GAAgBP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAA6ChtD,GACpC0tD,GAAyBR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoChtD,GAC3B2tD,GAAgBT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAmChtD,GAC1B4tD,GAAeV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAsChtD,GAC7B6tD,GAAkBX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA0ChtD,GACjC8tD,GAAsBZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAuChtD,GAC9B+tD,GAAmBb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA4ChtD,GACnCguD,GAAwBd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAgDhtD,GACvCiuD,GAA4Bf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA6BhtD,GACpBkuD,GAAShB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAiChtD,GACxBmuD,GAAajB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAAiChtD,GACxBouD,GAAalB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAA6ChtD,GACpCquD,GAAyBnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoDhtD,GAC3CsuD,GAAgCpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAA0ChtD,GACjCuuD,GAAsBrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAoDhtD,GAC3CwuD,GAAgCtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAA6ChtD,GACpCyuD,GAAyBvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAqDhtD,GAC5C0uD,GAAiCxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,SAA2ChtD,GAClC2uD,GAAuBzB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAkDhtD,GACzC4uD,GAA8B1B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAsChtD,GAC7B6uD,GAAkB3B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAkChtD,GACzB8uD,GAAc5B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,UAA0ChtD,GACjC+uD,GAAsB7B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAmChtD,GAC1BgvD,GAAe9B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAoChtD,GAC3BivD,GAAgB/B,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAAgChtD,GACvBkvD,GAAYhC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA4ChtD,GACnCmvD,GAAwBjC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAiDhtD,GACxCovD,GAA6BlC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAA+ChtD,GACtCqvD,GAA2BnC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAoDhtD,GAC3CsvD,GAAgCpC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAA6BhtD,GACpBuvD,GAASrC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAkDhtD,GACzCwvD,GAA8BtC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,UAA4ChtD,GACnCyvD,GAAwBvC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAgDhtD,GACvC0vD,GAA4BxC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAsChtD,GAC7B2vD,GAAkBzC,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAwChtD,GAC/B4vD,GAAoB1C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAwChtD,GAC/B6vD,GAAoB3C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAoChtD,GAC3B8vD,GAAgB5C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAA6ChtD,GACpC+vD,GAAyB7C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAsChtD,GAC7BgwD,GAAkB9C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA+ChtD,GACtCiwD,GAA2B/C,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAA4BhtD,GACnBkwD,GAAQhD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAwChtD,GAC/BmwD,GAAoBjD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAAgChtD,GACvBowD,GAAYlD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA+BhtD,GACtBqwD,GAAWnD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAmChtD,GAC1BswD,GAAepD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAmChtD,GAC1BuwD,GAAerD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA6BhtD,GACpBwwD,GAAStD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,SAA8BhtD,GACrBywD,GAAUvD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAAkChtD,GACzB0wD,GAAcxD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA6ChtD,GACpC2wD,GAAyBzD,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAqChtD,GAC5B4wD,GAAiB1D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChC6wD,GAAqB3D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAqChtD,GAC5B8wD,GAAiB5D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA6ChtD,GACpC+wD,GAAyB7D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA6ChtD,GACpCgxD,GAAyB9D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA6ChtD,GACpCixD,GAAyB/D,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoDhtD,GAC3CkxD,GAAgChE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAAoChtD,GAC3BmxD,GAAgBjE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAsChtD,GAC7BoxD,GAAkBlE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAmChtD,GAC1BqxD,GAAenE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAsChtD,GAC7BsxD,GAAkBpE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA8BhtD,GACrBuxD,GAAUrE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAAkChtD,GACzBwxD,GAActE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAgChtD,GACvByxD,GAAYvE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAuChtD,GAC9B0xD,GAAmBxE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA2ChtD,GAClC2xD,GAAuBzE,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,SAA+ChtD,GACtC4xD,GAA2B1E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA4ChtD,GACnC6xD,GAAwB3E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAgDhtD,GACvC8xD,GAA4B5E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA2ChtD,GAClC+xD,GAAuB7E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAsChtD,GAC7BgyD,GAAkB9E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAsChtD,GAC7BiyD,GAAkB/E,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8BhtD,GACrBkyD,GAAUhF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzBmyD,GAAcjF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAwChtD,GAC/BoyD,GAAoBlF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAA2ChtD,GAClCqyD,GAAuBnF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA+ChtD,GACtCsyD,GAA2BpF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA2ChtD,GAClCuyD,GAAuBrF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA+ChtD,GACtCwyD,GAA2BtF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAoChtD,GAC3ByyD,GAAgBvF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/B0yD,GAAoBxF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAoChtD,GAC3B2yD,GAAgBzF,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/B4yD,GAAoB1F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAyChtD,GAChC6yD,GAAqB3F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpC8yD,GAAyB5F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAsChtD,GAC7B+yD,GAAkB7F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA0ChtD,GACjCgzD,GAAsB9F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA4ChtD,GACnCizD,GAAwB/F,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA4ChtD,GACnCkzD,GAAwBhG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,SAAuDhtD,GAC9CmzD,GAAmCjG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAAyDhtD,GAChDozD,GAAqClG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvEw8D,WAAmEhtD,GAC1DqzD,GAA+CnG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjFw8D,WAAyDhtD,GAChDszD,GAAqCpG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvEw8D,WAAmEhtD,GAC1DuzD,GAA+CrG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjFw8D,WAA4ChtD,GACnCwzD,GAAwBtG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA+BhtD,GACtByzD,GAAWvG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAmChtD,GAC1B0zD,GAAexG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA+BhtD,GACtB2zD,GAAWzG,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAmChtD,GAC1B4zD,GAAe1G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA8BhtD,GACrB6zD,GAAU3G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA8ChtD,GACrC8zD,GAA0B5G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAwChtD,GAC/B+zD,GAAoB7G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnCg0D,GAAwB9G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAoChtD,GAC3Bi0D,GAAgB/G,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/Bk0D,GAAoBhH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAAsChtD,GAC7Bm0D,GAAkBjH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA+ChtD,GACtCo0D,GAA2BlH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAmChtD,GAC1Bq0D,GAAenH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAA4BhtD,GACnBs0D,GAAQpH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvBu0D,GAAYrH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAiChtD,GACxBw0D,GAAatH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAqChtD,GAC5By0D,GAAiBvH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA2ChtD,GAClC00D,GAAuBxH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA8BhtD,GACrB20D,GAAUzH,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAA0ChtD,GACjC40D,GAAsB1H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAkChtD,GACzB60D,GAAc3H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA+ChtD,GACtC80D,GAA2B5H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAAmDhtD,GAC1C+0D,GAA+B7H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAuChtD,GAC9Bg1D,GAAmB9H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA+ChtD,GACtCi1D,GAA2B/H,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAsChtD,GAC7Bk1D,GAAkBhI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,SAA+ChtD,GACtCm1D,GAA2BjI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA6ChtD,GACpCo1D,GAAyBlI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA2ChtD,GAClCq1D,GAAuBnI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAkChtD,GACzBs1D,GAAcpI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7Bu1D,GAAkBrI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAiChtD,GACxBw1D,GAAatI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAqChtD,GAC5By1D,GAAiBvI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA6BhtD,GACpB01D,GAASxI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,UAAwChtD,GAC/B21D,GAAoBzI,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA+ChtD,GACtC41D,GAA2B1I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA0ChtD,GACjC61D,GAAsB3I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,SAAmDhtD,GAC1C81D,GAA+B5I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAA+ChtD,GACtC+1D,GAA2B7I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAiDhtD,GACxCg2D,GAA6B9I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAAgDhtD,GACvCi2D,GAA4B/I,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAkChtD,GACzBk2D,GAAchJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAqDhtD,GAC5Cm2D,GAAiCjJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAyDhtD,GAChDo2D,GAAqClJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvEw8D,WAAoDhtD,GAC3Cq2D,GAAgCnJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAAwDhtD,GAC/Cs2D,GAAoCpJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,UAAmDhtD,GAC1Cu2D,GAA+BrJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAuDhtD,GAC9Cw2D,GAAmCtJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAA4ChtD,GACnCy2D,GAAwBvJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAgDhtD,GACvC02D,GAA4BxJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA+BhtD,GACtB22D,GAAWzJ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAA4ChtD,GACnC42D,GAAwB1J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA+BhtD,GACtB62D,GAAW3J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,SAAkChtD,GACzB82D,GAAc5J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,UAAsChtD,GAC7B+2D,GAAkB7J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA2ChtD,GAClCg3D,GAAuB9J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAqDhtD,GAC5Ci3D,GAAiC/J,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAkChtD,GACzBk3D,GAAchK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,UAAsChtD,GAC7Bm3D,GAAkBjK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAoChtD,GAC3Bo3D,GAAgBlK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/Bq3D,GAAoBnK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA2ChtD,GAClCs3D,GAAuBpK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAiDhtD,GACxCu3D,GAA6BrK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAgChtD,GACvBw3D,GAAYtK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3By3D,GAAgBvK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAAiChtD,GACxB03D,GAAaxK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvB23D,GAAYzK,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3B43D,GAAgB1K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAoChtD,GAC3B63D,GAAgB3K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/B83D,GAAoB5K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAsChtD,GAC7B+3D,GAAkB7K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgChtD,GACvBg4D,GAAY9K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAA4ChtD,GACnCi4D,GAAwB/K,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAmChtD,GAC1Bk4D,GAAehL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9Bm4D,GAAmBjL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA6BhtD,GACpBo4D,GAASlL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAyChtD,GAChCq4D,GAAqBnL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA2ChtD,GAClCs4D,GAAuBpL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAsChtD,GAC7Bu4D,GAAkBrL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAkChtD,GACzBw4D,GAActL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7By4D,GAAkBvL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgDhtD,GACvC04D,GAA4BxL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA6ChtD,GACpC24D,GAAyBzL,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA0ChtD,GACjC44D,GAAsB1L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA8BhtD,GACrB64D,GAAU3L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzB84D,GAAc5L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7B+4D,GAAkB7L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA0ChtD,GACjCg5D,GAAsB9L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAyChtD,GAChCi5D,GAAqB/L,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAmChtD,GAC1Bk5D,GAAehM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA0ChtD,GACjCm5D,GAAsBjM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA4ChtD,GACnCo5D,GAAwBlM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,SAAiChtD,GACxBq5D,GAAanM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAyChtD,GAChCs5D,GAAqBpM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpCu5D,GAAyBrM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA0ChtD,GACjCw5D,GAAsBtM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAkDhtD,GACzCy5D,GAA8BvM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAsDhtD,GAC7C05D,GAAkCxM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,UAA2ChtD,GAClC25D,GAAuBzM,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAkDhtD,GACzC45D,GAA8B1M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAsDhtD,GAC7C65D,GAAkC3M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,WAA2ChtD,GAClC85D,GAAuB5M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA+ChtD,GACtC+5D,GAA2B7M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA+ChtD,GACtCg6D,GAA2B9M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAmDhtD,GAC1Ci6D,GAA+B/M,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAwChtD,GAC/Bk6D,GAAoBhN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA0ChtD,GACjCm6D,GAAsBjN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA2ChtD,GAClCo6D,GAAuBlN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAAuDhtD,GAC9Cq6D,GAAmCnN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAAyChtD,GAChCs6D,GAAqBpN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAA4BhtD,GACnBu6D,GAAQrN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAA4ChtD,GACnCw6D,GAAwBtN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA2ChtD,GAClCy6D,GAAuBvN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAwChtD,GAC/B06D,GAAoBxN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAAiChtD,GACxB26D,GAAazN,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvB46D,GAAY1N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAkDhtD,GACzC66D,GAA8B3N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAqDhtD,GAC5C86D,GAAiC5N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,UAAmChtD,GAC1B+6D,GAAe7N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAuChtD,GAC9Bg7D,GAAmB9N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAmChtD,GAC1Bi7D,GAAe/N,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9Bk7D,GAAmBhO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAoChtD,GAC3Bm7D,GAAgBjO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/Bo7D,GAAoBlO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4BhtD,GACnBq7D,GAAQnO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,UAAiChtD,GACxBs7D,GAAapO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvBu7D,GAAYrO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAyChtD,GAChCw7D,GAAqBtO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAA6ChtD,GACpCy7D,GAAyBvO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAiDhtD,GACxC07D,GAA6BxO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAqDhtD,GAC5C27D,GAAiCzO,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAiDhtD,GACxC47D,GAA6B1O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAqDhtD,GAC5C67D,GAAiC3O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,UAAyChtD,GAChC87D,GAAqB5O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpC+7D,GAAyB7O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAqChtD,GAC5Bg8D,GAAiB9O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCi8D,GAAqB/O,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA2ChtD,GAClCk8D,GAAuBhP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA+ChtD,GACtCm8D,GAA2BjP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA+BhtD,GACtBo8D,GAAWlP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAuChtD,GAC9Bq8D,GAAmBnP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA2ChtD,GAClCs8D,GAAuBpP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAwChtD,GAC/Bu8D,GAAoBrP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnCw8D,GAAwBtP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAuChtD,GAC9By8D,GAAmBvP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAmChtD,GAC1B08D,GAAexP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAyChtD,GAChC28D,GAAqBzP,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA+BhtD,GACtB48D,GAAW1P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAyChtD,GAChC68D,GAAqB3P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA8ChtD,GACrC88D,GAA0B5P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAkDhtD,GACzC+8D,GAA8B7P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAA8BhtD,GACrBg9D,GAAU9P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAAkChtD,GACzBi9D,GAAc/P,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAyChtD,GAChCk9D,GAAqBhQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpCm9D,GAAyBjQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAkChtD,GACzBo9D,GAAclQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7Bq9D,GAAkBnQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA6BhtD,GACpBs9D,GAASpQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,UAAiChtD,GACxBu9D,GAAarQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAiChtD,GACxBw9D,GAAatQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAA0ChtD,GACjCy9D,GAAsBvQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA2ChtD,GAClC09D,GAAuBxQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAyChtD,GAChC29D,GAAqBzQ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAqDhtD,GAC5C49D,GAAiC1Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAA8ChtD,GACrC69D,GAA0B3Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAuDhtD,GAC9C89D,GAAmC5Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAAmDhtD,GAC1C+9D,GAA+B7Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAqDhtD,GAC5Cg+D,GAAiC9Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAiDhtD,GACxCi+D,GAA6B/Q,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAAyChtD,GAChCk+D,GAAqBhR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAgDhtD,GACvCm+D,GAA4BjR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA4BhtD,GACnBo+D,GAAQlR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAA6ChtD,GACpCq+D,GAAyBnR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAiChtD,GACxBs+D,GAAapR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAAsChtD,GAC7Bu+D,GAAkBrR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAmChtD,GAC1Bw+D,GAAetR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAmChtD,GAC1By+D,GAAevR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA4ChtD,GACnC0+D,GAAwBxR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,SAAgChtD,GACvB2+D,GAAYzR,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3B4+D,GAAgB1R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAkDhtD,GACzC6+D,GAA8B3R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAA2BhtD,GAClB8+D,GAAO5R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzCw8D,UAA+BhtD,GACtB++D,GAAW7R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,UAAgChtD,GACvBg/D,GAAY9R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3Bi/D,GAAgB/R,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAsChtD,GAC7Bk/D,GAAkBhS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8ChtD,GACrCm/D,GAA0BjS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAiDhtD,GACxCo/D,GAA6BlS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAAqChtD,GAC5Bq/D,GAAiBnS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAA6ChtD,GACpCs/D,GAAyBpS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAA0ChtD,GACjCu/D,GAAsBrS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAA8BhtD,GACrBw/D,GAAUtS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzBy/D,GAAcvS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA+ChtD,GACtC0/D,GAA2BxS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAmDhtD,GAC1C2/D,GAA+BzS,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAoDhtD,GAC3C4/D,GAAgC1S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAAsChtD,GAC7B6/D,GAAkB3S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA0ChtD,GACjC8/D,GAAsB5S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAmChtD,GAC1B+/D,GAAe7S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9BggE,GAAmB9S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAsChtD,GAC7BigE,GAAkB/S,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA0ChtD,GACjCkgE,GAAsBhT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAiChtD,GACxBmgE,GAAajT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAqChtD,GAC5BogE,GAAiBlT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAwChtD,GAC/BqgE,GAAoBnT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnCsgE,GAAwBpT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,UAAmChtD,GAC1BugE,GAAerT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9BwgE,GAAmBtT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAyChtD,GAChCygE,GAAqBvT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpC0gE,GAAyBxT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoChtD,GAC3B2gE,GAAgBzT,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/B4gE,GAAoB1T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA2ChtD,GAClC6gE,GAAuB3T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA+ChtD,GACtC8gE,GAA2B5T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAA+BhtD,GACtB+gE,GAAW7T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAmChtD,GAC1BghE,GAAe9T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAyChtD,GAChCihE,GAAqB/T,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpCkhE,GAAyBhU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAiChtD,GACxBmhE,GAAajU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAqChtD,GAC5BohE,GAAiBlU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCqhE,GAAqBnU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpCshE,GAAyBpU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAyChtD,GAChCuhE,GAAqBrU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAsDhtD,GAC7CwhE,GAAkCtU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,WAAmDhtD,GAC1CyhE,GAA+BvU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAyDhtD,GAChD0hE,GAAqCxU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvEw8D,WAAoChtD,GAC3B2hE,GAAgBzU,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAA4BhtD,GACnB4hE,GAAQ1U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,UAAgChtD,GACvB6hE,GAAY3U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAqChtD,GAC5B8hE,GAAiB5U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA6BhtD,GACpB+hE,GAAS7U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,UAAsChtD,GAC7BgiE,GAAkB9U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAqChtD,GAC5BiiE,GAAiB/U,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCkiE,GAAqBhV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAkChtD,GACzBmiE,GAAcjV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7BoiE,GAAkBlV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAwChtD,GAC/BqiE,GAAoBnV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAoChtD,GAC3BsiE,GAAgBpV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/BuiE,GAAoBrV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAwChtD,GAC/BwiE,GAAoBtV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAA4ChtD,GACnCyiE,GAAwBvV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAqDhtD,GAC5C0iE,GAAiCxV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAyChtD,GAChC2iE,GAAqBzV,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAiDhtD,GACxC4iE,GAA6B1V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAmChtD,GAC1B6iE,GAAe3V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9B8iE,GAAmB5V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAyChtD,GAChC+iE,GAAqB7V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAiChtD,GACxBgjE,GAAa9V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAA2ChtD,GAClCijE,GAAuB/V,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAgDhtD,GACvCkjE,GAA4BhW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAmChtD,GAC1BmjE,GAAejW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9BojE,GAAmBlW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAwChtD,GAC/BqjE,GAAoBnW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAqChtD,GAC5BsjE,GAAiBpW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAAyChtD,GAChCujE,GAAqBrW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA+BhtD,GACtBwjE,GAAWtW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,SAA4BhtD,GACnByjE,GAAQvW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvB0jE,GAAYxW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA0ChtD,GACjC2jE,GAAsBzW,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAwChtD,GAC/B4jE,GAAoB1W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA6ChtD,GACpC6jE,GAAyB3W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAoChtD,GAC3B8jE,GAAgB5W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/B+jE,GAAoB7W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAkDhtD,GACzCgkE,GAA8B9W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAmChtD,GAC1BikE,GAAe/W,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAA0ChtD,GACjCkkE,GAAsBhX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA8ChtD,GACrCmkE,GAA0BjX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA8ChtD,GACrCokE,GAA0BlX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA6ChtD,GACpCqkE,GAAyBnX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAuChtD,GAC9BskE,GAAmBpX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA4BhtD,GACnBukE,GAAQrX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAqChtD,GAC5BwkE,GAAiBtX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAAuChtD,GAC9BykE,GAAmBvX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAgDhtD,GACvC0kE,GAA4BxX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAsChtD,GAC7B2kE,GAAkBzX,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA4BhtD,GACnB4kE,GAAQ1X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAyChtD,GAChC6kE,GAAqB3X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAqChtD,GAC5B8kE,GAAiB5X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAkChtD,GACzB+kE,GAAc7X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAgChtD,GACvBglE,GAAY9X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA0DhtD,GACjDilE,GAAsC/X,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExEw8D,UAA2ChtD,GAClCklE,GAAuBhY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA8ChtD,GACrCmlE,GAA0BjY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,UAA0ChtD,GACjColE,GAAsBlY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAwDhtD,GAC/CqlE,GAAoCnY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,UAAqChtD,GAC5BslE,GAAiBpY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAwChtD,GAC/BulE,GAAoBrY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA6ChtD,GACpCwlE,GAAyBtY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAgDhtD,GACvCylE,GAA4BvY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAoChtD,GAC3B0lE,GAAgBxY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAuChtD,GAC9B2lE,GAAmBzY,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAA0ChtD,GACjC4lE,GAAsB1Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA+ChtD,GACtC6lE,GAA2B3Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAuDhtD,GAC9C8lE,GAAmC5Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,UAAkDhtD,GACzC+lE,GAA8B7Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAA0ChtD,GACjCgmE,GAAsB9Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAA4ChtD,GACnCimE,GAAwB/Y,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA+ChtD,GACtCkmE,GAA2BhZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAuChtD,GAC9BmmE,GAAmBjZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAA0ChtD,GACjComE,GAAsBlZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA8ChtD,GACrCqmE,GAA0BnZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAqChtD,GAC5BsmE,GAAiBpZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCumE,GAAqBrZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA8BhtD,GACrBwmE,GAAUtZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA0ChtD,GACjCymE,GAAsBvZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAkChtD,GACzB0mE,GAAcxZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA8BhtD,GACrB2mE,GAAUzZ,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA0ChtD,GACjC4mE,GAAsB1Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAoChtD,GAC3B6mE,GAAgB3Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAuChtD,GAC9B8mE,GAAmB5Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAA2ChtD,GAClC+mE,GAAuB7Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAiChtD,GACxBgnE,GAAa9Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAA8BhtD,GACrBinE,GAAU/Z,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAAwChtD,GAC/BknE,GAAoBha,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAuChtD,GAC9BmnE,GAAmBja,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAiChtD,GACxBonE,GAAala,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvBqnE,GAAYna,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAmChtD,GAC1BsnE,GAAepa,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAqChtD,GAC5BunE,GAAiBra,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAqChtD,GAC5BwnE,GAAiBta,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA8ChtD,GACrCynE,GAA0Bva,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAiChtD,GACxB0nE,GAAaxa,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAsChtD,GAC7B2nE,GAAkBza,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA2ChtD,GAClC4nE,GAAuB1a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAoChtD,GAC3B6nE,GAAgB3a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAgDhtD,GACvC8nE,GAA4B5a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,UAA6ChtD,GACpC+nE,GAAyB7a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoChtD,GAC3BgoE,GAAgB9a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAA0ChtD,GACjCioE,GAAsB/a,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA8BhtD,GACrBkoE,GAAUhb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzBmoE,GAAcjb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAoChtD,GAC3BooE,GAAgBlb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAA+ChtD,GACtCqoE,GAA2Bnb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA4BhtD,GACnBsoE,GAAQpb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAA8BhtD,GACrBuoE,GAAUrb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA0ChtD,GACjCwoE,GAAsBtb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAmDhtD,GAC1CyoE,GAA+Bvb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAA8BhtD,GACrB0oE,GAAUxb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA8BhtD,GACrB2oE,GAAUzb,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAA6ChtD,GACpC4oE,GAAyB1b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA+ChtD,GACtC6oE,GAA2B3b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAwChtD,GAC/B8oE,GAAoB5b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA8ChtD,GACrC+oE,GAA0B7b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA4BhtD,GACnBgpE,GAAQ9b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvBipE,GAAY/b,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAmChtD,GAC1BkpE,GAAehc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAuChtD,GAC9BmpE,GAAmBjc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAmChtD,GAC1BopE,GAAelc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9BqpE,GAAmBnc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAoChtD,GAC3BspE,GAAgBpc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAiChtD,GACxBupE,GAAarc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAAiChtD,GACxBwpE,GAAatc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAoChtD,GAC3BypE,GAAgBvc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAA6BhtD,GACpB0pE,GAASxc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAA6BhtD,GACpB2pE,GAASzc,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAyChtD,GAChC4pE,GAAqB1c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAiChtD,GACxB6pE,GAAa3c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAA6BhtD,GACpB8pE,GAAS5c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAoChtD,GAC3B+pE,GAAgB7c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAsChtD,GAC7BgqE,GAAkB9c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgChtD,GACvBiqE,GAAY/c,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAiDhtD,GACxCkqE,GAA6Bhd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAwChtD,GAC/BmqE,GAAoBjd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAgChtD,GACvBoqE,GAAYld,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA4BhtD,GACnBqqE,GAAQnd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAA0ChtD,GACjCsqE,GAAsBpd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAqChtD,GAC5BuqE,GAAiBrd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAAwChtD,GAC/BwqE,GAAoBtd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA2ChtD,GAClCyqE,GAAuBvd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAsChtD,GAC7B0qE,GAAkBxd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA4ChtD,GACnC2qE,GAAwBzd,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA6ChtD,GACpC4qE,GAAyB1d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA0ChtD,GACjC6qE,GAAsB3d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAwChtD,GAC/B8qE,GAAoB5d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAmDhtD,GAC1C+qE,GAA+B7d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAkDhtD,GACzCgrE,GAA8B9d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAyChtD,GAChCirE,GAAqB/d,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAmDhtD,GAC1CkrE,GAA+Bhe,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAiChtD,GACxBmrE,GAAaje,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAAqChtD,GAC5BorE,GAAiBle,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA+BhtD,GACtBqrE,GAAWne,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAA+BhtD,GACtBsrE,GAAWpe,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,UAA8ChtD,GACrCurE,GAA0Bre,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA6ChtD,GACpCwrE,GAAyBte,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAkChtD,GACzByrE,GAAcve,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAyChtD,GAChC0rE,GAAqBxe,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAA+BhtD,GACtB2rE,GAAWze,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,UAAsChtD,GAC7B4rE,GAAkB1e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAoChtD,GAC3B6rE,GAAgB3e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAoChtD,GAC3B8rE,GAAgB5e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAyChtD,GAChC+rE,GAAqB7e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAgChtD,GACvBgsE,GAAY9e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAA2ChtD,GAClCisE,GAAuB/e,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA4ChtD,GACnCksE,GAAwBhf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA0ChtD,GACjCmsE,GAAsBjf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAsDhtD,GAC7CosE,GAAkClf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,WAA+ChtD,GACtCqsE,GAA2Bnf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA2ChtD,GAClCssE,GAAuBpf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAyChtD,GAChCusE,GAAqBrf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAA8ChtD,GACrCwsE,GAA0Btf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAmChtD,GAC1BysE,GAAevf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA6ChtD,GACpC0sE,GAAyBxf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAA2ChtD,GAClC2sE,GAAuBzf,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA2ChtD,GAClC4sE,GAAuB1f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA0ChtD,GACjC6sE,GAAsB3f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAwChtD,GAC/B8sE,GAAoB5f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAkDhtD,GACzC+sE,GAA8B7f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,UAAwChtD,GAC/BgtE,GAAoB9f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAoDhtD,GAC3CitE,GAAgC/f,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,UAAwDhtD,GAC/CktE,GAAoChgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,WAA4ChtD,GACnCmtE,GAAwBjgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA6BhtD,GACpBotE,GAASlgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,SAA4BhtD,GACnBqtE,GAAQngB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvBstE,GAAYpgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3ButE,GAAgBrgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAqChtD,GAC5BwtE,GAAiBtgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAAsChtD,GAC7BytE,GAAkBvgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAmChtD,GAC1B0tE,GAAexgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAoChtD,GAC3B2tE,GAAgBzgB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAsChtD,GAC7B4tE,GAAkB1gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAAsChtD,GAC7B6tE,GAAkB3gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA+BhtD,GACtB8tE,GAAW5gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAAmChtD,GAC1B+tE,GAAe7gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA4BhtD,GACnBguE,GAAQ9gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAkChtD,GACzBiuE,GAAc/gB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7BkuE,GAAkBhhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgChtD,GACvBmuE,GAAYjhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAqDhtD,GAC5CouE,GAAiClhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,UAAuDhtD,GAC9CquE,GAAmCnhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAAiDhtD,GACxCsuE,GAA6BphB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAA2ChtD,GAClCuuE,GAAuBrhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA0ChtD,GACjCwuE,GAAsBthB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAiDhtD,GACxCyuE,GAA6BvhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAyChtD,GAChC0uE,GAAqBxhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAiChtD,GACxB2uE,GAAazhB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAgChtD,GACvB4uE,GAAY1hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAyChtD,GAChC6uE,GAAqB3hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAkDhtD,GACzC8uE,GAA8B5hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAyDhtD,GAChD+uE,GAAqC7hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvEw8D,UAAsChtD,GAC7BgvE,GAAkB9hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA0ChtD,GACjCivE,GAAsB/hB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA0ChtD,GACjCkvE,GAAsBhiB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAA8ChtD,GACrCmvE,GAA0BjiB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAuChtD,GAC9BovE,GAAmBliB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA2ChtD,GAClCqvE,GAAuBniB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAAqChtD,GAC5BsvE,GAAiBpiB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAkChtD,GACzBuvE,GAAcriB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAyChtD,GAChCwvE,GAAqBtiB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA2ChtD,GAClCyvE,GAAuBviB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAyChtD,GAChC0vE,GAAqBxiB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAiDhtD,GACxC2vE,GAA6BziB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAA2ChtD,GAClC4vE,GAAuB1iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA2ChtD,GAClC6vE,GAAuB3iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,UAA4ChtD,GACnC8vE,GAAwB5iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAqChtD,GAC5B+vE,GAAiB7iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAA6ChtD,GACpCgwE,GAAyB9iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAmDhtD,GAC1CiwE,GAA+B/iB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAA+ChtD,GACtCkwE,GAA2BhjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAA6ChtD,GACpCmwE,GAAyBjjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA4ChtD,GACnCowE,GAAwBljB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA6ChtD,GACpCqwE,GAAyBnjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAmChtD,GAC1BswE,GAAepjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA2ChtD,GAClCuwE,GAAuBrjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA+ChtD,GACtCwwE,GAA2BtjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAgDhtD,GACvCywE,GAA4BvjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAwChtD,GAC/B0wE,GAAoBxjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAqDhtD,GAC5C2wE,GAAiCzjB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAAmDhtD,GAC1C4wE,GAA+B1jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,UAAmDhtD,GAC1C6wE,GAA+B3jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAwDhtD,GAC/C8wE,GAAoC5jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,WAAsDhtD,GAC7C+wE,GAAkC7jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,UAA6ChtD,GACpCgxE,GAAyB9jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAuChtD,GAC9BixE,GAAmB/jB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAmChtD,GAC1BkxE,GAAehkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAqChtD,GAC5BmxE,GAAiBjkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,UAAkChtD,GACzBoxE,GAAclkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA0ChtD,GACjCqxE,GAAsBnkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA8ChtD,GACrCsxE,GAA0BpkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,UAA4ChtD,GACnCuxE,GAAwBrkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,UAAwChtD,GAC/BwxE,GAAoBtkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAuChtD,GAC9ByxE,GAAmBvkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAA8ChtD,GACrC0xE,GAA0BxkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,UAA6ChtD,GACpC2xE,GAAyBzkB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAgChtD,GACvB4xE,GAAY1kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3B6xE,GAAgB3kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAA0ChtD,GACjC8xE,GAAsB5kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAuDhtD,GAC9C+xE,GAAmC7kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErEw8D,WAAmChtD,GAC1BgyE,GAAe9kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAA4ChtD,GACnCiyE,GAAwB/kB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAwChtD,GAC/BkyE,GAAoBhlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAgDhtD,GACvCmyE,GAA4BjlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAgDhtD,GACvCoyE,GAA4BllB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAuChtD,GAC9BqyE,GAAmBnlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAoChtD,GAC3BsyE,GAAgBplB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAA2DhtD,GAClDuyE,GAAuCrlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzEw8D,WAAsChtD,GAC7BwyE,GAAkBtlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA6ChtD,GACpCyyE,GAAyBvlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA0ChtD,GACjC0yE,GAAsBxlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAyChtD,GAChC2yE,GAAqBzlB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAgChtD,GACvB4yE,GAAY1lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoDhtD,GAC3C6yE,GAAgC3lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAAsDhtD,GAC7C8yE,GAAkC5lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,WAAiDhtD,GACxC+yE,GAA6B7lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAoChtD,GAC3BgzE,GAAgB9lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAyChtD,GAChCizE,GAAqB/lB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAgDhtD,GACvCkzE,GAA4BhmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAyChtD,GAChCmzE,GAAqBjmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpCozE,GAAyBlmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA4BhtD,GACnBqzE,GAAQnmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvBszE,GAAYpmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA4BhtD,GACnBuzE,GAAQrmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAkDhtD,GACzCwzE,GAA8BtmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,UAA8BhtD,GACrByzE,GAAUvmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAwChtD,GAC/B0zE,GAAoBxmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnC2zE,GAAwBzmB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAsChtD,GAC7B4zE,GAAkB1mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAiChtD,GACxB6zE,GAAa3mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAyChtD,GAChC8zE,GAAqB5mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAsDhtD,GAC7C+zE,GAAkC7mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,WAAsChtD,GAC7Bg0E,GAAkB9mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgDhtD,GACvCi0E,GAA4B/mB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAsChtD,GAC7Bk0E,GAAkBhnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8BhtD,GACrBm0E,GAAUjnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzBo0E,GAAclnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAqChtD,GAC5Bq0E,GAAiBnnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCs0E,GAAqBpnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAAmChtD,GAC1Bu0E,GAAernB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAkChtD,GACzBw0E,GAActnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA2ChtD,GAClCy0E,GAAuBvnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA8ChtD,GACrC00E,GAA0BxnB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAsChtD,GAC7B20E,GAAkBznB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8ChtD,GACrC40E,GAA0B1nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA4BhtD,GACnB60E,GAAQ3nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAA4BhtD,GACnB80E,GAAQ5nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAyChtD,GAChC+0E,GAAqB7nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAwChtD,GAC/Bg1E,GAAoB9nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAgChtD,GACvBi1E,GAAY/nB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAmDhtD,GAC1Ck1E,GAA+BhoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAAmChtD,GAC1Bm1E,GAAejoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9Bo1E,GAAmBloB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAkChtD,GACzBq1E,GAAcnoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA6BhtD,GACpBs1E,GAASpoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAmChtD,GAC1Bu1E,GAAeroB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9Bw1E,GAAmBtoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAiChtD,GACxBy1E,GAAavoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAAsChtD,GAC7B01E,GAAkBxoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA0ChtD,GACjC21E,GAAsBzoB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA+ChtD,GACtC41E,GAA2B1oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAmDhtD,GAC1C61E,GAA+B3oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,UAAmChtD,GAC1B81E,GAAe5oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9B+1E,GAAmB7oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAA8BhtD,GACrBg2E,GAAU9oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAwChtD,GAC/Bi2E,GAAoB/oB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAqChtD,GAC5Bk2E,GAAiBhpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCm2E,GAAqBjpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,UAA6BhtD,GACpBo2E,GAASlpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAmChtD,GAC1Bq2E,GAAenpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9Bs2E,GAAmBppB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,UAAiChtD,GACxBu2E,GAAarpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,UAAwChtD,GAC/Bw2E,GAAoBtpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA0ChtD,GACjCy2E,GAAsBvpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA+ChtD,GACtC02E,GAA2BxpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA4ChtD,GACnC22E,GAAwBzpB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAqDhtD,GAC5C42E,GAAiC1pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAA6ChtD,GACpC62E,GAAyB3pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAiDhtD,GACxC82E,GAA6B5pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAA6ChtD,GACpC+2E,GAAyB7pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAoDhtD,GAC3Cg3E,GAAgC9pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAA+ChtD,GACtCi3E,GAA2B/pB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAsChtD,GAC7Bk3E,GAAkBhqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8ChtD,GACrCm3E,GAA0BjqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAsChtD,GAC7Bo3E,GAAkBlqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA0ChtD,GACjCq3E,GAAsBnqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAmDhtD,GAC1Cs3E,GAA+BpqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAA2ChtD,GAClCu3E,GAAuBrqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAiDhtD,GACxCw3E,GAA6BtqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAA8ChtD,GACrCy3E,GAA0BvqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAiDhtD,GACxC03E,GAA6BxqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAwDhtD,GAC/C23E,GAAoCzqB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,WAAkEhtD,GACzD43E,GAA8C1qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhFw8D,WAAiDhtD,GACxC63E,GAA6B3qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAwDhtD,GAC/C83E,GAAoC5qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtEw8D,WAA4ChtD,GACnC+3E,GAAwB7qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAAiDhtD,GACxCg4E,GAA6B9qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,UAAwChtD,GAC/Bi4E,GAAoB/qB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA8ChtD,GACrCk4E,GAA0BhrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA6ChtD,GACpCm4E,GAAyBjrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAAiDhtD,GACxCo4E,GAA6BlrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAA+ChtD,GACtCq4E,GAA2BnrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA0ChtD,GACjCs4E,GAAsBprB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA6ChtD,GACpCu4E,GAAyBrrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAA+ChtD,GACtCw4E,GAA2BtrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAmDhtD,GAC1Cy4E,GAA+BvrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjEw8D,WAA+ChtD,GACtC04E,GAA2BxrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAAsDhtD,GAC7C24E,GAAkCzrB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpEw8D,UAAiDhtD,GACxC44E,GAA6B1rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAkChtD,GACzB64E,GAAc3rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAkChtD,GACzB84E,GAAc5rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA4ChtD,GACnC+4E,GAAwB7rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,UAA2ChtD,GAClCg5E,GAAuB9rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA+ChtD,GACtCi5E,GAA2B/rB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA+BhtD,GACtBk5E,GAAWhsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,WAA+BhtD,GACtBm5E,GAAWjsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Cw8D,UAAoChtD,GAC3Bo5E,GAAgBlsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAkDhtD,GACzCq5E,GAA8BnsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAsChtD,GAC7Bs5E,GAAkBpsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAgDhtD,GACvCu5E,GAA4BrsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAA2ChtD,GAClCw5E,GAAuBtsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAgDhtD,GACvCy5E,GAA4BvsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAoChtD,GAC3B05E,GAAgBxsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAA4ChtD,GACnC25E,GAAwBzsB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA8ChtD,GACrC45E,GAA0B1sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAA6ChtD,GACpC65E,GAAyB3sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAA2ChtD,GAClC85E,GAAuB5sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAgDhtD,GACvC+5E,GAA4B7sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,UAAsChtD,GAC7Bg6E,GAAkB9sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAsChtD,GAC7Bi6E,GAAkB/sB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAsChtD,GAC7Bk6E,GAAkBhtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA+ChtD,GACtCm6E,GAA2BjtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAAoChtD,GAC3Bo6E,GAAgBltB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAuChtD,GAC9Bq6E,GAAmBntB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA2ChtD,GAClCs6E,GAAuBptB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA8BhtD,GACrBu6E,GAAUrtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAA8ChtD,GACrCw6E,GAA0BttB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAkDhtD,GACzCy6E,GAA8BvtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAwChtD,GAC/B06E,GAAoBxtB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAA6BhtD,GACpB26E,GAASztB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,WAAmChtD,GAC1B46E,GAAe1tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,UAAgChtD,GACvB66E,GAAY3tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAA4BhtD,GACnB86E,GAAQ5tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,QAAgChtD,GACvB+6E,GAAY7tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAA4BhtD,GACnBg7E,GAAQ9tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAgChtD,GACvBi7E,GAAY/tB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAyChtD,GAChCk7E,GAAqBhuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAgChtD,GACvBm7E,GAAYjuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,UAAsChtD,GAC7Bo7E,GAAkBluB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA8BhtD,GACrBq7E,GAAUnuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAoChtD,GAC3Bs7E,GAAgBpuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAwChtD,GAC/Bu7E,GAAoBruB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAqChtD,GAC5Bw7E,GAAiBtuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCy7E,GAAqBvuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAkChtD,GACzB07E,GAAcxuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAA0ChtD,GACjC27E,GAAsBzuB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAuChtD,GAC9B47E,GAAmB1uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAmChtD,GAC1B67E,GAAe3uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAA6ChtD,GACpC87E,GAAyB5uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAiChtD,GACxB+7E,GAAa7uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAA0ChtD,GACjCg8E,GAAsB9uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAA+ChtD,GACtCi8E,GAA2B/uB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,WAA0ChtD,GACjCk8E,GAAsBhvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,UAAyChtD,GAChCm8E,GAAqBjvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAkDhtD,GACzCo8E,GAA8BlvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhEw8D,WAAkChtD,GACzBq8E,GAAcnvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAqChtD,GAC5Bs8E,GAAiBpvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCu8E,GAAqBrvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAkChtD,GACzBw8E,GAActvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAkChtD,GACzBy8E,GAAcvvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,UAAuChtD,GAC9B08E,GAAmBxvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAqDhtD,GAC5C28E,GAAiCzvB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnEw8D,WAA8ChtD,GACrC48E,GAA0B1vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,WAAuChtD,GAC9B68E,GAAmB3vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAmChtD,GAC1B88E,GAAe5vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9B+8E,GAAmB7vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAAgDhtD,GACvCg9E,GAA4B9vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Dw8D,WAAwChtD,GAC/Bi9E,GAAoB/vB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnCk9E,GAAwBhwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA2ChtD,GAClCm9E,GAAuBjwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAA2ChtD,GAClCo9E,GAAuBlwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAoDhtD,GAC3Cq9E,GAAgCnwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElEw8D,WAAoChtD,GAC3Bs9E,GAAgBpwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAkChtD,GACzBu9E,GAAcrwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAsChtD,GAC7Bw9E,GAAkBtwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAAkChtD,GACzBy9E,GAAcvwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAmChtD,GAC1B09E,GAAexwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAmChtD,GAC1B29E,GAAezwB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAoChtD,GAC3B49E,GAAgB1wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,UAAwChtD,GAC/B69E,GAAoB3wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,UAAsChtD,GAC7B89E,GAAkB5wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA6ChtD,GACpC+9E,GAAyB7wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAiDhtD,GACxCg+E,GAA6B9wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Dw8D,WAAwChtD,GAC/Bi+E,GAAoB/wB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4ChtD,GACnCk+E,GAAwBhxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Dw8D,WAA6BhtD,GACpBm+E,GAASjxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Cw8D,UAAiChtD,GACxBo+E,GAAalxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE/Cw8D,WAA8BhtD,GACrBq+E,GAAUnxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAA8BhtD,GACrBs+E,GAAUpxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,WAAkChtD,GACzBu+E,GAAcrxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAmChtD,GAC1Bw+E,GAAetxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAuChtD,GAC9By+E,GAAmBvxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAErDw8D,WAA2ChtD,GAClC0+E,GAAuBxxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEzDw8D,WAAyChtD,GAChC2+E,GAAqBzxB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA6ChtD,GACpC4+E,GAAyB1xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,WAAsChtD,GAC7B6+E,GAAkB3xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,UAA+ChtD,GACtC8+E,GAA2B5xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE7Dw8D,UAAsChtD,GAC7B++E,GAAkB7xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEpDw8D,WAA4BhtD,GACnBg/E,GAAQ9xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE1Cw8D,WAAyChtD,GAChCi/E,GAAqB/xB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAAwChtD,GAC/Bk/E,GAAoBhyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAAgChtD,GACvBm/E,GAAYjyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAqChtD,GAC5Bo/E,GAAiBlyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEnDw8D,WAAyChtD,GAChCq/E,GAAqBnyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEvDw8D,WAA8BhtD,GACrBs/E,GAAUpyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Cw8D,UAA8ChtD,GACrCu/E,GAA0BryB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE5Dw8D,UAA6ChtD,GACpCw/E,GAAyBtyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE3Dw8D,UAA0ChtD,GACjCy/E,GAAsBvyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAExDw8D,WAAmChtD,GAC1B0/E,GAAexyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAkChtD,GACzB2/E,GAAczyB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEhDw8D,WAAoChtD,GAC3B4/E,GAAgB1yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAmChtD,GAC1B6/E,GAAe3yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEjDw8D,WAAgChtD,GACvB8/E,GAAY5yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAoChtD,GAC3B+/E,GAAgB7yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAElDw8D,WAAgChtD,GACvBggF,GAAY9yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAE9Cw8D,WAAwChtD,GAC/BigF,GAAoB/yB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,WAEtDw8D,WAA4BhtD,GACnBkgF,GAAQhzB,SAASltD,EAAEmtD,GAAIntD,EAAErL,KAAMqL,EAAExP,YA24GtCy8D,GAAmB,MACrB11D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAC1HtwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKowF,eAAiBA,EACtBpwF,KAAKqwF,OAASA,EACdrwF,KAAKswF,gBAAkBA,EAEzBC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtBysE,EAASG,EAAK5sE,KACd0sE,EAAkBE,EAAK5sE,KAC3B,OAAO,IAAI+4C,GAAiBkzB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAE9IG,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAKswF,iBAERrwF,IAGP68D,GAAW,MACb71D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYQ,GAClF1wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK0wF,SAAWA,EAElBH,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClB8sE,EAAWF,EAAK5sE,KACpB,OAAO,IAAIk5C,GAAS+yB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYQ,GAE9FD,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK0wF,UAERzwF,IAGP88D,GAAe,MACjB91D,YAAY4oF,EAAWxrF,EAAMssF,EAAMC,EAAiBX,GAClDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2wF,KAAOA,EACZ3wF,KAAK4wF,gBAAkBA,EACvB5wF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+sE,EAAOH,EAAK5sE,KACZgtE,EAAkBJ,EAAK5sE,KACvBqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIm5C,GAAa8yB,EAAWxrF,EAAMssF,EAAMC,EAAiBX,GAElEQ,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK2wF,MAEf1wF,EAAKqG,KAAKtG,KAAK4wF,iBAEf3wF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP+8D,GAAc,MAChB/1D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIo5C,GAAY6yB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEvIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPg9D,GAAkB,MACpBh2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIq5C,GAAgB4yB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEtKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPi9D,GAAa,MACfj2D,YAAY4oF,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,GACjDrxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKoxF,QAAUA,EACfpxF,KAAKiwF,YAAcA,EACnBjwF,KAAKqxF,mBAAqBA,EAE5Bd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwtE,EAAUZ,EAAK5sE,KACfqsE,EAAcO,EAAK5sE,KACnBytE,EAAqBb,EAAK5sE,KAC9B,OAAO,IAAIs5C,GAAW2yB,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,GAE/DZ,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKqxF,oBAERpxF,IAGPk9D,GAAkB,MACpBl2D,YAAY4oF,EAAWxrF,EAAMitF,GAC3BtxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsxF,MAAQA,EAEff,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0tE,EAAQd,EAAK5sE,KACjB,OAAO,IAAIu5C,GAAgB0yB,EAAWxrF,EAAMitF,GAE9Cb,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKsxF,OAERrxF,IAGPm9D,GAA2B,MAC7Bn2D,YAAY4oF,EAAWxrF,EAAMitF,EAAOC,GAClCvxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsxF,MAAQA,EACbtxF,KAAKuxF,MAAQA,EAEfhB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0tE,EAAQd,EAAK5sE,KACb2tE,EAAQf,EAAK5sE,KACjB,OAAO,IAAIw5C,GAAyByyB,EAAWxrF,EAAMitF,EAAOC,GAE9Dd,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKsxF,OAEfrxF,EAAKqG,KAAKtG,KAAKuxF,OAERtxF,IAGPo9D,GAAkB,MACpBp2D,YAAY4oF,EAAWxrF,EAAMmtF,EAAQC,EAAaC,GAChD1xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwxF,OAASA,EACdxxF,KAAKyxF,YAAcA,EACnBzxF,KAAK0xF,UAAYA,EAEnBnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4tE,EAAShB,EAAK5sE,KACd6tE,EAAcjB,EAAK5sE,KACnB8tE,EAAYlB,EAAK5sE,KACrB,OAAO,IAAIy5C,GAAgBwyB,EAAWxrF,EAAMmtF,EAAQC,EAAaC,GAEnEjB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKwxF,QAEfvxF,EAAKqG,KAAKtG,KAAKyxF,aAEfxxF,EAAKqG,KAAKtG,KAAK0xF,WAERzxF,IAGPq9D,GAAiB,MACnBr2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI05C,GAAeuyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPs9D,GAAoB,MACtBt2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI25C,GAAkBsyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE7IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPu9D,GAAwB,MAC1Bv2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI45C,GAAsBqyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE5KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPw9D,GAAqB,MACvBx2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI65C,GAAmBoyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPy9D,GAA0B,MAC5Bz2D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI85C,GAAwBmyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP09D,GAA8B,MAChC12D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+5C,GAA4BkyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP29D,GAAW,MACb32D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg6C,GAASiyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEpIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP49D,GAAe,MACjB52D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi6C,GAAagyB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEnKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP69D,GAAe,MACjB72D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBa,EAAMvB,GACzHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK2xF,KAAOA,EACZ3xF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB+tE,EAAOnB,EAAK5sE,KACZwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIk6C,GAAa+xB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBa,EAAMvB,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK2xF,MAEf1xF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP89D,GAA2B,MAC7B92D,YAAY4oF,EAAWxrF,EAAMutF,EAAgBC,GAC3C7xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4xF,eAAiBA,EACtB5xF,KAAK6xF,SAAWA,EAElBtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNguE,EAAiBpB,EAAK5sE,KACtBiuE,EAAWrB,EAAK5sE,KACpB,OAAO,IAAIm6C,GAAyB8xB,EAAWxrF,EAAMutF,EAAgBC,GAEvEpB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK4xF,gBAEf3xF,EAAKqG,KAAKtG,KAAK6xF,UAER5xF,IAGP+9D,GAAkC,MACpC/2D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQC,GACnEjyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EACdhyF,KAAKiyF,cAAgBA,EAEvB1B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KACdquE,EAAgBzB,EAAK5sE,KACzB,OAAO,IAAIo6C,GAAgC6xB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQC,GAEtGxB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAEf/xF,EAAKqG,KAAKtG,KAAKiyF,eAERhyF,IAGPg+D,GAAwB,MAC1Bh3D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,GAC3DhyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EAEhBzB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KAClB,OAAO,IAAIq6C,GAAsB4xB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,GAEpFvB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAER/xF,IAGPi+D,GAAkC,MACpCj3D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeC,EAAQC,GACzItyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EACdhyF,KAAK4xF,eAAiBA,EACtB5xF,KAAKkyF,iBAAmBA,EACxBlyF,KAAKmyF,YAAcA,EACnBnyF,KAAKoyF,cAAgBA,EACrBpyF,KAAKqyF,OAASA,EACdryF,KAAKsyF,SAAWA,EAElB/B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KACdguE,EAAiBpB,EAAK5sE,KACtBsuE,EAAmB1B,EAAK5sE,KACxBuuE,EAAc3B,EAAK5sE,KACnBwuE,EAAgB5B,EAAK5sE,KACrByuE,EAAS7B,EAAK5sE,KACd0uE,EAAW9B,EAAK5sE,KACpB,OAAO,IAAIs6C,GAAgC2xB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeC,EAAQC,GAE5K7B,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAEf/xF,EAAKqG,KAAKtG,KAAK4xF,gBAEf3xF,EAAKqG,KAAKtG,KAAKkyF,kBAEfjyF,EAAKqG,KAAKtG,KAAKmyF,aAEflyF,EAAKqG,KAAKtG,KAAKoyF,eAEfnyF,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAKsyF,UAERryF,IAGPk+D,GAA2B,MAC7Bl3D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAClHpyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EACdhyF,KAAK4xF,eAAiBA,EACtB5xF,KAAKkyF,iBAAmBA,EACxBlyF,KAAKmyF,YAAcA,EACnBnyF,KAAKoyF,cAAgBA,EAEvB7B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KACdguE,EAAiBpB,EAAK5sE,KACtBsuE,EAAmB1B,EAAK5sE,KACxBuuE,EAAc3B,EAAK5sE,KACnBwuE,EAAgB5B,EAAK5sE,KACzB,OAAO,IAAIu6C,GAAyB0xB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAE9I3B,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAEf/xF,EAAKqG,KAAKtG,KAAK4xF,gBAEf3xF,EAAKqG,KAAKtG,KAAKkyF,kBAEfjyF,EAAKqG,KAAKtG,KAAKmyF,aAEflyF,EAAKqG,KAAKtG,KAAKoyF,eAERnyF,IAGPm+D,GAAmC,MACrCn3D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeG,EAAkBD,GACnJtyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EACdhyF,KAAK4xF,eAAiBA,EACtB5xF,KAAKkyF,iBAAmBA,EACxBlyF,KAAKmyF,YAAcA,EACnBnyF,KAAKoyF,cAAgBA,EACrBpyF,KAAKuyF,iBAAmBA,EACxBvyF,KAAKsyF,SAAWA,EAElB/B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KACdguE,EAAiBpB,EAAK5sE,KACtBsuE,EAAmB1B,EAAK5sE,KACxBuuE,EAAc3B,EAAK5sE,KACnBwuE,EAAgB5B,EAAK5sE,KACrB2uE,EAAmB/B,EAAK5sE,KACxB0uE,EAAW9B,EAAK5sE,KACpB,OAAO,IAAIw6C,GAAiCyxB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,EAAeG,EAAkBD,GAEvL7B,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAEf/xF,EAAKqG,KAAKtG,KAAK4xF,gBAEf3xF,EAAKqG,KAAKtG,KAAKkyF,kBAEfjyF,EAAKqG,KAAKtG,KAAKmyF,aAEflyF,EAAKqG,KAAKtG,KAAKoyF,eAEfnyF,EAAKqG,KAAKtG,KAAKuyF,kBAEftyF,EAAKqG,KAAKtG,KAAKsyF,UAERryF,IAGPo+D,GAAyB,MAC3Bp3D,YAAY4oF,EAAWxrF,EAAMwtF,GAC3B7xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6xF,SAAWA,EAElBtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiuE,EAAWrB,EAAK5sE,KACpB,OAAO,IAAIy6C,GAAuBwxB,EAAWxrF,EAAMwtF,GAErDpB,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK6xF,UAER5xF,IAGPq+D,GAAgC,MAClCr3D,YAAY4oF,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAClHpyF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8xF,qBAAuBA,EAC5B9xF,KAAK+xF,SAAWA,EAChB/xF,KAAKgyF,OAASA,EACdhyF,KAAK4xF,eAAiBA,EACtB5xF,KAAKkyF,iBAAmBA,EACxBlyF,KAAKmyF,YAAcA,EACnBnyF,KAAKoyF,cAAgBA,EAEvB7B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkuE,EAAuBtB,EAAK5sE,KAC5BmuE,EAAWvB,EAAK5sE,KAChBouE,EAASxB,EAAK5sE,KACdguE,EAAiBpB,EAAK5sE,KACtBsuE,EAAmB1B,EAAK5sE,KACxBuuE,EAAc3B,EAAK5sE,KACnBwuE,EAAgB5B,EAAK5sE,KACzB,OAAO,IAAI06C,GAA8BuxB,EAAWxrF,EAAMytF,EAAsBC,EAAUC,EAAQJ,EAAgBM,EAAkBC,EAAaC,GAEnJ3B,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8xF,sBAEf7xF,EAAKqG,KAAKtG,KAAK+xF,UAEf9xF,EAAKqG,KAAKtG,KAAKgyF,QAEf/xF,EAAKqG,KAAKtG,KAAK4xF,gBAEf3xF,EAAKqG,KAAKtG,KAAKkyF,kBAEfjyF,EAAKqG,KAAKtG,KAAKmyF,aAEflyF,EAAKqG,KAAKtG,KAAKoyF,eAERnyF,IAGPs+D,GAAoB,MACtBt3D,YAAY4oF,EAAWxrF,EAAMmuF,EAAYC,EAAU1B,GACjD/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwyF,WAAaA,EAClBxyF,KAAKyyF,SAAWA,EAChBzyF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4uE,EAAahC,EAAK5sE,KAClB6uE,EAAWjC,EAAK5sE,KAChBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI26C,GAAkBsxB,EAAWxrF,EAAMmuF,EAAYC,EAAU1B,GAEtEN,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKwyF,YAEfvyF,EAAKqG,KAAKtG,KAAKyyF,UAEfxyF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPu+D,GAAgB,MAClBv3D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAI46C,GAAcqxB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAEpHL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGPw+D,GAAwB,MAC1Bx3D,YAAY4oF,EAAWxrF,EAAMquF,EAAeC,GAC1C3yF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0yF,cAAgBA,EACrB1yF,KAAK2yF,gBAAkBA,EAEzBpC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8uE,EAAgBlC,EAAK5sE,KACrB+uE,EAAkBnC,EAAK5sE,KAC3B,OAAO,IAAI66C,GAAsBoxB,EAAWxrF,EAAMquF,EAAeC,GAEnElC,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK0yF,eAEfzyF,EAAKqG,KAAKtG,KAAK2yF,iBAER1yF,IAGPy+D,GAAiB,MACnBz3D,YAAY4oF,EAAWxrF,EAAMuuF,EAAsBC,EAASC,EAAqBC,GAC/E/yF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4yF,qBAAuBA,EAC5B5yF,KAAK6yF,QAAUA,EACf7yF,KAAK8yF,oBAAsBA,EAC3B9yF,KAAK+yF,sBAAwBA,EAE/BxC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgvE,EAAuBpC,EAAK5sE,KAC5BivE,EAAUrC,EAAK5sE,KACfkvE,EAAsBtC,EAAK5sE,KAC3BmvE,EAAwBvC,EAAK5sE,KACjC,OAAO,IAAI86C,GAAemxB,EAAWxrF,EAAMuuF,EAAsBC,EAASC,EAAqBC,GAEjGtC,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK4yF,sBAEf3yF,EAAKqG,KAAKtG,KAAK6yF,SAEf5yF,EAAKqG,KAAKtG,KAAK8yF,qBAEf7yF,EAAKqG,KAAKtG,KAAK+yF,uBAER9yF,IAGP0+D,GAAkB,MACpB13D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAChJvzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgzF,aAAeA,EACpBhzF,KAAKizF,UAAYA,EACjBjzF,KAAKkzF,eAAiBA,EACtBlzF,KAAKmzF,eAAiBA,EACtBnzF,KAAKozF,SAAWA,EAChBpzF,KAAKqzF,UAAYA,EACjBrzF,KAAKszF,mBAAqBA,EAC1BtzF,KAAKuzF,WAAaA,EAEpBhD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBovE,EAAexC,EAAK5sE,KACpBqvE,EAAYzC,EAAK5sE,KACjBsvE,EAAiB1C,EAAK5sE,KACtBuvE,EAAiB3C,EAAK5sE,KACtBwvE,EAAW5C,EAAK5sE,KAChByvE,EAAY7C,EAAK5sE,KACjB0vE,EAAqB9C,EAAK5sE,KAC1B2vE,EAAa/C,EAAK5sE,KACtB,OAAO,IAAI+6C,GAAgBkxB,EAAWxrF,EAAM2rF,EAAMC,EAAa+C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAEnK9C,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgzF,cAEf/yF,EAAKqG,KAAKtG,KAAKizF,WAEfhzF,EAAKqG,KAAKtG,KAAKkzF,gBAEfjzF,EAAKqG,KAAKtG,KAAKmzF,gBAEflzF,EAAKqG,KAAKtG,KAAKozF,UAEfnzF,EAAKqG,KAAKtG,KAAKqzF,WAEfpzF,EAAKqG,KAAKtG,KAAKszF,oBAEfrzF,EAAKqG,KAAKtG,KAAKuzF,YAERtzF,IAGP2+D,GAAc,MAChB33D,YAAY4oF,EAAWxrF,EAAMmvF,EAAYxD,EAAMC,EAAawD,EAAgBpD,EAAQqD,EAAOC,EAAWC,EAAoBC,GACxH7zF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwzF,WAAaA,EAClBxzF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKyzF,eAAiBA,EACtBzzF,KAAKqwF,OAASA,EACdrwF,KAAK0zF,MAAQA,EACb1zF,KAAK2zF,UAAYA,EACjB3zF,KAAK4zF,mBAAqBA,EAC1B5zF,KAAK6zF,eAAiBA,EAExBtD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4vE,EAAahD,EAAK5sE,KAClBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB6vE,EAAiBjD,EAAK5sE,KACtBysE,EAASG,EAAK5sE,KACd8vE,EAAQlD,EAAK5sE,KACb+vE,EAAYnD,EAAK5sE,KACjBgwE,EAAqBpD,EAAK5sE,KAC1BiwE,EAAiBrD,EAAK5sE,KAC1B,OAAO,IAAIg7C,GAAYixB,EAAWxrF,EAAMmvF,EAAYxD,EAAMC,EAAawD,EAAgBpD,EAAQqD,EAAOC,EAAWC,EAAoBC,GAEvIpD,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKwzF,YAEfvzF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKyzF,gBAEfxzF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAK0zF,OAEfzzF,EAAKqG,KAAKtG,KAAK2zF,WAEf1zF,EAAKqG,KAAKtG,KAAK4zF,oBAEf3zF,EAAKqG,KAAKtG,KAAK6zF,gBAER5zF,IAGP4+D,GAA0B,MAC5B53D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa6D,EAAkBC,GAChE/zF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK8zF,iBAAmBA,EACxB9zF,KAAK+zF,iBAAmBA,EAE1BxD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBkwE,EAAmBtD,EAAK5sE,KACxBmwE,EAAmBvD,EAAK5sE,KAC5B,OAAO,IAAIi7C,GAAwBgxB,EAAWxrF,EAAM2rF,EAAMC,EAAa6D,EAAkBC,GAE3FtD,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK8zF,kBAEf7zF,EAAKqG,KAAKtG,KAAK+zF,kBAER9zF,IAGP6+D,GAA+B,MACjC73D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaC,GACrDl0F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKk0F,WAAaA,EAEpB3D,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBswE,EAAa1D,EAAK5sE,KACtB,OAAO,IAAIk7C,GAA6B+wB,EAAWxrF,EAAM2vF,EAAaC,EAAaC,GAErFzD,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKk0F,YAERj0F,IAGP8+D,GAA6B,MAC/B93D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaE,GACrDn0F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKm0F,MAAQA,EAEf5D,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBuwE,EAAQ3D,EAAK5sE,KACjB,OAAO,IAAIm7C,GAA2B8wB,EAAWxrF,EAAM2vF,EAAaC,EAAaE,GAEnF1D,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKm0F,OAERl0F,IAGP++D,GAAkC,MACpC/3D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaC,EAAYE,GACjEp0F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKk0F,WAAaA,EAClBl0F,KAAKo0F,YAAcA,EAErB7D,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBswE,EAAa1D,EAAK5sE,KAClBwwE,EAAc5D,EAAK5sE,KACvB,OAAO,IAAIo7C,GAAgC6wB,EAAWxrF,EAAM2vF,EAAaC,EAAaC,EAAYE,GAEpG3D,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKk0F,YAEfj0F,EAAKqG,KAAKtG,KAAKo0F,aAERn0F,IAGPg/D,GAAW,MACbh4D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBkE,EAAeC,EAAcC,EAAsBC,EAAOC,EAAMC,EAAmBC,EAAmBC,GACxM50F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKq0F,cAAgBA,EACrBr0F,KAAKs0F,aAAeA,EACpBt0F,KAAKu0F,qBAAuBA,EAC5Bv0F,KAAKw0F,MAAQA,EACbx0F,KAAKy0F,KAAOA,EACZz0F,KAAK00F,kBAAoBA,EACzB10F,KAAK20F,kBAAoBA,EACzB30F,KAAK40F,iBAAmBA,EAE1BrE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBywE,EAAgB7D,EAAK5sE,KACrB0wE,EAAe9D,EAAK5sE,KACpB2wE,EAAuB/D,EAAK5sE,KAC5B4wE,EAAQhE,EAAK5sE,KACb6wE,EAAOjE,EAAK5sE,KACZ8wE,EAAoBlE,EAAK5sE,KACzB+wE,EAAoBnE,EAAK5sE,KACzBgxE,EAAmBpE,EAAK5sE,KAC5B,OAAO,IAAIq7C,GAAS4wB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBkE,EAAeC,EAAcC,EAAsBC,EAAOC,EAAMC,EAAmBC,EAAmBC,GAEpNnE,SACE,IAAIxwF,EAAO,GA6BX,OA5BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKq0F,eAEfp0F,EAAKqG,KAAKtG,KAAKs0F,cAEfr0F,EAAKqG,KAAKtG,KAAKu0F,sBAEft0F,EAAKqG,KAAKtG,KAAKw0F,OAEfv0F,EAAKqG,KAAKtG,KAAKy0F,MAEfx0F,EAAKqG,KAAKtG,KAAK00F,mBAEfz0F,EAAKqG,KAAKtG,KAAK20F,mBAEf10F,EAAKqG,KAAKtG,KAAK40F,kBAER30F,IAGPi/D,GAAgC,MAClCj4D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUC,EAAmBC,EAAcC,EAAcC,EAAuBC,EAA0BC,EAAgBC,EAAoBC,EAAuBC,EAAwBC,EAAmBC,EAAqBC,GAC1Rz1F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAK80F,kBAAoBA,EACzB90F,KAAK+0F,aAAeA,EACpB/0F,KAAKg1F,aAAeA,EACpBh1F,KAAKi1F,sBAAwBA,EAC7Bj1F,KAAKk1F,yBAA2BA,EAChCl1F,KAAKm1F,eAAiBA,EACtBn1F,KAAKo1F,mBAAqBA,EAC1Bp1F,KAAKq1F,sBAAwBA,EAC7Br1F,KAAKs1F,uBAAyBA,EAC9Bt1F,KAAKu1F,kBAAoBA,EACzBv1F,KAAKw1F,oBAAsBA,EAC3Bx1F,KAAKy1F,eAAiBA,EAExBlF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChBkxE,EAAoBtE,EAAK5sE,KACzBmxE,EAAevE,EAAK5sE,KACpBoxE,EAAexE,EAAK5sE,KACpBqxE,EAAwBzE,EAAK5sE,KAC7BsxE,EAA2B1E,EAAK5sE,KAChCuxE,EAAiB3E,EAAK5sE,KACtBwxE,EAAqB5E,EAAK5sE,KAC1ByxE,EAAwB7E,EAAK5sE,KAC7B0xE,EAAyB9E,EAAK5sE,KAC9B2xE,EAAoB/E,EAAK5sE,KACzB4xE,EAAsBhF,EAAK5sE,KAC3B6xE,EAAiBjF,EAAK5sE,KAC1B,OAAO,IAAIs7C,GAA8B2wB,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUC,EAAmBC,EAAcC,EAAcC,EAAuBC,EAA0BC,EAAgBC,EAAoBC,EAAuBC,EAAwBC,EAAmBC,EAAqBC,GAE3ThF,SACE,IAAIxwF,EAAO,GA+BX,OA9BAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK80F,mBAEf70F,EAAKqG,KAAKtG,KAAK+0F,cAEf90F,EAAKqG,KAAKtG,KAAKg1F,cAEf/0F,EAAKqG,KAAKtG,KAAKi1F,uBAEfh1F,EAAKqG,KAAKtG,KAAKk1F,0BAEfj1F,EAAKqG,KAAKtG,KAAKm1F,gBAEfl1F,EAAKqG,KAAKtG,KAAKo1F,oBAEfn1F,EAAKqG,KAAKtG,KAAKq1F,uBAEfp1F,EAAKqG,KAAKtG,KAAKs1F,wBAEfr1F,EAAKqG,KAAKtG,KAAKu1F,mBAEft1F,EAAKqG,KAAKtG,KAAKw1F,qBAEfv1F,EAAKqG,KAAKtG,KAAKy1F,gBAERx1F,IAGPk/D,GAA0B,MAC5Bl4D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIu7C,GAAwB0wB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPm/D,GAA8B,MAChCn4D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIw7C,GAA4BywB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPo/D,GAAoB,MACtBp4D,YAAY4oF,EAAWxrF,EAAMqxF,EAAU/D,GACrC3xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAK2xF,KAAOA,EAEdpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChB+tE,EAAOnB,EAAK5sE,KAChB,OAAO,IAAIy7C,GAAkBwwB,EAAWxrF,EAAMqxF,EAAU/D,GAE1DlB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAK2xF,MAER1xF,IAGPq/D,GAAsB,MACxBr4D,YAAY4oF,EAAWxrF,EAAMqxF,EAAUC,GACrC31F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAK21F,aAAeA,EAEtBpF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChB+xE,EAAenF,EAAK5sE,KACxB,OAAO,IAAI07C,GAAoBuwB,EAAWxrF,EAAMqxF,EAAUC,GAE5DlF,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAK21F,cAER11F,IAGPs/D,GAAsB,MACxBt4D,YAAY4oF,EAAWxrF,EAAMqxF,EAAU/D,EAAMgE,GAC3C31F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAK2xF,KAAOA,EACZ3xF,KAAK21F,aAAeA,EAEtBpF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChB+tE,EAAOnB,EAAK5sE,KACZ+xE,EAAenF,EAAK5sE,KACxB,OAAO,IAAI27C,GAAoBswB,EAAWxrF,EAAMqxF,EAAU/D,EAAMgE,GAElElF,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAK2xF,MAEf1xF,EAAKqG,KAAKtG,KAAK21F,cAER11F,IAGPu/D,GAAkB,MACpBv4D,YAAY4oF,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,GAC9Eh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK41F,OAASA,EACd51F,KAAK61F,kBAAoBA,EACzB71F,KAAK81F,UAAYA,EACjB91F,KAAK+1F,YAAcA,EACnB/1F,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgyE,EAASpF,EAAK5sE,KACdiyE,EAAoBrF,EAAK5sE,KACzBkyE,EAAYtF,EAAK5sE,KACjBmyE,EAAcvF,EAAK5sE,KACnBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAI47C,GAAgBqwB,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,GAEjGvF,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK41F,QAEf31F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAK81F,WAEf71F,EAAKqG,KAAKtG,KAAK+1F,aAEf91F,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGPw/D,GAA2B,MAC7Bx4D,YAAY4oF,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,GACxHn2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK41F,OAASA,EACd51F,KAAK61F,kBAAoBA,EACzB71F,KAAK81F,UAAYA,EACjB91F,KAAK+1F,YAAcA,EACnB/1F,KAAKg2F,cAAgBA,EACrBh2F,KAAKi2F,mBAAqBA,EAC1Bj2F,KAAKk2F,MAAQA,EACbl2F,KAAKm2F,SAAWA,EAElB5F,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgyE,EAASpF,EAAK5sE,KACdiyE,EAAoBrF,EAAK5sE,KACzBkyE,EAAYtF,EAAK5sE,KACjBmyE,EAAcvF,EAAK5sE,KACnBoyE,EAAgBxF,EAAK5sE,KACrBqyE,EAAqBzF,EAAK5sE,KAC1BsyE,EAAQ1F,EAAK5sE,KACbuyE,EAAW3F,EAAK5sE,KACpB,OAAO,IAAI67C,GAAyBowB,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,GAEpJ1F,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK41F,QAEf31F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAK81F,WAEf71F,EAAKqG,KAAKtG,KAAK+1F,aAEf91F,EAAKqG,KAAKtG,KAAKg2F,eAEf/1F,EAAKqG,KAAKtG,KAAKi2F,oBAEfh2F,EAAKqG,KAAKtG,KAAKk2F,OAEfj2F,EAAKqG,KAAKtG,KAAKm2F,UAERl2F,IAGPy/D,GAAoB,MACtBz4D,YAAY4oF,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,GAC/Fh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKo2F,QAAUA,EACfp2F,KAAKq2F,QAAUA,EACfr2F,KAAK61F,kBAAoBA,EACzB71F,KAAKs2F,YAAcA,EACnBt2F,KAAKu2F,QAAUA,EACfv2F,KAAKw2F,QAAUA,EACfx2F,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwyE,EAAU5F,EAAK5sE,KACfyyE,EAAU7F,EAAK5sE,KACfiyE,EAAoBrF,EAAK5sE,KACzB0yE,EAAc9F,EAAK5sE,KACnB2yE,EAAU/F,EAAK5sE,KACf4yE,EAAUhG,EAAK5sE,KACfoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAI87C,GAAkBmwB,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,GAEpHvF,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKo2F,SAEfn2F,EAAKqG,KAAKtG,KAAKq2F,SAEfp2F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAKs2F,aAEfr2F,EAAKqG,KAAKtG,KAAKu2F,SAEft2F,EAAKqG,KAAKtG,KAAKw2F,SAEfv2F,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGP0/D,GAA6B,MAC/B14D,YAAY4oF,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,GAChKn2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKo2F,QAAUA,EACfp2F,KAAKq2F,QAAUA,EACfr2F,KAAK61F,kBAAoBA,EACzB71F,KAAKs2F,YAAcA,EACnBt2F,KAAKu2F,QAAUA,EACfv2F,KAAKw2F,QAAUA,EACfx2F,KAAKg2F,cAAgBA,EACrBh2F,KAAKy2F,gBAAkBA,EACvBz2F,KAAK02F,gBAAkBA,EACvB12F,KAAK22F,OAASA,EACd32F,KAAK42F,OAASA,EACd52F,KAAKm2F,SAAWA,EAElB5F,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwyE,EAAU5F,EAAK5sE,KACfyyE,EAAU7F,EAAK5sE,KACfiyE,EAAoBrF,EAAK5sE,KACzB0yE,EAAc9F,EAAK5sE,KACnB2yE,EAAU/F,EAAK5sE,KACf4yE,EAAUhG,EAAK5sE,KACfoyE,EAAgBxF,EAAK5sE,KACrB6yE,EAAkBjG,EAAK5sE,KACvB8yE,EAAkBlG,EAAK5sE,KACvB+yE,EAASnG,EAAK5sE,KACdgzE,EAASpG,EAAK5sE,KACduyE,EAAW3F,EAAK5sE,KACpB,OAAO,IAAI+7C,GAA2BkwB,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,GAE9L1F,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAKo2F,SAEfn2F,EAAKqG,KAAKtG,KAAKq2F,SAEfp2F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAKs2F,aAEfr2F,EAAKqG,KAAKtG,KAAKu2F,SAEft2F,EAAKqG,KAAKtG,KAAKw2F,SAEfv2F,EAAKqG,KAAKtG,KAAKg2F,eAEf/1F,EAAKqG,KAAKtG,KAAKy2F,iBAEfx2F,EAAKqG,KAAKtG,KAAK02F,iBAEfz2F,EAAKqG,KAAKtG,KAAK22F,QAEf12F,EAAKqG,KAAKtG,KAAK42F,QAEf32F,EAAKqG,KAAKtG,KAAKm2F,UAERl2F,IAGP2/D,GAAU,MACZ34D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg8C,GAAQiwB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4/D,GAAsB,MACxB54D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi8C,GAAoBgwB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6/D,GAAc,MAChB74D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIk8C,GAAY+vB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8/D,GAAa,MACf94D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIm8C,GAAW8vB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+/D,GAAiB,MACnB/4D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIo8C,GAAe6vB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPggE,GAAiB,MACnBh5D,YAAY4oF,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWC,EAAcC,GAC9Fn3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK62F,QAAUA,EACf72F,KAAK82F,QAAUA,EACf92F,KAAK+2F,KAAOA,EACZ/2F,KAAKg3F,iBAAmBA,EACxBh3F,KAAKi3F,UAAYA,EACjBj3F,KAAKk3F,aAAeA,EACpBl3F,KAAKm3F,WAAaA,EAEpB5G,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNizE,EAAUrG,EAAK5sE,KACfkzE,EAAUtG,EAAK5sE,KACfmzE,EAAOvG,EAAK5sE,KACZozE,EAAmBxG,EAAK5sE,KACxBqzE,EAAYzG,EAAK5sE,KACjBszE,EAAe1G,EAAK5sE,KACpBuzE,EAAa3G,EAAK5sE,KACtB,OAAO,IAAIq8C,GAAe4vB,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWC,EAAcC,GAEhH1G,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK62F,SAEf52F,EAAKqG,KAAKtG,KAAK82F,SAEf72F,EAAKqG,KAAKtG,KAAK+2F,MAEf92F,EAAKqG,KAAKtG,KAAKg3F,kBAEf/2F,EAAKqG,KAAKtG,KAAKi3F,WAEfh3F,EAAKqG,KAAKtG,KAAKk3F,cAEfj3F,EAAKqG,KAAKtG,KAAKm3F,YAERl3F,IAGPigE,GAAW,MACbj5D,YAAY4oF,EAAWxrF,EAAMwwF,EAAUuC,EAASC,EAASC,GACvDt3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKo3F,QAAUA,EACfp3F,KAAKq3F,QAAUA,EACfr3F,KAAKs3F,QAAUA,EAEjB/G,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChBwzE,EAAU5G,EAAK5sE,KACfyzE,EAAU7G,EAAK5sE,KACf0zE,EAAU9G,EAAK5sE,KACnB,OAAO,IAAIs8C,GAAS2vB,EAAWxrF,EAAMwwF,EAAUuC,EAASC,EAASC,GAEnE7G,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKo3F,SAEfn3F,EAAKqG,KAAKtG,KAAKq3F,SAEfp3F,EAAKqG,KAAKtG,KAAKs3F,SAERr3F,IAGPkgE,GAAY,MACdl5D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIu8C,GAAU0vB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmgE,GAAgB,MAClBn5D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIw8C,GAAcyvB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPogE,GAA2B,MAC7Bp5D,YAAY4oF,EAAWxrF,EAAMkzF,EAAUC,EAAcC,GACnDz3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu3F,SAAWA,EAChBv3F,KAAKw3F,aAAeA,EACpBx3F,KAAKy3F,cAAgBA,EAEvBlH,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN2zE,EAAW/G,EAAK5sE,KAChB4zE,EAAehH,EAAK5sE,KACpB6zE,EAAgBjH,EAAK5sE,KACzB,OAAO,IAAIy8C,GAAyBwvB,EAAWxrF,EAAMkzF,EAAUC,EAAcC,GAE/EhH,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu3F,UAEft3F,EAAKqG,KAAKtG,KAAKw3F,cAEfv3F,EAAKqG,KAAKtG,KAAKy3F,eAERx3F,IAGPqgE,GAAmB,MACrBr5D,YAAY4oF,EAAWxrF,EAAMkzF,EAAUC,EAAcC,GACnDz3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu3F,SAAWA,EAChBv3F,KAAKw3F,aAAeA,EACpBx3F,KAAKy3F,cAAgBA,EAEvBlH,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN2zE,EAAW/G,EAAK5sE,KAChB4zE,EAAehH,EAAK5sE,KACpB6zE,EAAgBjH,EAAK5sE,KACzB,OAAO,IAAI08C,GAAiBuvB,EAAWxrF,EAAMkzF,EAAUC,EAAcC,GAEvEhH,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu3F,UAEft3F,EAAKqG,KAAKtG,KAAKw3F,cAEfv3F,EAAKqG,KAAKtG,KAAKy3F,eAERx3F,IAGPsgE,GAAuB,MACzBt5D,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI28C,GAAqBsvB,EAAWxrF,EAAM2rF,GAEnDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPugE,GAAmB,MACrBv5D,YAAY4oF,EAAWxrF,EAAMwtF,EAAUmE,GACrCh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6xF,SAAWA,EAChB7xF,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiuE,EAAWrB,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAI48C,GAAiBqvB,EAAWxrF,EAAMwtF,EAAUmE,GAEzDvF,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6xF,UAEf5xF,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGPwgE,GAA2B,MAC7Bx5D,YAAY4oF,EAAWxrF,EAAM2rF,EAAM0H,EAAiCC,EAAiCC,EAAiCC,EAA8BC,EAA8BC,GAChM/3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK03F,gCAAkCA,EACvC13F,KAAK23F,gCAAkCA,EACvC33F,KAAK43F,gCAAkCA,EACvC53F,KAAK63F,6BAA+BA,EACpC73F,KAAK83F,6BAA+BA,EACpC93F,KAAK+3F,6BAA+BA,EAEtCxH,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ8zE,EAAkClH,EAAK5sE,KACvC+zE,EAAkCnH,EAAK5sE,KACvCg0E,EAAkCpH,EAAK5sE,KACvCi0E,EAA+BrH,EAAK5sE,KACpCk0E,EAA+BtH,EAAK5sE,KACpCm0E,EAA+BvH,EAAK5sE,KACxC,OAAO,IAAI68C,GAAyBovB,EAAWxrF,EAAM2rF,EAAM0H,EAAiCC,EAAiCC,EAAiCC,EAA8BC,EAA8BC,GAE5NtH,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK03F,iCAEfz3F,EAAKqG,KAAKtG,KAAK23F,iCAEf13F,EAAKqG,KAAKtG,KAAK43F,iCAEf33F,EAAKqG,KAAKtG,KAAK63F,8BAEf53F,EAAKqG,KAAKtG,KAAK83F,8BAEf73F,EAAKqG,KAAKtG,KAAK+3F,8BAER93F,IAGPygE,GAA2B,MAC7Bz5D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMgI,EAA+BC,EAA+BC,GAC/Fl4F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKg4F,8BAAgCA,EACrCh4F,KAAKi4F,8BAAgCA,EACrCj4F,KAAKk4F,8BAAgCA,EAEvC3H,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZo0E,EAAgCxH,EAAK5sE,KACrCq0E,EAAgCzH,EAAK5sE,KACrCs0E,EAAgC1H,EAAK5sE,KACzC,OAAO,IAAI88C,GAAyBmvB,EAAWxrF,EAAM2rF,EAAMgI,EAA+BC,EAA+BC,GAE3HzH,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKg4F,+BAEf/3F,EAAKqG,KAAKtG,KAAKi4F,+BAEfh4F,EAAKqG,KAAKtG,KAAKk4F,+BAERj4F,IAGP0gE,GAA2B,MAC7B15D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMmI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,GACxJx4F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKm4F,wBAA0BA,EAC/Bn4F,KAAKo4F,wBAA0BA,EAC/Bp4F,KAAKq4F,wBAA0BA,EAC/Br4F,KAAKs4F,qBAAuBA,EAC5Bt4F,KAAKu4F,qBAAuBA,EAC5Bv4F,KAAKw4F,qBAAuBA,EAE9BjI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZu0E,EAA0B3H,EAAK5sE,KAC/Bw0E,EAA0B5H,EAAK5sE,KAC/By0E,EAA0B7H,EAAK5sE,KAC/B00E,EAAuB9H,EAAK5sE,KAC5B20E,EAAuB/H,EAAK5sE,KAC5B40E,EAAuBhI,EAAK5sE,KAChC,OAAO,IAAI+8C,GAAyBkvB,EAAWxrF,EAAM2rF,EAAMmI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,GAEpL/H,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKm4F,yBAEfl4F,EAAKqG,KAAKtG,KAAKo4F,yBAEfn4F,EAAKqG,KAAKtG,KAAKq4F,yBAEfp4F,EAAKqG,KAAKtG,KAAKs4F,sBAEfr4F,EAAKqG,KAAKtG,KAAKu4F,sBAEft4F,EAAKqG,KAAKtG,KAAKw4F,sBAERv4F,IAGP2gE,GAAkC,MACpC35D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMmI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,EAAsBC,GAC9Kz4F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKm4F,wBAA0BA,EAC/Bn4F,KAAKo4F,wBAA0BA,EAC/Bp4F,KAAKq4F,wBAA0BA,EAC/Br4F,KAAKs4F,qBAAuBA,EAC5Bt4F,KAAKu4F,qBAAuBA,EAC5Bv4F,KAAKw4F,qBAAuBA,EAC5Bx4F,KAAKy4F,iBAAmBA,EAE1BlI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZu0E,EAA0B3H,EAAK5sE,KAC/Bw0E,EAA0B5H,EAAK5sE,KAC/By0E,EAA0B7H,EAAK5sE,KAC/B00E,EAAuB9H,EAAK5sE,KAC5B20E,EAAuB/H,EAAK5sE,KAC5B40E,EAAuBhI,EAAK5sE,KAC5B60E,EAAmBjI,EAAK5sE,KAC5B,OAAO,IAAIg9C,GAAgCivB,EAAWxrF,EAAM2rF,EAAMmI,EAAyBC,EAAyBC,EAAyBC,EAAsBC,EAAsBC,EAAsBC,GAEjNhI,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKm4F,yBAEfl4F,EAAKqG,KAAKtG,KAAKo4F,yBAEfn4F,EAAKqG,KAAKtG,KAAKq4F,yBAEfp4F,EAAKqG,KAAKtG,KAAKs4F,sBAEfr4F,EAAKqG,KAAKtG,KAAKu4F,sBAEft4F,EAAKqG,KAAKtG,KAAKw4F,sBAEfv4F,EAAKqG,KAAKtG,KAAKy4F,kBAERx4F,IAGP4gE,GAAkB,MACpB55D,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI3vB,GAAgBgvB,EAAWxrF,GAExCosF,SAEE,MADW,KAIX3vB,GAAoB,MACtB75D,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI1vB,GAAkB+uB,EAAWxrF,GAE1CosF,SAEE,MADW,KAIX1vB,GAAiB,MACnB95D,YAAY4oF,EAAWxrF,EAAMq0F,EAAQC,EAAMC,EAAMC,GAC/C74F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK04F,OAASA,EACd14F,KAAK24F,KAAOA,EACZ34F,KAAK44F,KAAOA,EACZ54F,KAAK64F,KAAOA,EAEdtI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN80E,EAASlI,EAAK5sE,KACd+0E,EAAOnI,EAAK5sE,KACZg1E,EAAOpI,EAAK5sE,KACZi1E,EAAOrI,EAAK5sE,KAChB,OAAO,IAAIm9C,GAAe8uB,EAAWxrF,EAAMq0F,EAAQC,EAAMC,EAAMC,GAEjEpI,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK04F,QAEfz4F,EAAKqG,KAAKtG,KAAK24F,MAEf14F,EAAKqG,KAAKtG,KAAK44F,MAEf34F,EAAKqG,KAAKtG,KAAK64F,MAER54F,IAGP+gE,GAAoB,MACtB/5D,YAAY4oF,EAAWxrF,EAAMy0F,EAAaC,EAAeC,GACvDh5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK84F,YAAcA,EACnB94F,KAAK+4F,cAAgBA,EACrB/4F,KAAKg5F,UAAYA,EAEnBzI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNk1E,EAActI,EAAK5sE,KACnBm1E,EAAgBvI,EAAK5sE,KACrBo1E,EAAYxI,EAAK5sE,KACrB,OAAO,IAAIo9C,GAAkB6uB,EAAWxrF,EAAMy0F,EAAaC,EAAeC,GAE5EvI,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK84F,aAEf74F,EAAKqG,KAAKtG,KAAK+4F,eAEf94F,EAAKqG,KAAKtG,KAAKg5F,WAER/4F,IAGPghE,GAAY,MACdh6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,GAC9IpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIq9C,GAAU4uB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,GAE3JK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPihE,GAAgB,MAClBj6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,GAC9IpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIs9C,GAAc2uB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,GAE/JK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkhE,GAAc,MAChBl6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiBC,EAAsBC,EAAoBC,GACxLr5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKm5F,qBAAuBA,EAC5Bn5F,KAAKo5F,mBAAqBA,EAC1Bp5F,KAAKq5F,gBAAkBA,EAEzB9I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvBu1E,EAAuB3I,EAAK5sE,KAC5Bw1E,EAAqB5I,EAAK5sE,KAC1By1E,EAAkB7I,EAAK5sE,KAC3B,OAAO,IAAIu9C,GAAY0uB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiBC,EAAsBC,EAAoBC,GAEvM5I,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKm5F,sBAEfl5F,EAAKqG,KAAKtG,KAAKo5F,oBAEfn5F,EAAKqG,KAAKtG,KAAKq5F,iBAERp5F,IAGPmhE,GAAqB,MACvBn6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIw9C,GAAmByuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEzIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPohE,GAAyB,MAC3Bp6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIy9C,GAAuBwuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqhE,GAA6B,MAC/Br6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI09C,GAA2BuuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEjLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPshE,GAA0B,MAC5Bt6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI29C,GAAwBsuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPuhE,GAA8B,MAChCv6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI49C,GAA4BquB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwhE,GAAyB,MAC3Bx6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI69C,GAAuBouB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEhKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPyhE,GAAoB,MACtBz6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiBI,GAC9It5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKs5F,UAAYA,EAEnB/I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvB01E,EAAY9I,EAAK5sE,KACrB,OAAO,IAAI89C,GAAkBmuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiBI,GAEnK7I,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKs5F,WAERr5F,IAGP0hE,GAAoB,MACtB16D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6I,GAClGj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKowF,eAAiBA,EACtBpwF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAI+9C,GAAkBkuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6I,GAEvHxI,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAGP2hE,GAAY,MACd36D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg+C,GAAUiuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4hE,GAAgB,MAClB56D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi+C,GAAcguB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6hE,GAAsB,MACxB76D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOC,EAAeC,EAAOC,GACnG35F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKu5F,MAAQA,EACbv5F,KAAKw5F,MAAQA,EACbx5F,KAAKy5F,cAAgBA,EACrBz5F,KAAK05F,MAAQA,EACb15F,KAAK25F,qBAAuBA,EAE9BpJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB21E,EAAQ/I,EAAK5sE,KACb41E,EAAQhJ,EAAK5sE,KACb61E,EAAgBjJ,EAAK5sE,KACrB81E,EAAQlJ,EAAK5sE,KACb+1E,EAAuBnJ,EAAK5sE,KAChC,OAAO,IAAIk+C,GAAoB+tB,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOC,EAAeC,EAAOC,GAE1HlJ,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAKw5F,OAEfv5F,EAAKqG,KAAKtG,KAAKy5F,eAEfx5F,EAAKqG,KAAKtG,KAAK05F,OAEfz5F,EAAKqG,KAAKtG,KAAK25F,sBAER15F,IAGP8hE,GAAyB,MAC3B96D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIm+C,GAAuB8tB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+hE,GAA6B,MAC/B/6D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIo+C,GAA2B6tB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEjLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgiE,GAAyB,MAC3Bh7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIq+C,GAAuB4tB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPiiE,GAA6B,MAC/Bj7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIs+C,GAA2B2tB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEjLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkiE,GAAkB,MACpBl7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIu+C,GAAgB0tB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmiE,GAAsB,MACxBn7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIw+C,GAAoBytB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPoiE,GAAkB,MACpBp7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIy+C,GAAgBwtB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqiE,GAAsB,MACxBr7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0+C,GAAoButB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsiE,GAAuB,MACzBt7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2+C,GAAqBstB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPuiE,GAA2B,MAC7Bv7D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4+C,GAAyBqtB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwiE,GAAoB,MACtBx7D,YAAY4oF,EAAWxrF,EAAMu1F,GAC3B55F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EAErBrJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACvB,OAAO,IAAI6+C,GAAkBotB,EAAWxrF,EAAMu1F,GAEhDnJ,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK45F,aAER35F,IAGPyiE,GAAwB,MAC1Bz7D,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI9tB,GAAsBmtB,EAAWxrF,GAE9CosF,SAEE,MADW,KAIX9tB,GAA0B,MAC5B17D,YAAY4oF,EAAWxrF,EAAMw1F,EAAWC,GACtC95F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK65F,UAAYA,EACjB75F,KAAK85F,QAAUA,EAEjBvJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNi2E,EAAYrJ,EAAK5sE,KACjBk2E,EAAUtJ,EAAK5sE,KACnB,OAAO,IAAI++C,GAAwBktB,EAAWxrF,EAAMw1F,EAAWC,GAEjErJ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK65F,WAEf55F,EAAKqG,KAAKtG,KAAK85F,SAER75F,IAGP2iE,GAA0B,MAC5B37D,YAAY4oF,EAAWxrF,EAAMw1F,EAAWC,GACtC95F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK65F,UAAYA,EACjB75F,KAAK85F,QAAUA,EAEjBvJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNi2E,EAAYrJ,EAAK5sE,KACjBk2E,EAAUtJ,EAAK5sE,KACnB,OAAO,IAAIg/C,GAAwBitB,EAAWxrF,EAAMw1F,EAAWC,GAEjErJ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK65F,WAEf55F,EAAKqG,KAAKtG,KAAK85F,SAER75F,IAGP4iE,GAAqC,MACvC57D,YAAY4oF,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,GACtDl6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+5F,MAAQA,EACb/5F,KAAKg6F,MAAQA,EACbh6F,KAAKi6F,YAAcA,EACnBj6F,KAAKk6F,MAAQA,EAEf3J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm2E,EAAQvJ,EAAK5sE,KACbo2E,EAAQxJ,EAAK5sE,KACbq2E,EAAczJ,EAAK5sE,KACnBs2E,EAAQ1J,EAAK5sE,KACjB,OAAO,IAAIi/C,GAAmCgtB,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,GAE5FzJ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK+5F,OAEf95F,EAAKqG,KAAKtG,KAAKg6F,OAEf/5F,EAAKqG,KAAKtG,KAAKi6F,aAEfh6F,EAAKqG,KAAKtG,KAAKk6F,OAERj6F,IAGP6iE,GAAuC,MACzC77D,YAAY4oF,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,GACtDl6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+5F,MAAQA,EACb/5F,KAAKg6F,MAAQA,EACbh6F,KAAKi6F,YAAcA,EACnBj6F,KAAKk6F,MAAQA,EAEf3J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm2E,EAAQvJ,EAAK5sE,KACbo2E,EAAQxJ,EAAK5sE,KACbq2E,EAAczJ,EAAK5sE,KACnBs2E,EAAQ1J,EAAK5sE,KACjB,OAAO,IAAIk/C,GAAqC+sB,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,GAE9FzJ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK+5F,OAEf95F,EAAKqG,KAAKtG,KAAKg6F,OAEf/5F,EAAKqG,KAAKtG,KAAKi6F,aAEfh6F,EAAKqG,KAAKtG,KAAKk6F,OAERj6F,IAGP8iE,GAAiD,MACnD97D,YAAY4oF,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOC,GAC7Dn6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+5F,MAAQA,EACb/5F,KAAKg6F,MAAQA,EACbh6F,KAAKi6F,YAAcA,EACnBj6F,KAAKk6F,MAAQA,EACbl6F,KAAKm6F,OAASA,EAEhB5J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm2E,EAAQvJ,EAAK5sE,KACbo2E,EAAQxJ,EAAK5sE,KACbq2E,EAAczJ,EAAK5sE,KACnBs2E,EAAQ1J,EAAK5sE,KACbu2E,EAAS3J,EAAK5sE,KAClB,OAAO,IAAIm/C,GAA+C8sB,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOC,GAE/G1J,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK+5F,OAEf95F,EAAKqG,KAAKtG,KAAKg6F,OAEf/5F,EAAKqG,KAAKtG,KAAKi6F,aAEfh6F,EAAKqG,KAAKtG,KAAKk6F,OAEfj6F,EAAKqG,KAAKtG,KAAKm6F,QAERl6F,IAGP+iE,GAAuC,MACzC/7D,YAAY4oF,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOE,GAC7Dp6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+5F,MAAQA,EACb/5F,KAAKg6F,MAAQA,EACbh6F,KAAKi6F,YAAcA,EACnBj6F,KAAKk6F,MAAQA,EACbl6F,KAAKo6F,MAAQA,EAEf7J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm2E,EAAQvJ,EAAK5sE,KACbo2E,EAAQxJ,EAAK5sE,KACbq2E,EAAczJ,EAAK5sE,KACnBs2E,EAAQ1J,EAAK5sE,KACbw2E,EAAQ5J,EAAK5sE,KACjB,OAAO,IAAIo/C,GAAqC6sB,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOE,GAErG3J,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK+5F,OAEf95F,EAAKqG,KAAKtG,KAAKg6F,OAEf/5F,EAAKqG,KAAKtG,KAAKi6F,aAEfh6F,EAAKqG,KAAKtG,KAAKk6F,OAEfj6F,EAAKqG,KAAKtG,KAAKo6F,OAERn6F,IAGPgjE,GAAiD,MACnDh8D,YAAY4oF,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOE,EAAOD,EAAQE,GAC5Er6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+5F,MAAQA,EACb/5F,KAAKg6F,MAAQA,EACbh6F,KAAKi6F,YAAcA,EACnBj6F,KAAKk6F,MAAQA,EACbl6F,KAAKo6F,MAAQA,EACbp6F,KAAKm6F,OAASA,EACdn6F,KAAKq6F,OAASA,EAEhB9J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm2E,EAAQvJ,EAAK5sE,KACbo2E,EAAQxJ,EAAK5sE,KACbq2E,EAAczJ,EAAK5sE,KACnBs2E,EAAQ1J,EAAK5sE,KACbw2E,EAAQ5J,EAAK5sE,KACbu2E,EAAS3J,EAAK5sE,KACdy2E,EAAS7J,EAAK5sE,KAClB,OAAO,IAAIq/C,GAA+C4sB,EAAWxrF,EAAM01F,EAAOC,EAAOC,EAAaC,EAAOE,EAAOD,EAAQE,GAE9H5J,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK+5F,OAEf95F,EAAKqG,KAAKtG,KAAKg6F,OAEf/5F,EAAKqG,KAAKtG,KAAKi6F,aAEfh6F,EAAKqG,KAAKtG,KAAKk6F,OAEfj6F,EAAKqG,KAAKtG,KAAKo6F,OAEfn6F,EAAKqG,KAAKtG,KAAKm6F,QAEfl6F,EAAKqG,KAAKtG,KAAKq6F,QAERp6F,IAGPijE,GAA0B,MAC5Bj8D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaE,EAAOmG,GAC5Dt6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKm0F,MAAQA,EACbn0F,KAAKs6F,UAAYA,EAEnB/J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBuwE,EAAQ3D,EAAK5sE,KACb02E,EAAY9J,EAAK5sE,KACrB,OAAO,IAAIs/C,GAAwB2sB,EAAWxrF,EAAM2vF,EAAaC,EAAaE,EAAOmG,GAEvF7J,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKm0F,OAEfl0F,EAAKqG,KAAKtG,KAAKs6F,WAERr6F,IAGPkjE,GAAa,MACfl8D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIu/C,GAAW0sB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmjE,GAAiB,MACnBn8D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIw/C,GAAeysB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPojE,GAAa,MACfp8D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIy/C,GAAWwsB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqjE,GAAiB,MACnBr8D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0/C,GAAeusB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsjE,GAAY,MACdt8D,YAAY4oF,EAAWxrF,EAAMwwF,EAAUxC,GACrCryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAI2/C,GAAUssB,EAAWxrF,EAAMwwF,EAAUxC,GAElD5B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGPujE,GAA4B,MAC9Bv8D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUxC,EAAQoH,GACvEz5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EACdryF,KAAKy5F,cAAgBA,EAEvBlJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KACd61E,EAAgBjJ,EAAK5sE,KACzB,OAAO,IAAI4/C,GAA0BqsB,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUxC,EAAQoH,GAEpGhJ,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAKy5F,eAERx5F,IAGPwjE,GAAsB,MACxBx8D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUxC,GAC/DryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAI6/C,GAAoBosB,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUxC,GAEtF5B,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGPyjE,GAA0B,MAC5Bz8D,YAAY4oF,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,EAAepI,EAAQqI,GAC9E16F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu6F,WAAaA,EAClBv6F,KAAKw6F,eAAiBA,EACtBx6F,KAAKy6F,cAAgBA,EACrBz6F,KAAKqyF,OAASA,EACdryF,KAAK06F,MAAQA,EAEfnK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN22E,EAAa/J,EAAK5sE,KAClB42E,EAAiBhK,EAAK5sE,KACtB62E,EAAgBjK,EAAK5sE,KACrByuE,EAAS7B,EAAK5sE,KACd82E,EAAQlK,EAAK5sE,KACjB,OAAO,IAAI8/C,GAAwBmsB,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,EAAepI,EAAQqI,GAEzGjK,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKu6F,YAEft6F,EAAKqG,KAAKtG,KAAKw6F,gBAEfv6F,EAAKqG,KAAKtG,KAAKy6F,eAEfx6F,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAK06F,OAERz6F,IAGP0jE,GAAkB,MACpB18D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI+/C,GAAgBksB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEtIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP2jE,GAAsB,MACxB38D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIggD,GAAoBisB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE7JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP4jE,GAAoB,MACtB58D,YAAY4oF,EAAWxrF,EAAMs2F,EAAQC,EAASC,EAAa7K,EAAMC,EAAayF,EAAUoF,GACtF96F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK26F,OAASA,EACd36F,KAAK46F,QAAUA,EACf56F,KAAK66F,YAAcA,EACnB76F,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK01F,SAAWA,EAChB11F,KAAK86F,gBAAkBA,EAEzBvK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+2E,EAASnK,EAAK5sE,KACdg3E,EAAUpK,EAAK5sE,KACfi3E,EAAcrK,EAAK5sE,KACnBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB8xE,EAAWlF,EAAK5sE,KAChBk3E,EAAkBtK,EAAK5sE,KAC3B,OAAO,IAAIigD,GAAkBgsB,EAAWxrF,EAAMs2F,EAAQC,EAASC,EAAa7K,EAAMC,EAAayF,EAAUoF,GAE3GrK,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK26F,QAEf16F,EAAKqG,KAAKtG,KAAK46F,SAEf36F,EAAKqG,KAAKtG,KAAK66F,aAEf56F,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAK86F,iBAER76F,IAGP6jE,GAA6B,MAC/B78D,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAM+K,EAAkB9K,EAAa+K,GAC1Fh7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EACZhwF,KAAK+6F,iBAAmBA,EACxB/6F,KAAKiwF,YAAcA,EACnBjwF,KAAKg7F,KAAOA,EAEdzK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KACZm3E,EAAmBvK,EAAK5sE,KACxBqsE,EAAcO,EAAK5sE,KACnBo3E,EAAOxK,EAAK5sE,KAChB,OAAO,IAAIkgD,GAA2B+rB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAM+K,EAAkB9K,EAAa+K,GAExHvK,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK+6F,kBAEf96F,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKg7F,MAER/6F,IAGP8jE,GAAiB,MACnB98D,YAAY4oF,EAAWxrF,EAAM42F,GAC3Bj7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi7F,SAAWA,EAElB1K,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq3E,EAAWzK,EAAK5sE,KACpB,OAAO,IAAImgD,GAAe8rB,EAAWxrF,EAAM42F,GAE7CxK,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKi7F,UAERh7F,IAGP+jE,GAAU,MACZ/8D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIogD,GAAQ6rB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgkE,GAAc,MAChBh9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqgD,GAAY4rB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPikE,GAAe,MACjBj9D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMkL,EAAKC,EAAOC,GAC7Cp7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKk7F,IAAMA,EACXl7F,KAAKm7F,MAAQA,EACbn7F,KAAKo7F,KAAOA,EAEd7K,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZs3E,EAAM1K,EAAK5sE,KACXu3E,EAAQ3K,EAAK5sE,KACbw3E,EAAO5K,EAAK5sE,KAChB,OAAO,IAAIsgD,GAAa2rB,EAAWxrF,EAAM2rF,EAAMkL,EAAKC,EAAOC,GAE7D3K,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKk7F,KAEfj7F,EAAKqG,KAAKtG,KAAKm7F,OAEfl7F,EAAKqG,KAAKtG,KAAKo7F,MAERn7F,IAGPkkE,GAAmB,MACrBl9D,YAAY4oF,EAAWxrF,EAAMg3F,GAC3Br7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq7F,WAAaA,EAEpB9K,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy3E,EAAa7K,EAAK5sE,KACtB,OAAO,IAAIugD,GAAiB0rB,EAAWxrF,EAAMg3F,GAE/C5K,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKq7F,YAERp7F,IAGPmkE,GAAyB,MAC3Bn9D,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIwgD,GAAuByrB,EAAWxrF,EAAM2rF,GAErDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPokE,GAAY,MACdp9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIygD,GAAUwrB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqkE,GAAwB,MAC1Br9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0gD,GAAsBurB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEjJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPskE,GAAgB,MAClBt9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2gD,GAAcsrB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPukE,GAA6B,MAC/Bv9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4gD,GAA2BqrB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwkE,GAAiC,MACnCx9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6gD,GAA+BorB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPykE,GAAqB,MACvBz9D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaqL,EAAWC,GACzDv7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKs7F,UAAYA,EACjBt7F,KAAKu7F,cAAgBA,EAEvBhL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB03E,EAAY9K,EAAK5sE,KACjB23E,EAAgB/K,EAAK5sE,KACzB,OAAO,IAAI8gD,GAAmBmrB,EAAWxrF,EAAM2rF,EAAMC,EAAaqL,EAAWC,GAE/E9K,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKs7F,WAEfr7F,EAAKqG,KAAKtG,KAAKu7F,eAERt7F,IAGP0kE,GAA6B,MAC/B19D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqL,EAAWE,EAAcC,GAC/Fz7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKs7F,UAAYA,EACjBt7F,KAAKw7F,aAAeA,EACpBx7F,KAAKy7F,qBAAuBA,EAE9BlL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB03E,EAAY9K,EAAK5sE,KACjB43E,EAAehL,EAAK5sE,KACpB63E,EAAuBjL,EAAK5sE,KAChC,OAAO,IAAI+gD,GAA2BkrB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqL,EAAWE,EAAcC,GAE7HhL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKs7F,WAEfr7F,EAAKqG,KAAKtG,KAAKw7F,cAEfv7F,EAAKqG,KAAKtG,KAAKy7F,sBAERx7F,IAGP2kE,GAAoB,MACtB39D,YAAY4oF,EAAWxrF,EAAMwtF,EAAUmE,GACrCh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6xF,SAAWA,EAChB7xF,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiuE,EAAWrB,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAIghD,GAAkBirB,EAAWxrF,EAAMwtF,EAAUmE,GAE1DvF,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6xF,UAEf5xF,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGP4kE,GAA6B,MAC/B59D,YAAY4oF,EAAWxrF,EAAMwtF,EAAUmE,GACrCh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6xF,SAAWA,EAChB7xF,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiuE,EAAWrB,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAIihD,GAA2BgrB,EAAWxrF,EAAMwtF,EAAUmE,GAEnEvF,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6xF,UAEf5xF,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGP6kE,GAA2B,MAC7B79D,YAAY4oF,EAAWxrF,EAAMq3F,EAAYhK,EAAWiK,GAClD37F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK07F,WAAaA,EAClB17F,KAAK0xF,UAAYA,EACjB1xF,KAAK27F,YAAcA,EAErBpL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN83E,EAAalL,EAAK5sE,KAClB8tE,EAAYlB,EAAK5sE,KACjB+3E,EAAcnL,EAAK5sE,KACvB,OAAO,IAAIkhD,GAAyB+qB,EAAWxrF,EAAMq3F,EAAYhK,EAAWiK,GAE9ElL,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK07F,YAEfz7F,EAAKqG,KAAKtG,KAAK0xF,WAEfzxF,EAAKqG,KAAKtG,KAAK27F,aAER17F,IAGP8kE,GAAyB,MAC3B99D,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAa2H,EAAUC,GAC/D77F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK47F,SAAWA,EAChB57F,KAAK67F,MAAQA,EAEftL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBg4E,EAAWpL,EAAK5sE,KAChBi4E,EAAQrL,EAAK5sE,KACjB,OAAO,IAAImhD,GAAuB8qB,EAAWxrF,EAAM2vF,EAAaC,EAAa2H,EAAUC,GAEzFpL,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK47F,UAEf37F,EAAKqG,KAAKtG,KAAK67F,OAER57F,IAGP+kE,GAAgB,MAClB/9D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIohD,GAAc6qB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPglE,GAAoB,MACtBh+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqhD,GAAkB4qB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPilE,GAAe,MACjBj+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIshD,GAAa2qB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAExIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPklE,GAAmB,MACrBl+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIuhD,GAAiB0qB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEvKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmlE,GAAW,MACbn+D,YAAY4oF,EAAWxrF,EAAMwwF,GAC3B70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAIwhD,GAASyqB,EAAWxrF,EAAMwwF,GAEvCpE,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGPolE,GAAsB,MACxBp+D,YAAY4oF,EAAWxrF,EAAM42F,GAC3Bj7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi7F,SAAWA,EAElB1K,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq3E,EAAWzK,EAAK5sE,KACpB,OAAO,IAAIyhD,GAAoBwqB,EAAWxrF,EAAM42F,GAElDxK,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKi7F,UAERh7F,IAGPqlE,GAA6B,MAC/Br+D,YAAY4oF,EAAWxrF,EAAMy3F,EAAwBC,GACnD/7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK87F,uBAAyBA,EAC9B97F,KAAK+7F,sBAAwBA,EAE/BxL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNk4E,EAAyBtL,EAAK5sE,KAC9Bm4E,EAAwBvL,EAAK5sE,KACjC,OAAO,IAAI0hD,GAA2BuqB,EAAWxrF,EAAMy3F,EAAwBC,GAEjFtL,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK87F,wBAEf77F,EAAKqG,KAAKtG,KAAK+7F,uBAER97F,IAGPslE,GAAwB,MAC1Bt+D,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIjrB,GAAsBsqB,EAAWxrF,GAE9CosF,SAEE,MADW,KAIXjrB,GAAiC,MACnCv+D,YAAY4oF,EAAWxrF,EAAM23F,EAAwBC,EAAuBC,EAAiBC,EAAiBC,GAC5Gp8F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg8F,uBAAyBA,EAC9Bh8F,KAAKi8F,sBAAwBA,EAC7Bj8F,KAAKk8F,gBAAkBA,EACvBl8F,KAAKm8F,gBAAkBA,EACvBn8F,KAAKo8F,gBAAkBA,EAEzB7L,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNo4E,EAAyBxL,EAAK5sE,KAC9Bq4E,EAAwBzL,EAAK5sE,KAC7Bs4E,EAAkB1L,EAAK5sE,KACvBu4E,EAAkB3L,EAAK5sE,KACvBw4E,EAAkB5L,EAAK5sE,KAC3B,OAAO,IAAI4hD,GAA+BqqB,EAAWxrF,EAAM23F,EAAwBC,EAAuBC,EAAiBC,EAAiBC,GAE9I3L,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg8F,wBAEf/7F,EAAKqG,KAAKtG,KAAKi8F,uBAEfh8F,EAAKqG,KAAKtG,KAAKk8F,iBAEfj8F,EAAKqG,KAAKtG,KAAKm8F,iBAEfl8F,EAAKqG,KAAKtG,KAAKo8F,iBAERn8F,IAGPwlE,GAA6B,MAC/Bx+D,YAAY4oF,EAAWxrF,EAAM23F,EAAwBC,GACnDj8F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg8F,uBAAyBA,EAC9Bh8F,KAAKi8F,sBAAwBA,EAE/B1L,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNo4E,EAAyBxL,EAAK5sE,KAC9Bq4E,EAAwBzL,EAAK5sE,KACjC,OAAO,IAAI6hD,GAA2BoqB,EAAWxrF,EAAM23F,EAAwBC,GAEjFxL,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKg8F,wBAEf/7F,EAAKqG,KAAKtG,KAAKi8F,uBAERh8F,IAGPylE,GAA+B,MACjCz+D,YAAY4oF,EAAWxrF,EAAMg4F,EAA0BC,GACrDt8F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq8F,yBAA2BA,EAChCr8F,KAAKs8F,wBAA0BA,EAEjC/L,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy4E,EAA2B7L,EAAK5sE,KAChC04E,EAA0B9L,EAAK5sE,KACnC,OAAO,IAAI8hD,GAA6BmqB,EAAWxrF,EAAMg4F,EAA0BC,GAErF7L,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKq8F,0BAEfp8F,EAAKqG,KAAKtG,KAAKs8F,yBAERr8F,IAGP0lE,GAA8B,MAChC1+D,YAAY4oF,EAAWxrF,EAAMk4F,EAAyBC,GACpDx8F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu8F,wBAA0BA,EAC/Bv8F,KAAKw8F,uBAAyBA,EAEhCjM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN24E,EAA0B/L,EAAK5sE,KAC/B44E,EAAyBhM,EAAK5sE,KAClC,OAAO,IAAI+hD,GAA4BkqB,EAAWxrF,EAAMk4F,EAAyBC,GAEnF/L,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKu8F,yBAEft8F,EAAKqG,KAAKtG,KAAKw8F,wBAERv8F,IAGP2lE,GAAgB,MAClB3+D,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,GAC9G78F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKy8F,gBAAkBA,EACvBz8F,KAAK08F,iBAAmBA,EACxB18F,KAAK28F,cAAgBA,EACrB38F,KAAK48F,aAAeA,EACpB58F,KAAK68F,iBAAmBA,EAE1BtM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB64E,EAAkBjM,EAAK5sE,KACvB84E,EAAmBlM,EAAK5sE,KACxB+4E,EAAgBnM,EAAK5sE,KACrBg5E,EAAepM,EAAK5sE,KACpBi5E,EAAmBrM,EAAK5sE,KAC5B,OAAO,IAAIgiD,GAAciqB,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,GAE/HpM,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKy8F,iBAEfx8F,EAAKqG,KAAKtG,KAAK08F,kBAEfz8F,EAAKqG,KAAKtG,KAAK28F,eAEf18F,EAAKqG,KAAKtG,KAAK48F,cAEf38F,EAAKqG,KAAKtG,KAAK68F,kBAER58F,IAGP4lE,GAAmC,MACrC5+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIiiD,GAAiCgqB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAEvLK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6lE,GAAuC,MACzC7+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkiD,GAAqC+pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAE7NK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8lE,GAAkC,MACpC9+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImiD,GAAgC8pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAEtLK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+lE,GAAsC,MACxC/+D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIoiD,GAAoC6pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAE5NK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgmE,GAAiC,MACnCh/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqiD,GAA+B4pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAErLK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPimE,GAAqC,MACvCj/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsiD,GAAmC2pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAE3NK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkmE,GAA0B,MAC5Bl/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,GACrIh9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EAEtBzM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACxB,OAAO,IAAIuiD,GAAwB0pB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,GAEhKvM,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAER/8F,IAGPmmE,GAA8B,MAChCn/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,GACvKh9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EAEtBzM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACxB,OAAO,IAAIwiD,GAA4BypB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,GAEtMvM,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAER/8F,IAGPomE,GAAa,MACfp/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAC3Hp9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAChBj5F,KAAKk9F,MAAQA,EACbl9F,KAAKm9F,uBAAyBA,EAC9Bn9F,KAAKo9F,eAAiBA,EAExB7M,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KAChBs5E,EAAQ1M,EAAK5sE,KACbu5E,EAAyB3M,EAAK5sE,KAC9Bw5E,EAAiB5M,EAAK5sE,KAC1B,OAAO,IAAIyiD,GAAWwpB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAEzI3M,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk9F,OAEfj9F,EAAKqG,KAAKtG,KAAKm9F,wBAEfl9F,EAAKqG,KAAKtG,KAAKo9F,gBAERn9F,IAGPqmE,GAA0B,MAC5Br/D,YAAY4oF,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,GACjDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq9F,WAAaA,EAClBr9F,KAAKs9F,SAAWA,EAChBt9F,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy5E,EAAa7M,EAAK5sE,KAClB05E,EAAW9M,EAAK5sE,KAChBosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI0iD,GAAwBupB,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,GAE5ES,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKq9F,YAEfp9F,EAAKqG,KAAKtG,KAAKs9F,UAEfr9F,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPsmE,GAAa,MACft/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,GAClFnwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EAExBI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KAC1B,OAAO,IAAI2iD,GAAWspB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,GAEhGM,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAERlwF,IAGPumE,GAAgB,MAClBv/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4iD,GAAcqpB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwmE,GAAoB,MACtBx/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6iD,GAAkBopB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPymE,GAAyB,MAC3Bz/D,YAAY4oF,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,EAAMuN,GACvDv9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq9F,WAAaA,EAClBr9F,KAAKs9F,SAAWA,EAChBt9F,KAAKgwF,KAAOA,EACZhwF,KAAKu9F,iBAAmBA,EAE1BhN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy5E,EAAa7M,EAAK5sE,KAClB05E,EAAW9M,EAAK5sE,KAChBosE,EAAOQ,EAAK5sE,KACZ25E,EAAmB/M,EAAK5sE,KAC5B,OAAO,IAAI8iD,GAAuBmpB,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,EAAMuN,GAEjF9M,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKq9F,YAEfp9F,EAAKqG,KAAKtG,KAAKs9F,UAEfr9F,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKu9F,kBAERt9F,IAGP0mE,GAAmC,MACrC1/D,YAAY4oF,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,EAAMuN,EAAkBC,GACzEx9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq9F,WAAaA,EAClBr9F,KAAKs9F,SAAWA,EAChBt9F,KAAKgwF,KAAOA,EACZhwF,KAAKu9F,iBAAmBA,EACxBv9F,KAAKw9F,iBAAmBA,EAE1BjN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy5E,EAAa7M,EAAK5sE,KAClB05E,EAAW9M,EAAK5sE,KAChBosE,EAAOQ,EAAK5sE,KACZ25E,EAAmB/M,EAAK5sE,KACxB45E,EAAmBhN,EAAK5sE,KAC5B,OAAO,IAAI+iD,GAAiCkpB,EAAWxrF,EAAMg5F,EAAYC,EAAUtN,EAAMuN,EAAkBC,GAE7G/M,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKq9F,YAEfp9F,EAAKqG,KAAKtG,KAAKs9F,UAEfr9F,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKu9F,kBAEft9F,EAAKqG,KAAKtG,KAAKw9F,kBAERv9F,IAGP2mE,GAAgB,MAClB3/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgjD,GAAcipB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4mE,GAAoB,MACtB5/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIijD,GAAkBgpB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6mE,GAAkB,MACpB7/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkjD,GAAgB+oB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8mE,GAAsB,MACxB9/D,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImjD,GAAoB8oB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+mE,GAAyB,MAC3B//D,YAAY4oF,EAAWxrF,EAAMo5F,EAAWC,GACtC19F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKy9F,UAAYA,EACjBz9F,KAAK09F,UAAYA,EAEnBnN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN65E,EAAYjN,EAAK5sE,KACjB85E,EAAYlN,EAAK5sE,KACrB,OAAO,IAAIojD,GAAuB6oB,EAAWxrF,EAAMo5F,EAAWC,GAEhEjN,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKy9F,WAEfx9F,EAAKqG,KAAKtG,KAAK09F,WAERz9F,IAGPgnE,GAA+B,MACjChgE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa0N,EAAeC,GAC7D59F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK29F,cAAgBA,EACrB39F,KAAK49F,cAAgBA,EAEvBrN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB+5E,EAAgBnN,EAAK5sE,KACrBg6E,EAAgBpN,EAAK5sE,KACzB,OAAO,IAAIqjD,GAA6B4oB,EAAWxrF,EAAM2rF,EAAMC,EAAa0N,EAAeC,GAE7FnN,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK29F,eAEf19F,EAAKqG,KAAKtG,KAAK49F,eAER39F,IAGPinE,GAAc,MAChBjgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgByN,EAAYC,GAC9H99F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKowF,eAAiBA,EACtBpwF,KAAK69F,WAAaA,EAClB79F,KAAK89F,eAAiBA,EAExBvN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtBi6E,EAAarN,EAAK5sE,KAClBk6E,EAAiBtN,EAAK5sE,KAC1B,OAAO,IAAIsjD,GAAY2oB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgByN,EAAYC,GAE7IrN,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK69F,YAEf59F,EAAKqG,KAAKtG,KAAK89F,gBAER79F,IAGPknE,GAAkB,MACpBlgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQ0N,EAAaC,GACvIh+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKowF,eAAiBA,EACtBpwF,KAAKqwF,OAASA,EACdrwF,KAAK+9F,YAAcA,EACnB/9F,KAAKg+F,WAAaA,EAEpBzN,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtBysE,EAASG,EAAK5sE,KACdm6E,EAAcvN,EAAK5sE,KACnBo6E,EAAaxN,EAAK5sE,KACtB,OAAO,IAAIujD,GAAgB0oB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQ0N,EAAaC,GAE1JvN,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAK+9F,aAEf99F,EAAKqG,KAAKtG,KAAKg+F,YAER/9F,IAGPmnE,GAAe,MACjBngE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAChJvzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgzF,aAAeA,EACpBhzF,KAAKizF,UAAYA,EACjBjzF,KAAKkzF,eAAiBA,EACtBlzF,KAAKmzF,eAAiBA,EACtBnzF,KAAKozF,SAAWA,EAChBpzF,KAAKqzF,UAAYA,EACjBrzF,KAAKszF,mBAAqBA,EAC1BtzF,KAAKuzF,WAAaA,EAEpBhD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBovE,EAAexC,EAAK5sE,KACpBqvE,EAAYzC,EAAK5sE,KACjBsvE,EAAiB1C,EAAK5sE,KACtBuvE,EAAiB3C,EAAK5sE,KACtBwvE,EAAW5C,EAAK5sE,KAChByvE,EAAY7C,EAAK5sE,KACjB0vE,EAAqB9C,EAAK5sE,KAC1B2vE,EAAa/C,EAAK5sE,KACtB,OAAO,IAAIwjD,GAAayoB,EAAWxrF,EAAM2rF,EAAMC,EAAa+C,EAAcC,EAAWC,EAAgBC,EAAgBC,EAAUC,EAAWC,EAAoBC,GAEhK9C,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgzF,cAEf/yF,EAAKqG,KAAKtG,KAAKizF,WAEfhzF,EAAKqG,KAAKtG,KAAKkzF,gBAEfjzF,EAAKqG,KAAKtG,KAAKmzF,gBAEflzF,EAAKqG,KAAKtG,KAAKozF,UAEfnzF,EAAKqG,KAAKtG,KAAKqzF,WAEfpzF,EAAKqG,KAAKtG,KAAKszF,oBAEfrzF,EAAKqG,KAAKtG,KAAKuzF,YAERtzF,IAGPonE,GAAc,MAChBpgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIyjD,GAAYwoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEvIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqnE,GAAkB,MACpBrgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0jD,GAAgBuoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEtKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsnE,GAAkB,MACpBtgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2jD,GAAgBsoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAEtKK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPunE,GAAsB,MACxBvgE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4jD,GAAoBqoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAE5MK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwnE,GAAoB,MACtBxgE,YAAY4oF,EAAWxrF,EAAMwwF,GAC3B70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAI6jD,GAAkBooB,EAAWxrF,EAAMwwF,GAEhDpE,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGPynE,GAAc,MAChBzgE,YAAY4oF,EAAWxrF,EAAM45F,GAC3Bj+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi+F,mBAAqBA,EAE5B1N,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq6E,EAAqBzN,EAAK5sE,KAC9B,OAAO,IAAI8jD,GAAYmoB,EAAWxrF,EAAM45F,GAE1CxN,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKi+F,oBAERh+F,IAGP0nE,GAA0B,MAC5B1gE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaiO,EAAsBC,EAAqBC,EAAcC,EAAcC,GACrHt+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKk+F,qBAAuBA,EAC5Bl+F,KAAKm+F,oBAAsBA,EAC3Bn+F,KAAKo+F,aAAeA,EACpBp+F,KAAKq+F,aAAeA,EACpBr+F,KAAKs+F,WAAaA,EAEpB/N,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBs6E,EAAuB1N,EAAK5sE,KAC5Bu6E,EAAsB3N,EAAK5sE,KAC3Bw6E,EAAe5N,EAAK5sE,KACpBy6E,EAAe7N,EAAK5sE,KACpB06E,EAAa9N,EAAK5sE,KACtB,OAAO,IAAI+jD,GAAwBkoB,EAAWxrF,EAAM2rF,EAAMC,EAAaiO,EAAsBC,EAAqBC,EAAcC,EAAcC,GAEhJ7N,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKk+F,sBAEfj+F,EAAKqG,KAAKtG,KAAKm+F,qBAEfl+F,EAAKqG,KAAKtG,KAAKo+F,cAEfn+F,EAAKqG,KAAKtG,KAAKq+F,cAEfp+F,EAAKqG,KAAKtG,KAAKs+F,YAERr+F,IAGP2nE,GAAiB,MACnB3gE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgkD,GAAeioB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4nE,GAAqB,MACvB5gE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIikD,GAAmBgoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6nE,GAAW,MACb7gE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI1oB,GAAS+nB,EAAWxrF,GAEjCosF,SAEE,MADW,KAIX1oB,GAAuB,MACzB9gE,YAAY4oF,EAAWxrF,EAAMk6F,EAAc7L,EAAeC,GACxD3yF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu+F,aAAeA,EACpBv+F,KAAK0yF,cAAgBA,EACrB1yF,KAAK2yF,gBAAkBA,EAEzBpC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN26E,EAAe/N,EAAK5sE,KACpB8uE,EAAgBlC,EAAK5sE,KACrB+uE,EAAkBnC,EAAK5sE,KAC3B,OAAO,IAAImkD,GAAqB8nB,EAAWxrF,EAAMk6F,EAAc7L,EAAeC,GAEhFlC,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu+F,cAEft+F,EAAKqG,KAAKtG,KAAK0yF,eAEfzyF,EAAKqG,KAAKtG,KAAK2yF,iBAER1yF,IAGP+nE,GAAyB,MAC3B/gE,YAAY4oF,EAAWxrF,EAAMk6F,EAAcC,EAAYC,GACrDz+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu+F,aAAeA,EACpBv+F,KAAKw+F,WAAaA,EAClBx+F,KAAKy+F,cAAgBA,EAEvBlO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN26E,EAAe/N,EAAK5sE,KACpB46E,EAAahO,EAAK5sE,KAClB66E,EAAgBjO,EAAK5sE,KACzB,OAAO,IAAIokD,GAAuB6nB,EAAWxrF,EAAMk6F,EAAcC,EAAYC,GAE/EhO,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu+F,cAEft+F,EAAKqG,KAAKtG,KAAKw+F,YAEfv+F,EAAKqG,KAAKtG,KAAKy+F,eAERx+F,IAGPgoE,GAAoB,MACtBhhE,YAAY4oF,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,GACvDz6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu6F,WAAaA,EAClBv6F,KAAKw6F,eAAiBA,EACtBx6F,KAAKy6F,cAAgBA,EAEvBlK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN22E,EAAa/J,EAAK5sE,KAClB42E,EAAiBhK,EAAK5sE,KACtB62E,EAAgBjK,EAAK5sE,KACzB,OAAO,IAAIqkD,GAAkB4nB,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,GAE5EhK,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu6F,YAEft6F,EAAKqG,KAAKtG,KAAKw6F,gBAEfv6F,EAAKqG,KAAKtG,KAAKy6F,eAERx6F,IAGPioE,GAAgB,MAClBjhE,YAAY4oF,EAAWxrF,EAAM2rF,EAAM0O,EAAWC,EAAYC,EAAaC,GACrE7+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK0+F,UAAYA,EACjB1+F,KAAK2+F,WAAaA,EAClB3+F,KAAK4+F,YAAcA,EACnB5+F,KAAK6+F,kBAAoBA,EAE3BtO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ86E,EAAYlO,EAAK5sE,KACjB+6E,EAAanO,EAAK5sE,KAClBg7E,EAAcpO,EAAK5sE,KACnBi7E,EAAoBrO,EAAK5sE,KAC7B,OAAO,IAAIskD,GAAc2nB,EAAWxrF,EAAM2rF,EAAM0O,EAAWC,EAAYC,EAAaC,GAEtFpO,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK0+F,WAEfz+F,EAAKqG,KAAKtG,KAAK2+F,YAEf1+F,EAAKqG,KAAKtG,KAAK4+F,aAEf3+F,EAAKqG,KAAKtG,KAAK6+F,mBAER5+F,IAGPkoE,GAAoB,MACtBlhE,YAAY4oF,EAAWxrF,EAAM2rF,EAAM8O,GACjC9+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK8+F,YAAcA,EAErBvO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZk7E,EAActO,EAAK5sE,KACvB,OAAO,IAAIukD,GAAkB0nB,EAAWxrF,EAAM2rF,EAAM8O,GAEtDrO,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK8+F,aAER7+F,IAGPmoE,GAA8B,MAChCnhE,YAAY4oF,EAAWxrF,EAAM2rF,EAAM0O,EAAWK,GAC5C/+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK0+F,UAAYA,EACjB1+F,KAAK++F,iBAAmBA,EAE1BxO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ86E,EAAYlO,EAAK5sE,KACjBm7E,EAAmBvO,EAAK5sE,KAC5B,OAAO,IAAIwkD,GAA4BynB,EAAWxrF,EAAM2rF,EAAM0O,EAAWK,GAE3EtO,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK0+F,WAEfz+F,EAAKqG,KAAKtG,KAAK++F,kBAER9+F,IAGPooE,GAA2B,MAC7BphE,YAAY4oF,EAAWxrF,EAAM26F,EAAsBC,GACjDj/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg/F,qBAAuBA,EAC5Bh/F,KAAKi/F,uBAAyBA,EAEhC1O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNo7E,EAAuBxO,EAAK5sE,KAC5Bq7E,EAAyBzO,EAAK5sE,KAClC,OAAO,IAAIykD,GAAyBwnB,EAAWxrF,EAAM26F,EAAsBC,GAE7ExO,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKg/F,sBAEf/+F,EAAKqG,KAAKtG,KAAKi/F,wBAERh/F,IAGPqoE,GAAwB,MAC1BrhE,YAAY4oF,EAAWxrF,EAAMwwF,EAAUxC,GACrCryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAI0kD,GAAsBunB,EAAWxrF,EAAMwwF,EAAUxC,GAE9D5B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGPsoE,GAAY,MACdthE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2kD,GAAUsnB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPuoE,GAAgB,MAClBvhE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4kD,GAAcqnB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwoE,GAAoB,MACtBxhE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI6kD,GAAkBonB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAExIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPyoE,GAAwB,MAC1BzhE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI8kD,GAAsBmnB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE/JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP0oE,GAAuB,MACzB1hE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAC9E77F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKk/F,cAAgBA,EACrBl/F,KAAKu3F,SAAWA,EAChBv3F,KAAK67F,MAAQA,EAEftL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBs7E,EAAgB1O,EAAK5sE,KACrB2zE,EAAW/G,EAAK5sE,KAChBi4E,EAAQrL,EAAK5sE,KACjB,OAAO,IAAI+kD,GAAqBknB,EAAWxrF,EAAM2vF,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAEtGpL,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKk/F,eAEfj/F,EAAKqG,KAAKtG,KAAKu3F,UAEft3F,EAAKqG,KAAKtG,KAAK67F,OAER57F,IAGP2oE,GAAiB,MACnB3hE,YAAY4oF,EAAWxrF,EAAM86F,EAAU7B,EAAU8B,GAC/Cp/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKm/F,SAAWA,EAChBn/F,KAAKs9F,SAAWA,EAChBt9F,KAAKo/F,gBAAkBA,EAEzB7O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNu7E,EAAW3O,EAAK5sE,KAChB05E,EAAW9M,EAAK5sE,KAChBw7E,EAAkB5O,EAAK5sE,KAC3B,OAAO,IAAIglD,GAAeinB,EAAWxrF,EAAM86F,EAAU7B,EAAU8B,GAEjE3O,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKm/F,UAEfl/F,EAAKqG,KAAKtG,KAAKs9F,UAEfr9F,EAAKqG,KAAKtG,KAAKo/F,iBAERn/F,IAGP4oE,GAAwB,MAC1B5hE,YAAY4oF,EAAWxrF,EAAMg7F,EAAMC,GACjCt/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq/F,KAAOA,EACZr/F,KAAKs/F,SAAWA,EAElB/O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy7E,EAAO7O,EAAK5sE,KACZ07E,EAAW9O,EAAK5sE,KACpB,OAAO,IAAIilD,GAAsBgnB,EAAWxrF,EAAMg7F,EAAMC,GAE1D7O,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAKs/F,UAERr/F,IAGP6oE,GAA0B,MAC5B7hE,YAAY4oF,EAAWxrF,EAAMk7F,EAAgBC,EAAcC,EAAcC,EAAyBC,EAAkCC,EAA2BC,GAC7J7/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu/F,eAAiBA,EACtBv/F,KAAKw/F,aAAeA,EACpBx/F,KAAKy/F,aAAeA,EACpBz/F,KAAK0/F,wBAA0BA,EAC/B1/F,KAAK2/F,iCAAmCA,EACxC3/F,KAAK4/F,0BAA4BA,EACjC5/F,KAAK6/F,0BAA4BA,EAEnCtP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN27E,EAAiB/O,EAAK5sE,KACtB47E,EAAehP,EAAK5sE,KACpB67E,EAAejP,EAAK5sE,KACpB87E,EAA0BlP,EAAK5sE,KAC/B+7E,EAAmCnP,EAAK5sE,KACxCg8E,EAA4BpP,EAAK5sE,KACjCi8E,EAA4BrP,EAAK5sE,KACrC,OAAO,IAAIklD,GAAwB+mB,EAAWxrF,EAAMk7F,EAAgBC,EAAcC,EAAcC,EAAyBC,EAAkCC,EAA2BC,GAExLpP,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKu/F,gBAEft/F,EAAKqG,KAAKtG,KAAKw/F,cAEfv/F,EAAKqG,KAAKtG,KAAKy/F,cAEfx/F,EAAKqG,KAAKtG,KAAK0/F,yBAEfz/F,EAAKqG,KAAKtG,KAAK2/F,kCAEf1/F,EAAKqG,KAAKtG,KAAK4/F,2BAEf3/F,EAAKqG,KAAKtG,KAAK6/F,2BAER5/F,IAGP8oE,GAAe,MACjB9hE,YAAY4oF,EAAWxrF,EAAMy7F,GAC3B9/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8/F,gBAAkBA,EAEzBvP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNk8E,EAAkBtP,EAAK5sE,KAC3B,OAAO,IAAImlD,GAAa8mB,EAAWxrF,EAAMy7F,GAE3CrP,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK8/F,iBAER7/F,IAGP+oE,GAAuB,MACzB/hE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIolD,GAAqB6mB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgpE,GAA2B,MAC7BhiE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqlD,GAAyB4mB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPipE,GAAwB,MAC1BjiE,YAAY4oF,EAAWxrF,EAAM07F,EAAeC,EAAeC,EAAgBC,EAAoBC,GAC7FngG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+/F,cAAgBA,EACrB//F,KAAKggG,cAAgBA,EACrBhgG,KAAKigG,eAAiBA,EACtBjgG,KAAKkgG,mBAAqBA,EAC1BlgG,KAAKmgG,gBAAkBA,EAEzB5P,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm8E,EAAgBvP,EAAK5sE,KACrBo8E,EAAgBxP,EAAK5sE,KACrBq8E,EAAiBzP,EAAK5sE,KACtBs8E,EAAqB1P,EAAK5sE,KAC1Bu8E,EAAkB3P,EAAK5sE,KAC3B,OAAO,IAAIslD,GAAsB2mB,EAAWxrF,EAAM07F,EAAeC,EAAeC,EAAgBC,EAAoBC,GAEtH1P,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK+/F,eAEf9/F,EAAKqG,KAAKtG,KAAKggG,eAEf//F,EAAKqG,KAAKtG,KAAKigG,gBAEfhgG,EAAKqG,KAAKtG,KAAKkgG,oBAEfjgG,EAAKqG,KAAKtG,KAAKmgG,iBAERlgG,IAGPkpE,GAAgC,MAClCliE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIulD,GAA8B0mB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmpE,GAAoC,MACtCniE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwlD,GAAkCymB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPopE,GAAyB,MAC3BpiE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAU7I,GAC5FpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAChBj5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIylD,GAAuBwmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAU7I,GAEtHK,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqpE,GAAgC,MAClCriE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI0lD,GAA8BumB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEpJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPspE,GAAoC,MACtCtiE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI2lD,GAAkCsmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE3KV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPupE,GAAyB,MAC3BviE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI4lD,GAAuBqmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE7IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPwpE,GAA6B,MAC/BxiE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI6lD,GAA2BomB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEpKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPypE,GAA6B,MAC/BziE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI8lD,GAA2BmmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEjJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP0pE,GAAiC,MACnC1iE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI+lD,GAA+BkmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAExKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP2pE,GAAsB,MACxB3iE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBsP,EAAehQ,EAAgBiQ,GAClJrgG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKogG,cAAgBA,EACrBpgG,KAAKowF,eAAiBA,EACtBpwF,KAAKqgG,WAAaA,EAEpB9P,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBw8E,EAAgB5P,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KACtBy8E,EAAa7P,EAAK5sE,KACtB,OAAO,IAAIgmD,GAAoBimB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBsP,EAAehQ,EAAgBiQ,GAEzK5P,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKogG,eAEfngG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqgG,YAERpgG,IAGP4pE,GAAwB,MAC1B5iE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAU7I,GAC5FpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAChBj5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIimD,GAAsBgmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAU7I,GAErHK,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6pE,GAAyB,MAC3B7iE,YAAY4oF,EAAWxrF,EAAM8rF,EAAgBH,EAAMC,EAAayF,EAAUtE,EAASkP,EAAaC,EAAOC,EAAUC,EAAeC,EAAS9D,EAAc+D,EAAkBC,EAAkBC,EAAWC,EAAYC,EAAiB1Q,GACjOrwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK01F,SAAWA,EAChB11F,KAAKoxF,QAAUA,EACfpxF,KAAKsgG,YAAcA,EACnBtgG,KAAKugG,MAAQA,EACbvgG,KAAKwgG,SAAWA,EAChBxgG,KAAKygG,cAAgBA,EACrBzgG,KAAK0gG,QAAUA,EACf1gG,KAAK48F,aAAeA,EACpB58F,KAAK2gG,iBAAmBA,EACxB3gG,KAAK4gG,iBAAmBA,EACxB5gG,KAAK6gG,UAAYA,EACjB7gG,KAAK8gG,WAAaA,EAClB9gG,KAAK+gG,gBAAkBA,EACvB/gG,KAAKqwF,OAASA,EAEhBE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB8xE,EAAWlF,EAAK5sE,KAChBwtE,EAAUZ,EAAK5sE,KACf08E,EAAc9P,EAAK5sE,KACnB28E,EAAQ/P,EAAK5sE,KACb48E,EAAWhQ,EAAK5sE,KAChB68E,EAAgBjQ,EAAK5sE,KACrB88E,EAAUlQ,EAAK5sE,KACfg5E,EAAepM,EAAK5sE,KACpB+8E,EAAmBnQ,EAAK5sE,KACxBg9E,EAAmBpQ,EAAK5sE,KACxBi9E,EAAYrQ,EAAK5sE,KACjBk9E,EAAatQ,EAAK5sE,KAClBm9E,EAAkBvQ,EAAK5sE,KACvBysE,EAASG,EAAK5sE,KAClB,OAAO,IAAIkmD,GAAuB+lB,EAAWxrF,EAAM8rF,EAAgBH,EAAMC,EAAayF,EAAUtE,EAASkP,EAAaC,EAAOC,EAAUC,EAAeC,EAAS9D,EAAc+D,EAAkBC,EAAkBC,EAAWC,EAAYC,EAAiB1Q,GAE3PI,SACE,IAAIxwF,EAAO,GAmCX,OAlCAA,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKsgG,aAEfrgG,EAAKqG,KAAKtG,KAAKugG,OAEftgG,EAAKqG,KAAKtG,KAAKwgG,UAEfvgG,EAAKqG,KAAKtG,KAAKygG,eAEfxgG,EAAKqG,KAAKtG,KAAK0gG,SAEfzgG,EAAKqG,KAAKtG,KAAK48F,cAEf38F,EAAKqG,KAAKtG,KAAK2gG,kBAEf1gG,EAAKqG,KAAKtG,KAAK4gG,kBAEf3gG,EAAKqG,KAAKtG,KAAK6gG,WAEf5gG,EAAKqG,KAAKtG,KAAK8gG,YAEf7gG,EAAKqG,KAAKtG,KAAK+gG,iBAEf9gG,EAAKqG,KAAKtG,KAAKqwF,QAERpwF,IAGP8pE,GAAqC,MACvC9iE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+Q,EAAkBC,EAAkBC,GAClFlhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKghG,iBAAmBA,EACxBhhG,KAAKihG,iBAAmBA,EACxBjhG,KAAKkhG,iBAAmBA,EAE1B3Q,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBo9E,EAAmBxQ,EAAK5sE,KACxBq9E,EAAmBzQ,EAAK5sE,KACxBs9E,EAAmB1Q,EAAK5sE,KAC5B,OAAO,IAAImmD,GAAmC8lB,EAAWxrF,EAAM2rF,EAAMC,EAAa+Q,EAAkBC,EAAkBC,GAExHzQ,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKghG,kBAEf/gG,EAAKqG,KAAKtG,KAAKihG,kBAEfhhG,EAAKqG,KAAKtG,KAAKkhG,kBAERjhG,IAGP+pE,GAAuB,MACzB/iE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAMC,EAAakR,GACxEnhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKmhG,mBAAqBA,EAE5B5Q,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBu9E,EAAqB3Q,EAAK5sE,KAC9B,OAAO,IAAIomD,GAAqB6lB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAMC,EAAakR,GAEhG1Q,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKmhG,oBAERlhG,IAGPgqE,GAAU,MACZhjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBkR,EAAeC,GACpLvhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKohG,cAAgBA,EACrBphG,KAAKqhG,aAAeA,EACpBrhG,KAAKowF,eAAiBA,EACtBpwF,KAAKshG,cAAgBA,EACrBthG,KAAKuhG,yBAA2BA,EAElChR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXw9E,EAAgB5Q,EAAK5sE,KACrBy9E,EAAe7Q,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KACtB09E,EAAgB9Q,EAAK5sE,KACrB29E,EAA2B/Q,EAAK5sE,KACpC,OAAO,IAAIqmD,GAAQ4lB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBkR,EAAeC,GAE/L9Q,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKohG,eAEfnhG,EAAKqG,KAAKtG,KAAKqhG,cAEfphG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAKuhG,0BAERthG,IAGPiqE,GAA0B,MAC5BjjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauR,EAAaC,EAAiBC,EAAgBC,EAAoBC,EAAkBC,EAAeC,EAAcC,EAAiBC,EAAiBC,EAAaC,EAAkBC,EAAsBC,GAC9QpiG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKwhG,YAAcA,EACnBxhG,KAAKyhG,gBAAkBA,EACvBzhG,KAAK0hG,eAAiBA,EACtB1hG,KAAK2hG,mBAAqBA,EAC1B3hG,KAAK4hG,iBAAmBA,EACxB5hG,KAAK6hG,cAAgBA,EACrB7hG,KAAK8hG,aAAeA,EACpB9hG,KAAK+hG,gBAAkBA,EACvB/hG,KAAKgiG,gBAAkBA,EACvBhiG,KAAKiiG,YAAcA,EACnBjiG,KAAKkiG,iBAAmBA,EACxBliG,KAAKmiG,qBAAuBA,EAC5BniG,KAAKoiG,qBAAuBA,EAE9B7R,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB49E,EAAchR,EAAK5sE,KACnB69E,EAAkBjR,EAAK5sE,KACvB89E,EAAiBlR,EAAK5sE,KACtB+9E,EAAqBnR,EAAK5sE,KAC1Bg+E,EAAmBpR,EAAK5sE,KACxBi+E,EAAgBrR,EAAK5sE,KACrBk+E,EAAetR,EAAK5sE,KACpBm+E,EAAkBvR,EAAK5sE,KACvBo+E,EAAkBxR,EAAK5sE,KACvBq+E,EAAczR,EAAK5sE,KACnBs+E,EAAmB1R,EAAK5sE,KACxBu+E,EAAuB3R,EAAK5sE,KAC5Bw+E,EAAuB5R,EAAK5sE,KAChC,OAAO,IAAIsmD,GAAwB2lB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauR,EAAaC,EAAiBC,EAAgBC,EAAoBC,EAAkBC,EAAeC,EAAcC,EAAiBC,EAAiBC,EAAaC,EAAkBC,EAAsBC,GAEzS3R,SACE,IAAIxwF,EAAO,GAmCX,OAlCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKwhG,aAEfvhG,EAAKqG,KAAKtG,KAAKyhG,iBAEfxhG,EAAKqG,KAAKtG,KAAK0hG,gBAEfzhG,EAAKqG,KAAKtG,KAAK2hG,oBAEf1hG,EAAKqG,KAAKtG,KAAK4hG,kBAEf3hG,EAAKqG,KAAKtG,KAAK6hG,eAEf5hG,EAAKqG,KAAKtG,KAAK8hG,cAEf7hG,EAAKqG,KAAKtG,KAAK+hG,iBAEf9hG,EAAKqG,KAAKtG,KAAKgiG,iBAEf/hG,EAAKqG,KAAKtG,KAAKiiG,aAEfhiG,EAAKqG,KAAKtG,KAAKkiG,kBAEfjiG,EAAKqG,KAAKtG,KAAKmiG,sBAEfliG,EAAKqG,KAAKtG,KAAKoiG,sBAERniG,IAGPkqE,GAAyB,MAC3BljE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaoS,EAAYC,EAAgBC,EAAYC,EAAeN,GAC7HliG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKqiG,WAAaA,EAClBriG,KAAKsiG,eAAiBA,EACtBtiG,KAAKuiG,WAAaA,EAClBviG,KAAKwiG,cAAgBA,EACrBxiG,KAAKkiG,iBAAmBA,EAE1B3R,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy+E,EAAa7R,EAAK5sE,KAClB0+E,EAAiB9R,EAAK5sE,KACtB2+E,EAAa/R,EAAK5sE,KAClB4+E,EAAgBhS,EAAK5sE,KACrBs+E,EAAmB1R,EAAK5sE,KAC5B,OAAO,IAAIumD,GAAuB0lB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaoS,EAAYC,EAAgBC,EAAYC,EAAeN,GAEvJzR,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKqiG,YAEfpiG,EAAKqG,KAAKtG,KAAKsiG,gBAEfriG,EAAKqG,KAAKtG,KAAKuiG,YAEftiG,EAAKqG,KAAKtG,KAAKwiG,eAEfviG,EAAKqG,KAAKtG,KAAKkiG,kBAERjiG,IAGPmqE,GAAsB,MACxBnjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBkR,EAAeC,GACpLvhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKohG,cAAgBA,EACrBphG,KAAKqhG,aAAeA,EACpBrhG,KAAKowF,eAAiBA,EACtBpwF,KAAKshG,cAAgBA,EACrBthG,KAAKuhG,yBAA2BA,EAElChR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXw9E,EAAgB5Q,EAAK5sE,KACrBy9E,EAAe7Q,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KACtB09E,EAAgB9Q,EAAK5sE,KACrB29E,EAA2B/Q,EAAK5sE,KACpC,OAAO,IAAIwmD,GAAoBylB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBkR,EAAeC,GAE3M9Q,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKohG,eAEfnhG,EAAKqG,KAAKtG,KAAKqhG,cAEfphG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAKuhG,0BAERthG,IAGPoqE,GAAe,MACjBpjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKuQ,EAAemB,EAAkBC,EAA0BC,GACjM3iG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKshG,cAAgBA,EACrBthG,KAAKyiG,iBAAmBA,EACxBziG,KAAK0iG,yBAA2BA,EAChC1iG,KAAK2iG,SAAWA,EAElBpS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACX09E,EAAgB9Q,EAAK5sE,KACrB6+E,EAAmBjS,EAAK5sE,KACxB8+E,EAA2BlS,EAAK5sE,KAChC++E,EAAWnS,EAAK5sE,KACpB,OAAO,IAAIymD,GAAawlB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKuQ,EAAemB,EAAkBC,EAA0BC,GAEjNlS,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAKyiG,kBAEfxiG,EAAKqG,KAAKtG,KAAK0iG,0BAEfziG,EAAKqG,KAAKtG,KAAK2iG,UAER1iG,IAGPqqE,GAAc,MAChBrjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBkR,EAAeoB,EAA0BnB,GAC5MvhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKshG,cAAgBA,EACrBthG,KAAK0iG,yBAA2BA,EAChC1iG,KAAKuhG,yBAA2BA,EAElChR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtB09E,EAAgB9Q,EAAK5sE,KACrB8+E,EAA2BlS,EAAK5sE,KAChC29E,EAA2B/Q,EAAK5sE,KACpC,OAAO,IAAI0mD,GAAYulB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBkR,EAAeoB,EAA0BnB,GAE3N9Q,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAK0iG,0BAEfziG,EAAKqG,KAAKtG,KAAKuhG,0BAERthG,IAGPsqE,GAAgC,MAClCtjE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI2mD,GAA8BslB,EAAWxrF,EAAM2rF,GAE5DS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPuqE,GAAmC,MACrCvjE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI4mD,GAAiCqlB,EAAWxrF,EAAM2rF,GAE/DS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPwqE,GAAiB,MACnBxjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6mD,GAAeolB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyqE,GAAqB,MACvBzjE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8mD,GAAmBmlB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0qE,GAAiB,MACnB1jE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+mD,GAAeklB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2qE,GAAqB,MACvB3jE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgnD,GAAmBilB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4qE,GAAkB,MACpB5jE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIinD,GAAgBglB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6qE,GAAsB,MACxB7jE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIknD,GAAoB+kB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8qE,GAAU,MACZ9jE,YAAY4oF,EAAWxrF,EAAMu+F,EAAWC,GACtC7iG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4iG,UAAYA,EACjB5iG,KAAK6iG,QAAUA,EAEjBtS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg/E,EAAYpS,EAAK5sE,KACjBi/E,EAAUrS,EAAK5sE,KACnB,OAAO,IAAImnD,GAAQ8kB,EAAWxrF,EAAMu+F,EAAWC,GAEjDpS,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK4iG,WAEf3iG,EAAKqG,KAAKtG,KAAK6iG,SAER5iG,IAGP+qE,GAAe,MACjB/jE,YAAY4oF,EAAWxrF,EAAMu+F,EAAWC,EAASC,EAAcpR,GAC7D1xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4iG,UAAYA,EACjB5iG,KAAK6iG,QAAUA,EACf7iG,KAAK8iG,aAAeA,EACpB9iG,KAAK0xF,UAAYA,EAEnBnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg/E,EAAYpS,EAAK5sE,KACjBi/E,EAAUrS,EAAK5sE,KACfk/E,EAAetS,EAAK5sE,KACpB8tE,EAAYlB,EAAK5sE,KACrB,OAAO,IAAIonD,GAAa6kB,EAAWxrF,EAAMu+F,EAAWC,EAASC,EAAcpR,GAE7EjB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK4iG,WAEf3iG,EAAKqG,KAAKtG,KAAK6iG,SAEf5iG,EAAKqG,KAAKtG,KAAK8iG,cAEf7iG,EAAKqG,KAAKtG,KAAK0xF,WAERzxF,IAGPgrE,GAAc,MAChBhkE,YAAY4oF,EAAWxrF,EAAM0+F,GAC3B/iG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+iG,SAAWA,EAElBxS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm/E,EAAWvS,EAAK5sE,KACpB,OAAO,IAAIqnD,GAAY4kB,EAAWxrF,EAAM0+F,GAE1CtS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK+iG,UAER9iG,IAGPirE,GAAuB,MACzBjkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsnD,GAAqB2kB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkrE,GAA2B,MAC7BlkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIunD,GAAyB0kB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmrE,GAA+B,MACjCnkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwnD,GAA6BykB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAExJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPorE,GAAmC,MACrCpkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIynD,GAAiCwkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEvLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqrE,GAA+B,MACjCrkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0nD,GAA6BukB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAExJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsrE,GAAmC,MACrCtkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2nD,GAAiCskB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEvLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPurE,GAAuB,MACzBvkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4nD,GAAqBqkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwrE,GAA2B,MAC7BxkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6nD,GAAyBokB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyrE,GAAmB,MACrBzkE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8nD,GAAiBmkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0rE,GAAuB,MACzB1kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+nD,GAAqBkkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2rE,GAAyB,MAC3B3kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgoD,GAAuBikB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4rE,GAA6B,MAC/B5kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIioD,GAA2BgkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEjLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6rE,GAAa,MACf7kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIkoD,GAAW+jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEjIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP8rE,GAAqB,MACvB9kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKiS,EAAe5S,GACvIpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKgjG,cAAgBA,EACrBhjG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXo/E,EAAgBxS,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImoD,GAAmB8jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKiS,EAAe5S,GAE7JK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKgjG,eAEf/iG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+rE,GAAyB,MAC3B/kE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIooD,GAAuB6jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE7KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgsE,GAAsB,MACxBhlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIqoD,GAAoB4jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE1IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPisE,GAA0B,MAC5BjlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIsoD,GAAwB2jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEjKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPksE,GAAqB,MACvBllE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAagT,EAAqBC,GAC3FljG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKijG,oBAAsBA,EAC3BjjG,KAAKkjG,WAAaA,EAEpB3S,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBq/E,EAAsBzS,EAAK5sE,KAC3Bs/E,EAAa1S,EAAK5sE,KACtB,OAAO,IAAIuoD,GAAmB0jB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAagT,EAAqBC,GAEjHzS,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKijG,qBAEfhjG,EAAKqG,KAAKtG,KAAKkjG,YAERjjG,IAGPmsE,GAAiB,MACnBnlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIwoD,GAAeyjB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAExJV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPosE,GAAuB,MACzBplE,YAAY4oF,EAAWxrF,EAAMwwF,GAC3B70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAIyoD,GAAqBwjB,EAAWxrF,EAAMwwF,GAEnDpE,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGPqsE,GAAa,MACfrlE,YAAY4oF,EAAWxrF,EAAMwwF,EAAUsO,EAAWC,GAChDpjG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKmjG,UAAYA,EACjBnjG,KAAKojG,UAAYA,EAEnB7S,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChBu/E,EAAY3S,EAAK5sE,KACjBw/E,EAAY5S,EAAK5sE,KACrB,OAAO,IAAI0oD,GAAWujB,EAAWxrF,EAAMwwF,EAAUsO,EAAWC,GAE9D3S,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKmjG,WAEfljG,EAAKqG,KAAKtG,KAAKojG,WAERnjG,IAGPssE,GAAuB,MACzBtlE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUsO,EAAWC,GAC1EpjG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKmjG,UAAYA,EACjBnjG,KAAKojG,UAAYA,EAEnB7S,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChBu/E,EAAY3S,EAAK5sE,KACjBw/E,EAAY5S,EAAK5sE,KACrB,OAAO,IAAI2oD,GAAqBsjB,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUsO,EAAWC,GAElG3S,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKmjG,WAEfljG,EAAKqG,KAAKtG,KAAKojG,WAERnjG,IAGPusE,GAA4B,MAC9BvlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI4oD,GAA0BqjB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEhJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPwsE,GAAgC,MAClCxlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI6oD,GAA8BojB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEvKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPysE,GAAY,MACdzlE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8oD,GAAUmjB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0sE,GAAgB,MAClB1lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+oD,GAAckjB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2sE,GAAuB,MACzB3lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgpD,GAAqBijB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4sE,GAA2B,MAC7B5lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIipD,GAAyBgjB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6sE,GAAgB,MAClB7lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkpD,GAAc+iB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8sE,GAAoB,MACtB9lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImpD,GAAkB8iB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+sE,GAAW,MACb/lE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,EAAgBiT,EAAkBC,EAA6BC,GAClLvjG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKowF,eAAiBA,EACtBpwF,KAAKqjG,iBAAmBA,EACxBrjG,KAAKsjG,4BAA8BA,EACnCtjG,KAAKujG,mBAAqBA,EAE5BhT,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KACtBy/E,EAAmB7S,EAAK5sE,KACxB0/E,EAA8B9S,EAAK5sE,KACnC2/E,EAAqB/S,EAAK5sE,KAC9B,OAAO,IAAIopD,GAAS6iB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,EAAgBiT,EAAkBC,EAA6BC,GAE9L9S,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqjG,kBAEfpjG,EAAKqG,KAAKtG,KAAKsjG,6BAEfrjG,EAAKqG,KAAKtG,KAAKujG,oBAERtjG,IAGPgtE,GAAe,MACjBhmE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBC,EAAYC,EAAWC,EAAUC,GACrG7jG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAK0jG,WAAaA,EAClB1jG,KAAK2jG,UAAYA,EACjB3jG,KAAK4jG,SAAWA,EAChB5jG,KAAK6jG,aAAeA,EAEtBtT,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7B8/E,EAAalT,EAAK5sE,KAClB+/E,EAAYnT,EAAK5sE,KACjBggF,EAAWpT,EAAK5sE,KAChBigF,EAAerT,EAAK5sE,KACxB,OAAO,IAAIqpD,GAAa4iB,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBC,EAAYC,EAAWC,EAAUC,GAErHpT,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAK0jG,YAEfzjG,EAAKqG,KAAKtG,KAAK2jG,WAEf1jG,EAAKqG,KAAKtG,KAAK4jG,UAEf3jG,EAAKqG,KAAKtG,KAAK6jG,cAER5jG,IAGPitE,GAAe,MACjBjmE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,EAAgBiT,EAAkBC,GAC7LtjG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK8jG,YAAcA,EACnB9jG,KAAKowF,eAAiBA,EACtBpwF,KAAKqjG,iBAAmBA,EACxBrjG,KAAKsjG,4BAA8BA,EAErC/S,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBkgF,EAActT,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBy/E,EAAmB7S,EAAK5sE,KACxB0/E,EAA8B9S,EAAK5sE,KACvC,OAAO,IAAIspD,GAAa2iB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,EAAgBiT,EAAkBC,GAE7M7S,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK8jG,aAEf7jG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqjG,kBAEfpjG,EAAKqG,KAAKtG,KAAKsjG,6BAERrjG,IAGPktE,GAAwB,MAC1BlmE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,GAC9C/jG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgkG,WAAaD,EAEpBxT,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBmgF,EAAcvT,EAAK5sE,KACvB,OAAO,IAAIupD,GAAsB0iB,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,GAEvEtT,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgkG,YAER/jG,IAGPmtE,GAAyB,MAC3BnmE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIpjB,GAAuByiB,EAAWxrF,GAE/CosF,SAEE,MADW,KAIXpjB,GAAuB,MACzBpmE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GACrDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIypD,GAAqBwiB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GAE7ES,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPqtE,GAAmC,MACrCrmE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAagU,EAAmBC,GACjElkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKikG,kBAAoBA,EACzBjkG,KAAKkkG,uBAAyBA,EAEhC3T,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBqgF,EAAoBzT,EAAK5sE,KACzBsgF,EAAyB1T,EAAK5sE,KAClC,OAAO,IAAI0pD,GAAiCuiB,EAAWxrF,EAAM2rF,EAAMC,EAAagU,EAAmBC,GAErGzT,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKikG,mBAEfhkG,EAAKqG,KAAKtG,KAAKkkG,wBAERjkG,IAGPstE,GAA4B,MAC9BtmE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAU7I,GAC7HpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2pD,GAA0BsiB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAU7I,GAE1JK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPutE,GAAqC,MACvCvmE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,GACnHj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAI4pD,GAAmCqiB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,GAEzJxI,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAGPwtE,GAAiC,MACnCxmE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GACrDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI6pD,GAA+BoiB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GAEvFS,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPytE,GAAmC,MACrCzmE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GACrDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI8pD,GAAiCmiB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GAEzFS,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGP0tE,GAA+B,MACjC1mE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GACrDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI+pD,GAA6BkiB,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,GAErFS,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGP2tE,GAAuB,MACzB3mE,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAUuP,EAAmB7K,GACnEv5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAKokG,kBAAoBA,EACzBpkG,KAAKu5F,MAAQA,EAEfhJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChBwgF,EAAoB5T,EAAK5sE,KACzB21E,EAAQ/I,EAAK5sE,KACjB,OAAO,IAAIgqD,GAAqBiiB,EAAWxrF,EAAM8/F,EAAWtP,EAAUuP,EAAmB7K,GAE3F9I,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKokG,mBAEfnkG,EAAKqG,KAAKtG,KAAKu5F,OAERt5F,IAGP4tE,GAA8B,MAChC5mE,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAUuP,EAAmB7K,EAAO8K,GAC1ErkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAKokG,kBAAoBA,EACzBpkG,KAAKu5F,MAAQA,EACbv5F,KAAKqkG,aAAeA,EAEtB9T,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChBwgF,EAAoB5T,EAAK5sE,KACzB21E,EAAQ/I,EAAK5sE,KACbygF,EAAe7T,EAAK5sE,KACxB,OAAO,IAAIiqD,GAA4BgiB,EAAWxrF,EAAM8/F,EAAWtP,EAAUuP,EAAmB7K,EAAO8K,GAEzG5T,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKokG,mBAEfnkG,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAKqkG,cAERpkG,IAGP6tE,GAAU,MACZ7mE,YAAY4oF,EAAWxrF,EAAMmtF,GAC3BxxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwxF,OAASA,EAEhBjB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4tE,EAAShB,EAAK5sE,KAClB,OAAO,IAAIkqD,GAAQ+hB,EAAWxrF,EAAMmtF,GAEtCf,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKwxF,QAERvxF,IAGP8tE,GAA2B,MAC7B9mE,YAAY4oF,EAAWxrF,EAAMigG,GAC3BtkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKskG,UAAYA,EAEnB/T,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0gF,EAAY9T,EAAK5sE,KACrB,OAAO,IAAImqD,GAAyB8hB,EAAWxrF,EAAMigG,GAEvD7T,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKskG,WAERrkG,IAGP+tE,GAAe,MACjB/mE,YAAY4oF,EAAWxrF,EAAMkgG,EAAOC,GAClCxkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKukG,MAAQA,EACbvkG,KAAKwkG,YAAcA,EAErBjU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN2gF,EAAQ/T,EAAK5sE,KACb4gF,EAAchU,EAAK5sE,KACvB,OAAO,IAAIoqD,GAAa6hB,EAAWxrF,EAAMkgG,EAAOC,GAElD/T,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKukG,OAEftkG,EAAKqG,KAAKtG,KAAKwkG,aAERvkG,IAGPguE,GAAoB,MACtBhnE,YAAY4oF,EAAWxrF,EAAMkgG,EAAOC,GAClCxkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKukG,MAAQA,EACbvkG,KAAKwkG,YAAcA,EAErBjU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN2gF,EAAQ/T,EAAK5sE,KACb4gF,EAAchU,EAAK5sE,KACvB,OAAO,IAAIqqD,GAAkB4hB,EAAWxrF,EAAMkgG,EAAOC,GAEvD/T,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKukG,OAEftkG,EAAKqG,KAAKtG,KAAKwkG,aAERvkG,IAGPiuE,GAAiB,MACnBjnE,YAAY4oF,EAAWxrF,EAAMmtF,EAAQC,EAAaC,GAChD1xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwxF,OAASA,EACdxxF,KAAKyxF,YAAcA,EACnBzxF,KAAK0xF,UAAYA,EAEnBnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4tE,EAAShB,EAAK5sE,KACd6tE,EAAcjB,EAAK5sE,KACnB8tE,EAAYlB,EAAK5sE,KACrB,OAAO,IAAIsqD,GAAe2hB,EAAWxrF,EAAMmtF,EAAQC,EAAaC,GAElEjB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKwxF,QAEfvxF,EAAKqG,KAAKtG,KAAKyxF,aAEfxxF,EAAKqG,KAAKtG,KAAK0xF,WAERzxF,IAGPkuE,GAAiB,MACnBlnE,YAAY4oF,EAAWxrF,EAAMitF,GAC3BtxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsxF,MAAQA,EAEff,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0tE,EAAQd,EAAK5sE,KACjB,OAAO,IAAIuqD,GAAe0hB,EAAWxrF,EAAMitF,GAE7Cb,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKsxF,OAERrxF,IAGPmuE,GAA0B,MAC5BnnE,YAAY4oF,EAAWxrF,EAAMitF,EAAOC,GAClCvxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsxF,MAAQA,EACbtxF,KAAKuxF,MAAQA,EAEfhB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0tE,EAAQd,EAAK5sE,KACb2tE,EAAQf,EAAK5sE,KACjB,OAAO,IAAIwqD,GAAwByhB,EAAWxrF,EAAMitF,EAAOC,GAE7Dd,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKsxF,OAEfrxF,EAAKqG,KAAKtG,KAAKuxF,OAERtxF,IAGPouE,GAAc,MAChBpnE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAC7Hl5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EAEzB3I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KAC3B,OAAO,IAAIyqD,GAAYwhB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAE5IzI,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAERj5F,IAGPquE,GAAkB,MACpBrnE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAC7Hl5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EAEzB3I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KAC3B,OAAO,IAAI0qD,GAAgBuhB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAEhJzI,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAERj5F,IAGPsuE,GAAgC,MAClCtnE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMyU,EAAiBC,EAAiBC,EAAiBC,EAAqBC,EAAqBC,GAC9H9kG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKykG,gBAAkBA,EACvBzkG,KAAK0kG,gBAAkBA,EACvB1kG,KAAK2kG,gBAAkBA,EACvB3kG,KAAK4kG,oBAAsBA,EAC3B5kG,KAAK6kG,oBAAsBA,EAC3B7kG,KAAK8kG,oBAAsBA,EAE7BvU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ6gF,EAAkBjU,EAAK5sE,KACvB8gF,EAAkBlU,EAAK5sE,KACvB+gF,EAAkBnU,EAAK5sE,KACvBghF,EAAsBpU,EAAK5sE,KAC3BihF,EAAsBrU,EAAK5sE,KAC3BkhF,EAAsBtU,EAAK5sE,KAC/B,OAAO,IAAI2qD,GAA8BshB,EAAWxrF,EAAM2rF,EAAMyU,EAAiBC,EAAiBC,EAAiBC,EAAqBC,EAAqBC,GAE/JrU,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKykG,iBAEfxkG,EAAKqG,KAAKtG,KAAK0kG,iBAEfzkG,EAAKqG,KAAKtG,KAAK2kG,iBAEf1kG,EAAKqG,KAAKtG,KAAK4kG,qBAEf3kG,EAAKqG,KAAKtG,KAAK6kG,qBAEf5kG,EAAKqG,KAAKtG,KAAK8kG,qBAER7kG,IAGPuuE,GAAS,MACXvnE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4qD,GAAOqhB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwuE,GAAa,MACfxnE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6qD,GAAWohB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEjKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyuE,GAAc,MAChBznE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8qD,GAAYmhB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEvIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0uE,GAAkB,MACpB1nE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+qD,GAAgBkhB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEtKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2uE,GAAoB,MACtB3nE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIgrD,GAAkBihB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAExIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP4uE,GAA4B,MAC9B5nE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIirD,GAA0BghB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEhJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP6uE,GAA+B,MACjC7nE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIkrD,GAA6B+gB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEnJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP8uE,GAAmB,MACrB9nE,YAAY4oF,EAAWxrF,EAAM2rF,EAAM+U,EAAYC,GAC7ChlG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK+kG,WAAaA,EAClB/kG,KAAKglG,kBAAoBA,EAE3BzU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZmhF,EAAavU,EAAK5sE,KAClBohF,EAAoBxU,EAAK5sE,KAC7B,OAAO,IAAImrD,GAAiB8gB,EAAWxrF,EAAM2rF,EAAM+U,EAAYC,GAEjEvU,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK+kG,YAEf9kG,EAAKqG,KAAKtG,KAAKglG,mBAER/kG,IAGP+uE,GAA2B,MAC7B/nE,YAAY4oF,EAAWxrF,EAAM4gG,EAAqBC,EAAsBC,EAA2BC,EAAcC,GAC/GrlG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKilG,oBAAsBA,EAC3BjlG,KAAKklG,qBAAuBA,EAC5BllG,KAAKmlG,0BAA4BA,EACjCnlG,KAAKolG,aAAeA,EACpBplG,KAAKqlG,eAAiBA,EAExB9U,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNqhF,EAAsBzU,EAAK5sE,KAC3BshF,EAAuB1U,EAAK5sE,KAC5BuhF,EAA4B3U,EAAK5sE,KACjCwhF,EAAe5U,EAAK5sE,KACpByhF,EAAiB7U,EAAK5sE,KAC1B,OAAO,IAAIorD,GAAyB6gB,EAAWxrF,EAAM4gG,EAAqBC,EAAsBC,EAA2BC,EAAcC,GAE3I5U,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKilG,qBAEfhlG,EAAKqG,KAAKtG,KAAKklG,sBAEfjlG,EAAKqG,KAAKtG,KAAKmlG,2BAEfllG,EAAKqG,KAAKtG,KAAKolG,cAEfnlG,EAAKqG,KAAKtG,KAAKqlG,gBAERplG,IAGPgvE,GAAwB,MAC1BhoE,YAAY4oF,EAAWxrF,EAAMihG,EAAeC,EAAOC,GACjDxlG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKslG,cAAgBA,EACrBtlG,KAAKulG,MAAQA,EACbvlG,KAAKwlG,YAAcA,EAErBjV,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0hF,EAAgB9U,EAAK5sE,KACrB2hF,EAAQ/U,EAAK5sE,KACb4hF,EAAchV,EAAK5sE,KACvB,OAAO,IAAIqrD,GAAsB4gB,EAAWxrF,EAAMihG,EAAeC,EAAOC,GAE1E/U,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKslG,eAEfrlG,EAAKqG,KAAKtG,KAAKulG,OAEftlG,EAAKqG,KAAKtG,KAAKwlG,aAERvlG,IAGPivE,GAAY,MACdjoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsrD,GAAU2gB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkvE,GAAgB,MAClBloE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIurD,GAAc0gB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmvE,GAA6B,MAC/BnoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwrD,GAA2BygB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPovE,GAAiC,MACnCpoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIyrD,GAA+BwgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqvE,GAAkC,MACpCroE,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAUC,GACjF5lG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAKylG,UAAYA,EACjBzlG,KAAK0lG,WAAaA,EAClB1lG,KAAK2lG,SAAWA,EAChB3lG,KAAK4lG,eAAiBA,EAExBrV,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChB6hF,EAAYjV,EAAK5sE,KACjB8hF,EAAalV,EAAK5sE,KAClB+hF,EAAWnV,EAAK5sE,KAChBgiF,EAAiBpV,EAAK5sE,KAC1B,OAAO,IAAI0rD,GAAgCugB,EAAWxrF,EAAM8/F,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAUC,GAEpHnV,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAK0lG,YAEfzlG,EAAKqG,KAAKtG,KAAK2lG,UAEf1lG,EAAKqG,KAAKtG,KAAK4lG,gBAER3lG,IAGPsvE,GAAoB,MACtBtoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI2rD,GAAkBsgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAExIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPuvE,GAAwB,MAC1BvoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI4rD,GAAsBqgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE/JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPwvE,GAAiB,MACnBxoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI6rD,GAAeogB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAErIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPyvE,GAAqB,MACvBzoE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI8rD,GAAmBmgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE5JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP0vE,GAAoB,MACtB1oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+rD,GAAkBkgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE7IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2vE,GAAwB,MAC1B3oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgsD,GAAsBigB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE5KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4vE,GAAe,MACjB5oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIisD,GAAaggB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAExIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6vE,GAAmB,MACrB7oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIksD,GAAiB+f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEvKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8vE,GAAsB,MACxB9oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAImsD,GAAoB8f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE1IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP+vE,GAA0B,MAC5B/oE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIosD,GAAwB6f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEjKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPgwE,GAAiB,MACnBhpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIqsD,GAAe4f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAErIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPiwE,GAAqB,MACvBjpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIssD,GAAmB2f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE5JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPkwE,GAAuB,MACzBlpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIusD,GAAqB0f,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE3IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPmwE,GAA2B,MAC7BnpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIwsD,GAAyByf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAElKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPowE,GAAkB,MACpBppE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIysD,GAAgBwf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAEtIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPqwE,GAAsB,MACxBrpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI0sD,GAAoBuf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE7JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPswE,GAAyB,MAC3BtpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI2sD,GAAuBsf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE7IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPuwE,GAA6B,MAC/BvpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI4sD,GAA2Bqf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEpKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPwwE,GAAa,MACfxpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6sD,GAAWof,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPywE,GAAiB,MACnBzpE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8sD,GAAemf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0wE,GAAuB,MACzB1pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI+sD,GAAqBkf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAE3IN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP2wE,GAA2B,MAC7B3pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIgtD,GAAyBif,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAElKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP4wE,GAAe,MACjB5pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIitD,GAAagf,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAExIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6wE,GAAmB,MACrB7pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAa6R,EAAe5S,GAClKpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKgjG,cAAgBA,EACrBhjG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBo/E,EAAgBxS,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIktD,GAAiB+e,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAa6R,EAAe5S,GAEtLK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKgjG,eAEf/iG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8wE,GAAuB,MACzB9pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImtD,GAAqB8e,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+wE,GAA2B,MAC7B/pE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIotD,GAAyB6e,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgxE,GAAuB,MACzBhqE,YAAY4oF,EAAWxrF,EAAM86F,GAC3Bn/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKm/F,SAAWA,EAElB5O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNu7E,EAAW3O,EAAK5sE,KACpB,OAAO,IAAIqtD,GAAqB4e,EAAWxrF,EAAM86F,GAEnD1O,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKm/F,UAERl/F,IAGPixE,GAAoC,MACtCjqE,YAAY4oF,EAAWxrF,EAAMwhG,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,GACvHlmG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6lG,kBAAoBA,EACzB7lG,KAAK8lG,YAAcA,EACnB9lG,KAAK+lG,yBAA2BA,EAChC/lG,KAAKgmG,UAAYA,EACjBhmG,KAAKimG,sBAAwBA,EAC7BjmG,KAAKkmG,UAAYA,EAEnB3V,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiiF,EAAoBrV,EAAK5sE,KACzBkiF,EAActV,EAAK5sE,KACnBmiF,EAA2BvV,EAAK5sE,KAChCoiF,EAAYxV,EAAK5sE,KACjBqiF,EAAwBzV,EAAK5sE,KAC7BsiF,EAAY1V,EAAK5sE,KACrB,OAAO,IAAIstD,GAAkC2e,EAAWxrF,EAAMwhG,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,GAE5JzV,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK6lG,mBAEf5lG,EAAKqG,KAAKtG,KAAK8lG,aAEf7lG,EAAKqG,KAAKtG,KAAK+lG,0BAEf9lG,EAAKqG,KAAKtG,KAAKgmG,WAEf/lG,EAAKqG,KAAKtG,KAAKimG,uBAEfhmG,EAAKqG,KAAKtG,KAAKkmG,WAERjmG,IAGPkxE,GAAiC,MACnClqE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIrf,GAA+B0e,EAAWxrF,GAEvDosF,SAEE,MADW,KAIXrf,GAAuC,MACzCnqE,YAAY4oF,EAAWxrF,EAAMwhG,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,EAAWC,EAAeC,EAAaC,EAAYC,GAC1KtmG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6lG,kBAAoBA,EACzB7lG,KAAK8lG,YAAcA,EACnB9lG,KAAK+lG,yBAA2BA,EAChC/lG,KAAKgmG,UAAYA,EACjBhmG,KAAKimG,sBAAwBA,EAC7BjmG,KAAKkmG,UAAYA,EACjBlmG,KAAKmmG,cAAgBA,EACrBnmG,KAAKomG,YAAcA,EACnBpmG,KAAKqmG,WAAaA,EAClBrmG,KAAKsmG,sBAAwBA,EAE/B/V,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiiF,EAAoBrV,EAAK5sE,KACzBkiF,EAActV,EAAK5sE,KACnBmiF,EAA2BvV,EAAK5sE,KAChCoiF,EAAYxV,EAAK5sE,KACjBqiF,EAAwBzV,EAAK5sE,KAC7BsiF,EAAY1V,EAAK5sE,KACjBuiF,EAAgB3V,EAAK5sE,KACrBwiF,EAAc5V,EAAK5sE,KACnByiF,EAAa7V,EAAK5sE,KAClB0iF,EAAwB9V,EAAK5sE,KACjC,OAAO,IAAIwtD,GAAqCye,EAAWxrF,EAAMwhG,EAAmBC,EAAaC,EAA0BC,EAAWC,EAAuBC,EAAWC,EAAeC,EAAaC,EAAYC,GAElN7V,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK6lG,mBAEf5lG,EAAKqG,KAAKtG,KAAK8lG,aAEf7lG,EAAKqG,KAAKtG,KAAK+lG,0BAEf9lG,EAAKqG,KAAKtG,KAAKgmG,WAEf/lG,EAAKqG,KAAKtG,KAAKimG,uBAEfhmG,EAAKqG,KAAKtG,KAAKkmG,WAEfjmG,EAAKqG,KAAKtG,KAAKmmG,eAEflmG,EAAKqG,KAAKtG,KAAKomG,aAEfnmG,EAAKqG,KAAKtG,KAAKqmG,YAEfpmG,EAAKqG,KAAKtG,KAAKsmG,uBAERrmG,IAGPoxE,GAAkB,MACpBpqE,YAAY4oF,EAAWxrF,EAAM86F,GAC3Bn/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKm/F,SAAWA,EAElB5O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNu7E,EAAW3O,EAAK5sE,KACpB,OAAO,IAAIytD,GAAgBwe,EAAWxrF,EAAM86F,GAE9C1O,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKm/F,UAERl/F,IAGPqxE,GAAU,MACZrqE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgByV,EAAOC,EAAOC,EAAOrW,GACxIpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKumG,MAAQA,EACbvmG,KAAKwmG,MAAQA,EACbxmG,KAAKymG,MAAQA,EACbzmG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB2iF,EAAQ/V,EAAK5sE,KACb4iF,EAAQhW,EAAK5sE,KACb6iF,EAAQjW,EAAK5sE,KACbwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0tD,GAAQue,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgByV,EAAOC,EAAOC,EAAOrW,GAEnJK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKumG,OAEftmG,EAAKqG,KAAKtG,KAAKwmG,OAEfvmG,EAAKqG,KAAKtG,KAAKymG,OAEfxmG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsxE,GAAc,MAChBtqE,YAAY4oF,EAAWxrF,EAAMqiG,EAASC,EAAWjV,GAC/C1xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0mG,QAAUA,EACf1mG,KAAK2mG,UAAYA,EACjB3mG,KAAK0xF,UAAYA,EAEnBnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8iF,EAAUlW,EAAK5sE,KACf+iF,EAAYnW,EAAK5sE,KACjB8tE,EAAYlB,EAAK5sE,KACrB,OAAO,IAAI2tD,GAAYse,EAAWxrF,EAAMqiG,EAASC,EAAWjV,GAE9DjB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK0mG,SAEfzmG,EAAKqG,KAAKtG,KAAK2mG,WAEf1mG,EAAKqG,KAAKtG,KAAK0xF,WAERzxF,IAGPuxE,GAAmB,MACrBvqE,YAAY4oF,EAAWxrF,EAAMuiG,EAAgBC,EAAmBC,GAC9D9mG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4mG,eAAiBA,EACtB5mG,KAAK6mG,kBAAoBA,EACzB7mG,KAAK8mG,sBAAwBA,EAE/BvW,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgjF,EAAiBpW,EAAK5sE,KACtBijF,EAAoBrW,EAAK5sE,KACzBkjF,EAAwBtW,EAAK5sE,KACjC,OAAO,IAAI4tD,GAAiBqe,EAAWxrF,EAAMuiG,EAAgBC,EAAmBC,GAElFrW,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK4mG,gBAEf3mG,EAAKqG,KAAKtG,KAAK6mG,mBAEf5mG,EAAKqG,KAAKtG,KAAK8mG,uBAER7mG,IAGPwxE,GAAW,MACbxqE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GACtElwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAEpBK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KACtB,OAAO,IAAI6tD,GAASoe,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GAElFO,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAERjwF,IAGPyxE,GAAoB,MACtBzqE,YAAY4oF,EAAWxrF,EAAMy0F,EAAaC,GACxC/4F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK84F,YAAcA,EACnB94F,KAAK+4F,cAAgBA,EAEvBxI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNk1E,EAActI,EAAK5sE,KACnBm1E,EAAgBvI,EAAK5sE,KACzB,OAAO,IAAI8tD,GAAkBme,EAAWxrF,EAAMy0F,EAAaC,GAE7DtI,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK84F,aAEf74F,EAAKqG,KAAKtG,KAAK+4F,eAER94F,IAGP0xE,GAAmB,MACrB1qE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+tD,GAAiBke,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2xE,GAAuB,MACzB3qE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIguD,GAAqBie,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4xE,GAAgB,MAClB5qE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIiuD,GAAcge,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6xE,GAAoB,MACtB7qE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkuD,GAAkB+d,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8xE,GAAsB,MACxB9qE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUwM,EAActM,EAAcC,EAAc+R,EAAiBC,EAAcC,EAAkBC,GAC1JlnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKqhG,aAAeA,EACpBrhG,KAAK+0F,aAAeA,EACpB/0F,KAAKg1F,aAAeA,EACpBh1F,KAAK+mG,gBAAkBA,EACvB/mG,KAAKgnG,aAAeA,EACpBhnG,KAAKinG,iBAAmBA,EACxBjnG,KAAKknG,YAAcA,EAErB3W,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChBy9E,EAAe7Q,EAAK5sE,KACpBmxE,EAAevE,EAAK5sE,KACpBoxE,EAAexE,EAAK5sE,KACpBmjF,EAAkBvW,EAAK5sE,KACvBojF,EAAexW,EAAK5sE,KACpBqjF,EAAmBzW,EAAK5sE,KACxBsjF,EAAc1W,EAAK5sE,KACvB,OAAO,IAAImuD,GAAoB8d,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUwM,EAActM,EAAcC,EAAc+R,EAAiBC,EAAcC,EAAkBC,GAEjLzW,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqhG,cAEfphG,EAAKqG,KAAKtG,KAAK+0F,cAEf90F,EAAKqG,KAAKtG,KAAKg1F,cAEf/0F,EAAKqG,KAAKtG,KAAK+mG,iBAEf9mG,EAAKqG,KAAKtG,KAAKgnG,cAEf/mG,EAAKqG,KAAKtG,KAAKinG,kBAEfhnG,EAAKqG,KAAKtG,KAAKknG,aAERjnG,IAGP+xE,GAAkB,MACpB/qE,YAAY4oF,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWkQ,GAChFnnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK62F,QAAUA,EACf72F,KAAK82F,QAAUA,EACf92F,KAAK+2F,KAAOA,EACZ/2F,KAAKg3F,iBAAmBA,EACxBh3F,KAAKi3F,UAAYA,EACjBj3F,KAAKmnG,aAAeA,EAEtB5W,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNizE,EAAUrG,EAAK5sE,KACfkzE,EAAUtG,EAAK5sE,KACfmzE,EAAOvG,EAAK5sE,KACZozE,EAAmBxG,EAAK5sE,KACxBqzE,EAAYzG,EAAK5sE,KACjBujF,EAAe3W,EAAK5sE,KACxB,OAAO,IAAIouD,GAAgB6d,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWkQ,GAEnG1W,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK62F,SAEf52F,EAAKqG,KAAKtG,KAAK82F,SAEf72F,EAAKqG,KAAKtG,KAAK+2F,MAEf92F,EAAKqG,KAAKtG,KAAKg3F,kBAEf/2F,EAAKqG,KAAKtG,KAAKi3F,WAEfh3F,EAAKqG,KAAKtG,KAAKmnG,cAERlnG,IAGPgyE,GAAsB,MACxBhrE,YAAY4oF,EAAWxrF,EAAM+iG,EAAUC,EAASC,EAASC,GACvDvnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKonG,SAAWA,EAChBpnG,KAAKqnG,QAAUA,EACfrnG,KAAKsnG,QAAUA,EACftnG,KAAKunG,YAAcA,EAErBhX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwjF,EAAW5W,EAAK5sE,KAChByjF,EAAU7W,EAAK5sE,KACf0jF,EAAU9W,EAAK5sE,KACf2jF,EAAc/W,EAAK5sE,KACvB,OAAO,IAAIquD,GAAoB4d,EAAWxrF,EAAM+iG,EAAUC,EAASC,EAASC,GAE9E9W,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKonG,UAEfnnG,EAAKqG,KAAKtG,KAAKqnG,SAEfpnG,EAAKqG,KAAKtG,KAAKsnG,SAEfrnG,EAAKqG,KAAKtG,KAAKunG,aAERtnG,IAGPiyE,GAAsB,MACxBjrE,YAAY4oF,EAAWxrF,EAAMmjG,EAAQ3V,EAAUmE,GAC7Ch2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwnG,OAASA,EACdxnG,KAAK6xF,SAAWA,EAChB7xF,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4jF,EAAShX,EAAK5sE,KACdiuE,EAAWrB,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAIsuD,GAAoB2d,EAAWxrF,EAAMmjG,EAAQ3V,EAAUmE,GAEpEvF,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKwnG,QAEfvnG,EAAKqG,KAAKtG,KAAK6xF,UAEf5xF,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGPkyE,GAA0B,MAC5BlrE,YAAY4oF,EAAWxrF,EAAMojG,GAC3BznG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKynG,WAAaA,EAEpBlX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6jF,EAAajX,EAAK5sE,KACtB,OAAO,IAAIuuD,GAAwB0d,EAAWxrF,EAAMojG,GAEtDhX,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKynG,YAERxnG,IAGPmyE,GAAmC,MACrCnrE,YAAY4oF,EAAWxrF,EAAMojG,EAAYC,GACvC1nG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKynG,WAAaA,EAClBznG,KAAK0nG,kBAAoBA,EAE3BnX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6jF,EAAajX,EAAK5sE,KAClB8jF,EAAoBlX,EAAK5sE,KAC7B,OAAO,IAAIwuD,GAAiCyd,EAAWxrF,EAAMojG,EAAYC,GAE3EjX,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKynG,YAEfxnG,EAAKqG,KAAKtG,KAAK0nG,mBAERznG,IAGPoyE,GAAuB,MACzBprE,YAAY4oF,EAAWxrF,EAAMsjG,EAAMP,EAAUQ,GAC3C5nG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2nG,KAAOA,EACZ3nG,KAAKonG,SAAWA,EAChBpnG,KAAK4nG,UAAYA,EAEnBrX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+jF,EAAOnX,EAAK5sE,KACZwjF,EAAW5W,EAAK5sE,KAChBgkF,EAAYpX,EAAK5sE,KACrB,OAAO,IAAIyuD,GAAqBwd,EAAWxrF,EAAMsjG,EAAMP,EAAUQ,GAEnEnX,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK2nG,MAEf1nG,EAAKqG,KAAKtG,KAAKonG,UAEfnnG,EAAKqG,KAAKtG,KAAK4nG,WAER3nG,IAGPqyE,GAA+B,MACjCrrE,YAAY4oF,EAAWxrF,EAAMsjG,EAAMP,EAAUQ,EAAWC,GACtD7nG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2nG,KAAOA,EACZ3nG,KAAKonG,SAAWA,EAChBpnG,KAAK4nG,UAAYA,EACjB5nG,KAAK6nG,cAAgBA,EAEvBtX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+jF,EAAOnX,EAAK5sE,KACZwjF,EAAW5W,EAAK5sE,KAChBgkF,EAAYpX,EAAK5sE,KACjBikF,EAAgBrX,EAAK5sE,KACzB,OAAO,IAAI0uD,GAA6Bud,EAAWxrF,EAAMsjG,EAAMP,EAAUQ,EAAWC,GAEtFpX,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK2nG,MAEf1nG,EAAKqG,KAAKtG,KAAKonG,UAEfnnG,EAAKqG,KAAKtG,KAAK4nG,WAEf3nG,EAAKqG,KAAKtG,KAAK6nG,eAER5nG,IAGPsyE,GAAiB,MACnBtrE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2uD,GAAesd,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPuyE,GAAqB,MACvBvrE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4uD,GAAmBqd,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwyE,GAAuB,MACzBxrE,YAAY4oF,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GACxDhoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8nG,QAAUA,EACf9nG,KAAK+nG,mBAAqBA,EAC1B/nG,KAAKgoG,qBAAuBA,EAE9BzX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkkF,EAAUtX,EAAK5sE,KACfmkF,EAAqBvX,EAAK5sE,KAC1BokF,EAAuBxX,EAAK5sE,KAChC,OAAO,IAAI6uD,GAAqBod,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GAEhFvX,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8nG,SAEf7nG,EAAKqG,KAAKtG,KAAK+nG,oBAEf9nG,EAAKqG,KAAKtG,KAAKgoG,sBAER/nG,IAGPyyE,GAAe,MACjBzrE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6X,EAAcC,EAAoBC,EAAgB7T,EAAcD,GAClKr0F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKowF,eAAiBA,EACtBpwF,KAAKioG,aAAeA,EACpBjoG,KAAKkoG,mBAAqBA,EAC1BloG,KAAKmoG,eAAiBA,EACtBnoG,KAAKs0F,aAAeA,EACpBt0F,KAAKq0F,cAAgBA,EAEvB9D,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtBqkF,EAAezX,EAAK5sE,KACpBskF,EAAqB1X,EAAK5sE,KAC1BukF,EAAiB3X,EAAK5sE,KACtB0wE,EAAe9D,EAAK5sE,KACpBywE,EAAgB7D,EAAK5sE,KACzB,OAAO,IAAI8uD,GAAamd,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6X,EAAcC,EAAoBC,EAAgB7T,EAAcD,GAElL5D,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKioG,cAEfhoG,EAAKqG,KAAKtG,KAAKkoG,oBAEfjoG,EAAKqG,KAAKtG,KAAKmoG,gBAEfloG,EAAKqG,KAAKtG,KAAKs0F,cAEfr0F,EAAKqG,KAAKtG,KAAKq0F,eAERp0F,IAGP0yE,GAAyB,MAC3B1rE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkJ,GAC/HvoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKooG,UAAYA,EACjBpoG,KAAKqoG,QAAUA,EACfroG,KAAKsoG,mBAAqBA,EAC1BtoG,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAKq/F,KAAOA,EACZr/F,KAAKuoG,OAASA,EAEhBhY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwkF,EAAY5X,EAAK5sE,KACjBykF,EAAU7X,EAAK5sE,KACf0kF,EAAqB9X,EAAK5sE,KAC1B4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7By7E,EAAO7O,EAAK5sE,KACZ2kF,EAAS/X,EAAK5sE,KAClB,OAAO,IAAI+uD,GAAuBkd,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkJ,GAEzJ9X,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKqoG,SAEfpoG,EAAKqG,KAAKtG,KAAKsoG,oBAEfroG,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAKuoG,QAERtoG,IAGP2yE,GAA8B,MAChC3rE,YAAY4oF,EAAWxrF,EAAMmkG,EAAWC,GACtCzoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwoG,UAAYA,EACjBxoG,KAAKyoG,WAAaA,EAEpBlY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4kF,EAAYhY,EAAK5sE,KACjB6kF,EAAajY,EAAK5sE,KACtB,OAAO,IAAIgvD,GAA4Bid,EAAWxrF,EAAMmkG,EAAWC,GAErEhY,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKwoG,WAEfvoG,EAAKqG,KAAKtG,KAAKyoG,YAERxoG,IAGP4yE,GAAiB,MACnB5rE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIivD,GAAegd,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6yE,GAAqB,MACvB7rE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkvD,GAAmB+c,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8yE,GAAsB,MACxB9rE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOc,EAAW0M,EAAc0B,EAAYC,GAClH3oG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKu5F,MAAQA,EACbv5F,KAAKw5F,MAAQA,EACbx5F,KAAKs6F,UAAYA,EACjBt6F,KAAKgnG,aAAeA,EACpBhnG,KAAK0oG,WAAaA,EAClB1oG,KAAK2oG,SAAWA,EAElBpY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB21E,EAAQ/I,EAAK5sE,KACb41E,EAAQhJ,EAAK5sE,KACb02E,EAAY9J,EAAK5sE,KACjBojF,EAAexW,EAAK5sE,KACpB8kF,EAAalY,EAAK5sE,KAClB+kF,EAAWnY,EAAK5sE,KACpB,OAAO,IAAImvD,GAAoB8c,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOC,EAAOc,EAAW0M,EAAc0B,EAAYC,GAEzIlY,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAKw5F,OAEfv5F,EAAKqG,KAAKtG,KAAKs6F,WAEfr6F,EAAKqG,KAAKtG,KAAKgnG,cAEf/mG,EAAKqG,KAAKtG,KAAK0oG,YAEfzoG,EAAKqG,KAAKtG,KAAK2oG,UAER1oG,IAGP+yE,GAAmB,MACrB/rE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIovD,GAAiB6c,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAEvKK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgzE,GAAuB,MACzBhsE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqvD,GAAqB4c,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAE7MK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPizE,GAAa,MACfjsE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBmF,EAAUC,GAC9E7oG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAK4oG,SAAWA,EAChB5oG,KAAK6oG,aAAeA,EAEtBtY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7BglF,EAAWpY,EAAK5sE,KAChBilF,EAAerY,EAAK5sE,KACxB,OAAO,IAAIsvD,GAAW2c,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBmF,EAAUC,GAE5FpY,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAK4oG,UAEf3oG,EAAKqG,KAAKtG,KAAK6oG,cAER5oG,IAGPkzE,GAAU,MACZlsE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIuvD,GAAQ0c,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmzE,GAAc,MAChBnsE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwvD,GAAYyc,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPozE,GAAwB,MAC1BpsE,YAAY4oF,EAAWxrF,EAAM2rF,EAAM6C,EAASiW,EAAWC,EAAarT,EAAUzF,GAC5EjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK6yF,QAAUA,EACf7yF,KAAK8oG,UAAYA,EACjB9oG,KAAK+oG,YAAcA,EACnB/oG,KAAK01F,SAAWA,EAChB11F,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZivE,EAAUrC,EAAK5sE,KACfklF,EAAYtY,EAAK5sE,KACjBmlF,EAAcvY,EAAK5sE,KACnB8xE,EAAWlF,EAAK5sE,KAChBqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIyvD,GAAsBwc,EAAWxrF,EAAM2rF,EAAM6C,EAASiW,EAAWC,EAAarT,EAAUzF,GAErGQ,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK6yF,SAEf5yF,EAAKqG,KAAKtG,KAAK8oG,WAEf7oG,EAAKqG,KAAKtG,KAAK+oG,aAEf9oG,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPqzE,GAAsB,MACxBrsE,YAAY4oF,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAMC,EAAa+Y,EAAUC,GAClFjpG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAChB11F,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgpG,SAAWA,EAChBhpG,KAAKipG,kBAAoBA,EAE3B1Y,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KAChBusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBolF,EAAWxY,EAAK5sE,KAChBqlF,EAAoBzY,EAAK5sE,KAC7B,OAAO,IAAI0vD,GAAoBuc,EAAWxrF,EAAMqxF,EAAUvF,EAAgBH,EAAMC,EAAa+Y,EAAUC,GAEzGxY,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK01F,UAEfz1F,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgpG,UAEf/oG,EAAKqG,KAAKtG,KAAKipG,mBAERhpG,IAGPszE,GAA2B,MAC7BtsE,YAAY4oF,EAAWxrF,EAAM6kG,EAAgBC,EAAqBC,GAChEppG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKkpG,eAAiBA,EACtBlpG,KAAKmpG,oBAAsBA,EAC3BnpG,KAAKopG,kBAAoBA,EAE3B7Y,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNslF,EAAiB1Y,EAAK5sE,KACtBulF,EAAsB3Y,EAAK5sE,KAC3BwlF,EAAoB5Y,EAAK5sE,KAC7B,OAAO,IAAI2vD,GAAyBsc,EAAWxrF,EAAM6kG,EAAgBC,EAAqBC,GAE5F3Y,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKkpG,gBAEfjpG,EAAKqG,KAAKtG,KAAKmpG,qBAEflpG,EAAKqG,KAAKtG,KAAKopG,mBAERnpG,IAGPuzE,GAAkB,MACpBvsE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4vD,GAAgBqc,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwzE,GAAsB,MACxBxsE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6vD,GAAoBoc,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyzE,GAAgC,MAClCzsE,YAAY4oF,EAAWxrF,EAAMglG,EAAwBC,GACnDtpG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKqpG,uBAAyBA,EAC9BrpG,KAAKspG,iBAAmBA,EAE1B/Y,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNylF,EAAyB7Y,EAAK5sE,KAC9B0lF,EAAmB9Y,EAAK5sE,KAC5B,OAAO,IAAI8vD,GAA8Bmc,EAAWxrF,EAAMglG,EAAwBC,GAEpF7Y,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKqpG,wBAEfppG,EAAKqG,KAAKtG,KAAKspG,kBAERrpG,IAGP0zE,GAAiB,MACnB1sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,GAChEzpG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EAEnBlZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACrB,OAAO,IAAI+vD,GAAekc,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,GAElFhZ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAERxpG,IAGP2zE,GAAwB,MAC1B3sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,GAChEzpG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EAEnBlZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACrB,OAAO,IAAIgwD,GAAsBic,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,GAEzFhZ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAERxpG,IAGP4zE,GAA4B,MAC9B5sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAWjF,GAC3ExkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EACjBzpG,KAAKwkG,YAAcA,EAErBjU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACjB4gF,EAAchU,EAAK5sE,KACvB,OAAO,IAAIiwD,GAA0Bgc,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAWjF,GAExG/T,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAEfxpG,EAAKqG,KAAKtG,KAAKwkG,aAERvkG,IAGP6zE,GAA4B,MAC9B7sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAU6U,EAAkBC,EAAmBC,EAAcC,EAAqBC,GAC7J9pG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EACjBzpG,KAAK60F,SAAWA,EAChB70F,KAAK0pG,iBAAmBA,EACxB1pG,KAAK2pG,kBAAoBA,EACzB3pG,KAAK4pG,aAAeA,EACpB5pG,KAAK6pG,oBAAsBA,EAC3B7pG,KAAK8pG,4BAA8BA,EAErCvZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChB8lF,EAAmBlZ,EAAK5sE,KACxB+lF,EAAoBnZ,EAAK5sE,KACzBgmF,EAAepZ,EAAK5sE,KACpBimF,EAAsBrZ,EAAK5sE,KAC3BkmF,EAA8BtZ,EAAK5sE,KACvC,OAAO,IAAIkwD,GAA0B+b,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAU6U,EAAkBC,EAAmBC,EAAcC,EAAqBC,GAE1LrZ,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAEfxpG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK0pG,kBAEfzpG,EAAKqG,KAAKtG,KAAK2pG,mBAEf1pG,EAAKqG,KAAKtG,KAAK4pG,cAEf3pG,EAAKqG,KAAKtG,KAAK6pG,qBAEf5pG,EAAKqG,KAAKtG,KAAK8pG,6BAER7pG,IAGP8zE,GAA2B,MAC7B9sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,GACvIjqG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EACjBzpG,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EACdryF,KAAK+pG,oBAAsBA,EAC3B/pG,KAAKgqG,oBAAsBA,EAC3BhqG,KAAKiqG,mBAAqBA,EAE5B1Z,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KACdmmF,EAAsBvZ,EAAK5sE,KAC3BomF,EAAsBxZ,EAAK5sE,KAC3BqmF,EAAqBzZ,EAAK5sE,KAC9B,OAAO,IAAImwD,GAAyB8b,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,GAEnKxZ,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAEfxpG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAK+pG,qBAEf9pG,EAAKqG,KAAKtG,KAAKgqG,qBAEf/pG,EAAKqG,KAAKtG,KAAKiqG,oBAERhqG,IAGP+zE,GAAqB,MACvB/sE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,EAAoBzF,EAAa0F,EAAuBC,EAAaC,GAC5MpqG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKupG,YAAcA,EACnBvpG,KAAKwpG,iBAAmBA,EACxBxpG,KAAKypG,UAAYA,EACjBzpG,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EACdryF,KAAK+pG,oBAAsBA,EAC3B/pG,KAAKgqG,oBAAsBA,EAC3BhqG,KAAKiqG,mBAAqBA,EAC1BjqG,KAAKwkG,YAAcA,EACnBxkG,KAAKkqG,sBAAwBA,EAC7BlqG,KAAKmqG,YAAcA,EACnBnqG,KAAKoqG,eAAiBA,EAExB7Z,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2lF,EAAc/Y,EAAK5sE,KACnB4lF,EAAmBhZ,EAAK5sE,KACxB6lF,EAAYjZ,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KACdmmF,EAAsBvZ,EAAK5sE,KAC3BomF,EAAsBxZ,EAAK5sE,KAC3BqmF,EAAqBzZ,EAAK5sE,KAC1B4gF,EAAchU,EAAK5sE,KACnBsmF,EAAwB1Z,EAAK5sE,KAC7BumF,EAAc3Z,EAAK5sE,KACnBwmF,EAAiB5Z,EAAK5sE,KAC1B,OAAO,IAAIowD,GAAmB6b,EAAWxrF,EAAM2rF,EAAMuZ,EAAaC,EAAkBC,EAAW5U,EAAUxC,EAAQ0X,EAAqBC,EAAqBC,EAAoBzF,EAAa0F,EAAuBC,EAAaC,GAElO3Z,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKupG,aAEftpG,EAAKqG,KAAKtG,KAAKwpG,kBAEfvpG,EAAKqG,KAAKtG,KAAKypG,WAEfxpG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAK+pG,qBAEf9pG,EAAKqG,KAAKtG,KAAKgqG,qBAEf/pG,EAAKqG,KAAKtG,KAAKiqG,oBAEfhqG,EAAKqG,KAAKtG,KAAKwkG,aAEfvkG,EAAKqG,KAAKtG,KAAKkqG,uBAEfjqG,EAAKqG,KAAKtG,KAAKmqG,aAEflqG,EAAKqG,KAAKtG,KAAKoqG,gBAERnqG,IAGPg0E,GAAU,MACZhtE,YAAY4oF,EAAWxrF,EAAMgmG,EAAKC,GAChCtqG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKqqG,IAAMA,EACXrqG,KAAKsqG,IAAMA,EAEb/Z,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNymF,EAAM7Z,EAAK5sE,KACX0mF,EAAM9Z,EAAK5sE,KACf,OAAO,IAAIqwD,GAAQ4b,EAAWxrF,EAAMgmG,EAAKC,GAE3C7Z,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKqqG,KAEfpqG,EAAKqG,KAAKtG,KAAKsqG,KAERrqG,IAGPi0E,GAAmB,MACrBjtE,YAAY4oF,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,GACvDz6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu6F,WAAaA,EAClBv6F,KAAKw6F,eAAiBA,EACtBx6F,KAAKy6F,cAAgBA,EAEvBlK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN22E,EAAa/J,EAAK5sE,KAClB42E,EAAiBhK,EAAK5sE,KACtB62E,EAAgBjK,EAAK5sE,KACzB,OAAO,IAAIswD,GAAiB2b,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,GAE3EhK,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu6F,YAEft6F,EAAKqG,KAAKtG,KAAKw6F,gBAEfv6F,EAAKqG,KAAKtG,KAAKy6F,eAERx6F,IAGPk0E,GAAqB,MACvBltE,YAAY4oF,EAAWxrF,EAAMuiG,EAAgB2D,EAAwBC,EAAUhG,EAAaiG,GAC1FzqG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4mG,eAAiBA,EACtB5mG,KAAKuqG,uBAAyBA,EAC9BvqG,KAAKwqG,SAAWA,EAChBxqG,KAAKwkG,YAAcA,EACnBxkG,KAAKyqG,kBAAoBA,EAE3Bla,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgjF,EAAiBpW,EAAK5sE,KACtB2mF,EAAyB/Z,EAAK5sE,KAC9B4mF,EAAWha,EAAK5sE,KAChB4gF,EAAchU,EAAK5sE,KACnB6mF,EAAoBja,EAAK5sE,KAC7B,OAAO,IAAIuwD,GAAmB0b,EAAWxrF,EAAMuiG,EAAgB2D,EAAwBC,EAAUhG,EAAaiG,GAEhHha,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK4mG,gBAEf3mG,EAAKqG,KAAKtG,KAAKuqG,wBAEftqG,EAAKqG,KAAKtG,KAAKwqG,UAEfvqG,EAAKqG,KAAKtG,KAAKwkG,aAEfvkG,EAAKqG,KAAKtG,KAAKyqG,mBAERxqG,IAGPm0E,GAA8B,MAChCntE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBa,GACnH3xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK2xF,KAAOA,EAEdpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB+tE,EAAOnB,EAAK5sE,KAChB,OAAO,IAAIwwD,GAA4Byb,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBa,GAElJlB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK2xF,MAER1xF,IAGPo0E,GAAoB,MACtBptE,YAAY4oF,EAAWxrF,EAAMuiG,EAAgB8D,GAC3C1qG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4mG,eAAiBA,EACtB5mG,KAAK0qG,kBAAoBA,EAE3Bna,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgjF,EAAiBpW,EAAK5sE,KACtB8mF,EAAoBla,EAAK5sE,KAC7B,OAAO,IAAIywD,GAAkBwb,EAAWxrF,EAAMuiG,EAAgB8D,GAEhEja,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK4mG,gBAEf3mG,EAAKqG,KAAKtG,KAAK0qG,mBAERzqG,IAGPq0E,GAAU,MACZrtE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIlc,GAAQub,EAAWxrF,GAEhCosF,SAEE,MADW,KAIXlc,GAAuB,MACzBttE,YAAY4oF,EAAWxrF,EAAMitF,GAC3BtxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsxF,MAAQA,EAEff,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0tE,EAAQd,EAAK5sE,KACjB,OAAO,IAAI2wD,GAAqBsb,EAAWxrF,EAAMitF,GAEnDb,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKsxF,OAERrxF,IAGPu0E,GAAmB,MACrBvtE,YAAY4oF,EAAWxrF,EAAMo5F,EAAWC,EAAWiN,EAAUC,EAAWC,EAAkBC,EAAeC,EAAe7Q,GACtHl6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKy9F,UAAYA,EACjBz9F,KAAK09F,UAAYA,EACjB19F,KAAK2qG,SAAWA,EAChB3qG,KAAK4qG,UAAYA,EACjB5qG,KAAK6qG,iBAAmBA,EACxB7qG,KAAK8qG,cAAgBA,EACrB9qG,KAAK+qG,cAAgBA,EACrB/qG,KAAKk6F,MAAQA,EAEf3J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN65E,EAAYjN,EAAK5sE,KACjB85E,EAAYlN,EAAK5sE,KACjB+mF,EAAWna,EAAK5sE,KAChBgnF,EAAYpa,EAAK5sE,KACjBinF,EAAmBra,EAAK5sE,KACxBknF,EAAgBta,EAAK5sE,KACrBmnF,EAAgBva,EAAK5sE,KACrBs2E,EAAQ1J,EAAK5sE,KACjB,OAAO,IAAI4wD,GAAiBqb,EAAWxrF,EAAMo5F,EAAWC,EAAWiN,EAAUC,EAAWC,EAAkBC,EAAeC,EAAe7Q,GAE1IzJ,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKy9F,WAEfx9F,EAAKqG,KAAKtG,KAAK09F,WAEfz9F,EAAKqG,KAAKtG,KAAK2qG,UAEf1qG,EAAKqG,KAAKtG,KAAK4qG,WAEf3qG,EAAKqG,KAAKtG,KAAK6qG,kBAEf5qG,EAAKqG,KAAKtG,KAAK8qG,eAEf7qG,EAAKqG,KAAKtG,KAAK+qG,eAEf9qG,EAAKqG,KAAKtG,KAAKk6F,OAERj6F,IAGPw0E,GAAgB,MAClBxtE,YAAY4oF,EAAWxrF,EAAM2mG,EAAeC,GAC1CjrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgrG,cAAgBA,EACrBhrG,KAAKirG,cAAgBA,EAEvB1a,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNonF,EAAgBxa,EAAK5sE,KACrBqnF,EAAgBza,EAAK5sE,KACzB,OAAO,IAAI6wD,GAAcob,EAAWxrF,EAAM2mG,EAAeC,GAE3Dxa,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgrG,eAEf/qG,EAAKqG,KAAKtG,KAAKirG,eAERhrG,IAGPy0E,GAAc,MAChBztE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamD,GAC9CpzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKozF,SAAWA,EAElB7C,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwvE,EAAW5C,EAAK5sE,KACpB,OAAO,IAAI8wD,GAAYmb,EAAWxrF,EAAM2rF,EAAMC,EAAamD,GAE7D3C,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKozF,UAERnzF,IAGP00E,GAAwC,MAC1C1tE,YAAY4oF,EAAWxrF,EAAM6mG,EAAyBC,GACpDnrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKkrG,wBAA0BA,EAC/BlrG,KAAKmrG,mBAAqBA,EAE5B5a,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNsnF,EAA0B1a,EAAK5sE,KAC/BunF,EAAqB3a,EAAK5sE,KAC9B,OAAO,IAAI+wD,GAAsCkb,EAAWxrF,EAAM6mG,EAAyBC,GAE7F1a,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKkrG,yBAEfjrG,EAAKqG,KAAKtG,KAAKmrG,oBAERlrG,IAGP20E,GAAyB,MAC3B3tE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUC,EAAUjY,GAClEpzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKorG,SAAWA,EAChBprG,KAAKqrG,SAAWA,EAChBrrG,KAAKozF,SAAWA,EAElB7C,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwnF,EAAW5a,EAAK5sE,KAChBynF,EAAW7a,EAAK5sE,KAChBwvE,EAAW5C,EAAK5sE,KACpB,OAAO,IAAIgxD,GAAuBib,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUC,EAAUjY,GAE5F3C,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKorG,UAEfnrG,EAAKqG,KAAKtG,KAAKqrG,UAEfprG,EAAKqG,KAAKtG,KAAKozF,UAERnzF,IAGP40E,GAA4B,MAC9B5tE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaqb,GAC9CtrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKsrG,qBAAuBA,EAE9B/a,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB0nF,EAAuB9a,EAAK5sE,KAChC,OAAO,IAAIixD,GAA0Bgb,EAAWxrF,EAAM2rF,EAAMC,EAAaqb,GAE3E7a,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKsrG,sBAERrrG,IAGP60E,GAAwB,MAC1B7tE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI1b,GAAsB+a,EAAWxrF,GAE9CosF,SAEE,MADW,KAIX1b,GAAsC,MACxC9tE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAasb,EAAiBC,GAC/DxrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKurG,gBAAkBA,EACvBvrG,KAAKwrG,oBAAsBA,EAE7Bjb,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2nF,EAAkB/a,EAAK5sE,KACvB4nF,EAAsBhb,EAAK5sE,KAC/B,OAAO,IAAImxD,GAAoC8a,EAAWxrF,EAAM2rF,EAAMC,EAAasb,EAAiBC,GAEtG/a,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKurG,iBAEftrG,EAAKqG,KAAKtG,KAAKwrG,qBAERvrG,IAGP+0E,GAAmB,MACrB/tE,YAAY4oF,EAAWxrF,EAAM+mG,EAAUK,EAAgBC,EAAc1b,EAAMC,EAAamD,EAAUuY,GAChG3rG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKorG,SAAWA,EAChBprG,KAAKyrG,eAAiBA,EACtBzrG,KAAK0rG,aAAeA,EACpB1rG,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKozF,SAAWA,EAChBpzF,KAAK2rG,SAAWA,EAElBpb,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwnF,EAAW5a,EAAK5sE,KAChB6nF,EAAiBjb,EAAK5sE,KACtB8nF,EAAelb,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwvE,EAAW5C,EAAK5sE,KAChB+nF,EAAWnb,EAAK5sE,KACpB,OAAO,IAAIoxD,GAAiB6a,EAAWxrF,EAAM+mG,EAAUK,EAAgBC,EAAc1b,EAAMC,EAAamD,EAAUuY,GAEpHlb,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKorG,UAEfnrG,EAAKqG,KAAKtG,KAAKyrG,gBAEfxrG,EAAKqG,KAAKtG,KAAK0rG,cAEfzrG,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKozF,UAEfnzF,EAAKqG,KAAKtG,KAAK2rG,UAER1rG,IAGPg1E,GAAsB,MACxBhuE,YAAY4oF,EAAWxrF,EAAMunG,EAAgBC,EAAc5b,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4rG,eAAiBA,EACtB5rG,KAAK6rG,aAAeA,EACpB7rG,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgoF,EAAiBpb,EAAK5sE,KACtBioF,EAAerb,EAAK5sE,KACpBqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIqxD,GAAoB4a,EAAWxrF,EAAMunG,EAAgBC,EAAc5b,GAEhFQ,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK4rG,gBAEf3rG,EAAKqG,KAAKtG,KAAK6rG,cAEf5rG,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPi1E,GAA2B,MAC7BjuE,YAAY4oF,EAAWxrF,EAAMynG,EAAaC,EAAmBC,EAAgBC,EAAyBC,GACpGlsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8rG,YAAcA,EACnB9rG,KAAK+rG,kBAAoBA,EACzB/rG,KAAKgsG,eAAiBA,EACtBhsG,KAAKisG,wBAA0BA,EAC/BjsG,KAAKksG,gBAAkBA,EAEzB3b,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkoF,EAActb,EAAK5sE,KACnBmoF,EAAoBvb,EAAK5sE,KACzBooF,EAAiBxb,EAAK5sE,KACtBqoF,EAA0Bzb,EAAK5sE,KAC/BsoF,EAAkB1b,EAAK5sE,KAC3B,OAAO,IAAIsxD,GAAyB2a,EAAWxrF,EAAMynG,EAAaC,EAAmBC,EAAgBC,EAAyBC,GAEhIzb,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8rG,aAEf7rG,EAAKqG,KAAKtG,KAAK+rG,mBAEf9rG,EAAKqG,KAAKtG,KAAKgsG,gBAEf/rG,EAAKqG,KAAKtG,KAAKisG,yBAEfhsG,EAAKqG,KAAKtG,KAAKksG,iBAERjsG,IAGPk1E,GAA8B,MAChCluE,YAAY4oF,EAAWxrF,EAAM+mG,EAAUK,EAAgBC,EAAc1b,EAAMC,EAAamD,EAAUuY,EAAUQ,EAAiBC,GAC3HpsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKorG,SAAWA,EAChBprG,KAAKyrG,eAAiBA,EACtBzrG,KAAK0rG,aAAeA,EACpB1rG,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKozF,SAAWA,EAChBpzF,KAAK2rG,SAAWA,EAChB3rG,KAAKmsG,gBAAkBA,EACvBnsG,KAAKosG,aAAeA,EAEtB7b,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwnF,EAAW5a,EAAK5sE,KAChB6nF,EAAiBjb,EAAK5sE,KACtB8nF,EAAelb,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwvE,EAAW5C,EAAK5sE,KAChB+nF,EAAWnb,EAAK5sE,KAChBuoF,EAAkB3b,EAAK5sE,KACvBwoF,EAAe5b,EAAK5sE,KACxB,OAAO,IAAIuxD,GAA4B0a,EAAWxrF,EAAM+mG,EAAUK,EAAgBC,EAAc1b,EAAMC,EAAamD,EAAUuY,EAAUQ,EAAiBC,GAE1J3b,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKorG,UAEfnrG,EAAKqG,KAAKtG,KAAKyrG,gBAEfxrG,EAAKqG,KAAKtG,KAAK0rG,cAEfzrG,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKozF,UAEfnzF,EAAKqG,KAAKtG,KAAK2rG,UAEf1rG,EAAKqG,KAAKtG,KAAKmsG,iBAEflsG,EAAKqG,KAAKtG,KAAKosG,cAERnsG,IAGPm1E,GAAkB,MACpBnuE,YAAY4oF,EAAWxrF,EAAMgoG,GAC3BrsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKqsG,UAAYA,EAEnB9b,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNyoF,EAAY7b,EAAK5sE,KACrB,OAAO,IAAIwxD,GAAgBya,EAAWxrF,EAAMgoG,GAE9C5b,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKqsG,WAERpsG,IAGPo1E,GAAqB,MACvBpuE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUkB,EAASX,EAAUvY,GAC3EpzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKorG,SAAWA,EAChBprG,KAAKssG,QAAUA,EACftsG,KAAK2rG,SAAWA,EAChB3rG,KAAKozF,SAAWA,EAElB7C,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwnF,EAAW5a,EAAK5sE,KAChB0oF,EAAU9b,EAAK5sE,KACf+nF,EAAWnb,EAAK5sE,KAChBwvE,EAAW5C,EAAK5sE,KACpB,OAAO,IAAIyxD,GAAmBwa,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUkB,EAASX,EAAUvY,GAEjG3C,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKorG,UAEfnrG,EAAKqG,KAAKtG,KAAKssG,SAEfrsG,EAAKqG,KAAKtG,KAAK2rG,UAEf1rG,EAAKqG,KAAKtG,KAAKozF,UAERnzF,IAGPq1E,GAAwB,MAC1BruE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAasc,EAAkBC,GAChExsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKusG,iBAAmBA,EACxBvsG,KAAKwsG,iBAAmBA,EAE1Bjc,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2oF,EAAmB/b,EAAK5sE,KACxB4oF,EAAmBhc,EAAK5sE,KAC5B,OAAO,IAAI0xD,GAAsBua,EAAWxrF,EAAM2rF,EAAMC,EAAasc,EAAkBC,GAEzF/b,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKusG,kBAEftsG,EAAKqG,KAAKtG,KAAKwsG,kBAERvsG,IAGPs1E,GAA6B,MAC/BtuE,YAAY4oF,EAAWxrF,EAAMooG,EAAeC,EAAeR,GACzDlsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKysG,cAAgBA,EACrBzsG,KAAK0sG,cAAgBA,EACrB1sG,KAAKksG,gBAAkBA,EAEzB3b,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6oF,EAAgBjc,EAAK5sE,KACrB8oF,EAAgBlc,EAAK5sE,KACrBsoF,EAAkB1b,EAAK5sE,KAC3B,OAAO,IAAI2xD,GAA2Bsa,EAAWxrF,EAAMooG,EAAeC,EAAeR,GAEvFzb,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKysG,eAEfxsG,EAAKqG,KAAKtG,KAAK0sG,eAEfzsG,EAAKqG,KAAKtG,KAAKksG,iBAERjsG,IAGPu1E,GAAqC,MACvCvuE,YAAY4oF,EAAWxrF,EAAMooG,EAAeC,EAAeR,EAAiBS,EAAkBC,GAC5F5sG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKysG,cAAgBA,EACrBzsG,KAAK0sG,cAAgBA,EACrB1sG,KAAKksG,gBAAkBA,EACvBlsG,KAAK2sG,iBAAmBA,EACxB3sG,KAAK4sG,iBAAmBA,EAE1Brc,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6oF,EAAgBjc,EAAK5sE,KACrB8oF,EAAgBlc,EAAK5sE,KACrBsoF,EAAkB1b,EAAK5sE,KACvB+oF,EAAmBnc,EAAK5sE,KACxBgpF,EAAmBpc,EAAK5sE,KAC5B,OAAO,IAAI4xD,GAAmCqa,EAAWxrF,EAAMooG,EAAeC,EAAeR,EAAiBS,EAAkBC,GAElInc,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKysG,eAEfxsG,EAAKqG,KAAKtG,KAAK0sG,eAEfzsG,EAAKqG,KAAKtG,KAAKksG,iBAEfjsG,EAAKqG,KAAKtG,KAAK2sG,kBAEf1sG,EAAKqG,KAAKtG,KAAK4sG,kBAER3sG,IAGPw1E,GAAgC,MAClCxuE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUkB,EAASX,EAAUvY,EAAUgZ,GACrFpsG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKorG,SAAWA,EAChBprG,KAAKssG,QAAUA,EACftsG,KAAK2rG,SAAWA,EAChB3rG,KAAKozF,SAAWA,EAChBpzF,KAAKosG,aAAeA,EAEtB7b,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwnF,EAAW5a,EAAK5sE,KAChB0oF,EAAU9b,EAAK5sE,KACf+nF,EAAWnb,EAAK5sE,KAChBwvE,EAAW5C,EAAK5sE,KAChBwoF,EAAe5b,EAAK5sE,KACxB,OAAO,IAAI6xD,GAA8Boa,EAAWxrF,EAAM2rF,EAAMC,EAAamb,EAAUkB,EAASX,EAAUvY,EAAUgZ,GAEtH3b,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKorG,UAEfnrG,EAAKqG,KAAKtG,KAAKssG,SAEfrsG,EAAKqG,KAAKtG,KAAK2rG,UAEf1rG,EAAKqG,KAAKtG,KAAKozF,UAEfnzF,EAAKqG,KAAKtG,KAAKosG,cAERnsG,IAGPy1E,GAAwB,MAC1BzuE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,EAAaqH,GAC3DprG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgkG,WAAaD,EAClB/jG,KAAKorG,SAAWA,EAElB7a,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBmgF,EAAcvT,EAAK5sE,KACnBwnF,EAAW5a,EAAK5sE,KACpB,OAAO,IAAI8xD,GAAsBma,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,EAAaqH,GAEpF3a,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgkG,YAEf/jG,EAAKqG,KAAKtG,KAAKorG,UAERnrG,IAGP01E,GAA0B,MAC5B1uE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa4c,EAAkBC,EAAkBC,GAClF/sG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK6sG,iBAAmBA,EACxB7sG,KAAK8sG,iBAAmBA,EACxB9sG,KAAK+sG,WAAaA,EAEpBxc,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBipF,EAAmBrc,EAAK5sE,KACxBkpF,EAAmBtc,EAAK5sE,KACxBmpF,EAAavc,EAAK5sE,KACtB,OAAO,IAAI+xD,GAAwBka,EAAWxrF,EAAM2rF,EAAMC,EAAa4c,EAAkBC,EAAkBC,GAE7Gtc,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK6sG,kBAEf5sG,EAAKqG,KAAKtG,KAAK8sG,kBAEf7sG,EAAKqG,KAAKtG,KAAK+sG,YAER9sG,IAGP21E,GAA6B,MAC/B3uE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI5a,GAA2Bia,EAAWxrF,GAEnDosF,SAEE,MADW,KAIX5a,GAAqB,MACvB5uE,YAAY4oF,EAAWxrF,EAAM2oG,EAAgBC,GAC3CjtG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgtG,eAAiBA,EACtBhtG,KAAKitG,cAAgBA,EAEvB1c,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNopF,EAAiBxc,EAAK5sE,KACtBqpF,EAAgBzc,EAAK5sE,KACzB,OAAO,IAAIiyD,GAAmBga,EAAWxrF,EAAM2oG,EAAgBC,GAEjExc,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgtG,gBAEf/sG,EAAKqG,KAAKtG,KAAKitG,eAERhtG,IAGP61E,GAAwB,MAC1B7uE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKmc,EAAiBC,EAAe/c,GACxJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKktG,gBAAkBA,EACvBltG,KAAKmtG,cAAgBA,EACrBntG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXspF,EAAkB1c,EAAK5sE,KACvBupF,EAAgB3c,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkyD,GAAsB+Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKmc,EAAiBC,EAAe/c,GAEjLK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKmtG,eAEfltG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP81E,GAA4B,MAC9B9uE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiBC,GACpLntG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKktG,gBAAkBA,EACvBltG,KAAKmtG,cAAgBA,EAEvB5c,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBspF,EAAkB1c,EAAK5sE,KACvBupF,EAAgB3c,EAAK5sE,KACzB,OAAO,IAAImyD,GAA0B8Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiBC,GAEjN1c,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKmtG,eAERltG,IAGP+1E,GAAmB,MACrB/uE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIoyD,GAAiB6Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPg2E,GAAuB,MACzBhvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqyD,GAAqB4Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPi2E,GAAY,MACdjvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsyD,GAAU2Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPk2E,GAAwB,MAC1BlvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIuyD,GAAsB0Z,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEjJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPm2E,GAAgB,MAClBnvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwyD,GAAcyZ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPo2E,GAAY,MACdpvE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkBuQ,EAAWC,EAAaC,EAAWC,GACnKvtG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKy8F,gBAAkBA,EACvBz8F,KAAK08F,iBAAmBA,EACxB18F,KAAK28F,cAAgBA,EACrB38F,KAAK48F,aAAeA,EACpB58F,KAAK68F,iBAAmBA,EACxB78F,KAAKotG,UAAYA,EACjBptG,KAAKqtG,YAAcA,EACnBrtG,KAAKstG,UAAYA,EACjBttG,KAAKutG,cAAgBA,EAEvBhd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB64E,EAAkBjM,EAAK5sE,KACvB84E,EAAmBlM,EAAK5sE,KACxB+4E,EAAgBnM,EAAK5sE,KACrBg5E,EAAepM,EAAK5sE,KACpBi5E,EAAmBrM,EAAK5sE,KACxBwpF,EAAY5c,EAAK5sE,KACjBypF,EAAc7c,EAAK5sE,KACnB0pF,EAAY9c,EAAK5sE,KACjB2pF,EAAgB/c,EAAK5sE,KACzB,OAAO,IAAIyyD,GAAUwZ,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkBuQ,EAAWC,EAAaC,EAAWC,GAEhL9c,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKy8F,iBAEfx8F,EAAKqG,KAAKtG,KAAK08F,kBAEfz8F,EAAKqG,KAAKtG,KAAK28F,eAEf18F,EAAKqG,KAAKtG,KAAK48F,cAEf38F,EAAKqG,KAAKtG,KAAK68F,kBAEf58F,EAAKqG,KAAKtG,KAAKotG,WAEfntG,EAAKqG,KAAKtG,KAAKqtG,aAEfptG,EAAKqG,KAAKtG,KAAKstG,WAEfrtG,EAAKqG,KAAKtG,KAAKutG,eAERttG,IAGPq2E,GAAwB,MAC1BrvE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAC9E77F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAKk/F,cAAgBA,EACrBl/F,KAAKu3F,SAAWA,EAChBv3F,KAAK67F,MAAQA,EAEftL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBs7E,EAAgB1O,EAAK5sE,KACrB2zE,EAAW/G,EAAK5sE,KAChBi4E,EAAQrL,EAAK5sE,KACjB,OAAO,IAAI0yD,GAAsBuZ,EAAWxrF,EAAM2vF,EAAaC,EAAaiL,EAAe3H,EAAUsE,GAEvGpL,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAKk/F,eAEfj/F,EAAKqG,KAAKtG,KAAKu3F,UAEft3F,EAAKqG,KAAKtG,KAAK67F,OAER57F,IAGPs2E,GAAkB,MACpBtvE,YAAY4oF,EAAWxrF,EAAMmpG,GAC3BxtG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwtG,SAAWA,EAElBjd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4pF,EAAWhd,EAAK5sE,KACpB,OAAO,IAAI2yD,GAAgBsZ,EAAWxrF,EAAMmpG,GAE9C/c,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKwtG,UAERvtG,IAGPu2E,GAAqB,MACvBvvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4yD,GAAmBqZ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE9IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPw2E,GAAyB,MAC3BxvE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6yD,GAAuBoZ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE7KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPy2E,GAAe,MACjBzvE,YAAY4oF,EAAWxrF,EAAMg5F,EAAYC,GACvCt9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq9F,WAAaA,EAClBr9F,KAAKs9F,SAAWA,EAElB/M,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy5E,EAAa7M,EAAK5sE,KAClB05E,EAAW9M,EAAK5sE,KACpB,OAAO,IAAI8yD,GAAamZ,EAAWxrF,EAAMg5F,EAAYC,GAEvD7M,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKq9F,YAEfp9F,EAAKqG,KAAKtG,KAAKs9F,UAERr9F,IAGP02E,GAAY,MACd1vE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GACtElwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAEpBK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KACtB,OAAO,IAAI+yD,GAAUkZ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GAEnFO,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAERjwF,IAGP22E,GAAsB,MACxB3vE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIgzD,GAAoBiZ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAEhFQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP42E,GAAqB,MACvB5vE,YAAY4oF,EAAWxrF,EAAMuiG,GAC3B5mG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4mG,eAAiBA,EAExBrW,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgjF,EAAiBpW,EAAK5sE,KAC1B,OAAO,IAAIizD,GAAmBgZ,EAAWxrF,EAAMuiG,GAEjDnW,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK4mG,gBAER3mG,IAGP62E,GAAe,MACjB7vE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkB4Q,EAAiBC,EAAmBC,EAAoBC,GACxL5tG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKy8F,gBAAkBA,EACvBz8F,KAAK08F,iBAAmBA,EACxB18F,KAAK28F,cAAgBA,EACrB38F,KAAK48F,aAAeA,EACpB58F,KAAK68F,iBAAmBA,EACxB78F,KAAKytG,gBAAkBA,EACvBztG,KAAK0tG,kBAAoBA,EACzB1tG,KAAK2tG,mBAAqBA,EAC1B3tG,KAAK4tG,qBAAuBA,EAE9Brd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB64E,EAAkBjM,EAAK5sE,KACvB84E,EAAmBlM,EAAK5sE,KACxB+4E,EAAgBnM,EAAK5sE,KACrBg5E,EAAepM,EAAK5sE,KACpBi5E,EAAmBrM,EAAK5sE,KACxB6pF,EAAkBjd,EAAK5sE,KACvB8pF,EAAoBld,EAAK5sE,KACzB+pF,EAAqBnd,EAAK5sE,KAC1BgqF,EAAuBpd,EAAK5sE,KAChC,OAAO,IAAIkzD,GAAa+Y,EAAWxrF,EAAM2rF,EAAMC,EAAawM,EAAiBC,EAAkBC,EAAeC,EAAcC,EAAkB4Q,EAAiBC,EAAmBC,EAAoBC,GAExMnd,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKy8F,iBAEfx8F,EAAKqG,KAAKtG,KAAK08F,kBAEfz8F,EAAKqG,KAAKtG,KAAK28F,eAEf18F,EAAKqG,KAAKtG,KAAK48F,cAEf38F,EAAKqG,KAAKtG,KAAK68F,kBAEf58F,EAAKqG,KAAKtG,KAAKytG,iBAEfxtG,EAAKqG,KAAKtG,KAAK0tG,mBAEfztG,EAAKqG,KAAKtG,KAAK2tG,oBAEf1tG,EAAKqG,KAAKtG,KAAK4tG,sBAER3tG,IAGP82E,GAAc,MAChB9vE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYQ,EAAUN,GAC5FpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK0wF,SAAWA,EAChB1wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClB8sE,EAAWF,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImzD,GAAY8Y,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYQ,EAAUN,GAE3GK,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK0wF,UAEfzwF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+2E,GAAiB,MACnB/vE,YAAY4oF,EAAWxrF,EAAMwpG,GAC3B7tG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAEpBtd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KACtB,OAAO,IAAIozD,GAAe6Y,EAAWxrF,EAAMwpG,GAE7Cpd,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK6tG,YAER5tG,IAGPg3E,GAAmB,MACrBhwE,YAAY4oF,EAAWxrF,EAAMwpG,EAAYrD,EAAUxU,GACjDh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAClB7tG,KAAKwqG,SAAWA,EAChBxqG,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KAClB4mF,EAAWha,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAIqzD,GAAiB4Y,EAAWxrF,EAAMwpG,EAAYrD,EAAUxU,GAErEvF,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK6tG,YAEf5tG,EAAKqG,KAAKtG,KAAKwqG,UAEfvqG,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGPi3E,GAAmB,MACrBjwE,YAAY4oF,EAAWxrF,EAAMwpG,EAAYrD,EAAUxU,EAAeL,GAChE31F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAClB7tG,KAAKwqG,SAAWA,EAChBxqG,KAAKg2F,cAAgBA,EACrBh2F,KAAK21F,aAAeA,EAEtBpF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KAClB4mF,EAAWha,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACrB+xE,EAAenF,EAAK5sE,KACxB,OAAO,IAAIszD,GAAiB2Y,EAAWxrF,EAAMwpG,EAAYrD,EAAUxU,EAAeL,GAEpFlF,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK6tG,YAEf5tG,EAAKqG,KAAKtG,KAAKwqG,UAEfvqG,EAAKqG,KAAKtG,KAAKg2F,eAEf/1F,EAAKqG,KAAKtG,KAAK21F,cAER11F,IAGPk3E,GAA4B,MAC9BlwE,YAAY4oF,EAAWxrF,EAAMwpG,EAAYzB,EAAcrb,GACrD/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAClB7tG,KAAKosG,aAAeA,EACpBpsG,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KAClBwoF,EAAe5b,EAAK5sE,KACpBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIuzD,GAA0B0Y,EAAWxrF,EAAMwpG,EAAYzB,EAAcrb,GAElFN,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK6tG,YAEf5tG,EAAKqG,KAAKtG,KAAKosG,cAEfnsG,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPm3E,GAAe,MACjBnwE,YAAY4oF,EAAWxrF,EAAM42F,GAC3Bj7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi7F,SAAWA,EAElB1K,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq3E,EAAWzK,EAAK5sE,KACpB,OAAO,IAAIwzD,GAAayY,EAAWxrF,EAAM42F,GAE3CxK,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKi7F,UAERh7F,IAGPo3E,GAAoB,MACtBpwE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIyzD,GAAkBwY,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE7IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPq3E,GAAyB,MAC3BrwE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0zD,GAAuBuY,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAElJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPs3E,GAAkB,MACpBtwE,YAAY4oF,EAAWxrF,EAAM8rF,EAAgBH,EAAMC,EAAa6d,EAAOC,GACrE/tG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmwF,eAAiBA,EACtBnwF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK8tG,MAAQA,EACb9tG,KAAK+tG,UAAYA,EAEnBxd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNusE,EAAiBK,EAAK5sE,KACtBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBkqF,EAAQtd,EAAK5sE,KACbmqF,EAAYvd,EAAK5sE,KACrB,OAAO,IAAI2zD,GAAgBsY,EAAWxrF,EAAM8rF,EAAgBH,EAAMC,EAAa6d,EAAOC,GAExFtd,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK8tG,OAEf7tG,EAAKqG,KAAKtG,KAAK+tG,WAER9tG,IAGPu3E,GAA8B,MAChCvwE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+d,EAAsBC,GACpEjuG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKguG,qBAAuBA,EAC5BhuG,KAAKiuG,qBAAuBA,EAE9B1d,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBoqF,EAAuBxd,EAAK5sE,KAC5BqqF,EAAuBzd,EAAK5sE,KAChC,OAAO,IAAI4zD,GAA4BqY,EAAWxrF,EAAM2rF,EAAMC,EAAa+d,EAAsBC,GAEnGxd,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKguG,sBAEf/tG,EAAKqG,KAAKtG,KAAKiuG,sBAERhuG,IAGPw3E,GAA2B,MAC7BxwE,YAAY4oF,EAAWxrF,EAAM6pG,EAAsBC,GACjDnuG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKkuG,qBAAuBA,EAC5BluG,KAAKmuG,sBAAwBA,EAE/B5d,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNsqF,EAAuB1d,EAAK5sE,KAC5BuqF,EAAwB3d,EAAK5sE,KACjC,OAAO,IAAI6zD,GAAyBoY,EAAWxrF,EAAM6pG,EAAsBC,GAE7E1d,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKkuG,sBAEfjuG,EAAKqG,KAAKtG,KAAKmuG,uBAERluG,IAGPy3E,GAAkB,MACpBzwE,YAAY4oF,EAAWxrF,EAAMu+F,EAAWC,EAASuL,EAAa5J,GAC5DxkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4iG,UAAYA,EACjB5iG,KAAK6iG,QAAUA,EACf7iG,KAAKouG,YAAcA,EACnBpuG,KAAKwkG,YAAcA,EAErBjU,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg/E,EAAYpS,EAAK5sE,KACjBi/E,EAAUrS,EAAK5sE,KACfwqF,EAAc5d,EAAK5sE,KACnB4gF,EAAchU,EAAK5sE,KACvB,OAAO,IAAI8zD,GAAgBmY,EAAWxrF,EAAMu+F,EAAWC,EAASuL,EAAa5J,GAE/E/T,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK4iG,WAEf3iG,EAAKqG,KAAKtG,KAAK6iG,SAEf5iG,EAAKqG,KAAKtG,KAAKouG,aAEfnuG,EAAKqG,KAAKtG,KAAKwkG,aAERvkG,IAGP03E,GAAwB,MAC1B1wE,YAAY4oF,EAAWxrF,EAAMwtF,EAAUmE,GACrCh2F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6xF,SAAWA,EAChB7xF,KAAKg2F,cAAgBA,EAEvBzF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiuE,EAAWrB,EAAK5sE,KAChBoyE,EAAgBxF,EAAK5sE,KACzB,OAAO,IAAI+zD,GAAsBkY,EAAWxrF,EAAMwtF,EAAUmE,GAE9DvF,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6xF,UAEf5xF,EAAKqG,KAAKtG,KAAKg2F,eAER/1F,IAGP23E,GAAY,MACd3wE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg0D,GAAUiY,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP43E,GAAgB,MAClB5wE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi0D,GAAcgY,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP63E,GAAkB,MACpB7wE,YAAY4oF,EAAWxrF,EAAMgqG,EAAYC,EAAmBC,EAAOC,EAAcC,EAAkBC,EAAmBC,EAA0BC,GAC9I5uG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKquG,WAAaA,EAClBruG,KAAKsuG,kBAAoBA,EACzBtuG,KAAKuuG,MAAQA,EACbvuG,KAAKwuG,aAAeA,EACpBxuG,KAAKyuG,iBAAmBA,EACxBzuG,KAAK0uG,kBAAoBA,EACzB1uG,KAAK2uG,yBAA2BA,EAChC3uG,KAAK4uG,aAAeA,EAEtBre,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNyqF,EAAa7d,EAAK5sE,KAClB0qF,EAAoB9d,EAAK5sE,KACzB2qF,EAAQ/d,EAAK5sE,KACb4qF,EAAehe,EAAK5sE,KACpB6qF,EAAmBje,EAAK5sE,KACxB8qF,EAAoBle,EAAK5sE,KACzB+qF,EAA2Bne,EAAK5sE,KAChCgrF,EAAepe,EAAK5sE,KACxB,OAAO,IAAIk0D,GAAgB+X,EAAWxrF,EAAMgqG,EAAYC,EAAmBC,EAAOC,EAAcC,EAAkBC,EAAmBC,EAA0BC,GAEjKne,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKquG,YAEfpuG,EAAKqG,KAAKtG,KAAKsuG,mBAEfruG,EAAKqG,KAAKtG,KAAKuuG,OAEftuG,EAAKqG,KAAKtG,KAAKwuG,cAEfvuG,EAAKqG,KAAKtG,KAAKyuG,kBAEfxuG,EAAKqG,KAAKtG,KAAK0uG,mBAEfzuG,EAAKqG,KAAKtG,KAAK2uG,0BAEf1uG,EAAKqG,KAAKtG,KAAK4uG,cAER3uG,IAGP83E,GAA6B,MAC/B9wE,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,GACrD70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAIm0D,GAA2B8X,EAAWxrF,EAAM2vF,EAAaC,EAAaY,GAEnFpE,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGP+3E,GAAU,MACZ/wE,YAAY4oF,EAAWxrF,EAAM0+F,GAC3B/iG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK+iG,SAAWA,EAElBxS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNm/E,EAAWvS,EAAK5sE,KACpB,OAAO,IAAIo0D,GAAQ6X,EAAWxrF,EAAM0+F,GAEtCtS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK+iG,UAER9iG,IAGPg4E,GAAY,MACdhxE,YAAY4oF,EAAWxrF,EAAMk6F,EAAcsQ,GACzC7uG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu+F,aAAeA,EACpBv+F,KAAK6uG,eAAiBA,EAExBte,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN26E,EAAe/N,EAAK5sE,KACpBirF,EAAiBre,EAAK5sE,KAC1B,OAAO,IAAIq0D,GAAU4X,EAAWxrF,EAAMk6F,EAAcsQ,GAEtDpe,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKu+F,cAEft+F,EAAKqG,KAAKtG,KAAK6uG,gBAER5uG,IAGPi4E,GAAwB,MAC1BjxE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgB2e,EAAgB1e,GAClHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAK8uG,eAAiBA,EACtB9uG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBkrF,EAAiBte,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIs0D,GAAsB2X,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgB2e,EAAgB1e,GAE3IK,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAK8uG,gBAEf7uG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPk4E,GAAiC,MACnClxE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAChIliG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKshG,cAAgBA,EACrBthG,KAAKwiG,cAAgBA,EACrBxiG,KAAK+uG,WAAaA,EAClB/uG,KAAKgvG,eAAiBA,EACtBhvG,KAAKkiG,iBAAmBA,EAE1B3R,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB09E,EAAgB9Q,EAAK5sE,KACrB4+E,EAAgBhS,EAAK5sE,KACrBmrF,EAAave,EAAK5sE,KAClBorF,EAAiBxe,EAAK5sE,KACtBs+E,EAAmB1R,EAAK5sE,KAC5B,OAAO,IAAIu0D,GAA+B0X,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAElKzR,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAKwiG,eAEfviG,EAAKqG,KAAKtG,KAAK+uG,YAEf9uG,EAAKqG,KAAKtG,KAAKgvG,gBAEf/uG,EAAKqG,KAAKtG,KAAKkiG,kBAERjiG,IAGPm4E,GAAY,MACdnxE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAC1HtwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKowF,eAAiBA,EACtBpwF,KAAKqwF,OAASA,EACdrwF,KAAKswF,gBAAkBA,EAEzBC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtBysE,EAASG,EAAK5sE,KACd0sE,EAAkBE,EAAK5sE,KAC3B,OAAO,IAAIw0D,GAAUyX,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAEvIG,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAKswF,iBAERrwF,IAGPo4E,GAAY,MACdpxE,YAAY4oF,EAAWxrF,EAAM8rF,EAAgB8e,EAAYC,EAAWC,EAAaC,EAAcC,EAAcvB,EAAOC,GAClH/tG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmwF,eAAiBA,EACtBnwF,KAAKivG,WAAaA,EAClBjvG,KAAKkvG,UAAYA,EACjBlvG,KAAKmvG,YAAcA,EACnBnvG,KAAKovG,aAAeA,EACpBpvG,KAAKqvG,aAAeA,EACpBrvG,KAAK8tG,MAAQA,EACb9tG,KAAK+tG,UAAYA,EAEnBxd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNusE,EAAiBK,EAAK5sE,KACtBqrF,EAAaze,EAAK5sE,KAClBsrF,EAAY1e,EAAK5sE,KACjBurF,EAAc3e,EAAK5sE,KACnBwrF,EAAe5e,EAAK5sE,KACpByrF,EAAe7e,EAAK5sE,KACpBkqF,EAAQtd,EAAK5sE,KACbmqF,EAAYvd,EAAK5sE,KACrB,OAAO,IAAIy0D,GAAUwX,EAAWxrF,EAAM8rF,EAAgB8e,EAAYC,EAAWC,EAAaC,EAAcC,EAAcvB,EAAOC,GAE/Htd,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKivG,YAEfhvG,EAAKqG,KAAKtG,KAAKkvG,WAEfjvG,EAAKqG,KAAKtG,KAAKmvG,aAEflvG,EAAKqG,KAAKtG,KAAKovG,cAEfnvG,EAAKqG,KAAKtG,KAAKqvG,cAEfpvG,EAAKqG,KAAKtG,KAAK8tG,OAEf7tG,EAAKqG,KAAKtG,KAAK+tG,WAER9tG,IAGPq4E,GAA2B,MAC7BrxE,YAAY4oF,EAAWxrF,EAAMirG,EAAWC,EAAiBzB,GACvD9tG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsvG,UAAYA,EACjBtvG,KAAKuvG,gBAAkBA,EACvBvvG,KAAK8tG,MAAQA,EAEfvd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0rF,EAAY9e,EAAK5sE,KACjB2rF,EAAkB/e,EAAK5sE,KACvBkqF,EAAQtd,EAAK5sE,KACjB,OAAO,IAAI00D,GAAyBuX,EAAWxrF,EAAMirG,EAAWC,EAAiBzB,GAEnFrd,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKsvG,WAEfrvG,EAAKqG,KAAKtG,KAAKuvG,iBAEftvG,EAAKqG,KAAKtG,KAAK8tG,OAER7tG,IAGPs4E,GAA6B,MAC/BtxE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAauf,EAAeC,EAAgBC,EAAS5S,GACtF98F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKwvG,cAAgBA,EACrBxvG,KAAKyvG,eAAiBA,EACtBzvG,KAAK0vG,QAAUA,EACf1vG,KAAK88F,MAAQA,EAEfvM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB4rF,EAAgBhf,EAAK5sE,KACrB6rF,EAAiBjf,EAAK5sE,KACtB8rF,EAAUlf,EAAK5sE,KACfk5E,EAAQtM,EAAK5sE,KACjB,OAAO,IAAI20D,GAA2BsX,EAAWxrF,EAAM2rF,EAAMC,EAAauf,EAAeC,EAAgBC,EAAS5S,GAEpHrM,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKwvG,eAEfvvG,EAAKqG,KAAKtG,KAAKyvG,gBAEfxvG,EAAKqG,KAAKtG,KAAK0vG,SAEfzvG,EAAKqG,KAAKtG,KAAK88F,OAER78F,IAGPu4E,GAAsB,MACxBvxE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,GACjCjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI40D,GAAoBqX,EAAWxrF,EAAM2rF,EAAMC,GAExDQ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPw4E,GAA4B,MAC9BxxE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,GAC9Cr/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EAEd9O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KAChB,OAAO,IAAI60D,GAA0BoX,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,GAE3E5O,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAERp/F,IAGPy4E,GAAU,MACZzxE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,EAAgBqS,GACxIziG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EACtBpwF,KAAKyiG,iBAAmBA,EAE1BlS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KACtB6+E,EAAmBjS,EAAK5sE,KAC5B,OAAO,IAAI80D,GAAQmX,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,EAAgBqS,GAEnJhS,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKyiG,kBAERxiG,IAGP04E,GAAc,MAChB1xE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+0D,GAAYkX,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP24E,GAAiB,MACnB3xE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg1D,GAAeiX,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP44E,GAAqB,MACvB5xE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi1D,GAAmBgX,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP64E,GAAiB,MACnB7xE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIk1D,GAAe+W,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP84E,GAAqB,MACvB9xE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIm1D,GAAmB8W,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+4E,GAAkB,MACpB/xE,YAAY4oF,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWuC,EAAOmW,EAAQC,EAAkBC,GACjH7vG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK62F,QAAUA,EACf72F,KAAK82F,QAAUA,EACf92F,KAAK+2F,KAAOA,EACZ/2F,KAAKg3F,iBAAmBA,EACxBh3F,KAAKi3F,UAAYA,EACjBj3F,KAAKw5F,MAAQA,EACbx5F,KAAK2vG,OAASA,EACd3vG,KAAK4vG,iBAAmBA,EACxB5vG,KAAK6vG,MAAQA,EAEftf,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNizE,EAAUrG,EAAK5sE,KACfkzE,EAAUtG,EAAK5sE,KACfmzE,EAAOvG,EAAK5sE,KACZozE,EAAmBxG,EAAK5sE,KACxBqzE,EAAYzG,EAAK5sE,KACjB41E,EAAQhJ,EAAK5sE,KACb+rF,EAASnf,EAAK5sE,KACdgsF,EAAmBpf,EAAK5sE,KACxBisF,EAAQrf,EAAK5sE,KACjB,OAAO,IAAIo1D,GAAgB6W,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,EAAWuC,EAAOmW,EAAQC,EAAkBC,GAEpIpf,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK62F,SAEf52F,EAAKqG,KAAKtG,KAAK82F,SAEf72F,EAAKqG,KAAKtG,KAAK+2F,MAEf92F,EAAKqG,KAAKtG,KAAKg3F,kBAEf/2F,EAAKqG,KAAKtG,KAAKi3F,WAEfh3F,EAAKqG,KAAKtG,KAAKw5F,OAEfv5F,EAAKqG,KAAKtG,KAAK2vG,QAEf1vG,EAAKqG,KAAKtG,KAAK4vG,kBAEf3vG,EAAKqG,KAAKtG,KAAK6vG,OAER5vG,IAGPg5E,GAAe,MACjBhyE,YAAY4oF,EAAWxrF,EAAMqxF,GAC3B11F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK01F,SAAWA,EAElBnF,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8xE,EAAWlF,EAAK5sE,KACpB,OAAO,IAAIq1D,GAAa4W,EAAWxrF,EAAMqxF,GAE3CjF,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK01F,UAERz1F,IAGPi5E,GAAe,MACjBjyE,YAAY4oF,EAAWxrF,EAAMyrG,EAASC,EAASC,GAC7ChwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vG,QAAUA,EACf9vG,KAAK+vG,QAAUA,EACf/vG,KAAKgwG,UAAYA,EAEnBzf,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksF,EAAUtf,EAAK5sE,KACfmsF,EAAUvf,EAAK5sE,KACfosF,EAAYxf,EAAK5sE,KACrB,OAAO,IAAIs1D,GAAa2W,EAAWxrF,EAAMyrG,EAASC,EAASC,GAE7Dvf,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8vG,SAEf7vG,EAAKqG,KAAKtG,KAAK+vG,SAEf9vG,EAAKqG,KAAKtG,KAAKgwG,WAER/vG,IAGPk5E,GAAkB,MACpBlyE,YAAY4oF,EAAWxrF,EAAMyrG,EAASC,GACpC/vG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vG,QAAUA,EACf9vG,KAAK+vG,QAAUA,EAEjBxf,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksF,EAAUtf,EAAK5sE,KACfmsF,EAAUvf,EAAK5sE,KACnB,OAAO,IAAIu1D,GAAgB0W,EAAWxrF,EAAMyrG,EAASC,GAEvDtf,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK8vG,SAEf7vG,EAAKqG,KAAKtG,KAAK+vG,SAER9vG,IAGPm5E,GAAW,MACbnyE,YAAY4oF,EAAWxrF,EAAMwwF,GAC3B70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAIw1D,GAASyW,EAAWxrF,EAAMwwF,GAEvCpE,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGPo5E,GAAW,MACbpyE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIy1D,GAASwW,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEpIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPq5E,GAAuB,MACzBryE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI01D,GAAqBuW,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPs5E,GAAe,MACjBtyE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI21D,GAAasW,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEnKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPu5E,GAAW,MACbvyE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIhX,GAASqW,EAAWxrF,GAEjCosF,SAEE,MADW,KAIXhX,GAAkB,MACpBxyE,YAAY4oF,EAAWxrF,EAAMwpG,EAAYoC,GACvCjwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAClB7tG,KAAKiwG,eAAiBA,EAExB1f,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KAClBqsF,EAAiBzf,EAAK5sE,KAC1B,OAAO,IAAI61D,GAAgBoW,EAAWxrF,EAAMwpG,EAAYoC,GAE1Dxf,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6tG,YAEf5tG,EAAKqG,KAAKtG,KAAKiwG,gBAERhwG,IAGPy5E,GAAoB,MACtBzyE,YAAY4oF,EAAWxrF,EAAMk6F,EAAc2R,EAAiBC,GAC1DnwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu+F,aAAeA,EACpBv+F,KAAKkwG,gBAAkBA,EACvBlwG,KAAKmwG,gBAAkBA,EAEzB5f,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN26E,EAAe/N,EAAK5sE,KACpBssF,EAAkB1f,EAAK5sE,KACvBusF,EAAkB3f,EAAK5sE,KAC3B,OAAO,IAAI81D,GAAkBmW,EAAWxrF,EAAMk6F,EAAc2R,EAAiBC,GAE/E1f,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKu+F,cAEft+F,EAAKqG,KAAKtG,KAAKkwG,iBAEfjwG,EAAKqG,KAAKtG,KAAKmwG,iBAERlwG,IAGP05E,GAAc,MAChB1yE,YAAY4oF,EAAWxrF,EAAM+rG,GAC3BpwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKowG,QAAUA,EAEjB7f,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwsF,EAAU5f,EAAK5sE,KACnB,OAAO,IAAI+1D,GAAYkW,EAAWxrF,EAAM+rG,GAE1C3f,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKowG,SAERnwG,IAGP25E,GAA+B,MACjC3yE,YAAY4oF,EAAWxrF,EAAMy0F,EAAaC,EAAelE,EAAUwb,GACjErwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK84F,YAAcA,EACnB94F,KAAK+4F,cAAgBA,EACrB/4F,KAAK60F,SAAWA,EAChB70F,KAAKqwG,kBAAoBA,EAE3B9f,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNk1E,EAActI,EAAK5sE,KACnBm1E,EAAgBvI,EAAK5sE,KACrBixE,EAAWrE,EAAK5sE,KAChBysF,EAAoB7f,EAAK5sE,KAC7B,OAAO,IAAIg2D,GAA6BiW,EAAWxrF,EAAMy0F,EAAaC,EAAelE,EAAUwb,GAEjG5f,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK84F,aAEf74F,EAAKqG,KAAKtG,KAAK+4F,eAEf94F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqwG,mBAERpwG,IAGP45E,GAAsB,MACxB5yE,YAAY4oF,EAAWxrF,EAAMu1F,EAAa0W,EAAQC,EAAOC,GACvDxwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EACnB55F,KAAKswG,OAASA,EACdtwG,KAAKuwG,MAAQA,EACbvwG,KAAKwwG,QAAUA,EAEjBjgB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACnB0sF,EAAS9f,EAAK5sE,KACd2sF,EAAQ/f,EAAK5sE,KACb4sF,EAAUhgB,EAAK5sE,KACnB,OAAO,IAAIi2D,GAAoBgW,EAAWxrF,EAAMu1F,EAAa0W,EAAQC,EAAOC,GAE9E/f,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK45F,aAEf35F,EAAKqG,KAAKtG,KAAKswG,QAEfrwG,EAAKqG,KAAKtG,KAAKuwG,OAEftwG,EAAKqG,KAAKtG,KAAKwwG,SAERvwG,IAGP65E,GAAc,MAChB7yE,YAAY4oF,EAAWxrF,EAAMmjG,GAC3BxnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwnG,OAASA,EAEhBjX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4jF,EAAShX,EAAK5sE,KAClB,OAAO,IAAIk2D,GAAY+V,EAAWxrF,EAAMmjG,GAE1C/W,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKwnG,QAERvnG,IAGP85E,GAAU,MACZ9yE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAIm2D,GAAQ8V,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAE9GL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGP+5E,GAAwB,MAC1B/yE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAIo2D,GAAsB6V,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAE5HL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGPg6E,GAAmB,MACrBhzE,YAAY4oF,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,EAAoBof,EAAkBC,EAAcC,EAAWC,EAAMC,EAAQC,EAAYC,GAC1I/wG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKoxF,QAAUA,EACfpxF,KAAKiwF,YAAcA,EACnBjwF,KAAKqxF,mBAAqBA,EAC1BrxF,KAAKywG,iBAAmBA,EACxBzwG,KAAK0wG,aAAeA,EACpB1wG,KAAK2wG,UAAYA,EACjB3wG,KAAK4wG,KAAOA,EACZ5wG,KAAK6wG,OAASA,EACd7wG,KAAK8wG,WAAaA,EAClB9wG,KAAK+wG,QAAUA,EAEjBxgB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwtE,EAAUZ,EAAK5sE,KACfqsE,EAAcO,EAAK5sE,KACnBytE,EAAqBb,EAAK5sE,KAC1B6sF,EAAmBjgB,EAAK5sE,KACxB8sF,EAAelgB,EAAK5sE,KACpB+sF,EAAYngB,EAAK5sE,KACjBgtF,EAAOpgB,EAAK5sE,KACZitF,EAASrgB,EAAK5sE,KACdktF,EAAatgB,EAAK5sE,KAClBmtF,EAAUvgB,EAAK5sE,KACnB,OAAO,IAAIq2D,GAAiB4V,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,EAAoBof,EAAkBC,EAAcC,EAAWC,EAAMC,EAAQC,EAAYC,GAE9JtgB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKqxF,oBAEfpxF,EAAKqG,KAAKtG,KAAKywG,kBAEfxwG,EAAKqG,KAAKtG,KAAK0wG,cAEfzwG,EAAKqG,KAAKtG,KAAK2wG,WAEf1wG,EAAKqG,KAAKtG,KAAK4wG,MAEf3wG,EAAKqG,KAAKtG,KAAK6wG,QAEf5wG,EAAKqG,KAAKtG,KAAK8wG,YAEf7wG,EAAKqG,KAAKtG,KAAK+wG,SAER9wG,IAGPi6E,GAAsB,MACxBjzE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIs2D,GAAoB2V,EAAWxrF,EAAM2rF,GAElDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPk6E,GAAyB,MAC3BlzE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIu2D,GAAuB0V,EAAWxrF,EAAM2rF,GAErDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPm6E,GAAoB,MACtBnzE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIw2D,GAAkByV,EAAWxrF,EAAM2rF,GAEhDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPo6E,GAA0B,MAC5BpzE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAInW,GAAwBwV,EAAWxrF,GAEhDosF,SAEE,MADW,KAIXnW,GAA2B,MAC7BrzE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI02D,GAAyBuV,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAErFQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPs6E,GAAwB,MAC1BtzE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI22D,GAAsBsV,EAAWxrF,EAAM2rF,GAEpDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPu6E,GAAsB,MACxBvzE,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIhW,GAAoBqV,EAAWxrF,GAE5CosF,SAEE,MADW,KAIXhW,GAAiC,MACnCxzE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+gB,EAAexd,GAC7DxzF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxG,cAAgBA,EACrBhxG,KAAKwzF,WAAaA,EAEpBjD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotF,EAAgBxgB,EAAK5sE,KACrB4vE,EAAahD,EAAK5sE,KACtB,OAAO,IAAI62D,GAA+BoV,EAAWxrF,EAAM2rF,EAAMC,EAAa+gB,EAAexd,GAE/F/C,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxG,eAEf/wG,EAAKqG,KAAKtG,KAAKwzF,YAERvzF,IAGPy6E,GAAgC,MAClCzzE,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa+gB,EAAexd,EAAYyd,EAASC,EAAaC,EAAcC,GAC7GpxG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxG,cAAgBA,EACrBhxG,KAAKwzF,WAAaA,EAClBxzF,KAAKixG,QAAUA,EACfjxG,KAAKkxG,YAAcA,EACnBlxG,KAAKmxG,aAAeA,EACpBnxG,KAAKoxG,YAAcA,EAErB7gB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotF,EAAgBxgB,EAAK5sE,KACrB4vE,EAAahD,EAAK5sE,KAClBqtF,EAAUzgB,EAAK5sE,KACfstF,EAAc1gB,EAAK5sE,KACnButF,EAAe3gB,EAAK5sE,KACpBwtF,EAAc5gB,EAAK5sE,KACvB,OAAO,IAAI82D,GAA8BmV,EAAWxrF,EAAM2rF,EAAMC,EAAa+gB,EAAexd,EAAYyd,EAASC,EAAaC,EAAcC,GAE9I3gB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxG,eAEf/wG,EAAKqG,KAAKtG,KAAKwzF,YAEfvzF,EAAKqG,KAAKtG,KAAKixG,SAEfhxG,EAAKqG,KAAKtG,KAAKkxG,aAEfjxG,EAAKqG,KAAKtG,KAAKmxG,cAEflxG,EAAKqG,KAAKtG,KAAKoxG,aAERnxG,IAGP06E,GAAuB,MACzB1zE,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI+2D,GAAqBkV,EAAWxrF,EAAM2rF,GAEnDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGP26E,GAAiC,MACnC3zE,YAAY4oF,EAAWxrF,EAAMgtG,GAC3BrxG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKqxG,OAASA,EAEhB9gB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNytF,EAAS7gB,EAAK5sE,KAClB,OAAO,IAAIg3D,GAA+BiV,EAAWxrF,EAAMgtG,GAE7D5gB,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKqxG,QAERpxG,IAGP46E,GAAe,MACjB5zE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,GACnHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi3D,GAAagV,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBF,GAEnIK,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP66E,GAAmB,MACrB7zE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,GAC3JpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK8jG,YAAcA,EACnB9jG,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBkgF,EAActT,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIk3D,GAAiB+U,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK8jG,aAEf7jG,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP86E,GAAa,MACf9zE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAClGtwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EAEzBC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KAC3B,OAAO,IAAIm3D,GAAW8U,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAEhHG,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAERrwF,IAGP+6E,GAAa,MACf/zE,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAIo3D,GAAW6U,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAEjHL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGPg7E,GAA4B,MAC9Bh0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAasb,GAC9CvrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKurG,gBAAkBA,EAEzBhb,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2nF,EAAkB/a,EAAK5sE,KAC3B,OAAO,IAAIq3D,GAA0B4U,EAAWxrF,EAAM2rF,EAAMC,EAAasb,GAE3E9a,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKurG,iBAERtrG,IAGPi7E,GAA2B,MAC7Bj0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAasb,GAC9CvrG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKurG,gBAAkBA,EAEzBhb,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2nF,EAAkB/a,EAAK5sE,KAC3B,OAAO,IAAIs3D,GAAyB2U,EAAWxrF,EAAM2rF,EAAMC,EAAasb,GAE1E9a,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKurG,iBAERtrG,IAGPk7E,GAAgB,MAClBl0E,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,GACxCj0F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EAErB1D,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACvB,OAAO,IAAIu3D,GAAc0U,EAAWxrF,EAAM2vF,EAAaC,GAEzDxD,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAERh0F,IAGPm7E,GAAuB,MACzBn0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,EAAauN,GAC3DtxG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgkG,WAAaD,EAClB/jG,KAAKsxG,kBAAoBA,EAE3B/gB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBmgF,EAAcvT,EAAK5sE,KACnB0tF,EAAoB9gB,EAAK5sE,KAC7B,OAAO,IAAIw3D,GAAqByU,EAAWxrF,EAAM2rF,EAAMC,EAAa8T,EAAauN,GAEnF7gB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgkG,YAEf/jG,EAAKqG,KAAKtG,KAAKsxG,mBAERrxG,IAGPo7E,GAAa,MACfp0E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAC3Hp9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAChBj5F,KAAKk9F,MAAQA,EACbl9F,KAAKm9F,uBAAyBA,EAC9Bn9F,KAAKo9F,eAAiBA,EAExB7M,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KAChBs5E,EAAQ1M,EAAK5sE,KACbu5E,EAAyB3M,EAAK5sE,KAC9Bw5E,EAAiB5M,EAAK5sE,KAC1B,OAAO,IAAIy3D,GAAWwU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAEzI3M,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk9F,OAEfj9F,EAAKqG,KAAKtG,KAAKm9F,wBAEfl9F,EAAKqG,KAAKtG,KAAKo9F,gBAERn9F,IAGPq7E,GAAoB,MACtBr0E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAC3Hp9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAChBj5F,KAAKk9F,MAAQA,EACbl9F,KAAKm9F,uBAAyBA,EAC9Bn9F,KAAKo9F,eAAiBA,EAExB7M,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KAChBs5E,EAAQ1M,EAAK5sE,KACbu5E,EAAyB3M,EAAK5sE,KAC9Bw5E,EAAiB5M,EAAK5sE,KAC1B,OAAO,IAAI03D,GAAkBuU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,EAAUiE,EAAOC,EAAwBC,GAEhJ3M,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk9F,OAEfj9F,EAAKqG,KAAKtG,KAAKm9F,wBAEfl9F,EAAKqG,KAAKtG,KAAKo9F,gBAERn9F,IAGPs7E,GAAkB,MACpBt0E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAC1HtwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKowF,eAAiBA,EACtBpwF,KAAKqwF,OAASA,EACdrwF,KAAKswF,gBAAkBA,EAEzBC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtBysE,EAASG,EAAK5sE,KACd0sE,EAAkBE,EAAK5sE,KAC3B,OAAO,IAAI23D,GAAgBsU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBC,EAAgBC,EAAQC,GAE7IG,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAKswF,iBAERrwF,IAGPu7E,GAAkB,MACpBv0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa0N,EAAeC,EAAe2T,EAAeC,EAASC,GACpGzxG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK29F,cAAgBA,EACrB39F,KAAK49F,cAAgBA,EACrB59F,KAAKuxG,cAAgBA,EACrBvxG,KAAKwxG,QAAUA,EACfxxG,KAAKyxG,QAAUA,EAEjBlhB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB+5E,EAAgBnN,EAAK5sE,KACrBg6E,EAAgBpN,EAAK5sE,KACrB2tF,EAAgB/gB,EAAK5sE,KACrB4tF,EAAUhhB,EAAK5sE,KACf6tF,EAAUjhB,EAAK5sE,KACnB,OAAO,IAAI43D,GAAgBqU,EAAWxrF,EAAM2rF,EAAMC,EAAa0N,EAAeC,EAAe2T,EAAeC,EAASC,GAEvHhhB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK29F,eAEf19F,EAAKqG,KAAKtG,KAAK49F,eAEf39F,EAAKqG,KAAKtG,KAAKuxG,eAEftxG,EAAKqG,KAAKtG,KAAKwxG,SAEfvxG,EAAKqG,KAAKtG,KAAKyxG,SAERxxG,IAGPw7E,GAAuB,MACzBx0E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI63D,GAAqBoU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPy7E,GAAc,MAChBz0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,GACjCjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI83D,GAAYmU,EAAWxrF,EAAM2rF,EAAMC,GAEhDQ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP07E,GAAyB,MAC3B10E,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI7U,GAAuBkU,EAAWxrF,GAE/CosF,SAEE,MADW,KAIX7U,GAA0B,MAC5B30E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAayhB,EAAiBC,EAAiBtS,EAAMuS,GACtF5xG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK0xG,gBAAkBA,EACvB1xG,KAAK2xG,gBAAkBA,EACvB3xG,KAAKq/F,KAAOA,EACZr/F,KAAK4xG,cAAgBA,EAEvBrhB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB8tF,EAAkBlhB,EAAK5sE,KACvB+tF,EAAkBnhB,EAAK5sE,KACvBy7E,EAAO7O,EAAK5sE,KACZguF,EAAgBphB,EAAK5sE,KACzB,OAAO,IAAIg4D,GAAwBiU,EAAWxrF,EAAM2rF,EAAMC,EAAayhB,EAAiBC,EAAiBtS,EAAMuS,GAEjHnhB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK0xG,iBAEfzxG,EAAKqG,KAAKtG,KAAK2xG,iBAEf1xG,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK4xG,eAER3xG,IAGP47E,GAAwB,MAC1B50E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIi4D,GAAsBgU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAElFQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP67E,GAAoC,MACtC70E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa4hB,EAAmBC,EAAmB/E,GACpF/sG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK6xG,kBAAoBA,EACzB7xG,KAAK8xG,kBAAoBA,EACzB9xG,KAAK+sG,WAAaA,EAEpBxc,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiuF,EAAoBrhB,EAAK5sE,KACzBkuF,EAAoBthB,EAAK5sE,KACzBmpF,EAAavc,EAAK5sE,KACtB,OAAO,IAAIk4D,GAAkC+T,EAAWxrF,EAAM2rF,EAAMC,EAAa4hB,EAAmBC,EAAmB/E,GAEzHtc,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK6xG,mBAEf5xG,EAAKqG,KAAKtG,KAAK8xG,mBAEf7xG,EAAKqG,KAAKtG,KAAK+sG,YAER9sG,IAGP87E,GAA6B,MAC/B90E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAa8hB,EAAmBC,GACjEhyG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK+xG,kBAAoBA,EACzB/xG,KAAKgyG,qBAAuBA,EAE9BzhB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBmuF,EAAoBvhB,EAAK5sE,KACzBouF,EAAuBxhB,EAAK5sE,KAChC,OAAO,IAAIm4D,GAA2B8T,EAAWxrF,EAAM2rF,EAAMC,EAAa8hB,EAAmBC,GAE/FvhB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK+xG,mBAEf9xG,EAAKqG,KAAKtG,KAAKgyG,sBAER/xG,IAGP+7E,GAAyB,MAC3B/0E,YAAY4oF,EAAWxrF,EAAM2rF,EAAM+hB,EAAmB1S,GACpDr/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK+xG,kBAAoBA,EACzB/xG,KAAKq/F,KAAOA,EAEd9O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZmuF,EAAoBvhB,EAAK5sE,KACzBy7E,EAAO7O,EAAK5sE,KAChB,OAAO,IAAIo4D,GAAuB6T,EAAWxrF,EAAM2rF,EAAM+hB,EAAmB1S,GAE9E5O,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK+xG,mBAEf9xG,EAAKqG,KAAKtG,KAAKq/F,MAERp/F,IAGPg8E,GAAuB,MACzBh1E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAawY,EAAYpJ,GAC1Dr/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKyoG,WAAaA,EAClBzoG,KAAKq/F,KAAOA,EAEd9O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB6kF,EAAajY,EAAK5sE,KAClBy7E,EAAO7O,EAAK5sE,KAChB,OAAO,IAAIq4D,GAAqB4T,EAAWxrF,EAAM2rF,EAAMC,EAAawY,EAAYpJ,GAElF5O,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKyoG,YAEfxoG,EAAKqG,KAAKtG,KAAKq/F,MAERp/F,IAGPi8E,GAA4B,MAC9Bj1E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaqL,EAAW2W,GACzDjyG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKs7F,UAAYA,EACjBt7F,KAAKiyG,kBAAoBA,EAE3B1hB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB03E,EAAY9K,EAAK5sE,KACjBquF,EAAoBzhB,EAAK5sE,KAC7B,OAAO,IAAIs4D,GAA0B2T,EAAWxrF,EAAM2rF,EAAMC,EAAaqL,EAAW2W,GAEtFxhB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKs7F,WAEfr7F,EAAKqG,KAAKtG,KAAKiyG,mBAERhyG,IAGPk8E,GAAiB,MACnBl1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasL,GACtEv7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKu7F,cAAgBA,EAEvBhL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB23E,EAAgB/K,EAAK5sE,KACzB,OAAO,IAAIu4D,GAAe0T,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasL,GAExF9K,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKu7F,eAERt7F,IAGPm8E,GAA2B,MAC7Bn1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIw4D,GAAyByT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAErFQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPo8E,GAAyB,MAC3Bp1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauL,EAAc0W,EAAkBzW,GACtGz7F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKw7F,aAAeA,EACpBx7F,KAAKkyG,iBAAmBA,EACxBlyG,KAAKy7F,qBAAuBA,EAE9BlL,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB43E,EAAehL,EAAK5sE,KACpBsuF,EAAmB1hB,EAAK5sE,KACxB63E,EAAuBjL,EAAK5sE,KAChC,OAAO,IAAIy4D,GAAuBwT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauL,EAAc0W,EAAkBzW,GAEhIhL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKw7F,cAEfv7F,EAAKqG,KAAKtG,KAAKkyG,kBAEfjyG,EAAKqG,KAAKtG,KAAKy7F,sBAERx7F,IAGPq8E,GAAyB,MAC3Br1E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAakiB,EAAc9S,GAC5Dr/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKmyG,aAAeA,EACpBnyG,KAAKq/F,KAAOA,EAEd9O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBuuF,EAAe3hB,EAAK5sE,KACpBy7E,EAAO7O,EAAK5sE,KAChB,OAAO,IAAI04D,GAAuBuT,EAAWxrF,EAAM2rF,EAAMC,EAAakiB,EAAc9S,GAEtF5O,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKmyG,cAEflyG,EAAKqG,KAAKtG,KAAKq/F,MAERp/F,IAGPs8E,GAAwB,MAC1Bt1E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamiB,EAAgBC,EAAetF,EAAYuF,EAAcC,EAAaC,GACpHxyG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKoyG,eAAiBA,EACtBpyG,KAAKqyG,cAAgBA,EACrBryG,KAAK+sG,WAAaA,EAClB/sG,KAAKsyG,aAAeA,EACpBtyG,KAAKuyG,YAAcA,EACnBvyG,KAAKwyG,mBAAqBA,EAE5BjiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwuF,EAAiB5hB,EAAK5sE,KACtByuF,EAAgB7hB,EAAK5sE,KACrBmpF,EAAavc,EAAK5sE,KAClB0uF,EAAe9hB,EAAK5sE,KACpB2uF,EAAc/hB,EAAK5sE,KACnB4uF,EAAqBhiB,EAAK5sE,KAC9B,OAAO,IAAI24D,GAAsBsT,EAAWxrF,EAAM2rF,EAAMC,EAAamiB,EAAgBC,EAAetF,EAAYuF,EAAcC,EAAaC,GAE7I/hB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKoyG,gBAEfnyG,EAAKqG,KAAKtG,KAAKqyG,eAEfpyG,EAAKqG,KAAKtG,KAAK+sG,YAEf9sG,EAAKqG,KAAKtG,KAAKsyG,cAEfryG,EAAKqG,KAAKtG,KAAKuyG,aAEftyG,EAAKqG,KAAKtG,KAAKwyG,oBAERvyG,IAGPu8E,GAAsB,MACxBv1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI44D,GAAoBqT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAEhFQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPw8E,GAAgC,MAClCx1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI64D,GAA8BoT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE1FQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPy8E,GAAsB,MACxBz1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI84D,GAAoBmT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP08E,GAAkC,MACpC11E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+4D,GAAgCkT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE3JK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP28E,GAAsC,MACxC31E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg5D,GAAoCiT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1LK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP48E,GAA0B,MAC5B51E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi5D,GAAwBgT,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE9KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP68E,GAAW,MACb71E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2hB,EAAW1hB,GAC9H/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKyyG,UAAYA,EACjBzyG,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB6uF,EAAYjiB,EAAK5sE,KACjBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIk5D,GAAS+S,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2hB,EAAW1hB,GAE1IN,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKyyG,WAEfxyG,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGP88E,GAAU,MACZ91E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIm5D,GAAQ8S,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+8E,GAAc,MAChB/1E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIo5D,GAAY6S,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPg9E,GAAkB,MACpBh2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMqT,EAAWC,GAC/D3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAK0yG,UAAYA,EACjB1yG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZ8uF,EAAYliB,EAAK5sE,KACjB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAIq5D,GAAgB4S,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMqT,EAAWC,GAElFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK0yG,WAEfzyG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPi9E,GAAmB,MACrBj2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMuT,EAAYD,GAChE3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAK4yG,WAAaA,EAClB5yG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZgvF,EAAapiB,EAAK5sE,KAClB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAIs5D,GAAiB2S,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMuT,EAAYD,GAEpFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK4yG,YAEf3yG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPk9E,GAAoB,MACtBl2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMwT,EAAaF,GACjE3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAK6yG,YAAcA,EACnB7yG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZivF,EAAcriB,EAAK5sE,KACnB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAIu5D,GAAkB0S,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMwT,EAAaF,GAEtFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK6yG,aAEf5yG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPm9E,GAAiB,MACnBn2E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIw5D,GAAeyS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE3EQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPo9E,GAAkB,MACpBp2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMyT,EAAWH,GAC/D3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAK8yG,UAAYA,EACjB9yG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZkvF,EAAYtiB,EAAK5sE,KACjB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAIy5D,GAAgBwS,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAMyT,EAAWH,GAElFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK8yG,WAEf7yG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPq9E,GAAoB,MACtBr2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAM0T,EAAaJ,GACjE3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAK+yG,YAAcA,EACnB/yG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZmvF,EAAcviB,EAAK5sE,KACnB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAI05D,GAAkBuS,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAM0T,EAAaJ,GAEtFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAK+yG,aAEf9yG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPs9E,GAAoB,MACtBt2E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAM2T,EAAaL,GACjE3yG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAKgzG,YAAcA,EACnBhzG,KAAK2yG,QAAUA,EAEjBpiB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZovF,EAAcxiB,EAAK5sE,KACnB+uF,EAAUniB,EAAK5sE,KACnB,OAAO,IAAI25D,GAAkBsS,EAAWxrF,EAAM2rF,EAAMC,EAAaoP,EAAM2T,EAAaL,GAEtFliB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAKgzG,aAEf/yG,EAAKqG,KAAKtG,KAAK2yG,SAER1yG,IAGPu9E,GAAa,MACfv2E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI45D,GAAWqS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEtIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPw9E,GAAiB,MACnBx2E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI65D,GAAeoS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAErKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPy9E,GAAU,MACZz2E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI85D,GAAQmS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP09E,GAAgB,MAClB12E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+5D,GAAckS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP29E,GAAoB,MACtB32E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIg6D,GAAkBiS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP49E,GAAc,MAChB52E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIi6D,GAAYgS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP69E,GAAmC,MACrC72E,YAAY4oF,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,EAAU8c,GAClIjzG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK41F,OAASA,EACd51F,KAAK61F,kBAAoBA,EACzB71F,KAAK81F,UAAYA,EACjB91F,KAAK+1F,YAAcA,EACnB/1F,KAAKg2F,cAAgBA,EACrBh2F,KAAKi2F,mBAAqBA,EAC1Bj2F,KAAKk2F,MAAQA,EACbl2F,KAAKm2F,SAAWA,EAChBn2F,KAAKizG,YAAcA,EAErB1iB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNgyE,EAASpF,EAAK5sE,KACdiyE,EAAoBrF,EAAK5sE,KACzBkyE,EAAYtF,EAAK5sE,KACjBmyE,EAAcvF,EAAK5sE,KACnBoyE,EAAgBxF,EAAK5sE,KACrBqyE,EAAqBzF,EAAK5sE,KAC1BsyE,EAAQ1F,EAAK5sE,KACbuyE,EAAW3F,EAAK5sE,KAChBqvF,EAAcziB,EAAK5sE,KACvB,OAAO,IAAIk6D,GAAiC+R,EAAWxrF,EAAMuxF,EAAQC,EAAmBC,EAAWC,EAAaC,EAAeC,EAAoBC,EAAOC,EAAU8c,GAEtKxiB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK41F,QAEf31F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAK81F,WAEf71F,EAAKqG,KAAKtG,KAAK+1F,aAEf91F,EAAKqG,KAAKtG,KAAKg2F,eAEf/1F,EAAKqG,KAAKtG,KAAKi2F,oBAEfh2F,EAAKqG,KAAKtG,KAAKk2F,OAEfj2F,EAAKqG,KAAKtG,KAAKm2F,UAEfl2F,EAAKqG,KAAKtG,KAAKizG,aAERhzG,IAGP89E,GAAqC,MACvC92E,YAAY4oF,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,EAAU8c,GAC1KjzG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKo2F,QAAUA,EACfp2F,KAAKq2F,QAAUA,EACfr2F,KAAK61F,kBAAoBA,EACzB71F,KAAKs2F,YAAcA,EACnBt2F,KAAKu2F,QAAUA,EACfv2F,KAAKw2F,QAAUA,EACfx2F,KAAKg2F,cAAgBA,EACrBh2F,KAAKy2F,gBAAkBA,EACvBz2F,KAAK02F,gBAAkBA,EACvB12F,KAAK22F,OAASA,EACd32F,KAAK42F,OAASA,EACd52F,KAAKm2F,SAAWA,EAChBn2F,KAAKizG,YAAcA,EAErB1iB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwyE,EAAU5F,EAAK5sE,KACfyyE,EAAU7F,EAAK5sE,KACfiyE,EAAoBrF,EAAK5sE,KACzB0yE,EAAc9F,EAAK5sE,KACnB2yE,EAAU/F,EAAK5sE,KACf4yE,EAAUhG,EAAK5sE,KACfoyE,EAAgBxF,EAAK5sE,KACrB6yE,EAAkBjG,EAAK5sE,KACvB8yE,EAAkBlG,EAAK5sE,KACvB+yE,EAASnG,EAAK5sE,KACdgzE,EAASpG,EAAK5sE,KACduyE,EAAW3F,EAAK5sE,KAChBqvF,EAAcziB,EAAK5sE,KACvB,OAAO,IAAIm6D,GAAmC8R,EAAWxrF,EAAM+xF,EAASC,EAASR,EAAmBS,EAAaC,EAASC,EAASR,EAAeS,EAAiBC,EAAiBC,EAAQC,EAAQT,EAAU8c,GAEhNxiB,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAKo2F,SAEfn2F,EAAKqG,KAAKtG,KAAKq2F,SAEfp2F,EAAKqG,KAAKtG,KAAK61F,mBAEf51F,EAAKqG,KAAKtG,KAAKs2F,aAEfr2F,EAAKqG,KAAKtG,KAAKu2F,SAEft2F,EAAKqG,KAAKtG,KAAKw2F,SAEfv2F,EAAKqG,KAAKtG,KAAKg2F,eAEf/1F,EAAKqG,KAAKtG,KAAKy2F,iBAEfx2F,EAAKqG,KAAKtG,KAAK02F,iBAEfz2F,EAAKqG,KAAKtG,KAAK22F,QAEf12F,EAAKqG,KAAKtG,KAAK42F,QAEf32F,EAAKqG,KAAKtG,KAAKm2F,UAEfl2F,EAAKqG,KAAKtG,KAAKizG,aAERhzG,IAGP+9E,GAA+B,MACjC/2E,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,EAAMa,EAAeyZ,EAAmBC,GAC7GnzG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAK24F,KAAOA,EACZ34F,KAAK44F,KAAOA,EACZ54F,KAAKy5F,cAAgBA,EACrBz5F,KAAKkzG,kBAAoBA,EACzBlzG,KAAKmzG,kBAAoBA,EAE3B5iB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB+0E,EAAOnI,EAAK5sE,KACZg1E,EAAOpI,EAAK5sE,KACZ61E,EAAgBjJ,EAAK5sE,KACrBsvF,EAAoB1iB,EAAK5sE,KACzBuvF,EAAoB3iB,EAAK5sE,KAC7B,OAAO,IAAIo6D,GAA6B6R,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,EAAMa,EAAeyZ,EAAmBC,GAE7I1iB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK24F,MAEf14F,EAAKqG,KAAKtG,KAAK44F,MAEf34F,EAAKqG,KAAKtG,KAAKy5F,eAEfx5F,EAAKqG,KAAKtG,KAAKkzG,mBAEfjzG,EAAKqG,KAAKtG,KAAKmzG,mBAERlzG,IAGPg+E,GAAyB,MAC3Bh3E,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,GACrE54F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAK24F,KAAOA,EACZ34F,KAAK44F,KAAOA,EAEdrI,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB+0E,EAAOnI,EAAK5sE,KACZg1E,EAAOpI,EAAK5sE,KAChB,OAAO,IAAIq6D,GAAuB4R,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,GAE/FnI,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK24F,MAEf14F,EAAKqG,KAAKtG,KAAK44F,MAER34F,IAGPi+E,GAAwB,MAC1Bj3E,YAAY4oF,EAAWxrF,EAAMwwF,EAAUuC,EAASC,EAASsY,GACvD3vG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKo3F,QAAUA,EACfp3F,KAAKq3F,QAAUA,EACfr3F,KAAK2vG,OAASA,EAEhBpf,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChBwzE,EAAU5G,EAAK5sE,KACfyzE,EAAU7G,EAAK5sE,KACf+rF,EAASnf,EAAK5sE,KAClB,OAAO,IAAIs6D,GAAsB2R,EAAWxrF,EAAMwwF,EAAUuC,EAASC,EAASsY,GAEhFlf,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKo3F,SAEfn3F,EAAKqG,KAAKtG,KAAKq3F,SAEfp3F,EAAKqG,KAAKtG,KAAK2vG,QAER1vG,IAGPk+E,GAA+B,MACjCl3E,YAAY4oF,EAAWxrF,EAAMk6F,EAAc6U,EAAIC,EAAIC,EAAIC,EAAIC,EAAQC,GACjEzzG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu+F,aAAeA,EACpBv+F,KAAKozG,GAAKA,EACVpzG,KAAKqzG,GAAKA,EACVrzG,KAAKszG,GAAKA,EACVtzG,KAAKuzG,GAAKA,EACVvzG,KAAKwzG,OAASA,EACdxzG,KAAKyzG,OAASA,EAEhBljB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN26E,EAAe/N,EAAK5sE,KACpBwvF,EAAK5iB,EAAK5sE,KACVyvF,EAAK7iB,EAAK5sE,KACV0vF,EAAK9iB,EAAK5sE,KACV2vF,EAAK/iB,EAAK5sE,KACV4vF,EAAShjB,EAAK5sE,KACd6vF,EAASjjB,EAAK5sE,KAClB,OAAO,IAAIu6D,GAA6B0R,EAAWxrF,EAAMk6F,EAAc6U,EAAIC,EAAIC,EAAIC,EAAIC,EAAQC,GAEjGhjB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKu+F,cAEft+F,EAAKqG,KAAKtG,KAAKozG,IAEfnzG,EAAKqG,KAAKtG,KAAKqzG,IAEfpzG,EAAKqG,KAAKtG,KAAKszG,IAEfrzG,EAAKqG,KAAKtG,KAAKuzG,IAEftzG,EAAKqG,KAAKtG,KAAKwzG,QAEfvzG,EAAKqG,KAAKtG,KAAKyzG,QAERxzG,IAGPm+E,GAAuB,MACzBn3E,YAAY4oF,EAAWxrF,EAAMqvG,EAAgBC,EAAcC,EAAkBC,EAAgBhf,EAAUif,EAAUC,EAAaC,GAC5Hh0G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0zG,eAAiBA,EACtB1zG,KAAK2zG,aAAeA,EACpB3zG,KAAK4zG,iBAAmBA,EACxB5zG,KAAK6zG,eAAiBA,EACtB7zG,KAAK60F,SAAWA,EAChB70F,KAAK8zG,SAAWA,EAChB9zG,KAAK+zG,YAAcA,EACnB/zG,KAAKg0G,YAAcA,EAErBzjB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8vF,EAAiBljB,EAAK5sE,KACtB+vF,EAAenjB,EAAK5sE,KACpBgwF,EAAmBpjB,EAAK5sE,KACxBiwF,EAAiBrjB,EAAK5sE,KACtBixE,EAAWrE,EAAK5sE,KAChBkwF,EAAWtjB,EAAK5sE,KAChBmwF,EAAcvjB,EAAK5sE,KACnBowF,EAAcxjB,EAAK5sE,KACvB,OAAO,IAAIw6D,GAAqByR,EAAWxrF,EAAMqvG,EAAgBC,EAAcC,EAAkBC,EAAgBhf,EAAUif,EAAUC,EAAaC,GAEpJvjB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK0zG,gBAEfzzG,EAAKqG,KAAKtG,KAAK2zG,cAEf1zG,EAAKqG,KAAKtG,KAAK4zG,kBAEf3zG,EAAKqG,KAAKtG,KAAK6zG,gBAEf5zG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK8zG,UAEf7zG,EAAKqG,KAAKtG,KAAK+zG,aAEf9zG,EAAKqG,KAAKtG,KAAKg0G,aAER/zG,IAGPo+E,GAAe,MACjBp3E,YAAY4oF,EAAWxrF,EAAM4vG,EAAgBC,EAAqBC,EAAcC,EAAeC,GAC7Fr0G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi0G,eAAiBA,EACtBj0G,KAAKk0G,oBAAsBA,EAC3Bl0G,KAAKm0G,aAAeA,EACpBn0G,KAAKo0G,cAAgBA,EACrBp0G,KAAKq0G,eAAiBA,EAExB9jB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNqwF,EAAiBzjB,EAAK5sE,KACtBswF,EAAsB1jB,EAAK5sE,KAC3BuwF,EAAe3jB,EAAK5sE,KACpBwwF,EAAgB5jB,EAAK5sE,KACrBywF,EAAiB7jB,EAAK5sE,KAC1B,OAAO,IAAIy6D,GAAawR,EAAWxrF,EAAM4vG,EAAgBC,EAAqBC,EAAcC,EAAeC,GAE7G5jB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKi0G,gBAEfh0G,EAAKqG,KAAKtG,KAAKk0G,qBAEfj0G,EAAKqG,KAAKtG,KAAKm0G,cAEfl0G,EAAKqG,KAAKtG,KAAKo0G,eAEfn0G,EAAKqG,KAAKtG,KAAKq0G,gBAERp0G,IAGPq+E,GAAc,MAChBr3E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkkB,GACnIt0G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKowF,eAAiBA,EACtBpwF,KAAKs0G,gBAAkBA,EAEzB/jB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtB0wF,EAAkB9jB,EAAK5sE,KAC3B,OAAO,IAAI06D,GAAYuR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkkB,GAElJ7jB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKs0G,iBAERr0G,IAGPs+E,GAAuB,MACzBt3E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkV,EAAUhM,GACzIvoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKooG,UAAYA,EACjBpoG,KAAKqoG,QAAUA,EACfroG,KAAKsoG,mBAAqBA,EAC1BtoG,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAKq/F,KAAOA,EACZr/F,KAAKu0G,SAAWA,EAChBv0G,KAAKuoG,OAASA,EAEhBhY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwkF,EAAY5X,EAAK5sE,KACjBykF,EAAU7X,EAAK5sE,KACf0kF,EAAqB9X,EAAK5sE,KAC1B4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7By7E,EAAO7O,EAAK5sE,KACZ2wF,EAAW/jB,EAAK5sE,KAChB2kF,EAAS/X,EAAK5sE,KAClB,OAAO,IAAI26D,GAAqBsR,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,EAAMkV,EAAUhM,GAEjK9X,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKqoG,SAEfpoG,EAAKqG,KAAKtG,KAAKsoG,oBAEfroG,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAKu0G,UAEft0G,EAAKqG,KAAKtG,KAAKuoG,QAERtoG,IAGPu+E,GAAgC,MAClCv3E,YAAY4oF,EAAWxrF,EAAMmwG,EAAuBC,EAAYC,EAAYC,EAAgBC,EAAoBC,GAC9G70G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKw0G,sBAAwBA,EAC7Bx0G,KAAKy0G,WAAaA,EAClBz0G,KAAK00G,WAAaA,EAClB10G,KAAK20G,eAAiBA,EACtB30G,KAAK40G,mBAAqBA,EAC1B50G,KAAK60G,SAAWA,EAElBtkB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4wF,EAAwBhkB,EAAK5sE,KAC7B6wF,EAAajkB,EAAK5sE,KAClB8wF,EAAalkB,EAAK5sE,KAClB+wF,EAAiBnkB,EAAK5sE,KACtBgxF,EAAqBpkB,EAAK5sE,KAC1BixF,EAAWrkB,EAAK5sE,KACpB,OAAO,IAAI46D,GAA8BqR,EAAWxrF,EAAMmwG,EAAuBC,EAAYC,EAAYC,EAAgBC,EAAoBC,GAE/IpkB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKw0G,uBAEfv0G,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAK00G,YAEfz0G,EAAKqG,KAAKtG,KAAK20G,gBAEf10G,EAAKqG,KAAKtG,KAAK40G,oBAEf30G,EAAKqG,KAAKtG,KAAK60G,UAER50G,IAGPw+E,GAAuC,MACzCx3E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa6kB,EAAgBC,GACtF/0G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK80G,eAAiBA,EACtB90G,KAAK+0G,gCAAkCA,EAEzCxkB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBkxF,EAAiBtkB,EAAK5sE,KACtBmxF,EAAkCvkB,EAAK5sE,KAC3C,OAAO,IAAI66D,GAAqCoR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa6kB,EAAgBC,GAE9HtkB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK80G,gBAEf70G,EAAKqG,KAAKtG,KAAK+0G,iCAER90G,IAGPy+E,GAAoB,MACtBz3E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYvH,EAAiB8H,EAAkBC,EAAW7kB,EAAgBskB,GAClM10G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAClBz0G,KAAKktG,gBAAkBA,EACvBltG,KAAKg1G,iBAAmBA,EACxBh1G,KAAKi1G,UAAYA,EACjBj1G,KAAKowF,eAAiBA,EACtBpwF,KAAK00G,WAAaA,EAEpBnkB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KAClBspF,EAAkB1c,EAAK5sE,KACvBoxF,EAAmBxkB,EAAK5sE,KACxBqxF,EAAYzkB,EAAK5sE,KACjBwsE,EAAiBI,EAAK5sE,KACtB8wF,EAAalkB,EAAK5sE,KACtB,OAAO,IAAI86D,GAAkBmR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYvH,EAAiB8H,EAAkBC,EAAW7kB,EAAgBskB,GAEvNjkB,SACE,IAAIxwF,EAAO,GA6BX,OA5BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKg1G,kBAEf/0G,EAAKqG,KAAKtG,KAAKi1G,WAEfh1G,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK00G,YAERz0G,IAGP0+E,GAAwB,MAC1B13E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiB8H,EAAkBC,EAAWP,EAAYQ,EAAkBC,GAC/On1G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKktG,gBAAkBA,EACvBltG,KAAKg1G,iBAAmBA,EACxBh1G,KAAKi1G,UAAYA,EACjBj1G,KAAK00G,WAAaA,EAClB10G,KAAKk1G,iBAAmBA,EACxBl1G,KAAKm1G,kBAAoBA,EAE3B5kB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBspF,EAAkB1c,EAAK5sE,KACvBoxF,EAAmBxkB,EAAK5sE,KACxBqxF,EAAYzkB,EAAK5sE,KACjB8wF,EAAalkB,EAAK5sE,KAClBsxF,EAAmB1kB,EAAK5sE,KACxBuxF,EAAoB3kB,EAAK5sE,KAC7B,OAAO,IAAI+6D,GAAsBkR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiB8H,EAAkBC,EAAWP,EAAYQ,EAAkBC,GAExQ1kB,SACE,IAAIxwF,EAAO,GAiCX,OAhCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKg1G,kBAEf/0G,EAAKqG,KAAKtG,KAAKi1G,WAEfh1G,EAAKqG,KAAKtG,KAAK00G,YAEfz0G,EAAKqG,KAAKtG,KAAKk1G,kBAEfj1G,EAAKqG,KAAKtG,KAAKm1G,mBAERl1G,IAGP2+E,GAAwB,MAC1B33E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,GACxHz0G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAEpBlkB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KACtB,OAAO,IAAIg7D,GAAsBiR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,GAEjJhkB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAERx0G,IAGP4+E,GAA4B,MAC9B53E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIi7D,GAA0BgR,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAEnKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGP6+E,GAAqB,MACvB73E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYW,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBvlB,GACvUpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAClBz0G,KAAKo1G,WAAaA,EAClBp1G,KAAKq1G,UAAYA,EACjBr1G,KAAKs1G,+BAAiCA,EACtCt1G,KAAKu1G,6BAA+BA,EACpCv1G,KAAKw1G,gCAAkCA,EACvCx1G,KAAKy1G,8BAAgCA,EACrCz1G,KAAK01G,uBAAyBA,EAC9B11G,KAAK21G,qBAAuBA,EAC5B31G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KAClBwxF,EAAa5kB,EAAK5sE,KAClByxF,EAAY7kB,EAAK5sE,KACjB0xF,EAAiC9kB,EAAK5sE,KACtC2xF,EAA+B/kB,EAAK5sE,KACpC4xF,EAAkChlB,EAAK5sE,KACvC6xF,EAAgCjlB,EAAK5sE,KACrC8xF,EAAyBllB,EAAK5sE,KAC9B+xF,EAAuBnlB,EAAK5sE,KAC5BwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIk7D,GAAmB+Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYW,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBvlB,GAE7VK,SACE,IAAIxwF,EAAO,GAqCX,OApCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAKo1G,YAEfn1G,EAAKqG,KAAKtG,KAAKq1G,WAEfp1G,EAAKqG,KAAKtG,KAAKs1G,gCAEfr1G,EAAKqG,KAAKtG,KAAKu1G,8BAEft1G,EAAKqG,KAAKtG,KAAKw1G,iCAEfv1G,EAAKqG,KAAKtG,KAAKy1G,+BAEfx1G,EAAKqG,KAAKtG,KAAK01G,wBAEfz1G,EAAKqG,KAAKtG,KAAK21G,sBAEf11G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8+E,GAAyB,MAC3B93E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBglB,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBT,EAAkBC,GACxXn1G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKo1G,WAAaA,EAClBp1G,KAAKq1G,UAAYA,EACjBr1G,KAAKs1G,+BAAiCA,EACtCt1G,KAAKu1G,6BAA+BA,EACpCv1G,KAAKw1G,gCAAkCA,EACvCx1G,KAAKy1G,8BAAgCA,EACrCz1G,KAAK01G,uBAAyBA,EAC9B11G,KAAK21G,qBAAuBA,EAC5B31G,KAAKk1G,iBAAmBA,EACxBl1G,KAAKm1G,kBAAoBA,EAE3B5kB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBwxF,EAAa5kB,EAAK5sE,KAClByxF,EAAY7kB,EAAK5sE,KACjB0xF,EAAiC9kB,EAAK5sE,KACtC2xF,EAA+B/kB,EAAK5sE,KACpC4xF,EAAkChlB,EAAK5sE,KACvC6xF,EAAgCjlB,EAAK5sE,KACrC8xF,EAAyBllB,EAAK5sE,KAC9B+xF,EAAuBnlB,EAAK5sE,KAC5BsxF,EAAmB1kB,EAAK5sE,KACxBuxF,EAAoB3kB,EAAK5sE,KAC7B,OAAO,IAAIm7D,GAAuB8Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBglB,EAAYC,EAAWC,EAAgCC,EAA8BC,EAAiCC,EAA+BC,EAAwBC,EAAsBT,EAAkBC,GAElZ1kB,SACE,IAAIxwF,EAAO,GAyCX,OAxCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKo1G,YAEfn1G,EAAKqG,KAAKtG,KAAKq1G,WAEfp1G,EAAKqG,KAAKtG,KAAKs1G,gCAEfr1G,EAAKqG,KAAKtG,KAAKu1G,8BAEft1G,EAAKqG,KAAKtG,KAAKw1G,iCAEfv1G,EAAKqG,KAAKtG,KAAKy1G,+BAEfx1G,EAAKqG,KAAKtG,KAAK01G,wBAEfz1G,EAAKqG,KAAKtG,KAAK21G,sBAEf11G,EAAKqG,KAAKtG,KAAKk1G,kBAEfj1G,EAAKqG,KAAKtG,KAAKm1G,mBAERl1G,IAGP++E,GAAmB,MACrB/3E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2lB,EAAgBC,GACtF71G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK41G,eAAiBA,EACtB51G,KAAK61G,eAAiBA,EAExBtlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBgyF,EAAiBplB,EAAK5sE,KACtBiyF,EAAiBrlB,EAAK5sE,KAC1B,OAAO,IAAIo7D,GAAiB6Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2lB,EAAgBC,GAE1GplB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK41G,gBAEf31G,EAAKqG,KAAKtG,KAAK61G,gBAER51G,IAGPg/E,GAAgB,MAClBh4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,GACtF91G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAE5BvlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC9B,OAAO,IAAIq7D,GAAc4Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,GAEvGrlB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAER71G,IAGPi/E,GAAuB,MACzBj4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBC,EAAeC,GACzHh2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAK+1G,cAAgBA,EACrB/1G,KAAKg2G,WAAaA,EAEpBzlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1BmyF,EAAgBvlB,EAAK5sE,KACrBoyF,EAAaxlB,EAAK5sE,KACtB,OAAO,IAAIs7D,GAAqB2Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBC,EAAeC,GAEjJvlB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAK+1G,eAEf91G,EAAKqG,KAAKtG,KAAKg2G,YAER/1G,IAGPk/E,GAAyB,MAC3Bl4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBG,GAC1Gj2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKi2G,gBAAkBA,EAEzB1lB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1BqyF,EAAkBzlB,EAAK5sE,KAC3B,OAAO,IAAIu7D,GAAuB0Q,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBG,GAEpIxlB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKi2G,iBAERh2G,IAGPm/E,GAAuB,MACzBn4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBI,GAC1Gl2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKk2G,cAAgBA,EAEvB3lB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1BsyF,EAAgB1lB,EAAK5sE,KACzB,OAAO,IAAIw7D,GAAqByQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBI,GAElIzlB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKk2G,eAERj2G,IAGPo/E,GAA+B,MACjCp4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBI,EAAeC,GACzHn2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKk2G,cAAgBA,EACrBl2G,KAAKm2G,OAASA,EAEhB5lB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1BsyF,EAAgB1lB,EAAK5sE,KACrBuyF,EAAS3lB,EAAK5sE,KAClB,OAAO,IAAIy7D,GAA6BwQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBI,EAAeC,GAEzJ1lB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKk2G,eAEfj2G,EAAKqG,KAAKtG,KAAKm2G,QAERl2G,IAGPq/E,GAAyB,MAC3Br4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBM,EAAiBC,GAC3Hr2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKo2G,gBAAkBA,EACvBp2G,KAAKq2G,kBAAoBA,EAE3B9lB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1BwyF,EAAkB5lB,EAAK5sE,KACvByyF,EAAoB7lB,EAAK5sE,KAC7B,OAAO,IAAI07D,GAAuBuQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBM,EAAiBC,GAErJ5lB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKo2G,iBAEfn2G,EAAKqG,KAAKtG,KAAKq2G,mBAERp2G,IAGPs/E,GAAyB,MAC3Bt4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBQ,GAC1Gt2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKs2G,gBAAkBA,EAEzB/lB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1B0yF,EAAkB9lB,EAAK5sE,KAC3B,OAAO,IAAI27D,GAAuBsQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBQ,GAEpI7lB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKs2G,iBAERr2G,IAGPu/E,GAA0B,MAC5Bv4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBS,GAC1Gv2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK81G,mBAAqBA,EAC1B91G,KAAKu2G,iBAAmBA,EAE1BhmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkyF,EAAqBtlB,EAAK5sE,KAC1B2yF,EAAmB/lB,EAAK5sE,KAC5B,OAAO,IAAI47D,GAAwBqQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBC,EAAoBS,GAErI9lB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK81G,oBAEf71G,EAAKqG,KAAKtG,KAAKu2G,kBAERt2G,IAGPw/E,GAAmB,MACrBx4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,GACtE71G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EAExBtlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KAC1B,OAAO,IAAI67D,GAAiBoQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,GAE1FplB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAER51G,IAGPy/E,GAA2B,MAC7Bz4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB/hB,GACtF9zF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK8zF,iBAAmBA,EAE1BvD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBkwE,EAAmBtD,EAAK5sE,KAC5B,OAAO,IAAI87D,GAAyBmQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB/hB,GAElHrD,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK8zF,kBAER7zF,IAGP0/E,GAAiC,MACnC14E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBW,GACtFx2G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAKw2G,uBAAyBA,EAEhCjmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtB4yF,EAAyBhmB,EAAK5sE,KAClC,OAAO,IAAI+7D,GAA+BkQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBW,GAExH/lB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAKw2G,wBAERv2G,IAGP2/E,GAA6B,MAC/B34E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBY,EAAQC,GAC9F12G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAKy2G,OAASA,EACdz2G,KAAK02G,mBAAqBA,EAE5BnmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtB6yF,EAASjmB,EAAK5sE,KACd8yF,EAAqBlmB,EAAK5sE,KAC9B,OAAO,IAAIg8D,GAA2BiQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBY,EAAQC,GAE5HjmB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAKy2G,QAEfx2G,EAAKqG,KAAKtG,KAAK02G,oBAERz2G,IAGP4/E,GAA2B,MAC7B54E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB7U,GACtFhhG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAKghG,iBAAmBA,EAE1BzQ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBo9E,EAAmBxQ,EAAK5sE,KAC5B,OAAO,IAAIi8D,GAAyBgQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB7U,GAElHvQ,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAKghG,kBAER/gG,IAGP6/E,GAA0B,MAC5B74E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBc,GACtF32G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK22G,gBAAkBA,EAEzBpmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtB+yF,EAAkBnmB,EAAK5sE,KAC3B,OAAO,IAAIk8D,GAAwB+P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBc,GAEjHlmB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK22G,iBAER12G,IAGP8/E,GAA2B,MAC7B94E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBhJ,GACtF7sG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK6sG,iBAAmBA,EAE1Btc,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBipF,EAAmBrc,EAAK5sE,KAC5B,OAAO,IAAIm8D,GAAyB8P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBhJ,GAElHpc,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK6sG,kBAER5sG,IAGP+/E,GAAiB,MACnB/4E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIo8D,GAAe6P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE3EQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPggF,GAAyB,MAC3Bh5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,GAC3G92G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK42G,mBAAqBA,EAC1B52G,KAAK62G,gBAAkBA,EACvB72G,KAAK82G,eAAiBA,EAExBvmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBgzF,EAAqBpmB,EAAK5sE,KAC1BizF,EAAkBrmB,EAAK5sE,KACvBkzF,EAAiBtmB,EAAK5sE,KAC1B,OAAO,IAAIq8D,GAAuB4P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,GAErIrmB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAK82G,gBAER72G,IAGPigF,GAA6B,MAC/Bj5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,EAAgBC,EAAoBC,EAAmBC,EAAuBC,GACzLl3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK42G,mBAAqBA,EAC1B52G,KAAK62G,gBAAkBA,EACvB72G,KAAK82G,eAAiBA,EACtB92G,KAAK+2G,mBAAqBA,EAC1B/2G,KAAKg3G,kBAAoBA,EACzBh3G,KAAKi3G,sBAAwBA,EAC7Bj3G,KAAKk3G,uBAAyBA,EAEhC3mB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBgzF,EAAqBpmB,EAAK5sE,KAC1BizF,EAAkBrmB,EAAK5sE,KACvBkzF,EAAiBtmB,EAAK5sE,KACtBmzF,EAAqBvmB,EAAK5sE,KAC1BozF,EAAoBxmB,EAAK5sE,KACzBqzF,EAAwBzmB,EAAK5sE,KAC7BszF,EAAyB1mB,EAAK5sE,KAClC,OAAO,IAAIs8D,GAA2B2P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,EAAgBC,EAAoBC,EAAmBC,EAAuBC,GAEvNzmB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAK82G,gBAEf72G,EAAKqG,KAAKtG,KAAK+2G,oBAEf92G,EAAKqG,KAAKtG,KAAKg3G,mBAEf/2G,EAAKqG,KAAKtG,KAAKi3G,uBAEfh3G,EAAKqG,KAAKtG,KAAKk3G,wBAERj3G,IAGPkgF,GAA8B,MAChCl5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaknB,EAAcL,GACpF92G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKm3G,aAAeA,EACpBn3G,KAAK82G,eAAiBA,EAExBvmB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBuzF,EAAe3mB,EAAK5sE,KACpBkzF,EAAiBtmB,EAAK5sE,KAC1B,OAAO,IAAIu8D,GAA4B0P,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaknB,EAAcL,GAEnHrmB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKm3G,cAEfl3G,EAAKqG,KAAKtG,KAAK82G,gBAER72G,IAGPmgF,GAAsB,MACxBn5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaknB,EAAcC,EAAaC,GACjGr3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKm3G,aAAeA,EACpBn3G,KAAKo3G,YAAcA,EACnBp3G,KAAKq3G,iBAAmBA,EAE1B9mB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBuzF,EAAe3mB,EAAK5sE,KACpBwzF,EAAc5mB,EAAK5sE,KACnByzF,EAAmB7mB,EAAK5sE,KAC5B,OAAO,IAAIw8D,GAAoByP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaknB,EAAcC,EAAaC,GAExH5mB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKm3G,cAEfl3G,EAAKqG,KAAKtG,KAAKo3G,aAEfn3G,EAAKqG,KAAKtG,KAAKq3G,kBAERp3G,IAGPogF,GAAmC,MACrCp5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBS,GACvFt3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK62G,gBAAkBA,EACvB72G,KAAKs3G,0BAA4BA,EAEnC/mB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBizF,EAAkBrmB,EAAK5sE,KACvB0zF,EAA4B9mB,EAAK5sE,KACrC,OAAO,IAAIy8D,GAAiCwP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBS,GAE3H7mB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAKs3G,2BAERr3G,IAGPqgF,GAAiC,MACnCr5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasnB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,GACtL53G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKu3G,yBAA2BA,EAChCv3G,KAAKw3G,4BAA8BA,EACnCx3G,KAAKy3G,iBAAmBA,EACxBz3G,KAAK03G,qBAAuBA,EAC5B13G,KAAK23G,gBAAkBA,EACvB33G,KAAK43G,0BAA4BA,EAEnCrnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2zF,EAA2B/mB,EAAK5sE,KAChC4zF,EAA8BhnB,EAAK5sE,KACnC6zF,EAAmBjnB,EAAK5sE,KACxB8zF,EAAuBlnB,EAAK5sE,KAC5B+zF,EAAkBnnB,EAAK5sE,KACvBg0F,EAA4BpnB,EAAK5sE,KACrC,OAAO,IAAI08D,GAA+BuP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasnB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,GAExNnnB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKu3G,0BAEft3G,EAAKqG,KAAKtG,KAAKw3G,6BAEfv3G,EAAKqG,KAAKtG,KAAKy3G,kBAEfx3G,EAAKqG,KAAKtG,KAAK03G,sBAEfz3G,EAAKqG,KAAKtG,KAAK23G,iBAEf13G,EAAKqG,KAAKtG,KAAK43G,2BAER33G,IAGPsgF,GAAiC,MACnCt5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasnB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,EAA2BC,GACjN73G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKu3G,yBAA2BA,EAChCv3G,KAAKw3G,4BAA8BA,EACnCx3G,KAAKy3G,iBAAmBA,EACxBz3G,KAAK03G,qBAAuBA,EAC5B13G,KAAK23G,gBAAkBA,EACvB33G,KAAK43G,0BAA4BA,EACjC53G,KAAK63G,qBAAuBA,EAE9BtnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB2zF,EAA2B/mB,EAAK5sE,KAChC4zF,EAA8BhnB,EAAK5sE,KACnC6zF,EAAmBjnB,EAAK5sE,KACxB8zF,EAAuBlnB,EAAK5sE,KAC5B+zF,EAAkBnnB,EAAK5sE,KACvBg0F,EAA4BpnB,EAAK5sE,KACjCi0F,EAAuBrnB,EAAK5sE,KAChC,OAAO,IAAI28D,GAA+BsP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAasnB,EAA0BC,EAA6BC,EAAkBC,EAAsBC,EAAiBC,EAA2BC,GAEnPpnB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKu3G,0BAEft3G,EAAKqG,KAAKtG,KAAKw3G,6BAEfv3G,EAAKqG,KAAKtG,KAAKy3G,kBAEfx3G,EAAKqG,KAAKtG,KAAK03G,sBAEfz3G,EAAKqG,KAAKtG,KAAK23G,iBAEf13G,EAAKqG,KAAKtG,KAAK43G,2BAEf33G,EAAKqG,KAAKtG,KAAK63G,sBAER53G,IAGPugF,GAAsC,MACxCv5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,EAAgBgB,EAAmBC,GAC9I/3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK42G,mBAAqBA,EAC1B52G,KAAK62G,gBAAkBA,EACvB72G,KAAK82G,eAAiBA,EACtB92G,KAAK83G,kBAAoBA,EACzB93G,KAAK+3G,eAAiBA,EAExBxnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBgzF,EAAqBpmB,EAAK5sE,KAC1BizF,EAAkBrmB,EAAK5sE,KACvBkzF,EAAiBtmB,EAAK5sE,KACtBk0F,EAAoBtnB,EAAK5sE,KACzBm0F,EAAiBvnB,EAAK5sE,KAC1B,OAAO,IAAI48D,GAAoCqP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2mB,EAAoBC,EAAiBC,EAAgBgB,EAAmBC,GAErLtnB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAK82G,gBAEf72G,EAAKqG,KAAKtG,KAAK83G,mBAEf73G,EAAKqG,KAAKtG,KAAK+3G,gBAER93G,IAGPwgF,GAAoC,MACtCx5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAiBC,GACvFj4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKg4G,gBAAkBA,EACvBh4G,KAAKi4G,kBAAoBA,EAE3B1nB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBo0F,EAAkBxnB,EAAK5sE,KACvBq0F,EAAoBznB,EAAK5sE,KAC7B,OAAO,IAAI68D,GAAkCoP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAiBC,GAE5HxnB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKg4G,iBAEf/3G,EAAKqG,KAAKtG,KAAKi4G,mBAERh4G,IAGPygF,GAA2B,MAC7Bz5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaioB,EAAyBC,GAC/Fn4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKk4G,wBAA0BA,EAC/Bl4G,KAAKm4G,iBAAmBA,EAE1B5nB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBs0F,EAA0B1nB,EAAK5sE,KAC/Bu0F,EAAmB3nB,EAAK5sE,KAC5B,OAAO,IAAI88D,GAAyBmP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaioB,EAAyBC,GAE3H1nB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKk4G,yBAEfj4G,EAAKqG,KAAKtG,KAAKm4G,kBAERl4G,IAGP0gF,GAAqB,MACvB15E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeD,GACrFn4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKo4G,cAAgBA,EACrBp4G,KAAKm4G,iBAAmBA,EAE1B5nB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBw0F,EAAgB5nB,EAAK5sE,KACrBu0F,EAAmB3nB,EAAK5sE,KAC5B,OAAO,IAAI+8D,GAAmBkP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeD,GAE3G1nB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKo4G,eAEfn4G,EAAKqG,KAAKtG,KAAKm4G,kBAERl4G,IAGP2gF,GAAiB,MACnB35E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaooB,EAAiBC,GACvFt4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq4G,gBAAkBA,EACvBr4G,KAAKs4G,mBAAqBA,EAE5B/nB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy0F,EAAkB7nB,EAAK5sE,KACvB00F,EAAqB9nB,EAAK5sE,KAC9B,OAAO,IAAIg9D,GAAeiP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaooB,EAAiBC,GAEzG7nB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq4G,iBAEfp4G,EAAKqG,KAAKtG,KAAKs4G,oBAERr4G,IAGP4gF,GAAmB,MACrB55E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIi9D,GAAiBgP,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE7EQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP6gF,GAAgB,MAClB75E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIk9D,GAAc+O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE1EQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGP8gF,GAAwB,MAC1B95E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBD,GACtF51G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK41G,eAAiBA,EAExBrlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtBgyF,EAAiBplB,EAAK5sE,KAC1B,OAAO,IAAIm9D,GAAsB8O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgBD,GAE/GnlB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK41G,gBAER31G,IAGP+gF,GAA4B,MAC9B/5E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB0C,GACtFv4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAKu4G,2BAA6BA,EAEpChoB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtB20F,EAA6B/nB,EAAK5sE,KACtC,OAAO,IAAIo9D,GAA0B6O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB0C,GAEnH9nB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAKu4G,4BAERt4G,IAGPghF,GAA0B,MAC5Bh6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauoB,EAAqBC,GAC3Fz4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKw4G,oBAAsBA,EAC3Bx4G,KAAKy4G,iBAAmBA,EAE1BloB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB40F,EAAsBhoB,EAAK5sE,KAC3B60F,EAAmBjoB,EAAK5sE,KAC5B,OAAO,IAAIq9D,GAAwB4O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauoB,EAAqBC,GAEtHhoB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKw4G,qBAEfv4G,EAAKqG,KAAKtG,KAAKy4G,kBAERx4G,IAGPihF,GAAsB,MACxBj6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB6C,GACtF14G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK61G,eAAiBA,EACtB71G,KAAK04G,aAAeA,EAEtBnoB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBiyF,EAAiBrlB,EAAK5sE,KACtB80F,EAAeloB,EAAK5sE,KACxB,OAAO,IAAIs9D,GAAoB2O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4lB,EAAgB6C,GAE7GjoB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK61G,gBAEf51G,EAAKqG,KAAKtG,KAAK04G,cAERz4G,IAGPkhF,GAAqB,MACvBl6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa0oB,EAAwBC,GAC9F54G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK24G,uBAAyBA,EAC9B34G,KAAK44G,uBAAyBA,EAEhCroB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB+0F,EAAyBnoB,EAAK5sE,KAC9Bg1F,EAAyBpoB,EAAK5sE,KAClC,OAAO,IAAIu9D,GAAmB0O,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa0oB,EAAwBC,GAEpHnoB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK24G,wBAEf14G,EAAKqG,KAAKtG,KAAK44G,wBAER34G,IAGPmhF,GAA4B,MAC9Bn6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4oB,EAAwBC,GAC9F94G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK64G,uBAAyBA,EAC9B74G,KAAK84G,oBAAsBA,EAE7BvoB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBi1F,EAAyBroB,EAAK5sE,KAC9Bk1F,EAAsBtoB,EAAK5sE,KAC/B,OAAO,IAAIw9D,GAA0ByO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4oB,EAAwBC,GAE3HroB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK64G,wBAEf54G,EAAKqG,KAAKtG,KAAK84G,qBAER74G,IAGPohF,GAA2B,MAC7Bp6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBC,EAAgBiC,EAAsBC,EAAkBC,GAC/Ij5G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK62G,gBAAkBA,EACvB72G,KAAK82G,eAAiBA,EACtB92G,KAAK+4G,qBAAuBA,EAC5B/4G,KAAKg5G,iBAAmBA,EACxBh5G,KAAKi5G,aAAeA,EAEtB1oB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBizF,EAAkBrmB,EAAK5sE,KACvBkzF,EAAiBtmB,EAAK5sE,KACtBm1F,EAAuBvoB,EAAK5sE,KAC5Bo1F,EAAmBxoB,EAAK5sE,KACxBq1F,EAAezoB,EAAK5sE,KACxB,OAAO,IAAIy9D,GAAyBwO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBC,EAAgBiC,EAAsBC,EAAkBC,GAE3KxoB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAK82G,gBAEf72G,EAAKqG,KAAKtG,KAAK+4G,sBAEf94G,EAAKqG,KAAKtG,KAAKg5G,kBAEf/4G,EAAKqG,KAAKtG,KAAKi5G,cAERh5G,IAGPqhF,GAAc,MAChBr6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2lB,EAAgBC,GACtF71G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK41G,eAAiBA,EACtB51G,KAAK61G,eAAiBA,EAExBtlB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBgyF,EAAiBplB,EAAK5sE,KACtBiyF,EAAiBrlB,EAAK5sE,KAC1B,OAAO,IAAI09D,GAAYuO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa2lB,EAAgBC,GAErGplB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK41G,gBAEf31G,EAAKqG,KAAKtG,KAAK61G,gBAER51G,IAGPshF,GAAkB,MACpBt6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaipB,EAA4BC,GAClGn5G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKk5G,2BAA6BA,EAClCl5G,KAAKm5G,gBAAkBA,EAEzB5oB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBs1F,EAA6B1oB,EAAK5sE,KAClCu1F,EAAkB3oB,EAAK5sE,KAC3B,OAAO,IAAI29D,GAAgBsO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaipB,EAA4BC,GAErH1oB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKk5G,4BAEfj5G,EAAKqG,KAAKtG,KAAKm5G,iBAERl5G,IAGPuhF,GAAwB,MAC1Bv6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBuC,GACvFp5G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK62G,gBAAkBA,EACvB72G,KAAKo5G,sBAAwBA,EAE/B7oB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBizF,EAAkBrmB,EAAK5sE,KACvBw1F,EAAwB5oB,EAAK5sE,KACjC,OAAO,IAAI49D,GAAsBqO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa4mB,EAAiBuC,GAEhH3oB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK62G,iBAEf52G,EAAKqG,KAAKtG,KAAKo5G,uBAERn5G,IAGPwhF,GAAqC,MACvCx6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAiBC,GACvFj4G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKg4G,gBAAkBA,EACvBh4G,KAAKi4G,kBAAoBA,EAE3B1nB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBo0F,EAAkBxnB,EAAK5sE,KACvBq0F,EAAoBznB,EAAK5sE,KAC7B,OAAO,IAAI69D,GAAmCoO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAa+nB,EAAiBC,GAE7HxnB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKg4G,iBAEf/3G,EAAKqG,KAAKtG,KAAKi4G,mBAERh4G,IAGPyhF,GAAiB,MACnBz6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAammB,EAAiBiD,EAAgBC,EAASC,EAAcC,GAC9Hx5G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKo2G,gBAAkBA,EACvBp2G,KAAKq5G,eAAiBA,EACtBr5G,KAAKs5G,QAAUA,EACft5G,KAAKu5G,aAAeA,EACpBv5G,KAAKw5G,wBAA0BA,EAEjCjpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwyF,EAAkB5lB,EAAK5sE,KACvBy1F,EAAiB7oB,EAAK5sE,KACtB01F,EAAU9oB,EAAK5sE,KACf21F,EAAe/oB,EAAK5sE,KACpB41F,EAA0BhpB,EAAK5sE,KACnC,OAAO,IAAI89D,GAAemO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAammB,EAAiBiD,EAAgBC,EAASC,EAAcC,GAEhJ/oB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKo2G,iBAEfn2G,EAAKqG,KAAKtG,KAAKq5G,gBAEfp5G,EAAKqG,KAAKtG,KAAKs5G,SAEfr5G,EAAKqG,KAAKtG,KAAKu5G,cAEft5G,EAAKqG,KAAKtG,KAAKw5G,yBAERv5G,IAGP0hF,GAA0B,MAC5B16E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAawpB,EAAgBC,GACtF15G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKy5G,eAAiBA,EACtBz5G,KAAK05G,iBAAmBA,EAE1BnpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB61F,EAAiBjpB,EAAK5sE,KACtB81F,EAAmBlpB,EAAK5sE,KAC5B,OAAO,IAAI+9D,GAAwBkO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAawpB,EAAgBC,GAEjHjpB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKy5G,gBAEfx5G,EAAKqG,KAAKtG,KAAK05G,kBAERz5G,IAGP2hF,GAAsB,MACxB36E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,GAC5J55G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKo4G,cAAgBA,EACrBp4G,KAAK44G,uBAAyBA,EAC9B54G,KAAK42G,mBAAqBA,EAC1B52G,KAAK25G,0BAA4BA,EACjC35G,KAAK45G,2BAA6BA,EAEpCrpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBw0F,EAAgB5nB,EAAK5sE,KACrBg1F,EAAyBpoB,EAAK5sE,KAC9BgzF,EAAqBpmB,EAAK5sE,KAC1B+1F,EAA4BnpB,EAAK5sE,KACjCg2F,EAA6BppB,EAAK5sE,KACtC,OAAO,IAAIg+D,GAAoBiO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,GAEnLnpB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKo4G,eAEfn4G,EAAKqG,KAAKtG,KAAK44G,wBAEf34G,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK25G,2BAEf15G,EAAKqG,KAAKtG,KAAK45G,4BAER35G,IAGP4hF,GAA8B,MAChC56E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,GACxL75G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKo4G,cAAgBA,EACrBp4G,KAAK44G,uBAAyBA,EAC9B54G,KAAK42G,mBAAqBA,EAC1B52G,KAAK25G,0BAA4BA,EACjC35G,KAAK45G,2BAA6BA,EAClC55G,KAAK65G,eAAiBA,EAExBtpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBw0F,EAAgB5nB,EAAK5sE,KACrBg1F,EAAyBpoB,EAAK5sE,KAC9BgzF,EAAqBpmB,EAAK5sE,KAC1B+1F,EAA4BnpB,EAAK5sE,KACjCg2F,EAA6BppB,EAAK5sE,KAClCi2F,EAAiBrpB,EAAK5sE,KAC1B,OAAO,IAAIi+D,GAA4BgO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,GAEvNppB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKo4G,eAEfn4G,EAAKqG,KAAKtG,KAAK44G,wBAEf34G,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK25G,2BAEf15G,EAAKqG,KAAKtG,KAAK45G,4BAEf35G,EAAKqG,KAAKtG,KAAK65G,gBAER55G,IAGP6hF,GAA8B,MAChC76E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,EAAgBC,GACxM95G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKo4G,cAAgBA,EACrBp4G,KAAK44G,uBAAyBA,EAC9B54G,KAAK42G,mBAAqBA,EAC1B52G,KAAK25G,0BAA4BA,EACjC35G,KAAK45G,2BAA6BA,EAClC55G,KAAK65G,eAAiBA,EACtB75G,KAAK85G,sBAAwBA,EAE/BvpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBw0F,EAAgB5nB,EAAK5sE,KACrBg1F,EAAyBpoB,EAAK5sE,KAC9BgzF,EAAqBpmB,EAAK5sE,KAC1B+1F,EAA4BnpB,EAAK5sE,KACjCg2F,EAA6BppB,EAAK5sE,KAClCi2F,EAAiBrpB,EAAK5sE,KACtBk2F,EAAwBtpB,EAAK5sE,KACjC,OAAO,IAAIk+D,GAA4B+N,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAamoB,EAAeQ,EAAwBhC,EAAoB+C,EAA2BC,EAA4BC,EAAgBC,GAEvOrpB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKo4G,eAEfn4G,EAAKqG,KAAKtG,KAAK44G,wBAEf34G,EAAKqG,KAAKtG,KAAK42G,oBAEf32G,EAAKqG,KAAKtG,KAAK25G,2BAEf15G,EAAKqG,KAAKtG,KAAK45G,4BAEf35G,EAAKqG,KAAKtG,KAAK65G,gBAEf55G,EAAKqG,KAAKtG,KAAK85G,uBAER75G,IAGP8hF,GAAqB,MACvB96E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaioB,EAAyB6B,GAC/F/5G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKk4G,wBAA0BA,EAC/Bl4G,KAAK+5G,sBAAwBA,EAE/BxpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBs0F,EAA0B1nB,EAAK5sE,KAC/Bm2F,EAAwBvpB,EAAK5sE,KACjC,OAAO,IAAIm+D,GAAmB8N,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaioB,EAAyB6B,GAErHtpB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKk4G,yBAEfj4G,EAAKqG,KAAKtG,KAAK+5G,uBAER95G,IAGP+hF,GAAkB,MACpB/6E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIo+D,GAAgB6N,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAE5EQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPgiF,GAAyC,MAC3Ch7E,YAAY4oF,EAAWxrF,EAAMq3F,EAAYhK,EAAWiK,EAAaqe,GAC/Dh6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK07F,WAAaA,EAClB17F,KAAK0xF,UAAYA,EACjB1xF,KAAK27F,YAAcA,EACnB37F,KAAKg6G,YAAcA,EAErBzpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN83E,EAAalL,EAAK5sE,KAClB8tE,EAAYlB,EAAK5sE,KACjB+3E,EAAcnL,EAAK5sE,KACnBo2F,EAAcxpB,EAAK5sE,KACvB,OAAO,IAAIq+D,GAAuC4N,EAAWxrF,EAAMq3F,EAAYhK,EAAWiK,EAAaqe,GAEzGvpB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK07F,YAEfz7F,EAAKqG,KAAKtG,KAAK0xF,WAEfzxF,EAAKqG,KAAKtG,KAAK27F,aAEf17F,EAAKqG,KAAKtG,KAAKg6G,aAER/5G,IAGPiiF,GAAoB,MACtBj7E,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAIs+D,GAAkB2N,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAE9G3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPkiF,GAA2B,MAC7Bl7E,YAAY4oF,EAAWxrF,EAAMwhG,EAAmBC,GAC9C9lG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6lG,kBAAoBA,EACzB7lG,KAAK8lG,YAAcA,EAErBvV,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiiF,EAAoBrV,EAAK5sE,KACzBkiF,EAActV,EAAK5sE,KACvB,OAAO,IAAIu+D,GAAyB0N,EAAWxrF,EAAMwhG,EAAmBC,GAE1ErV,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK6lG,mBAEf5lG,EAAKqG,KAAKtG,KAAK8lG,aAER7lG,IAGPmiF,GAAwB,MAC1Bn7E,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIpO,GAAsByN,EAAWxrF,GAE9CosF,SAEE,MADW,KAIXpO,GAAuB,MACzBp7E,YAAY4oF,EAAWxrF,EAAMg2G,EAAeC,GAC1Ct6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq6G,cAAgBA,EACrBr6G,KAAKs6G,qBAAuBA,EAE9B/pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy2F,EAAgB7pB,EAAK5sE,KACrB02F,EAAuB9pB,EAAK5sE,KAChC,OAAO,IAAIy+D,GAAqBwN,EAAWxrF,EAAMg2G,EAAeC,GAElE7pB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKq6G,eAEfp6G,EAAKqG,KAAKtG,KAAKs6G,sBAERr6G,IAGPqiF,GAAc,MAChBr7E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAClGtwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EAEzBC,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KAC3B,OAAO,IAAI0+D,GAAYuN,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,GAEjHG,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAERrwF,IAGPsiF,GAAkC,MACpCt7E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaiU,EAAwBpQ,GACtE9zF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkkG,uBAAyBA,EAC9BlkG,KAAK8zF,iBAAmBA,EAE1BvD,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBsgF,EAAyB1T,EAAK5sE,KAC9BkwE,EAAmBtD,EAAK5sE,KAC5B,OAAO,IAAI2+D,GAAgCsN,EAAWxrF,EAAM2rF,EAAMC,EAAaiU,EAAwBpQ,GAEzGrD,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkkG,wBAEfjkG,EAAKqG,KAAKtG,KAAK8zF,kBAER7zF,IAGPuiF,GAAoC,MACtCv7E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAaymB,EAAoBxS,GAClElkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAK02G,mBAAqBA,EAC1B12G,KAAKkkG,uBAAyBA,EAEhC3T,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB8yF,EAAqBlmB,EAAK5sE,KAC1BsgF,EAAyB1T,EAAK5sE,KAClC,OAAO,IAAI4+D,GAAkCqN,EAAWxrF,EAAM2rF,EAAMC,EAAaymB,EAAoBxS,GAEvGzT,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAK02G,oBAEfz2G,EAAKqG,KAAKtG,KAAKkkG,wBAERjkG,IAGPwiF,GAA+B,MACjCx7E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,GACjCjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAI6+D,GAA6BoN,EAAWxrF,EAAM2rF,EAAMC,GAEjEQ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPyiF,GAAkB,MACpBz7E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuB8W,EAAcC,EAAeC,EAAeC,EAAgBC,EAAiBC,EAAeC,EAAiBC,EAAYC,EAAYC,EAAaC,EAAaC,EAAcC,EAAeC,EAAgBC,GAChRr7G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAKu6G,aAAeA,EACpBv6G,KAAKw6G,cAAgBA,EACrBx6G,KAAKy6G,cAAgBA,EACrBz6G,KAAK06G,eAAiBA,EACtB16G,KAAK26G,gBAAkBA,EACvB36G,KAAK46G,cAAgBA,EACrB56G,KAAK66G,gBAAkBA,EACvB76G,KAAK86G,WAAaA,EAClB96G,KAAK+6G,WAAaA,EAClB/6G,KAAKg7G,YAAcA,EACnBh7G,KAAKi7G,YAAcA,EACnBj7G,KAAKk7G,aAAeA,EACpBl7G,KAAKm7G,cAAgBA,EACrBn7G,KAAKo7G,eAAiBA,EACtBp7G,KAAKq7G,WAAaA,EAEpB9qB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7B22F,EAAe/pB,EAAK5sE,KACpB42F,EAAgBhqB,EAAK5sE,KACrB62F,EAAgBjqB,EAAK5sE,KACrB82F,EAAiBlqB,EAAK5sE,KACtB+2F,EAAkBnqB,EAAK5sE,KACvBg3F,EAAgBpqB,EAAK5sE,KACrBi3F,EAAkBrqB,EAAK5sE,KACvBk3F,EAAatqB,EAAK5sE,KAClBm3F,EAAavqB,EAAK5sE,KAClBo3F,EAAcxqB,EAAK5sE,KACnBq3F,EAAczqB,EAAK5sE,KACnBs3F,EAAe1qB,EAAK5sE,KACpBu3F,EAAgB3qB,EAAK5sE,KACrBw3F,EAAiB5qB,EAAK5sE,KACtBy3F,EAAa7qB,EAAK5sE,KACtB,OAAO,IAAI8+D,GAAgBmN,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuB8W,EAAcC,EAAeC,EAAeC,EAAgBC,EAAiBC,EAAeC,EAAiBC,EAAYC,EAAYC,EAAaC,EAAaC,EAAcC,EAAeC,EAAgBC,GAEnS5qB,SACE,IAAIxwF,EAAO,GAqCX,OApCAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAKu6G,cAEft6G,EAAKqG,KAAKtG,KAAKw6G,eAEfv6G,EAAKqG,KAAKtG,KAAKy6G,eAEfx6G,EAAKqG,KAAKtG,KAAK06G,gBAEfz6G,EAAKqG,KAAKtG,KAAK26G,iBAEf16G,EAAKqG,KAAKtG,KAAK46G,eAEf36G,EAAKqG,KAAKtG,KAAK66G,iBAEf56G,EAAKqG,KAAKtG,KAAK86G,YAEf76G,EAAKqG,KAAKtG,KAAK+6G,YAEf96G,EAAKqG,KAAKtG,KAAKg7G,aAEf/6G,EAAKqG,KAAKtG,KAAKi7G,aAEfh7G,EAAKqG,KAAKtG,KAAKk7G,cAEfj7G,EAAKqG,KAAKtG,KAAKm7G,eAEfl7G,EAAKqG,KAAKtG,KAAKo7G,gBAEfn7G,EAAKqG,KAAKtG,KAAKq7G,YAERp7G,IAGP0iF,GAAuB,MACzB17E,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAUlD,EAAM2pB,GACtDt7G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAK2xF,KAAOA,EACZ3xF,KAAKs7G,MAAQA,EAEf/qB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChB+tE,EAAOnB,EAAK5sE,KACZ03F,EAAQ9qB,EAAK5sE,KACjB,OAAO,IAAI++D,GAAqBkN,EAAWxrF,EAAM8/F,EAAWtP,EAAUlD,EAAM2pB,GAE9E7qB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK2xF,MAEf1xF,EAAKqG,KAAKtG,KAAKs7G,OAERr7G,IAGP2iF,GAA8B,MAChC37E,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAUlD,EAAM2pB,EAAOjX,GAC7DrkG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAK2xF,KAAOA,EACZ3xF,KAAKs7G,MAAQA,EACbt7G,KAAKqkG,aAAeA,EAEtB9T,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChB+tE,EAAOnB,EAAK5sE,KACZ03F,EAAQ9qB,EAAK5sE,KACbygF,EAAe7T,EAAK5sE,KACxB,OAAO,IAAIg/D,GAA4BiN,EAAWxrF,EAAM8/F,EAAWtP,EAAUlD,EAAM2pB,EAAOjX,GAE5F5T,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK2xF,MAEf1xF,EAAKqG,KAAKtG,KAAKs7G,OAEfr7G,EAAKqG,KAAKtG,KAAKqkG,cAERpkG,IAGP4iF,GAAuB,MACzB57E,YAAY4oF,EAAWxrF,EAAMwwF,EAAU8a,EAAQ4L,GAC7Cv7G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAK2vG,OAASA,EACd3vG,KAAKu7G,aAAeA,EAEtBhrB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChB+rF,EAASnf,EAAK5sE,KACd23F,EAAe/qB,EAAK5sE,KACxB,OAAO,IAAIi/D,GAAqBgN,EAAWxrF,EAAMwwF,EAAU8a,EAAQ4L,GAErE9qB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK2vG,QAEf1vG,EAAKqG,KAAKtG,KAAKu7G,cAERt7G,IAGP6iF,GAA2B,MAC7B77E,YAAY4oF,EAAWxrF,EAAMwwF,EAAU8a,EAAQtd,GAC7CryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAK2vG,OAASA,EACd3vG,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChB+rF,EAASnf,EAAK5sE,KACdyuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAIk/D,GAAyB+M,EAAWxrF,EAAMwwF,EAAU8a,EAAQtd,GAEzE5B,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK2vG,QAEf1vG,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGP8iF,GAAU,MACZ97E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIm/D,GAAQ8M,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+iF,GAAc,MAChB/7E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIo/D,GAAY6M,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgjF,GAAU,MACZh8E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GACzDjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIq/D,GAAQ4M,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,GAEpEQ,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPijF,GAAgC,MAClCj8E,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,EAAM4iB,GAC3Ex7G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAK24F,KAAOA,EACZ34F,KAAK44F,KAAOA,EACZ54F,KAAKw7G,eAAiBA,EAExBjrB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB+0E,EAAOnI,EAAK5sE,KACZg1E,EAAOpI,EAAK5sE,KACZ43F,EAAiBhrB,EAAK5sE,KAC1B,OAAO,IAAIs/D,GAA8B2M,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU8D,EAAMC,EAAM4iB,GAE5G/qB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK24F,MAEf14F,EAAKqG,KAAKtG,KAAK44F,MAEf34F,EAAKqG,KAAKtG,KAAKw7G,gBAERv7G,IAGPkjF,GAAY,MACdl8E,YAAY4oF,EAAWxrF,EAAMg5F,EAAYC,EAAUme,EAAQzrB,GACzDhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKq9F,WAAaA,EAClBr9F,KAAKs9F,SAAWA,EAChBt9F,KAAKy7G,OAASA,EACdz7G,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNy5E,EAAa7M,EAAK5sE,KAClB05E,EAAW9M,EAAK5sE,KAChB63F,EAASjrB,EAAK5sE,KACdosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIu/D,GAAU0M,EAAWxrF,EAAMg5F,EAAYC,EAAUme,EAAQzrB,GAEtES,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKq9F,YAEfp9F,EAAKqG,KAAKtG,KAAKs9F,UAEfr9F,EAAKqG,KAAKtG,KAAKy7G,QAEfx7G,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPmjF,GAAsB,MACxBn8E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIw/D,GAAoByM,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPojF,GAA0B,MAC5Bp8E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIy/D,GAAwBwM,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE9KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPqjF,GAAoB,MACtBr8E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,GAC7CzjG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAE/BlT,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KACjC,OAAO,IAAI0/D,GAAkBuM,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,GAElEhT,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAERxjG,IAGPsjF,GAAe,MACjBt8E,YAAY4oF,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GACxDhoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8nG,QAAUA,EACf9nG,KAAK+nG,mBAAqBA,EAC1B/nG,KAAKgoG,qBAAuBA,EAE9BzX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkkF,EAAUtX,EAAK5sE,KACfmkF,EAAqBvX,EAAK5sE,KAC1BokF,EAAuBxX,EAAK5sE,KAChC,OAAO,IAAI2/D,GAAasM,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GAExEvX,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8nG,SAEf7nG,EAAKqG,KAAKtG,KAAK+nG,oBAEf9nG,EAAKqG,KAAKtG,KAAKgoG,sBAER/nG,IAGPujF,GAAuB,MACzBv8E,YAAY4oF,EAAWxrF,EAAMq3G,EAAaC,EAAcC,GACtD57G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK07G,YAAcA,EACnB17G,KAAK27G,aAAeA,EACpB37G,KAAK47G,WAAaA,EAEpBrrB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN83F,EAAclrB,EAAK5sE,KACnB+3F,EAAenrB,EAAK5sE,KACpBg4F,EAAaprB,EAAK5sE,KACtB,OAAO,IAAI4/D,GAAqBqM,EAAWxrF,EAAMq3G,EAAaC,EAAcC,GAE9EnrB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK07G,aAEfz7G,EAAKqG,KAAKtG,KAAK27G,cAEf17G,EAAKqG,KAAKtG,KAAK47G,YAER37G,IAGPwjF,GAAoC,MACtCx8E,YAAY4oF,EAAWxrF,EAAMw3G,EAA2BC,EAAyBC,EAAoBC,EAAmBC,EAAmBC,GACzIl8G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK67G,0BAA4BA,EACjC77G,KAAK87G,wBAA0BA,EAC/B97G,KAAK+7G,mBAAqBA,EAC1B/7G,KAAKg8G,kBAAoBA,EACzBh8G,KAAKi8G,kBAAoBA,EACzBj8G,KAAKk8G,qCAAuCA,EAE9C3rB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNi4F,EAA4BrrB,EAAK5sE,KACjCk4F,EAA0BtrB,EAAK5sE,KAC/Bm4F,EAAqBvrB,EAAK5sE,KAC1Bo4F,EAAoBxrB,EAAK5sE,KACzBq4F,EAAoBzrB,EAAK5sE,KACzBs4F,EAAuC1rB,EAAK5sE,KAChD,OAAO,IAAI6/D,GAAkCoM,EAAWxrF,EAAMw3G,EAA2BC,EAAyBC,EAAoBC,EAAmBC,EAAmBC,GAE9KzrB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK67G,2BAEf57G,EAAKqG,KAAKtG,KAAK87G,yBAEf77G,EAAKqG,KAAKtG,KAAK+7G,oBAEf97G,EAAKqG,KAAKtG,KAAKg8G,mBAEf/7G,EAAKqG,KAAKtG,KAAKi8G,mBAEfh8G,EAAKqG,KAAKtG,KAAKk8G,sCAERj8G,IAGPyjF,GAAoB,MACtBz8E,YAAY4oF,EAAWxrF,EAAMohG,EAAW0W,GACtCn8G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKylG,UAAYA,EACjBzlG,KAAKm8G,cAAgBA,EAEvB5rB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6hF,EAAYjV,EAAK5sE,KACjBu4F,EAAgB3rB,EAAK5sE,KACzB,OAAO,IAAI8/D,GAAkBmM,EAAWxrF,EAAMohG,EAAW0W,GAE3D1rB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAKm8G,eAERl8G,IAGP0jF,GAA8B,MAChC18E,YAAY4oF,EAAWxrF,EAAMohG,EAAW0W,EAAeC,EAAuBC,GAC5Er8G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKylG,UAAYA,EACjBzlG,KAAKm8G,cAAgBA,EACrBn8G,KAAKo8G,sBAAwBA,EAC7Bp8G,KAAKq8G,kBAAoBA,EAE3B9rB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6hF,EAAYjV,EAAK5sE,KACjBu4F,EAAgB3rB,EAAK5sE,KACrBw4F,EAAwB5rB,EAAK5sE,KAC7By4F,EAAoB7rB,EAAK5sE,KAC7B,OAAO,IAAI+/D,GAA4BkM,EAAWxrF,EAAMohG,EAAW0W,EAAeC,EAAuBC,GAE3G5rB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAKm8G,eAEfl8G,EAAKqG,KAAKtG,KAAKo8G,uBAEfn8G,EAAKqG,KAAKtG,KAAKq8G,mBAERp8G,IAGP2jF,GAAoB,MACtB38E,YAAY4oF,EAAWxrF,EAAMi4G,EAAYH,EAAeC,GACtDp8G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKs8G,WAAaA,EAClBt8G,KAAKm8G,cAAgBA,EACrBn8G,KAAKo8G,sBAAwBA,EAE/B7rB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN04F,EAAa9rB,EAAK5sE,KAClBu4F,EAAgB3rB,EAAK5sE,KACrBw4F,EAAwB5rB,EAAK5sE,KACjC,OAAO,IAAIggE,GAAkBiM,EAAWxrF,EAAMi4G,EAAYH,EAAeC,GAE3E3rB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKs8G,YAEfr8G,EAAKqG,KAAKtG,KAAKm8G,eAEfl8G,EAAKqG,KAAKtG,KAAKo8G,uBAERn8G,IAGP4jF,GAAY,MACd58E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIigE,GAAUgM,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6jF,GAAgB,MAClB78E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkgE,GAAc+L,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8jF,GAAmB,MACrB98E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImgE,GAAiB8L,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+jF,GAAuB,MACzB/8E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIogE,GAAqB6L,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgkF,GAAiB,MACnBh9E,YAAY4oF,EAAWxrF,EAAMk4G,EAAsBvsB,EAAMC,EAAausB,EAAqBC,GACzFz8G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu8G,qBAAuBA,EAC5Bv8G,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKw8G,oBAAsBA,EAC3Bx8G,KAAKy8G,6BAA+BA,EAEtClsB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN24F,EAAuB/rB,EAAK5sE,KAC5BosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB44F,EAAsBhsB,EAAK5sE,KAC3B64F,EAA+BjsB,EAAK5sE,KACxC,OAAO,IAAIqgE,GAAe4L,EAAWxrF,EAAMk4G,EAAsBvsB,EAAMC,EAAausB,EAAqBC,GAE3GhsB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKu8G,sBAEft8G,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKw8G,qBAEfv8G,EAAKqG,KAAKtG,KAAKy8G,8BAERx8G,IAGPikF,GAAgB,MAClBj9E,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAIsgE,GAAc2L,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAE1G3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPkkF,GAAyB,MAC3Bl9E,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAIugE,GAAuB0L,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAEnH3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPmkF,GAA4B,MAC9Bn9E,YAAY4oF,EAAWxrF,EAAMq4G,GAC3B18G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK08G,aAAeA,EAEtBnsB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN84F,EAAelsB,EAAK5sE,KACxB,OAAO,IAAIwgE,GAA0ByL,EAAWxrF,EAAMq4G,GAExDjsB,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK08G,cAERz8G,IAGPokF,GAAoB,MACtBp9E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,GACjCjwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EAErBM,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACvB,OAAO,IAAIygE,GAAkBwL,EAAWxrF,EAAM2rF,EAAMC,GAEtDQ,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAERhwF,IAGPqkF,GAA4B,MAC9Br9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauL,EAAcmhB,EAAoBC,EAAsBC,EAAaC,EAAaC,EAAehQ,EAAYiQ,GACnLh9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKw7F,aAAeA,EACpBx7F,KAAK28G,mBAAqBA,EAC1B38G,KAAK48G,qBAAuBA,EAC5B58G,KAAK68G,YAAcA,EACnB78G,KAAK88G,YAAcA,EACnB98G,KAAK+8G,cAAgBA,EACrB/8G,KAAK+sG,WAAaA,EAClB/sG,KAAKg9G,YAAcA,EAErBzsB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB43E,EAAehL,EAAK5sE,KACpB+4F,EAAqBnsB,EAAK5sE,KAC1Bg5F,EAAuBpsB,EAAK5sE,KAC5Bi5F,EAAcrsB,EAAK5sE,KACnBk5F,EAActsB,EAAK5sE,KACnBm5F,EAAgBvsB,EAAK5sE,KACrBmpF,EAAavc,EAAK5sE,KAClBo5F,EAAcxsB,EAAK5sE,KACvB,OAAO,IAAI0gE,GAA0BuL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauL,EAAcmhB,EAAoBC,EAAsBC,EAAaC,EAAaC,EAAehQ,EAAYiQ,GAEhNvsB,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKw7F,cAEfv7F,EAAKqG,KAAKtG,KAAK28G,oBAEf18G,EAAKqG,KAAKtG,KAAK48G,sBAEf38G,EAAKqG,KAAKtG,KAAK68G,aAEf58G,EAAKqG,KAAKtG,KAAK88G,aAEf78G,EAAKqG,KAAKtG,KAAK+8G,eAEf98G,EAAKqG,KAAKtG,KAAK+sG,YAEf9sG,EAAKqG,KAAKtG,KAAKg9G,aAER/8G,IAGPskF,GAAU,MACZt9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB+jB,EAAaC,EAAcC,EAAcC,EAAiBC,GACxMr9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKi9G,YAAcA,EACnBj9G,KAAKk9G,aAAeA,EACpBl9G,KAAKm9G,aAAeA,EACpBn9G,KAAKo9G,gBAAkBA,EACvBp9G,KAAKq9G,YAAcA,EAErB9sB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvBq5F,EAAczsB,EAAK5sE,KACnBs5F,EAAe1sB,EAAK5sE,KACpBu5F,EAAe3sB,EAAK5sE,KACpBw5F,EAAkB5sB,EAAK5sE,KACvBy5F,EAAc7sB,EAAK5sE,KACvB,OAAO,IAAI2gE,GAAQsL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB+jB,EAAaC,EAAcC,EAAcC,EAAiBC,GAEnN5sB,SACE,IAAIxwF,EAAO,GA6BX,OA5BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKi9G,aAEfh9G,EAAKqG,KAAKtG,KAAKk9G,cAEfj9G,EAAKqG,KAAKtG,KAAKm9G,cAEfl9G,EAAKqG,KAAKtG,KAAKo9G,iBAEfn9G,EAAKqG,KAAKtG,KAAKq9G,aAERp9G,IAGPukF,GAAU,MACZv9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4gE,GAAQqL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwkF,GAAuB,MACzBx9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6gE,GAAqBoL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPykF,GAAsB,MACxBz9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8gE,GAAoBmL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0kF,GAAc,MAChB19E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+gE,GAAYkL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2kF,GAAiC,MACnC39E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMstB,EAAWC,EAAWC,GACvDx9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKs9G,UAAYA,EACjBt9G,KAAKu9G,UAAYA,EACjBv9G,KAAKw9G,UAAYA,EAEnBjtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ05F,EAAY9sB,EAAK5sE,KACjB25F,EAAY/sB,EAAK5sE,KACjB45F,EAAYhtB,EAAK5sE,KACrB,OAAO,IAAIghE,GAA+BiL,EAAWxrF,EAAM2rF,EAAMstB,EAAWC,EAAWC,GAEzF/sB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKs9G,WAEfr9G,EAAKqG,KAAKtG,KAAKu9G,WAEft9G,EAAKqG,KAAKtG,KAAKw9G,WAERv9G,IAGP4kF,GAAiB,MACnB59E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIihE,GAAegL,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6kF,GAAqB,MACvB79E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkhE,GAAmB+K,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8kF,GAAgB,MAClB99E,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIzL,GAAc8K,EAAWxrF,GAEtCosF,SAEE,MADW,KAIXzL,GAAW,MACb/9E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,EAAgBqtB,GAC9Jz9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EACvBl5F,KAAKowF,eAAiBA,EACtBpwF,KAAKy9G,sBAAwBA,EAE/BltB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KACtB65F,EAAwBjtB,EAAK5sE,KACjC,OAAO,IAAIohE,GAAS6K,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,EAAiB9I,EAAgBqtB,GAE1KhtB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAEfj5F,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKy9G,uBAERx9G,IAGPglF,GAAiB,MACnBh+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqhE,GAAe4K,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPilF,GAAqB,MACvBj+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIshE,GAAmB2K,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPklF,GAAe,MACjBl+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB6I,GACnKj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAIuhE,GAAa0K,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB6I,GAEnLxI,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAGPmlF,GAAoB,MACtBn+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,GACnHj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAIwhE,GAAkByK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,GAExIxI,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAGPolF,GAAwB,MAC1Bp+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAIyhE,GAAsBwK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAE/JV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPqlF,GAA6B,MAC/Br+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAC7Hl5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKk5F,gBAAkBA,EAEzB3I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBs1E,EAAkB1I,EAAK5sE,KAC3B,OAAO,IAAI0hE,GAA2BuK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAUC,GAE3JzI,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKk5F,iBAERj5F,IAGPslF,GAAiC,MACnCt+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GACtInxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EAErBZ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACvB,OAAO,IAAI2hE,GAA+BsK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,GAExKV,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAERlxF,IAGPulF,GAAiB,MACnBv+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAU7I,GAC7HpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKi5F,SAAWA,EAChBj5F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4hE,GAAeqK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBmI,EAAU7I,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKi5F,UAEfh5F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwlF,GAAqB,MACvBx+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB6I,GACnKj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAI6hE,GAAmBoK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB6I,GAEzLxI,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAGPylF,GAAY,MACdz+E,YAAY4oF,EAAWxrF,EAAMwwF,EAAUxC,GACrCryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAI8hE,GAAUmK,EAAWxrF,EAAMwwF,EAAUxC,GAElD5B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGP0lF,GAAsB,MACxB1+E,YAAY4oF,EAAWxrF,EAAMwwF,EAAUxC,GACrCryF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKqyF,OAASA,EAEhB9B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChByuE,EAAS7B,EAAK5sE,KAClB,OAAO,IAAI+hE,GAAoBkK,EAAWxrF,EAAMwwF,EAAUxC,GAE5D5B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKqyF,QAERpyF,IAGP2lF,GAAmB,MACrB3+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgiE,GAAiBiK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4lF,GAAuB,MACzB5+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIiiE,GAAqBgK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6lF,GAAW,MACb7+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkiE,GAAS+J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEpIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8lF,GAAiB,MACnB9+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK2sB,EAAgBC,EAAgBC,EAAaC,EAAaztB,GAClLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAK09G,eAAiBA,EACtB19G,KAAK29G,eAAiBA,EACtB39G,KAAK49G,YAAcA,EACnB59G,KAAK69G,YAAcA,EACnB79G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX85F,EAAiBltB,EAAK5sE,KACtB+5F,EAAiBntB,EAAK5sE,KACtBg6F,EAAcptB,EAAK5sE,KACnBi6F,EAAcrtB,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImiE,GAAe8J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK2sB,EAAgBC,EAAgBC,EAAaC,EAAaztB,GAEpMK,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAK09G,gBAEfz9G,EAAKqG,KAAKtG,KAAK29G,gBAEf19G,EAAKqG,KAAKtG,KAAK49G,aAEf39G,EAAKqG,KAAKtG,KAAK69G,aAEf59G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+lF,GAAqB,MACvB/+E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIoiE,GAAmB6J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgmF,GAAe,MACjBh/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqiE,GAAa4J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEnKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPimF,GAAsB,MACxBj/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAC/Ih+G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EAE3BztB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KAC7B,OAAO,IAAIsiE,GAAoB2J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAEtKvtB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAER/9G,IAGPkmF,GAAwB,MAC1Bl/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAChI/9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EAEvBxtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACzB,OAAO,IAAIuiE,GAAsB0J,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAEzJttB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAER99G,IAGPmmF,GAA6B,MAC/Bn/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6tB,EAAsBC,EAAUC,EAAYC,GAC9Ip+G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKowF,eAAiBA,EACtBpwF,KAAKi+G,qBAAuBA,EAC5Bj+G,KAAKk+G,SAAWA,EAChBl+G,KAAKm+G,WAAaA,EAClBn+G,KAAKo+G,gBAAkBA,EAEzB7tB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtBq6F,EAAuBztB,EAAK5sE,KAC5Bs6F,EAAW1tB,EAAK5sE,KAChBu6F,EAAa3tB,EAAK5sE,KAClBw6F,EAAkB5tB,EAAK5sE,KAC3B,OAAO,IAAIwiE,GAA2ByJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgB6tB,EAAsBC,EAAUC,EAAYC,GAE5K3tB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKi+G,sBAEfh+G,EAAKqG,KAAKtG,KAAKk+G,UAEfj+G,EAAKqG,KAAKtG,KAAKm+G,YAEfl+G,EAAKqG,KAAKtG,KAAKo+G,iBAERn+G,IAGPomF,GAA0B,MAC5Bp/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,GACnHz3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKy3G,iBAAmBA,EAE1BlnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB6zF,EAAmBjnB,EAAK5sE,KAC5B,OAAO,IAAIyiE,GAAwBwJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,GAE9IhnB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKy3G,kBAERx3G,IAGPqmF,GAAmC,MACrCr/E,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI0iE,GAAiCuJ,EAAWxrF,EAAM2rF,GAE/DS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPsmF,GAA2B,MAC7Bt/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GACnLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EACzBh+G,KAAKq+G,gBAAkBA,EACvBr+G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KACzBy6F,EAAkB7tB,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI2iE,GAAyBsJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GAE/MK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAEf/9G,EAAKqG,KAAKtG,KAAKq+G,iBAEfp+G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPumF,GAA+B,MACjCv/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,EAAkB9lB,GACrI3xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKy3G,iBAAmBA,EACxBz3G,KAAK2xF,KAAOA,EAEdpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB6zF,EAAmBjnB,EAAK5sE,KACxB+tE,EAAOnB,EAAK5sE,KAChB,OAAO,IAAI4iE,GAA6BqJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,EAAkB9lB,GAErKlB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKy3G,kBAEfx3G,EAAKqG,KAAKtG,KAAK2xF,MAER1xF,IAGPwmF,GAA2B,MAC7Bx/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBuB,GACnI3xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKowF,eAAiBA,EACtBpwF,KAAK2xF,KAAOA,EAEdpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtB+tE,EAAOnB,EAAK5sE,KAChB,OAAO,IAAI6iE,GAAyBoJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBuB,GAE/JlB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK2xF,MAER1xF,IAGPymF,GAAkC,MACpCz/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBuB,GACnI3xF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKowF,eAAiBA,EACtBpwF,KAAK2xF,KAAOA,EAEdpB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtB+tE,EAAOnB,EAAK5sE,KAChB,OAAO,IAAI8iE,GAAgCmJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBuB,GAEtKlB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK2xF,MAER1xF,IAGP0mF,GAA6B,MAC/B1/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAe3tB,GAC/IpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+iE,GAA2BkJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAe3tB,GAE7KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2mF,GAAoB,MACtB3/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAIgjE,GAAkBiJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAExHL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGP4mF,GAA4B,MAC9B5/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GACnLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EACzBh+G,KAAKq+G,gBAAkBA,EACvBr+G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KACzBy6F,EAAkB7tB,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIijE,GAA0BgJ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GAEhNK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAEf/9G,EAAKqG,KAAKtG,KAAKq+G,iBAEfp+G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6mF,GAAoB,MACtB7/E,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIkjE,GAAkB+I,EAAWxrF,EAAM2rF,GAEhDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGP8mF,GAAwB,MAC1B9/E,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBkuB,EAAYC,EAAcC,EAAaptB,EAASqtB,GAClJz+G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKowF,eAAiBA,EACtBpwF,KAAKs+G,WAAaA,EAClBt+G,KAAKu+G,aAAeA,EACpBv+G,KAAKw+G,YAAcA,EACnBx+G,KAAKoxF,QAAUA,EACfpxF,KAAKy+G,uBAAyBA,EAEhCluB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtB06F,EAAa9tB,EAAK5sE,KAClB26F,EAAe/tB,EAAK5sE,KACpB46F,EAAchuB,EAAK5sE,KACnBwtE,EAAUZ,EAAK5sE,KACf66F,EAAyBjuB,EAAK5sE,KAClC,OAAO,IAAImjE,GAAsB8I,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBkuB,EAAYC,EAAcC,EAAaptB,EAASqtB,GAE3KhuB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKs+G,YAEfr+G,EAAKqG,KAAKtG,KAAKu+G,cAEft+G,EAAKqG,KAAKtG,KAAKw+G,aAEfv+G,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKy+G,wBAERx+G,IAGP+mF,GAAiC,MACnC//E,YAAY4oF,EAAWxrF,EAAM2rF,EAAMuY,EAAQmW,GACzC1+G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKuoG,OAASA,EACdvoG,KAAK0+G,UAAYA,EAEnBnuB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2kF,EAAS/X,EAAK5sE,KACd86F,EAAYluB,EAAK5sE,KACrB,OAAO,IAAIojE,GAA+B6I,EAAWxrF,EAAM2rF,EAAMuY,EAAQmW,GAE3EjuB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKuoG,QAEftoG,EAAKqG,KAAKtG,KAAK0+G,WAERz+G,IAGPgnF,GAAyB,MAC3BhgF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBkuB,EAAYC,EAAcC,EAAaptB,GACzIpxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKowF,eAAiBA,EACtBpwF,KAAKs+G,WAAaA,EAClBt+G,KAAKu+G,aAAeA,EACpBv+G,KAAKw+G,YAAcA,EACnBx+G,KAAKoxF,QAAUA,EAEjBb,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtB06F,EAAa9tB,EAAK5sE,KAClB26F,EAAe/tB,EAAK5sE,KACpB46F,EAAchuB,EAAK5sE,KACnBwtE,EAAUZ,EAAK5sE,KACnB,OAAO,IAAIqjE,GAAuB4I,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYE,EAAgBkuB,EAAYC,EAAcC,EAAaptB,GAEnKX,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKs+G,YAEfr+G,EAAKqG,KAAKtG,KAAKu+G,cAEft+G,EAAKqG,KAAKtG,KAAKw+G,aAEfv+G,EAAKqG,KAAKtG,KAAKoxF,SAERnxF,IAGPinF,GAA+B,MACjCjgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAM2uB,EAAcC,EAAcC,EAAcC,EAAeC,EAAeC,GACzGh/G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK2+G,aAAeA,EACpB3+G,KAAK4+G,aAAeA,EACpB5+G,KAAK6+G,aAAeA,EACpB7+G,KAAK8+G,cAAgBA,EACrB9+G,KAAK++G,cAAgBA,EACrB/+G,KAAKg/G,cAAgBA,EAEvBzuB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ+6F,EAAenuB,EAAK5sE,KACpBg7F,EAAepuB,EAAK5sE,KACpBi7F,EAAeruB,EAAK5sE,KACpBk7F,EAAgBtuB,EAAK5sE,KACrBm7F,EAAgBvuB,EAAK5sE,KACrBo7F,EAAgBxuB,EAAK5sE,KACzB,OAAO,IAAIsjE,GAA6B2I,EAAWxrF,EAAM2rF,EAAM2uB,EAAcC,EAAcC,EAAcC,EAAeC,EAAeC,GAEzIvuB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK2+G,cAEf1+G,EAAKqG,KAAKtG,KAAK4+G,cAEf3+G,EAAKqG,KAAKtG,KAAK6+G,cAEf5+G,EAAKqG,KAAKtG,KAAK8+G,eAEf7+G,EAAKqG,KAAKtG,KAAK++G,eAEf9+G,EAAKqG,KAAKtG,KAAKg/G,eAER/+G,IAGPknF,GAA4B,MAC9BlgF,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAIujE,GAA0B0I,EAAWxrF,EAAM2rF,GAExDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPmnF,GAA+B,MACjCngF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMivB,EAAcC,EAAcC,GAC7Dn/G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKi/G,aAAeA,EACpBj/G,KAAKk/G,aAAeA,EACpBl/G,KAAKm/G,aAAeA,EAEtB5uB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZq7F,EAAezuB,EAAK5sE,KACpBs7F,EAAe1uB,EAAK5sE,KACpBu7F,EAAe3uB,EAAK5sE,KACxB,OAAO,IAAIwjE,GAA6ByI,EAAWxrF,EAAM2rF,EAAMivB,EAAcC,EAAcC,GAE7F1uB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKi/G,cAEfh/G,EAAKqG,KAAKtG,KAAKk/G,cAEfj/G,EAAKqG,KAAKtG,KAAKm/G,cAERl/G,IAGPonF,GAAsC,MACxCpgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMovB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,GAClIz/G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKo/G,cAAgBA,EACrBp/G,KAAKq/G,cAAgBA,EACrBr/G,KAAKs/G,cAAgBA,EACrBt/G,KAAKu/G,yBAA2BA,EAChCv/G,KAAKw/G,yBAA2BA,EAChCx/G,KAAKy/G,yBAA2BA,EAElClvB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZw7F,EAAgB5uB,EAAK5sE,KACrBy7F,EAAgB7uB,EAAK5sE,KACrB07F,EAAgB9uB,EAAK5sE,KACrB27F,EAA2B/uB,EAAK5sE,KAChC47F,EAA2BhvB,EAAK5sE,KAChC67F,EAA2BjvB,EAAK5sE,KACpC,OAAO,IAAIyjE,GAAoCwI,EAAWxrF,EAAM2rF,EAAMovB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,GAEzKhvB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKo/G,eAEfn/G,EAAKqG,KAAKtG,KAAKq/G,eAEfp/G,EAAKqG,KAAKtG,KAAKs/G,eAEfr/G,EAAKqG,KAAKtG,KAAKu/G,0BAEft/G,EAAKqG,KAAKtG,KAAKw/G,0BAEfv/G,EAAKqG,KAAKtG,KAAKy/G,0BAERx/G,IAGPqnF,GAAgD,MAClDrgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMovB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,EAA0BC,GAC5J1/G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKo/G,cAAgBA,EACrBp/G,KAAKq/G,cAAgBA,EACrBr/G,KAAKs/G,cAAgBA,EACrBt/G,KAAKu/G,yBAA2BA,EAChCv/G,KAAKw/G,yBAA2BA,EAChCx/G,KAAKy/G,yBAA2BA,EAChCz/G,KAAK0/G,WAAaA,EAEpBnvB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZw7F,EAAgB5uB,EAAK5sE,KACrBy7F,EAAgB7uB,EAAK5sE,KACrB07F,EAAgB9uB,EAAK5sE,KACrB27F,EAA2B/uB,EAAK5sE,KAChC47F,EAA2BhvB,EAAK5sE,KAChC67F,EAA2BjvB,EAAK5sE,KAChC87F,EAAalvB,EAAK5sE,KACtB,OAAO,IAAI0jE,GAA8CuI,EAAWxrF,EAAM2rF,EAAMovB,EAAeC,EAAeC,EAAeC,EAA0BC,EAA0BC,EAA0BC,GAE7MjvB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKo/G,eAEfn/G,EAAKqG,KAAKtG,KAAKq/G,eAEfp/G,EAAKqG,KAAKtG,KAAKs/G,eAEfr/G,EAAKqG,KAAKtG,KAAKu/G,0BAEft/G,EAAKqG,KAAKtG,KAAKw/G,0BAEfv/G,EAAKqG,KAAKtG,KAAKy/G,0BAEfx/G,EAAKqG,KAAKtG,KAAK0/G,YAERz/G,IAGPsnF,GAA+B,MACjCtgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAM2vB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,GAC3EhgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK2/G,OAASA,EACd3/G,KAAK4/G,OAASA,EACd5/G,KAAK6/G,OAASA,EACd7/G,KAAK8/G,QAAUA,EACf9/G,KAAK+/G,QAAUA,EACf//G,KAAKggH,QAAUA,EAEjBzvB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ+7F,EAASnvB,EAAK5sE,KACdg8F,EAASpvB,EAAK5sE,KACdi8F,EAASrvB,EAAK5sE,KACdk8F,EAAUtvB,EAAK5sE,KACfm8F,EAAUvvB,EAAK5sE,KACfo8F,EAAUxvB,EAAK5sE,KACnB,OAAO,IAAI2jE,GAA6BsI,EAAWxrF,EAAM2rF,EAAM2vB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,GAE3GvvB,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK2/G,QAEf1/G,EAAKqG,KAAKtG,KAAK4/G,QAEf3/G,EAAKqG,KAAKtG,KAAK6/G,QAEf5/G,EAAKqG,KAAKtG,KAAK8/G,SAEf7/G,EAAKqG,KAAKtG,KAAK+/G,SAEf9/G,EAAKqG,KAAKtG,KAAKggH,SAER//G,IAGPunF,GAAsC,MACxCvgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAM2vB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAASC,GACpFjgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK2/G,OAASA,EACd3/G,KAAK4/G,OAASA,EACd5/G,KAAK6/G,OAASA,EACd7/G,KAAK8/G,QAAUA,EACf9/G,KAAK+/G,QAAUA,EACf//G,KAAKggH,QAAUA,EACfhgH,KAAKigH,cAAgBA,EAEvB1vB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ+7F,EAASnvB,EAAK5sE,KACdg8F,EAASpvB,EAAK5sE,KACdi8F,EAASrvB,EAAK5sE,KACdk8F,EAAUtvB,EAAK5sE,KACfm8F,EAAUvvB,EAAK5sE,KACfo8F,EAAUxvB,EAAK5sE,KACfq8F,EAAgBzvB,EAAK5sE,KACzB,OAAO,IAAI4jE,GAAoCqI,EAAWxrF,EAAM2rF,EAAM2vB,EAAQC,EAAQC,EAAQC,EAASC,EAASC,EAASC,GAE3HxvB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK2/G,QAEf1/G,EAAKqG,KAAKtG,KAAK4/G,QAEf3/G,EAAKqG,KAAKtG,KAAK6/G,QAEf5/G,EAAKqG,KAAKtG,KAAK8/G,SAEf7/G,EAAKqG,KAAKtG,KAAK+/G,SAEf9/G,EAAKqG,KAAKtG,KAAKggH,SAEf//G,EAAKqG,KAAKtG,KAAKigH,eAERhgH,IAGPwnF,GAA0B,MAC5BxgF,YAAY4oF,EAAWxrF,EAAM2rF,GAC3BhwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI6jE,GAAwBoI,EAAWxrF,EAAM2rF,GAEtDS,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPynF,GAA+B,MACjCzgF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMkwB,EAAgBC,EAASC,GAC1DpgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKkgH,eAAiBA,EACtBlgH,KAAKmgH,QAAUA,EACfngH,KAAKogH,QAAUA,EAEjB7vB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZs8F,EAAiB1vB,EAAK5sE,KACtBu8F,EAAU3vB,EAAK5sE,KACfw8F,EAAU5vB,EAAK5sE,KACnB,OAAO,IAAI8jE,GAA6BmI,EAAWxrF,EAAM2rF,EAAMkwB,EAAgBC,EAASC,GAE1F3vB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKkgH,gBAEfjgH,EAAKqG,KAAKtG,KAAKmgH,SAEflgH,EAAKqG,KAAKtG,KAAKogH,SAERngH,IAGP0nF,GAAsB,MACxB1gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GACnG9wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EAExBP,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KAC1B,OAAO,IAAI+jE,GAAoBkI,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,GAE1HL,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAER7wF,IAGP2nF,GAA4B,MAC9B3gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GACnLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EACzBh+G,KAAKq+G,gBAAkBA,EACvBr+G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KACzBy6F,EAAkB7tB,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgkE,GAA0BiI,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GAEhNK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAEf/9G,EAAKqG,KAAKtG,KAAKq+G,iBAEfp+G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4nF,GAA2B,MAC7B5gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAC/Ih+G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EAE3BztB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KAC7B,OAAO,IAAIikE,GAAyBgI,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,GAE3KvtB,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAER/9G,IAGP6nF,GAA+B,MACjC7gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,EAAkBG,GACrI53G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKy3G,iBAAmBA,EACxBz3G,KAAK43G,0BAA4BA,EAEnCrnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB6zF,EAAmBjnB,EAAK5sE,KACxBg0F,EAA4BpnB,EAAK5sE,KACrC,OAAO,IAAIkkE,GAA6B+H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,EAAkBG,GAErKnnB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKy3G,kBAEfx3G,EAAKqG,KAAKtG,KAAK43G,2BAER33G,IAGP8nF,GAA6B,MAC/B9gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAChI/9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EAEvBxtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACzB,OAAO,IAAImkE,GAA2B8H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAE9JttB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAER99G,IAGP+nF,GAAwB,MAC1B/gF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAChI/9G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EAEvBxtB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACzB,OAAO,IAAIokE,GAAsB6H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,GAEzJttB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAER99G,IAGPgoF,GAA2B,MAC7BhhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYmwB,EAAYC,EAAoBC,GAClHvgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKqgH,WAAaA,EAClBrgH,KAAKsgH,mBAAqBA,EAC1BtgH,KAAKugH,SAAWA,EAElBhwB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBy8F,EAAa7vB,EAAK5sE,KAClB08F,EAAqB9vB,EAAK5sE,KAC1B28F,EAAW/vB,EAAK5sE,KACpB,OAAO,IAAIqkE,GAAyB4H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYmwB,EAAYC,EAAoBC,GAE9I9vB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKqgH,YAEfpgH,EAAKqG,KAAKtG,KAAKsgH,oBAEfrgH,EAAKqG,KAAKtG,KAAKugH,UAERtgH,IAGPioF,GAA6B,MAC/BjhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GACnLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKg+G,kBAAoBA,EACzBh+G,KAAKq+G,gBAAkBA,EACvBr+G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBo6F,EAAoBxtB,EAAK5sE,KACzBy6F,EAAkB7tB,EAAK5sE,KACvBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIskE,GAA2B2H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAeC,EAAmBK,EAAiBjuB,GAEjNK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKg+G,mBAEf/9G,EAAKqG,KAAKtG,KAAKq+G,iBAEfp+G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkoF,GAAiC,MACnClhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,GACnHz3G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKy3G,iBAAmBA,EAE1BlnB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtB6zF,EAAmBjnB,EAAK5sE,KAC5B,OAAO,IAAIukE,GAA+B0H,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgB2mB,GAErJhnB,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKy3G,kBAERx3G,IAGPmoF,GAA6B,MAC/BnhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkK,GACnIt6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKowF,eAAiBA,EACtBpwF,KAAKs6F,UAAYA,EAEnB/J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtB02E,EAAY9J,EAAK5sE,KACrB,OAAO,IAAIwkE,GAA2ByH,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkK,GAEjK7J,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKs6F,WAERr6F,IAGPooF,GAAoC,MACtCphF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkK,GACnIt6F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAKowF,eAAiBA,EACtBpwF,KAAKs6F,UAAYA,EAEnB/J,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KACtB02E,EAAY9J,EAAK5sE,KACrB,OAAO,IAAIykE,GAAkCwH,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBV,EAAgBkK,GAExK7J,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKs6F,WAERr6F,IAGPqoF,GAA+B,MACjCrhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAe3tB,GAC/IpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK89G,YAAcA,EACnB99G,KAAK+9G,cAAgBA,EACrB/9G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBk6F,EAActtB,EAAK5sE,KACnBm6F,EAAgBvtB,EAAK5sE,KACrBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0kE,GAA6BuH,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBgtB,EAAaC,EAAe3tB,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK89G,aAEf79G,EAAKqG,KAAKtG,KAAK+9G,eAEf99G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsoF,GAAgB,MAClBthF,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAI2kE,GAAcsH,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAE1G3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPuoF,GAAgB,MAClBvhF,YAAY4oF,EAAWxrF,EAAMyG,EAAMumG,EAAQrhB,GACzChwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8K,KAAOA,EACZ9K,KAAKqxG,OAASA,EACdrxG,KAAKgwF,KAAOA,EAEdO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN9Y,EAAO0lF,EAAK5sE,KACZytF,EAAS7gB,EAAK5sE,KACdosE,EAAOQ,EAAK5sE,KAChB,OAAO,IAAI4kE,GAAcqH,EAAWxrF,EAAMyG,EAAMumG,EAAQrhB,GAE1DS,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8K,MAEf7K,EAAKqG,KAAKtG,KAAKqxG,QAEfpxG,EAAKqG,KAAKtG,KAAKgwF,MAER/vF,IAGPwoF,GAA0B,MAC5BxhF,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAI6kE,GAAwBoH,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAEpH3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPyoF,GAAyB,MAC3BzhF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK88F,MAAQA,EACb98F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBk5E,EAAQtM,EAAK5sE,KACbm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8kE,GAAuBmH,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBwM,EAAOC,EAAWC,EAAc5M,GAE7KK,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK88F,OAEf78F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0oF,GAA6B,MAC/B1hF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GACrLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EACpBj9F,KAAK+8F,UAAYA,EACjB/8F,KAAKg9F,aAAeA,EACpBh9F,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACpBm5E,EAAYvM,EAAK5sE,KACjBo5E,EAAexM,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+kE,GAA2BkH,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,EAAcF,EAAWC,EAAc5M,GAEnNK,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAEfh9F,EAAKqG,KAAKtG,KAAK+8F,WAEf98F,EAAKqG,KAAKtG,KAAKg9F,cAEf/8F,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2oF,GAAa,MACf3hF,YAAY4oF,EAAWxrF,EAAMu+F,EAAWC,EAAS2d,GAC/CxgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4iG,UAAYA,EACjB5iG,KAAK6iG,QAAUA,EACf7iG,KAAKwgH,WAAaA,EAEpBjwB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg/E,EAAYpS,EAAK5sE,KACjBi/E,EAAUrS,EAAK5sE,KACf48F,EAAahwB,EAAK5sE,KACtB,OAAO,IAAIglE,GAAWiH,EAAWxrF,EAAMu+F,EAAWC,EAAS2d,GAE7D/vB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK4iG,WAEf3iG,EAAKqG,KAAKtG,KAAK6iG,SAEf5iG,EAAKqG,KAAKtG,KAAKwgH,YAERvgH,IAGP4oF,GAAa,MACf5hF,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAI3H,GAAWgH,EAAWxrF,GAEnCosF,SAEE,MADW,KAIX3H,GAAkB,MACpB7hF,YAAY4oF,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GACxDhoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8nG,QAAUA,EACf9nG,KAAK+nG,mBAAqBA,EAC1B/nG,KAAKgoG,qBAAuBA,EAE9BzX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkkF,EAAUtX,EAAK5sE,KACfmkF,EAAqBvX,EAAK5sE,KAC1BokF,EAAuBxX,EAAK5sE,KAChC,OAAO,IAAIklE,GAAgB+G,EAAWxrF,EAAMyjG,EAASC,EAAoBC,GAE3EvX,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK8nG,SAEf7nG,EAAKqG,KAAKtG,KAAK+nG,oBAEf9nG,EAAKqG,KAAKtG,KAAKgoG,sBAER/nG,IAGP8oF,GAAgC,MAClC9hF,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAU8a,GACjFzgH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAChB70F,KAAKylG,UAAYA,EACjBzlG,KAAK0lG,WAAaA,EAClB1lG,KAAK2lG,SAAWA,EAChB3lG,KAAKygH,iBAAmBA,EAE1BlwB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KAChB6hF,EAAYjV,EAAK5sE,KACjB8hF,EAAalV,EAAK5sE,KAClB+hF,EAAWnV,EAAK5sE,KAChB68F,EAAmBjwB,EAAK5sE,KAC5B,OAAO,IAAImlE,GAA8B8G,EAAWxrF,EAAM8/F,EAAWtP,EAAU4Q,EAAWC,EAAYC,EAAU8a,GAElHhwB,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAK0lG,YAEfzlG,EAAKqG,KAAKtG,KAAK2lG,UAEf1lG,EAAKqG,KAAKtG,KAAKygH,kBAERxgH,IAGP+oF,GAAoB,MACtB/hF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIolE,GAAkB6G,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE7IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgpF,GAA8B,MAChChiF,YAAY4oF,EAAWxrF,EAAMq8G,EAAY7rB,EAAUuP,EAAmB7K,GACpEv5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0gH,WAAaA,EAClB1gH,KAAK60F,SAAWA,EAChB70F,KAAKokG,kBAAoBA,EACzBpkG,KAAKu5F,MAAQA,EAEfhJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN88F,EAAalwB,EAAK5sE,KAClBixE,EAAWrE,EAAK5sE,KAChBwgF,EAAoB5T,EAAK5sE,KACzB21E,EAAQ/I,EAAK5sE,KACjB,OAAO,IAAIqlE,GAA4B4G,EAAWxrF,EAAMq8G,EAAY7rB,EAAUuP,EAAmB7K,GAEnG9I,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAK0gH,YAEfzgH,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKokG,mBAEfnkG,EAAKqG,KAAKtG,KAAKu5F,OAERt5F,IAGPipF,GAAyB,MAC3BjiF,YAAY4oF,EAAWxrF,EAAMq8G,EAAY7rB,EAAU8rB,GACjD3gH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0gH,WAAaA,EAClB1gH,KAAK60F,SAAWA,EAChB70F,KAAK2gH,aAAeA,EAEtBpwB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN88F,EAAalwB,EAAK5sE,KAClBixE,EAAWrE,EAAK5sE,KAChB+8F,EAAenwB,EAAK5sE,KACxB,OAAO,IAAIslE,GAAuB2G,EAAWxrF,EAAMq8G,EAAY7rB,EAAU8rB,GAE3ElwB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK0gH,YAEfzgH,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK2gH,cAER1gH,IAGPkpF,GAA8B,MAChCliF,YAAY4oF,EAAWxrF,EAAM2rF,EAAM4wB,EAAuBC,EAAuBC,GAC/E9gH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK4gH,sBAAwBA,EAC7B5gH,KAAK6gH,sBAAwBA,EAC7B7gH,KAAK8gH,mBAAqBA,EAE5BvwB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZg9F,EAAwBpwB,EAAK5sE,KAC7Bi9F,EAAwBrwB,EAAK5sE,KAC7Bk9F,EAAqBtwB,EAAK5sE,KAC9B,OAAO,IAAIulE,GAA4B0G,EAAWxrF,EAAM2rF,EAAM4wB,EAAuBC,EAAuBC,GAE9GrwB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK4gH,uBAEf3gH,EAAKqG,KAAKtG,KAAK6gH,uBAEf5gH,EAAKqG,KAAKtG,KAAK8gH,oBAER7gH,IAGPmpF,GAAkB,MACpBniF,YAAY4oF,EAAWxrF,EAAM2rF,EAAM+wB,EAAM1P,GACvCrxG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAK+gH,KAAOA,EACZ/gH,KAAKqxG,OAASA,EAEhB9gB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZm9F,EAAOvwB,EAAK5sE,KACZytF,EAAS7gB,EAAK5sE,KAClB,OAAO,IAAIwlE,GAAgByG,EAAWxrF,EAAM2rF,EAAM+wB,EAAM1P,GAE1D5gB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAK+gH,MAEf9gH,EAAKqG,KAAKtG,KAAKqxG,QAERpxG,IAGPopF,GAA0B,MAC5BpiF,YAAY4oF,EAAWxrF,EAAM28G,EAA2BC,EAAyBC,EAAoBC,GACnGnhH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKghH,0BAA4BA,EACjChhH,KAAKihH,wBAA0BA,EAC/BjhH,KAAKkhH,mBAAqBA,EAC1BlhH,KAAKmhH,kBAAoBA,EAE3B5wB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNo9F,EAA4BxwB,EAAK5sE,KACjCq9F,EAA0BzwB,EAAK5sE,KAC/Bs9F,EAAqB1wB,EAAK5sE,KAC1Bu9F,EAAoB3wB,EAAK5sE,KAC7B,OAAO,IAAIylE,GAAwBwG,EAAWxrF,EAAM28G,EAA2BC,EAAyBC,EAAoBC,GAE9H1wB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKghH,2BAEf/gH,EAAKqG,KAAKtG,KAAKihH,yBAEfhhH,EAAKqG,KAAKtG,KAAKkhH,oBAEfjhH,EAAKqG,KAAKtG,KAAKmhH,mBAERlhH,IAGPqpF,GAA4B,MAC9BriF,YAAY4oF,EAAWxrF,EAAM+8G,EAAiBC,GAC5CrhH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKohH,gBAAkBA,EACvBphH,KAAKqhH,iBAAmBA,EAE1B9wB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNw9F,EAAkB5wB,EAAK5sE,KACvBy9F,EAAmB7wB,EAAK5sE,KAC5B,OAAO,IAAI0lE,GAA0BuG,EAAWxrF,EAAM+8G,EAAiBC,GAEzE5wB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKohH,iBAEfnhH,EAAKqG,KAAKtG,KAAKqhH,kBAERphH,IAGPspF,GAA2B,MAC7BtiF,YAAY4oF,EAAWxrF,EAAMi9G,EAAeC,EAAcC,EAAeN,EAAoBF,EAA2BS,EAAkBC,EAAgBC,EAAmBC,GAC3K5hH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKshH,cAAgBA,EACrBthH,KAAKuhH,aAAeA,EACpBvhH,KAAKwhH,cAAgBA,EACrBxhH,KAAKkhH,mBAAqBA,EAC1BlhH,KAAKghH,0BAA4BA,EACjChhH,KAAKyhH,iBAAmBA,EACxBzhH,KAAK0hH,eAAiBA,EACtB1hH,KAAK2hH,kBAAoBA,EACzB3hH,KAAK4hH,kBAAoBA,EAE3BrxB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN09F,EAAgB9wB,EAAK5sE,KACrB29F,EAAe/wB,EAAK5sE,KACpB49F,EAAgBhxB,EAAK5sE,KACrBs9F,EAAqB1wB,EAAK5sE,KAC1Bo9F,EAA4BxwB,EAAK5sE,KACjC69F,EAAmBjxB,EAAK5sE,KACxB89F,EAAiBlxB,EAAK5sE,KACtB+9F,EAAoBnxB,EAAK5sE,KACzBg+F,EAAoBpxB,EAAK5sE,KAC7B,OAAO,IAAI2lE,GAAyBsG,EAAWxrF,EAAMi9G,EAAeC,EAAcC,EAAeN,EAAoBF,EAA2BS,EAAkBC,EAAgBC,EAAmBC,GAEvMnxB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKshH,eAEfrhH,EAAKqG,KAAKtG,KAAKuhH,cAEfthH,EAAKqG,KAAKtG,KAAKwhH,eAEfvhH,EAAKqG,KAAKtG,KAAKkhH,oBAEfjhH,EAAKqG,KAAKtG,KAAKghH,2BAEf/gH,EAAKqG,KAAKtG,KAAKyhH,kBAEfxhH,EAAKqG,KAAKtG,KAAK0hH,gBAEfzhH,EAAKqG,KAAKtG,KAAK2hH,mBAEf1hH,EAAKqG,KAAKtG,KAAK4hH,mBAER3hH,IAGPupF,GAAyB,MAC3BviF,YAAY4oF,EAAWxrF,EAAMi9G,EAAeC,GAC1CvhH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKshH,cAAgBA,EACrBthH,KAAKuhH,aAAeA,EAEtBhxB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN09F,EAAgB9wB,EAAK5sE,KACrB29F,EAAe/wB,EAAK5sE,KACxB,OAAO,IAAI4lE,GAAuBqG,EAAWxrF,EAAMi9G,EAAeC,GAEpE9wB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKshH,eAEfrhH,EAAKqG,KAAKtG,KAAKuhH,cAERthH,IAGPwpF,GAA8B,MAChCxiF,YAAY4oF,EAAWxrF,EAAMw9G,GAC3B7hH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6hH,SAAWA,EAElBtxB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNi+F,EAAWrxB,EAAK5sE,KACpB,OAAO,IAAI6lE,GAA4BoG,EAAWxrF,EAAMw9G,GAE1DpxB,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK6hH,UAER5hH,IAGPypF,GAAoB,MACtBziF,YAAY4oF,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,GACrEj3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK62F,QAAUA,EACf72F,KAAK82F,QAAUA,EACf92F,KAAK+2F,KAAOA,EACZ/2F,KAAKg3F,iBAAmBA,EACxBh3F,KAAKi3F,UAAYA,EAEnB1G,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNizE,EAAUrG,EAAK5sE,KACfkzE,EAAUtG,EAAK5sE,KACfmzE,EAAOvG,EAAK5sE,KACZozE,EAAmBxG,EAAK5sE,KACxBqzE,EAAYzG,EAAK5sE,KACrB,OAAO,IAAI8lE,GAAkBmG,EAAWxrF,EAAMwyF,EAASC,EAASC,EAAMC,EAAkBC,GAE1FxG,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK62F,SAEf52F,EAAKqG,KAAKtG,KAAK82F,SAEf72F,EAAKqG,KAAKtG,KAAK+2F,MAEf92F,EAAKqG,KAAKtG,KAAKg3F,kBAEf/2F,EAAKqG,KAAKtG,KAAKi3F,WAERh3F,IAGP0pF,GAAoB,MACtB1iF,YAAY4oF,EAAWxrF,EAAM8/F,EAAWtP,GACtC70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKmkG,UAAYA,EACjBnkG,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNugF,EAAY3T,EAAK5sE,KACjBixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAI+lE,GAAkBkG,EAAWxrF,EAAM8/F,EAAWtP,GAE3DpE,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKmkG,WAEflkG,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGP2pF,GAAoB,MACtB3iF,YAAY4oF,EAAWxrF,EAAMohG,EAAWpT,EAAQyvB,EAAapc,EAAYC,GACvE3lG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKylG,UAAYA,EACjBzlG,KAAKqyF,OAASA,EACdryF,KAAK8hH,YAAcA,EACnB9hH,KAAK0lG,WAAaA,EAClB1lG,KAAK2lG,SAAWA,EAElBpV,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6hF,EAAYjV,EAAK5sE,KACjByuE,EAAS7B,EAAK5sE,KACdk+F,EAActxB,EAAK5sE,KACnB8hF,EAAalV,EAAK5sE,KAClB+hF,EAAWnV,EAAK5sE,KACpB,OAAO,IAAIgmE,GAAkBiG,EAAWxrF,EAAMohG,EAAWpT,EAAQyvB,EAAapc,EAAYC,GAE5FlV,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAK8hH,aAEf7hH,EAAKqG,KAAKtG,KAAK0lG,YAEfzlG,EAAKqG,KAAKtG,KAAK2lG,UAER1lG,IAGP4pF,GAA6B,MAC/B5iF,YAAY4oF,EAAWxrF,EAAMohG,EAAWpT,EAAQyvB,EAAapc,EAAYC,EAAUqB,GACjFhnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKylG,UAAYA,EACjBzlG,KAAKqyF,OAASA,EACdryF,KAAK8hH,YAAcA,EACnB9hH,KAAK0lG,WAAaA,EAClB1lG,KAAK2lG,SAAWA,EAChB3lG,KAAKgnG,aAAeA,EAEtBzW,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6hF,EAAYjV,EAAK5sE,KACjByuE,EAAS7B,EAAK5sE,KACdk+F,EAActxB,EAAK5sE,KACnB8hF,EAAalV,EAAK5sE,KAClB+hF,EAAWnV,EAAK5sE,KAChBojF,EAAexW,EAAK5sE,KACxB,OAAO,IAAIimE,GAA2BgG,EAAWxrF,EAAMohG,EAAWpT,EAAQyvB,EAAapc,EAAYC,EAAUqB,GAE/GvW,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKylG,WAEfxlG,EAAKqG,KAAKtG,KAAKqyF,QAEfpyF,EAAKqG,KAAKtG,KAAK8hH,aAEf7hH,EAAKqG,KAAKtG,KAAK0lG,YAEfzlG,EAAKqG,KAAKtG,KAAK2lG,UAEf1lG,EAAKqG,KAAKtG,KAAKgnG,cAER/mG,IAGP6pF,GAAkB,MACpB7iF,YAAY4oF,EAAWxrF,EAAMq8G,EAAY7rB,GACvC70F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0gH,WAAaA,EAClB1gH,KAAK60F,SAAWA,EAElBtE,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN88F,EAAalwB,EAAK5sE,KAClBixE,EAAWrE,EAAK5sE,KACpB,OAAO,IAAIkmE,GAAgB+F,EAAWxrF,EAAMq8G,EAAY7rB,GAE1DpE,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK0gH,YAEfzgH,EAAKqG,KAAKtG,KAAK60F,UAER50F,IAGP8pF,GAAqB,MACvB9iF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImmE,GAAmB8F,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE9IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+pF,GAAyB,MAC3B/iF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIomE,GAAuB6F,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE7KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgqF,GAAY,MACdhjF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GACtElwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAEpBK,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KACtB,OAAO,IAAIqmE,GAAU4F,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,GAEnFO,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAERjwF,IAGPiqF,GAA4B,MAC9BjjF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsmE,GAA0B2F,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAErJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkqF,GAAgC,MAClCljF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIumE,GAA8B0F,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEpLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmqF,GAAsB,MACxBnjF,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAcC,EAAkB+a,EAAeC,EAAU/a,GAC3KlnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKu5F,MAAQA,EACbv5F,KAAK+hH,YAAcA,EACnB/hH,KAAKg1F,aAAeA,EACpBh1F,KAAK+mG,gBAAkBA,EACvB/mG,KAAKgnG,aAAeA,EACpBhnG,KAAKinG,iBAAmBA,EACxBjnG,KAAKgiH,cAAgBA,EACrBhiH,KAAKiiH,SAAWA,EAChBjiH,KAAKknG,YAAcA,EAErB3W,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB21E,EAAQ/I,EAAK5sE,KACbm+F,EAAcvxB,EAAK5sE,KACnBoxE,EAAexE,EAAK5sE,KACpBmjF,EAAkBvW,EAAK5sE,KACvBojF,EAAexW,EAAK5sE,KACpBqjF,EAAmBzW,EAAK5sE,KACxBo+F,EAAgBxxB,EAAK5sE,KACrBq+F,EAAWzxB,EAAK5sE,KAChBsjF,EAAc1W,EAAK5sE,KACvB,OAAO,IAAIwmE,GAAoByF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAcC,EAAkB+a,EAAeC,EAAU/a,GAElMzW,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAK+hH,aAEf9hH,EAAKqG,KAAKtG,KAAKg1F,cAEf/0F,EAAKqG,KAAKtG,KAAK+mG,iBAEf9mG,EAAKqG,KAAKtG,KAAKgnG,cAEf/mG,EAAKqG,KAAKtG,KAAKinG,kBAEfhnG,EAAKqG,KAAKtG,KAAKgiH,eAEf/hH,EAAKqG,KAAKtG,KAAKiiH,UAEfhiH,EAAKqG,KAAKtG,KAAKknG,aAERjnG,IAGPoqF,GAAW,MACbpjF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMkyB,EAAMC,GACvCniH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKkiH,KAAOA,EACZliH,KAAKmiH,QAAUA,EAEjB5xB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZs+F,EAAO1xB,EAAK5sE,KACZu+F,EAAU3xB,EAAK5sE,KACnB,OAAO,IAAIymE,GAASwF,EAAWxrF,EAAM2rF,EAAMkyB,EAAMC,GAEnD1xB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKkiH,MAEfjiH,EAAKqG,KAAKtG,KAAKmiH,SAERliH,IAGPqqF,GAAiB,MACnBrjF,YAAY4oF,EAAWxrF,EAAMmvF,EAAYxD,EAAMC,EAAaoP,EAAMkO,GAChEvtG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwzF,WAAaA,EAClBxzF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKq/F,KAAOA,EACZr/F,KAAKutG,cAAgBA,EAEvBhd,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4vE,EAAahD,EAAK5sE,KAClBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBy7E,EAAO7O,EAAK5sE,KACZ2pF,EAAgB/c,EAAK5sE,KACzB,OAAO,IAAI0mE,GAAeuF,EAAWxrF,EAAMmvF,EAAYxD,EAAMC,EAAaoP,EAAMkO,GAElF9c,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKwzF,YAEfvzF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKq/F,MAEfp/F,EAAKqG,KAAKtG,KAAKutG,eAERttG,IAGPsqF,GAAc,MAChBtjF,YAAY4oF,EAAWxrF,EAAM+9G,EAAUC,GACrCriH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKoiH,SAAWA,EAChBpiH,KAAKqiH,UAAYA,EAEnB9xB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNw+F,EAAW5xB,EAAK5sE,KAChBy+F,EAAY7xB,EAAK5sE,KACrB,OAAO,IAAI2mE,GAAYsF,EAAWxrF,EAAM+9G,EAAUC,GAEpD5xB,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKoiH,UAEfniH,EAAKqG,KAAKtG,KAAKqiH,WAERpiH,IAGPuqF,GAAU,MACZvjF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4mE,GAAQqF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwqF,GAAc,MAChBxjF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6mE,GAAYoF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyqF,GAAU,MACZzjF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBD,EAAQiyB,EAAYC,EAAa5W,EAAU6W,EAAUpyB,GACxKpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKqwF,OAASA,EACdrwF,KAAKsiH,WAAaA,EAClBtiH,KAAKuiH,YAAcA,EACnBviH,KAAK2rG,SAAWA,EAChB3rG,KAAKwiH,SAAWA,EAChBxiH,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBysE,EAASG,EAAK5sE,KACd0+F,EAAa9xB,EAAK5sE,KAClB2+F,EAAc/xB,EAAK5sE,KACnB+nF,EAAWnb,EAAK5sE,KAChB4+F,EAAWhyB,EAAK5sE,KAChBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8mE,GAAQmF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBG,EAAiBD,EAAQiyB,EAAYC,EAAa5W,EAAU6W,EAAUpyB,GAEnLK,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKqwF,QAEfpwF,EAAKqG,KAAKtG,KAAKsiH,YAEfriH,EAAKqG,KAAKtG,KAAKuiH,aAEftiH,EAAKqG,KAAKtG,KAAK2rG,UAEf1rG,EAAKqG,KAAKtG,KAAKwiH,UAEfviH,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0qF,GAAc,MAChB1jF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBoF,EAAc4Z,EAAkBhI,EAAeC,EAAgBgI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYlI,EAAYmI,EAAgBhI,EAAaC,EAAcgI,EAAe7H,GAC5Rr7G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAK6oG,aAAeA,EACpB7oG,KAAKyiH,iBAAmBA,EACxBziH,KAAKy6G,cAAgBA,EACrBz6G,KAAK06G,eAAiBA,EACtB16G,KAAK0iH,WAAaA,EAClB1iH,KAAK2iH,YAAcA,EACnB3iH,KAAK4iH,UAAYA,EACjB5iH,KAAK6iH,WAAaA,EAClB7iH,KAAK8iH,UAAYA,EACjB9iH,KAAK+iH,WAAaA,EAClB/iH,KAAKgjH,WAAaA,EAClBhjH,KAAK86G,WAAaA,EAClB96G,KAAKijH,eAAiBA,EACtBjjH,KAAKi7G,YAAcA,EACnBj7G,KAAKk7G,aAAeA,EACpBl7G,KAAKkjH,cAAgBA,EACrBljH,KAAKq7G,WAAaA,EAEpB9qB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7BilF,EAAerY,EAAK5sE,KACpB6+F,EAAmBjyB,EAAK5sE,KACxB62F,EAAgBjqB,EAAK5sE,KACrB82F,EAAiBlqB,EAAK5sE,KACtB8+F,EAAalyB,EAAK5sE,KAClB++F,EAAcnyB,EAAK5sE,KACnBg/F,EAAYpyB,EAAK5sE,KACjBi/F,EAAaryB,EAAK5sE,KAClBk/F,EAAYtyB,EAAK5sE,KACjBm/F,EAAavyB,EAAK5sE,KAClBo/F,EAAaxyB,EAAK5sE,KAClBk3F,EAAatqB,EAAK5sE,KAClBq/F,EAAiBzyB,EAAK5sE,KACtBq3F,EAAczqB,EAAK5sE,KACnBs3F,EAAe1qB,EAAK5sE,KACpBs/F,EAAgB1yB,EAAK5sE,KACrBy3F,EAAa7qB,EAAK5sE,KACtB,OAAO,IAAI+mE,GAAYkF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBoF,EAAc4Z,EAAkBhI,EAAeC,EAAgBgI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYlI,EAAYmI,EAAgBhI,EAAaC,EAAcgI,EAAe7H,GAE3S5qB,SACE,IAAIxwF,EAAO,GAyCX,OAxCAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAK6oG,cAEf5oG,EAAKqG,KAAKtG,KAAKyiH,kBAEfxiH,EAAKqG,KAAKtG,KAAKy6G,eAEfx6G,EAAKqG,KAAKtG,KAAK06G,gBAEfz6G,EAAKqG,KAAKtG,KAAK0iH,YAEfziH,EAAKqG,KAAKtG,KAAK2iH,aAEf1iH,EAAKqG,KAAKtG,KAAK4iH,WAEf3iH,EAAKqG,KAAKtG,KAAK6iH,YAEf5iH,EAAKqG,KAAKtG,KAAK8iH,WAEf7iH,EAAKqG,KAAKtG,KAAK+iH,YAEf9iH,EAAKqG,KAAKtG,KAAKgjH,YAEf/iH,EAAKqG,KAAKtG,KAAK86G,YAEf76G,EAAKqG,KAAKtG,KAAKijH,gBAEfhjH,EAAKqG,KAAKtG,KAAKi7G,aAEfh7G,EAAKqG,KAAKtG,KAAKk7G,cAEfj7G,EAAKqG,KAAKtG,KAAKkjH,eAEfjjH,EAAKqG,KAAKtG,KAAKq7G,YAERp7G,IAGP2qF,GAAuB,MACzB3jF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBoF,EAAc4Z,EAAkBhI,EAAeC,EAAgBgI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYlI,EAAYmI,EAAgBhI,EAAaC,EAAcgI,EAAe7H,EAAY8H,GACxSnjH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAK6oG,aAAeA,EACpB7oG,KAAKyiH,iBAAmBA,EACxBziH,KAAKy6G,cAAgBA,EACrBz6G,KAAK06G,eAAiBA,EACtB16G,KAAK0iH,WAAaA,EAClB1iH,KAAK2iH,YAAcA,EACnB3iH,KAAK4iH,UAAYA,EACjB5iH,KAAK6iH,WAAaA,EAClB7iH,KAAK8iH,UAAYA,EACjB9iH,KAAK+iH,WAAaA,EAClB/iH,KAAKgjH,WAAaA,EAClBhjH,KAAK86G,WAAaA,EAClB96G,KAAKijH,eAAiBA,EACtBjjH,KAAKi7G,YAAcA,EACnBj7G,KAAKk7G,aAAeA,EACpBl7G,KAAKkjH,cAAgBA,EACrBljH,KAAKq7G,WAAaA,EAClBr7G,KAAKmjH,WAAaA,EAEpB5yB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7BilF,EAAerY,EAAK5sE,KACpB6+F,EAAmBjyB,EAAK5sE,KACxB62F,EAAgBjqB,EAAK5sE,KACrB82F,EAAiBlqB,EAAK5sE,KACtB8+F,EAAalyB,EAAK5sE,KAClB++F,EAAcnyB,EAAK5sE,KACnBg/F,EAAYpyB,EAAK5sE,KACjBi/F,EAAaryB,EAAK5sE,KAClBk/F,EAAYtyB,EAAK5sE,KACjBm/F,EAAavyB,EAAK5sE,KAClBo/F,EAAaxyB,EAAK5sE,KAClBk3F,EAAatqB,EAAK5sE,KAClBq/F,EAAiBzyB,EAAK5sE,KACtBq3F,EAAczqB,EAAK5sE,KACnBs3F,EAAe1qB,EAAK5sE,KACpBs/F,EAAgB1yB,EAAK5sE,KACrBy3F,EAAa7qB,EAAK5sE,KAClBu/F,EAAa3yB,EAAK5sE,KACtB,OAAO,IAAIgnE,GAAqBiF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuBoF,EAAc4Z,EAAkBhI,EAAeC,EAAgBgI,EAAYC,EAAaC,EAAWC,EAAYC,EAAWC,EAAYC,EAAYlI,EAAYmI,EAAgBhI,EAAaC,EAAcgI,EAAe7H,EAAY8H,GAEhU1yB,SACE,IAAIxwF,EAAO,GA2CX,OA1CAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAK6oG,cAEf5oG,EAAKqG,KAAKtG,KAAKyiH,kBAEfxiH,EAAKqG,KAAKtG,KAAKy6G,eAEfx6G,EAAKqG,KAAKtG,KAAK06G,gBAEfz6G,EAAKqG,KAAKtG,KAAK0iH,YAEfziH,EAAKqG,KAAKtG,KAAK2iH,aAEf1iH,EAAKqG,KAAKtG,KAAK4iH,WAEf3iH,EAAKqG,KAAKtG,KAAK6iH,YAEf5iH,EAAKqG,KAAKtG,KAAK8iH,WAEf7iH,EAAKqG,KAAKtG,KAAK+iH,YAEf9iH,EAAKqG,KAAKtG,KAAKgjH,YAEf/iH,EAAKqG,KAAKtG,KAAK86G,YAEf76G,EAAKqG,KAAKtG,KAAKijH,gBAEfhjH,EAAKqG,KAAKtG,KAAKi7G,aAEfh7G,EAAKqG,KAAKtG,KAAKk7G,cAEfj7G,EAAKqG,KAAKtG,KAAKkjH,eAEfjjH,EAAKqG,KAAKtG,KAAKq7G,YAEfp7G,EAAKqG,KAAKtG,KAAKmjH,YAERljH,IAGP4qF,GAAc,MAChB5jF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,EAAgBkyB,GAC3KtiH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK8jG,YAAcA,EACnB9jG,KAAKowF,eAAiBA,EACtBpwF,KAAKsiH,WAAaA,EAEpB/xB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBkgF,EAActT,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtB0+F,EAAa9xB,EAAK5sE,KACtB,OAAO,IAAIinE,GAAYgF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,EAAa1T,EAAgBkyB,GAE1L7xB,SACE,IAAIxwF,EAAO,GAuBX,OAtBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK8jG,aAEf7jG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKsiH,YAERriH,IAGP6qF,GAAoB,MACtB7jF,YAAY4oF,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,EAAoB+xB,EAAkBC,EAAkBC,EAAaC,EAAyBC,EAAgBC,GAC/JzjH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKoxF,QAAUA,EACfpxF,KAAKiwF,YAAcA,EACnBjwF,KAAKqxF,mBAAqBA,EAC1BrxF,KAAKojH,iBAAmBA,EACxBpjH,KAAKqjH,iBAAmBA,EACxBrjH,KAAKsjH,YAAcA,EACnBtjH,KAAKujH,wBAA0BA,EAC/BvjH,KAAKwjH,eAAiBA,EACtBxjH,KAAKyjH,aAAeA,EAEtBlzB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwtE,EAAUZ,EAAK5sE,KACfqsE,EAAcO,EAAK5sE,KACnBytE,EAAqBb,EAAK5sE,KAC1Bw/F,EAAmB5yB,EAAK5sE,KACxBy/F,EAAmB7yB,EAAK5sE,KACxB0/F,EAAc9yB,EAAK5sE,KACnB2/F,EAA0B/yB,EAAK5sE,KAC/B4/F,EAAiBhzB,EAAK5sE,KACtB6/F,EAAejzB,EAAK5sE,KACxB,OAAO,IAAIknE,GAAkB+E,EAAWxrF,EAAM+sF,EAASnB,EAAaoB,EAAoB+xB,EAAkBC,EAAkBC,EAAaC,EAAyBC,EAAgBC,GAEpLhzB,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKqxF,oBAEfpxF,EAAKqG,KAAKtG,KAAKojH,kBAEfnjH,EAAKqG,KAAKtG,KAAKqjH,kBAEfpjH,EAAKqG,KAAKtG,KAAKsjH,aAEfrjH,EAAKqG,KAAKtG,KAAKujH,yBAEftjH,EAAKqG,KAAKtG,KAAKwjH,gBAEfvjH,EAAKqG,KAAKtG,KAAKyjH,cAERxjH,IAGP8qF,GAAY,MACd9jF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,EAAgB8c,EAAiB8H,EAAkB0O,EAAcC,EAAWC,EAAqBC,EAAeC,GACpP9jH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAClBz0G,KAAKowF,eAAiBA,EACtBpwF,KAAKktG,gBAAkBA,EACvBltG,KAAKg1G,iBAAmBA,EACxBh1G,KAAK0jH,aAAeA,EACpB1jH,KAAK2jH,UAAYA,EACjB3jH,KAAK4jH,oBAAsBA,EAC3B5jH,KAAK6jH,cAAgBA,EACrB7jH,KAAK8jH,mBAAqBA,EAE5BvzB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KACtBspF,EAAkB1c,EAAK5sE,KACvBoxF,EAAmBxkB,EAAK5sE,KACxB8/F,EAAelzB,EAAK5sE,KACpB+/F,EAAYnzB,EAAK5sE,KACjBggG,EAAsBpzB,EAAK5sE,KAC3BigG,EAAgBrzB,EAAK5sE,KACrBkgG,EAAqBtzB,EAAK5sE,KAC9B,OAAO,IAAImnE,GAAU8E,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,EAAgB8c,EAAiB8H,EAAkB0O,EAAcC,EAAWC,EAAqBC,EAAeC,GAEjQrzB,SACE,IAAIxwF,EAAO,GAmCX,OAlCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKg1G,kBAEf/0G,EAAKqG,KAAKtG,KAAK0jH,cAEfzjH,EAAKqG,KAAKtG,KAAK2jH,WAEf1jH,EAAKqG,KAAKtG,KAAK4jH,qBAEf3jH,EAAKqG,KAAKtG,KAAK6jH,eAEf5jH,EAAKqG,KAAKtG,KAAK8jH,oBAER7jH,IAGP+qF,GAAkB,MACpB/jF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,GACpIpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAClBz0G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIonE,GAAgB6E,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,GAEvJK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPgrF,GAAsB,MACxBhkF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqnE,GAAoB4E,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE1KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPirF,GAAmB,MACrBjkF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,GACpIpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKy0G,WAAaA,EAClBz0G,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACX6wF,EAAajkB,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIsnE,GAAiB2E,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAK0jB,EAAYrkB,GAExJK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKy0G,YAEfx0G,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPkrF,GAAuB,MACzBlkF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIunE,GAAqB0E,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmrF,GAAgB,MAClBnkF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiB8H,EAAkB+O,GACtM/jH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAKktG,gBAAkBA,EACvBltG,KAAKg1G,iBAAmBA,EACxBh1G,KAAK+jH,eAAiBA,EAExBxzB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBspF,EAAkB1c,EAAK5sE,KACvBoxF,EAAmBxkB,EAAK5sE,KACxBmgG,EAAiBvzB,EAAK5sE,KAC1B,OAAO,IAAIwnE,GAAcyE,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgB8c,EAAiB8H,EAAkB+O,GAEvNtzB,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAKktG,iBAEfjtG,EAAKqG,KAAKtG,KAAKg1G,kBAEf/0G,EAAKqG,KAAKtG,KAAK+jH,gBAER9jH,IAGPorF,GAAwB,MAC1BpkF,YAAY4oF,EAAWxrF,EAAMu1F,GAC3B55F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EAErBrJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACvB,OAAO,IAAIynE,GAAsBwE,EAAWxrF,EAAMu1F,GAEpDnJ,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK45F,aAER35F,IAGPqrF,GAAqB,MACvBrkF,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIlF,GAAmBuE,EAAWxrF,GAE3CosF,SAEE,MADW,KAIXlF,GAAiB,MACnBtkF,YAAY4oF,EAAWxrF,EAAM2/G,EAAShU,EAAWiU,GAC/CjkH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgkH,QAAUA,EACfhkH,KAAKgwG,UAAYA,EACjBhwG,KAAKikH,KAAOA,EAEd1zB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNogG,EAAUxzB,EAAK5sE,KACfosF,EAAYxf,EAAK5sE,KACjBqgG,EAAOzzB,EAAK5sE,KAChB,OAAO,IAAI2nE,GAAesE,EAAWxrF,EAAM2/G,EAAShU,EAAWiU,GAEjExzB,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAKgkH,SAEf/jH,EAAKqG,KAAKtG,KAAKgwG,WAEf/vG,EAAKqG,KAAKtG,KAAKikH,MAERhkH,IAGPurF,GAA2B,MAC7BvkF,YAAY4oF,EAAWxrF,EAAM2/G,EAAShU,EAAWiU,EAAMC,EAAQC,GAC7DnkH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgkH,QAAUA,EACfhkH,KAAKgwG,UAAYA,EACjBhwG,KAAKikH,KAAOA,EACZjkH,KAAKkkH,OAASA,EACdlkH,KAAKmkH,aAAeA,EAEtB5zB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNogG,EAAUxzB,EAAK5sE,KACfosF,EAAYxf,EAAK5sE,KACjBqgG,EAAOzzB,EAAK5sE,KACZsgG,EAAS1zB,EAAK5sE,KACdugG,EAAe3zB,EAAK5sE,KACxB,OAAO,IAAI4nE,GAAyBqE,EAAWxrF,EAAM2/G,EAAShU,EAAWiU,EAAMC,EAAQC,GAEzF1zB,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgkH,SAEf/jH,EAAKqG,KAAKtG,KAAKgwG,WAEf/vG,EAAKqG,KAAKtG,KAAKikH,MAEfhkH,EAAKqG,KAAKtG,KAAKkkH,QAEfjkH,EAAKqG,KAAKtG,KAAKmkH,cAERlkH,IAGPwrF,GAAe,MACjBxkF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMo0B,EAAyBC,EAAWC,EAAezlB,GACpF7+F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKokH,wBAA0BA,EAC/BpkH,KAAKqkH,UAAYA,EACjBrkH,KAAKskH,cAAgBA,EACrBtkH,KAAK6+F,kBAAoBA,EAE3BtO,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZwgG,EAA0B5zB,EAAK5sE,KAC/BygG,EAAY7zB,EAAK5sE,KACjB0gG,EAAgB9zB,EAAK5sE,KACrBi7E,EAAoBrO,EAAK5sE,KAC7B,OAAO,IAAI6nE,GAAaoE,EAAWxrF,EAAM2rF,EAAMo0B,EAAyBC,EAAWC,EAAezlB,GAEpGpO,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKokH,yBAEfnkH,EAAKqG,KAAKtG,KAAKqkH,WAEfpkH,EAAKqG,KAAKtG,KAAKskH,eAEfrkH,EAAKqG,KAAKtG,KAAK6+F,mBAER5+F,IAGPyrF,GAAwB,MAC1BzkF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMu0B,EAAYC,EAAWC,EAAaC,EAAYC,GACjF3kH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKukH,WAAaA,EAClBvkH,KAAKwkH,UAAYA,EACjBxkH,KAAKykH,YAAcA,EACnBzkH,KAAK0kH,WAAaA,EAClB1kH,KAAK2kH,SAAWA,EAElBp0B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ2gG,EAAa/zB,EAAK5sE,KAClB4gG,EAAYh0B,EAAK5sE,KACjB6gG,EAAcj0B,EAAK5sE,KACnB8gG,EAAal0B,EAAK5sE,KAClB+gG,EAAWn0B,EAAK5sE,KACpB,OAAO,IAAI8nE,GAAsBmE,EAAWxrF,EAAM2rF,EAAMu0B,EAAYC,EAAWC,EAAaC,EAAYC,GAE1Gl0B,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKukH,YAEftkH,EAAKqG,KAAKtG,KAAKwkH,WAEfvkH,EAAKqG,KAAKtG,KAAKykH,aAEfxkH,EAAKqG,KAAKtG,KAAK0kH,YAEfzkH,EAAKqG,KAAKtG,KAAK2kH,UAER1kH,IAGP0rF,GAA6B,MAC/B1kF,YAAY4oF,EAAWxrF,EAAMugH,EAAQC,GACnC7kH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK4kH,OAASA,EACd5kH,KAAK6kH,iBAAmBA,EAE1Bt0B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNghG,EAASp0B,EAAK5sE,KACdihG,EAAmBr0B,EAAK5sE,KAC5B,OAAO,IAAI+nE,GAA2BkE,EAAWxrF,EAAMugH,EAAQC,GAEjEp0B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK4kH,QAEf3kH,EAAKqG,KAAKtG,KAAK6kH,kBAER5kH,IAGP2rF,GAAwB,MAC1B3kF,YAAY4oF,EAAWxrF,EAAMygH,EAAYC,EAAWC,EAAgBC,EAAeC,EAAaC,EAAeC,GAC7GplH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8kH,WAAaA,EAClB9kH,KAAK+kH,UAAYA,EACjB/kH,KAAKglH,eAAiBA,EACtBhlH,KAAKilH,cAAgBA,EACrBjlH,KAAKklH,YAAcA,EACnBllH,KAAKmlH,cAAgBA,EACrBnlH,KAAKolH,WAAaA,EAEpB70B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNkhG,EAAat0B,EAAK5sE,KAClBmhG,EAAYv0B,EAAK5sE,KACjBohG,EAAiBx0B,EAAK5sE,KACtBqhG,EAAgBz0B,EAAK5sE,KACrBshG,EAAc10B,EAAK5sE,KACnBuhG,EAAgB30B,EAAK5sE,KACrBwhG,EAAa50B,EAAK5sE,KACtB,OAAO,IAAIgoE,GAAsBiE,EAAWxrF,EAAMygH,EAAYC,EAAWC,EAAgBC,EAAeC,EAAaC,EAAeC,GAEtI30B,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAK8kH,YAEf7kH,EAAKqG,KAAKtG,KAAK+kH,WAEf9kH,EAAKqG,KAAKtG,KAAKglH,gBAEf/kH,EAAKqG,KAAKtG,KAAKilH,eAEfhlH,EAAKqG,KAAKtG,KAAKklH,aAEfjlH,EAAKqG,KAAKtG,KAAKmlH,eAEfllH,EAAKqG,KAAKtG,KAAKolH,YAERnlH,IAGP4rF,GAAuB,MACzB5kF,YAAY4oF,EAAWxrF,EAAMsjG,GAC3B3nG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2nG,KAAOA,EAEdpX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+jF,EAAOnX,EAAK5sE,KAChB,OAAO,IAAIioE,GAAqBgE,EAAWxrF,EAAMsjG,GAEnDlX,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK2nG,MAER1nG,IAGP6rF,GAAgC,MAClC7kF,YAAY4oF,EAAWxrF,EAAMsjG,EAAM5Q,EAAME,GACvCj3F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2nG,KAAOA,EACZ3nG,KAAK+2F,KAAOA,EACZ/2F,KAAKi3F,UAAYA,EAEnB1G,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+jF,EAAOnX,EAAK5sE,KACZmzE,EAAOvG,EAAK5sE,KACZqzE,EAAYzG,EAAK5sE,KACrB,OAAO,IAAIkoE,GAA8B+D,EAAWxrF,EAAMsjG,EAAM5Q,EAAME,GAExExG,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK2nG,MAEf1nG,EAAKqG,KAAKtG,KAAK+2F,MAEf92F,EAAKqG,KAAKtG,KAAKi3F,WAERh3F,IAGP8rF,GAAgB,MAClB9kF,YAAY4oF,EAAWxrF,EAAMsjG,EAAM0d,EAAUje,GAC3CpnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK2nG,KAAOA,EACZ3nG,KAAKqlH,SAAWA,EAChBrlH,KAAKonG,SAAWA,EAElB7W,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN+jF,EAAOnX,EAAK5sE,KACZyhG,EAAW70B,EAAK5sE,KAChBwjF,EAAW5W,EAAK5sE,KACpB,OAAO,IAAImoE,GAAc8D,EAAWxrF,EAAMsjG,EAAM0d,EAAUje,GAE5D3W,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK2nG,MAEf1nG,EAAKqG,KAAKtG,KAAKqlH,UAEfplH,EAAKqG,KAAKtG,KAAKonG,UAERnnG,IAGP+rF,GAAmB,MACrB/kF,YAAY4oF,EAAWxrF,EAAMu1F,GAC3B55F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EAErBrJ,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACvB,OAAO,IAAIooE,GAAiB6D,EAAWxrF,EAAMu1F,GAE/CnJ,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAK45F,aAER35F,IAGPgsF,GAAuB,MACzBhlF,YAAY4oF,EAAWxrF,EAAMihH,GAC3BtlH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKslH,cAAgBA,EAEvB/0B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0hG,EAAgB90B,EAAK5sE,KACzB,OAAO,IAAIqoE,GAAqB4D,EAAWxrF,EAAMihH,GAEnD70B,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKslH,eAERrlH,IAGPisF,GAAgB,MAClBjlF,YAAY4oF,EAAWxrF,EAAM+jG,EAAWC,GACtCroG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKooG,UAAYA,EACjBpoG,KAAKqoG,QAAUA,EAEjB9X,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNwkF,EAAY5X,EAAK5sE,KACjBykF,EAAU7X,EAAK5sE,KACnB,OAAO,IAAIsoE,GAAc2D,EAAWxrF,EAAM+jG,EAAWC,GAEvD5X,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKqoG,SAERpoG,IAGPksF,GAAgB,MAClBllF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,GACzHr/F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKooG,UAAYA,EACjBpoG,KAAKqoG,QAAUA,EACfroG,KAAKsoG,mBAAqBA,EAC1BtoG,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAKq/F,KAAOA,EAEd9O,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBwkF,EAAY5X,EAAK5sE,KACjBykF,EAAU7X,EAAK5sE,KACf0kF,EAAqB9X,EAAK5sE,KAC1B4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7By7E,EAAO7O,EAAK5sE,KAChB,OAAO,IAAIuoE,GAAc0D,EAAWxrF,EAAM2rF,EAAMC,EAAamY,EAAWC,EAASC,EAAoB9E,EAAYC,EAAuBpE,GAE1I5O,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKqoG,SAEfpoG,EAAKqG,KAAKtG,KAAKsoG,oBAEfroG,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAKq/F,MAERp/F,IAGPmsF,GAAqB,MACvBnlF,YAAY4oF,EAAWxrF,EAAMokG,GAC3BzoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKyoG,WAAaA,EAEpBlY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6kF,EAAajY,EAAK5sE,KACtB,OAAO,IAAIwoE,GAAmByD,EAAWxrF,EAAMokG,GAEjDhY,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKyoG,YAERxoG,IAGPosF,GAAmC,MACrCplF,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAInE,GAAiCwD,EAAWxrF,GAEzDosF,SAEE,MADW,KAIXnE,GAA4B,MAC9BrlF,YAAY4oF,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GACzFp6G,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKi6G,eAAiBA,EACtBj6G,KAAKk6G,yBAA2BA,EAChCl6G,KAAKm6G,mBAAqBA,EAC1Bn6G,KAAKo6G,MAAQA,EAEf7pB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNq2F,EAAiBzpB,EAAK5sE,KACtBs2F,EAA2B1pB,EAAK5sE,KAChCu2F,EAAqB3pB,EAAK5sE,KAC1Bw2F,EAAQ5pB,EAAK5sE,KACjB,OAAO,IAAI0oE,GAA0BuD,EAAWxrF,EAAM41G,EAAgBC,EAA0BC,EAAoBC,GAEtH3pB,SACE,IAAIxwF,EAAO,GASX,OARAA,EAAKqG,KAAKtG,KAAKi6G,gBAEfh6G,EAAKqG,KAAKtG,KAAKk6G,0BAEfj6G,EAAKqG,KAAKtG,KAAKm6G,oBAEfl6G,EAAKqG,KAAKtG,KAAKo6G,OAERn6G,IAGPssF,GAAqB,MACvBtlF,YAAY4oF,EAAWxrF,EAAMwwF,EAAU0wB,EAAaC,GAClDxlH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK60F,SAAWA,EAChB70F,KAAKulH,YAAcA,EACnBvlH,KAAKwlH,YAAcA,EAErBj1B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNixE,EAAWrE,EAAK5sE,KAChB2hG,EAAc/0B,EAAK5sE,KACnB4hG,EAAch1B,EAAK5sE,KACvB,OAAO,IAAI2oE,GAAmBsD,EAAWxrF,EAAMwwF,EAAU0wB,EAAaC,GAExE/0B,SACE,IAAIxwF,EAAO,GAOX,OANAA,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKulH,aAEftlH,EAAKqG,KAAKtG,KAAKwlH,aAERvlH,IAGPusF,GAAiB,MACnBvlF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4oE,GAAeqD,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE1IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwsF,GAAqB,MACvBxlF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6oE,GAAmBoD,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEzKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPysF,GAA8B,MAChCzlF,YAAY4oF,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,EAAegrB,EAAaC,EAAWC,EAAkBC,EAAgBC,GAChI7lH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKu6F,WAAaA,EAClBv6F,KAAKw6F,eAAiBA,EACtBx6F,KAAKy6F,cAAgBA,EACrBz6F,KAAKylH,YAAcA,EACnBzlH,KAAK0lH,UAAYA,EACjB1lH,KAAK2lH,iBAAmBA,EACxB3lH,KAAK4lH,eAAiBA,EACtB5lH,KAAK6lH,oBAAsBA,EAE7Bt1B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN22E,EAAa/J,EAAK5sE,KAClB42E,EAAiBhK,EAAK5sE,KACtB62E,EAAgBjK,EAAK5sE,KACrB6hG,EAAcj1B,EAAK5sE,KACnB8hG,EAAYl1B,EAAK5sE,KACjB+hG,EAAmBn1B,EAAK5sE,KACxBgiG,EAAiBp1B,EAAK5sE,KACtBiiG,EAAsBr1B,EAAK5sE,KAC/B,OAAO,IAAI8oE,GAA4BmD,EAAWxrF,EAAMk2F,EAAYC,EAAgBC,EAAegrB,EAAaC,EAAWC,EAAkBC,EAAgBC,GAE/Jp1B,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAKu6F,YAEft6F,EAAKqG,KAAKtG,KAAKw6F,gBAEfv6F,EAAKqG,KAAKtG,KAAKy6F,eAEfx6F,EAAKqG,KAAKtG,KAAKylH,aAEfxlH,EAAKqG,KAAKtG,KAAK0lH,WAEfzlH,EAAKqG,KAAKtG,KAAK2lH,kBAEf1lH,EAAKqG,KAAKtG,KAAK4lH,gBAEf3lH,EAAKqG,KAAKtG,KAAK6lH,qBAER5lH,IAGP0sF,GAAsB,MACxB1lF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+oE,GAAoBkD,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2sF,GAA0B,MAC5B3lF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgpE,GAAwBiD,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE9KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4sF,GAAyB,MAC3B5lF,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUixB,EAAYC,EAASntB,EAAMotB,GAC1FhmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAK8lH,WAAaA,EAClB9lH,KAAK+lH,QAAUA,EACf/lH,KAAK44F,KAAOA,EACZ54F,KAAKgmH,WAAaA,EAEpBz1B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChBkiG,EAAat1B,EAAK5sE,KAClBmiG,EAAUv1B,EAAK5sE,KACfg1E,EAAOpI,EAAK5sE,KACZoiG,EAAax1B,EAAK5sE,KACtB,OAAO,IAAIipE,GAAuBgD,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAUixB,EAAYC,EAASntB,EAAMotB,GAEpHv1B,SACE,IAAIxwF,EAAO,GAeX,OAdAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAK8lH,YAEf7lH,EAAKqG,KAAKtG,KAAK+lH,SAEf9lH,EAAKqG,KAAKtG,KAAK44F,MAEf34F,EAAKqG,KAAKtG,KAAKgmH,YAER/lH,IAGP6sF,GAAyB,MAC3B7lF,YAAY4oF,EAAWxrF,EAAMu1F,EAAaqsB,EAAS3V,EAAQ7I,EAAY+I,GACrExwG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EACnB55F,KAAKimH,QAAUA,EACfjmH,KAAKswG,OAASA,EACdtwG,KAAKynG,WAAaA,EAClBznG,KAAKwwG,QAAUA,EAEjBjgB,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACnBqiG,EAAUz1B,EAAK5sE,KACf0sF,EAAS9f,EAAK5sE,KACd6jF,EAAajX,EAAK5sE,KAClB4sF,EAAUhgB,EAAK5sE,KACnB,OAAO,IAAIkpE,GAAuB+C,EAAWxrF,EAAMu1F,EAAaqsB,EAAS3V,EAAQ7I,EAAY+I,GAE/F/f,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK45F,aAEf35F,EAAKqG,KAAKtG,KAAKimH,SAEfhmH,EAAKqG,KAAKtG,KAAKswG,QAEfrwG,EAAKqG,KAAKtG,KAAKynG,YAEfxnG,EAAKqG,KAAKtG,KAAKwwG,SAERvwG,IAGP8sF,GAAkC,MACpC9lF,YAAY4oF,EAAWxrF,EAAMu1F,EAAaqsB,EAAS3V,EAAQ7I,EAAY+I,EAAS0V,GAC9ElmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK45F,YAAcA,EACnB55F,KAAKimH,QAAUA,EACfjmH,KAAKswG,OAASA,EACdtwG,KAAKynG,WAAaA,EAClBznG,KAAKwwG,QAAUA,EACfxwG,KAAKkmH,MAAQA,EAEf31B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNg2E,EAAcpJ,EAAK5sE,KACnBqiG,EAAUz1B,EAAK5sE,KACf0sF,EAAS9f,EAAK5sE,KACd6jF,EAAajX,EAAK5sE,KAClB4sF,EAAUhgB,EAAK5sE,KACfsiG,EAAQ11B,EAAK5sE,KACjB,OAAO,IAAImpE,GAAgC8C,EAAWxrF,EAAMu1F,EAAaqsB,EAAS3V,EAAQ7I,EAAY+I,EAAS0V,GAEjHz1B,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK45F,aAEf35F,EAAKqG,KAAKtG,KAAKimH,SAEfhmH,EAAKqG,KAAKtG,KAAKswG,QAEfrwG,EAAKqG,KAAKtG,KAAKynG,YAEfxnG,EAAKqG,KAAKtG,KAAKwwG,SAEfvwG,EAAKqG,KAAKtG,KAAKkmH,OAERjmH,IAGP+sF,GAAkB,MACpB/lF,YAAY4oF,EAAWxrF,EAAMwpG,EAAYsY,EAAOC,EAAOC,EAAgBre,GACrEhoG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK6tG,WAAaA,EAClB7tG,KAAKmmH,MAAQA,EACbnmH,KAAKomH,MAAQA,EACbpmH,KAAKqmH,eAAiBA,EACtBrmH,KAAKgoG,qBAAuBA,EAE9BzX,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNiqF,EAAard,EAAK5sE,KAClBuiG,EAAQ31B,EAAK5sE,KACbwiG,EAAQ51B,EAAK5sE,KACbyiG,EAAiB71B,EAAK5sE,KACtBokF,EAAuBxX,EAAK5sE,KAChC,OAAO,IAAIopE,GAAgB6C,EAAWxrF,EAAMwpG,EAAYsY,EAAOC,EAAOC,EAAgBre,GAExFvX,SACE,IAAIxwF,EAAO,GAWX,OAVAA,EAAKqG,KAAKtG,KAAK6tG,YAEf5tG,EAAKqG,KAAKtG,KAAKmmH,OAEflmH,EAAKqG,KAAKtG,KAAKomH,OAEfnmH,EAAKqG,KAAKtG,KAAKqmH,gBAEfpmH,EAAKqG,KAAKtG,KAAKgoG,sBAER/nG,IAGPgtF,GAAgB,MAClBhmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIqpE,GAAc4C,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEzIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPitF,GAAoB,MACtBjmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIspE,GAAkB2C,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAExKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPktF,GAAgB,MAClBlmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,GAC5FjxF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EAEzBV,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KAC3B,OAAO,IAAIupE,GAAc0C,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,GAE7GR,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAERhxF,IAGPmtF,GAAiB,MACnBnmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,GAC9I9jG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAK8jG,YAAcA,EAErBvT,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBkgF,EAActT,EAAK5sE,KACvB,OAAO,IAAIwpE,GAAeyC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiBwT,GAEhKrT,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAK8jG,aAER7jG,IAGPotF,GAAiB,MACnBpmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,GACjI/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAIypE,GAAewC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,GAEnJN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPqtF,GAAkB,MACpBrmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,GAC9Ij9F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKmwF,eAAiBA,EACtBnwF,KAAKswF,gBAAkBA,EACvBtwF,KAAKi9F,aAAeA,EAEtB1M,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBusE,EAAiBK,EAAK5sE,KACtB0sE,EAAkBE,EAAK5sE,KACvBq5E,EAAezM,EAAK5sE,KACxB,OAAO,IAAI0pE,GAAgBuC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBd,EAAgBG,EAAiB2M,GAEjKxM,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKswF,iBAEfrwF,EAAKqG,KAAKtG,KAAKi9F,cAERh9F,IAGPstF,GAAsB,MACxBtmF,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAc0B,EAAYxB,GAC5IlnG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKu5F,MAAQA,EACbv5F,KAAK+hH,YAAcA,EACnB/hH,KAAKg1F,aAAeA,EACpBh1F,KAAK+mG,gBAAkBA,EACvB/mG,KAAKgnG,aAAeA,EACpBhnG,KAAK0oG,WAAaA,EAClB1oG,KAAKknG,YAAcA,EAErB3W,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB21E,EAAQ/I,EAAK5sE,KACbm+F,EAAcvxB,EAAK5sE,KACnBoxE,EAAexE,EAAK5sE,KACpBmjF,EAAkBvW,EAAK5sE,KACvBojF,EAAexW,EAAK5sE,KACpB8kF,EAAalY,EAAK5sE,KAClBsjF,EAAc1W,EAAK5sE,KACvB,OAAO,IAAI2pE,GAAoBsC,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAc0B,EAAYxB,GAEnKzW,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAK+hH,aAEf9hH,EAAKqG,KAAKtG,KAAKg1F,cAEf/0F,EAAKqG,KAAKtG,KAAK+mG,iBAEf9mG,EAAKqG,KAAKtG,KAAKgnG,cAEf/mG,EAAKqG,KAAKtG,KAAK0oG,YAEfzoG,EAAKqG,KAAKtG,KAAKknG,aAERjnG,IAGPutF,GAAoB,MACtBvmF,YAAY4oF,EAAWxrF,EAAMiiH,GAC3BtmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKsmH,MAAQA,EAEf/1B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN0iG,EAAQ91B,EAAK5sE,KACjB,OAAO,IAAI4pE,GAAkBqC,EAAWxrF,EAAMiiH,GAEhD71B,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKsmH,OAERrmH,IAGPwtF,GAA2B,MAC7BxmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6pE,GAAyBoC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEpJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPytF,GAA+B,MACjCzmF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8pE,GAA6BmC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEnLK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0tF,GAAsB,MACxB1mF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+pE,GAAoBkC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2tF,GAA0B,MAC5B3mF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgqE,GAAwBiC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE9KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4tF,GAAW,MACb5mF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIiqE,GAASgC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEpIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6tF,GAAe,MACjB7mF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkqE,GAAa+B,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAEnKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8tF,GAAY,MACd9mF,YAAY4oF,EAAWxrF,EAAMmgG,EAAa+hB,GACxCvmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwkG,YAAcA,EACnBxkG,KAAKumH,UAAYA,EAEnBh2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4gF,EAAchU,EAAK5sE,KACnB2iG,EAAY/1B,EAAK5sE,KACrB,OAAO,IAAImqE,GAAU8B,EAAWxrF,EAAMmgG,EAAa+hB,GAErD91B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAKwkG,aAEfvkG,EAAKqG,KAAKtG,KAAKumH,WAERtmH,IAGP+tF,GAAY,MACd/mF,YAAY4oF,EAAWxrF,GACrBrE,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EAEdksF,gBAAgBV,EAAWxrF,EAAMmsF,GAE/B,OAAO,IAAIxC,GAAU6B,EAAWxrF,GAElCosF,SAEE,MADW,KAIXxC,GAAgB,MAClBhnF,YAAY4oF,EAAWxrF,EAAMmiH,GAC3BxmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKwmH,WAAaA,EAEpBj2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN4iG,EAAah2B,EAAK5sE,KACtB,OAAO,IAAIqqE,GAAc4B,EAAWxrF,EAAMmiH,GAE5C/1B,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKwmH,YAERvmH,IAGPiuF,GAAiB,MACnBjnF,YAAY4oF,EAAWxrF,EAAMoiH,GAC3BzmH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKymH,eAAiBA,EAExBl2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN6iG,EAAiBj2B,EAAK5sE,KAC1B,OAAO,IAAIsqE,GAAe2B,EAAWxrF,EAAMoiH,GAE7Ch2B,SACE,IAAIxwF,EAAO,GAGX,OAFAA,EAAKqG,KAAKtG,KAAKymH,gBAERxmH,IAGPkuF,GAAqB,MACvBlnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIuqE,GAAmB0B,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE9IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPmuF,GAAyB,MAC3BnnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIwqE,GAAuByB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE7KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPouF,GAAuB,MACzBpnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIyqE,GAAqBwB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPquF,GAA2B,MAC7BrnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0qE,GAAyBuB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE/KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsuF,GAAoB,MACtBtnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GACnH/wF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EAEbR,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACf,OAAO,IAAI2qE,GAAkBsB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,GAExIN,SACE,IAAIxwF,EAAO,GAiBX,OAhBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAER9wF,IAGPuuF,GAA6B,MAC/BvnF,YAAY4oF,EAAWxrF,EAAMqiH,EAAkBC,GAC7C3mH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK0mH,iBAAmBA,EACxB1mH,KAAK2mH,gBAAkBA,EAEzBp2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACN8iG,EAAmBl2B,EAAK5sE,KACxB+iG,EAAkBn2B,EAAK5sE,KAC3B,OAAO,IAAI4qE,GAA2BqB,EAAWxrF,EAAMqiH,EAAkBC,GAE3El2B,SACE,IAAIxwF,EAAO,GAKX,OAJAA,EAAKqG,KAAKtG,KAAK0mH,kBAEfzmH,EAAKqG,KAAKtG,KAAK2mH,iBAER1mH,IAGPwuF,GAAoB,MACtBxnF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6qE,GAAkBoB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE7IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyuF,GAAU,MACZznF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI8qE,GAAQmB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEnIK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP0uF,GAAuB,MACzB1nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI+qE,GAAqBkB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAEhJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP2uF,GAAsB,MACxB3nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIgrE,GAAoBiB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE/IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP4uF,GAAc,MAChB5nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIirE,GAAYgB,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAElKK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP6uF,GAAmB,MACrB7nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GACxHpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAIkrE,GAAiBe,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKX,GAE5IK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP8uF,GAAuB,MACzB9nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GACnJpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAImrE,GAAqBc,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,GAE3KK,SACE,IAAIxwF,EAAO,GAqBX,OApBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGP+uF,GAAY,MACd/nF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBw2B,EAAkBC,GACvL7mH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKohG,cAAgBA,EACrBphG,KAAKqhG,aAAeA,EACpBrhG,KAAKowF,eAAiBA,EACtBpwF,KAAK4mH,iBAAmBA,EACxB5mH,KAAK6mH,4BAA8BA,EAErCt2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXw9E,EAAgB5Q,EAAK5sE,KACrBy9E,EAAe7Q,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KACtBgjG,EAAmBp2B,EAAK5sE,KACxBijG,EAA8Br2B,EAAK5sE,KACvC,OAAO,IAAIorE,GAAUa,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBw2B,EAAkBC,GAEpMp2B,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKohG,eAEfnhG,EAAKqG,KAAKtG,KAAKqhG,cAEfphG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK4mH,kBAEf3mH,EAAKqG,KAAKtG,KAAK6mH,6BAER5mH,IAGPgvF,GAA4B,MAC9BhoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauR,EAAaC,EAAiBG,EAAkBklB,EAAkBC,EAAoBC,EAAqBC,EAAoBC,EAAqBhlB,EAAkBJ,EAAcK,EAAsBC,GAChRpiG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKwhG,YAAcA,EACnBxhG,KAAKyhG,gBAAkBA,EACvBzhG,KAAK4hG,iBAAmBA,EACxB5hG,KAAK8mH,iBAAmBA,EACxB9mH,KAAK+mH,mBAAqBA,EAC1B/mH,KAAKgnH,oBAAsBA,EAC3BhnH,KAAKinH,mBAAqBA,EAC1BjnH,KAAKknH,oBAAsBA,EAC3BlnH,KAAKkiG,iBAAmBA,EACxBliG,KAAK8hG,aAAeA,EACpB9hG,KAAKmiG,qBAAuBA,EAC5BniG,KAAKoiG,qBAAuBA,EAE9B7R,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB49E,EAAchR,EAAK5sE,KACnB69E,EAAkBjR,EAAK5sE,KACvBg+E,EAAmBpR,EAAK5sE,KACxBkjG,EAAmBt2B,EAAK5sE,KACxBmjG,EAAqBv2B,EAAK5sE,KAC1BojG,EAAsBx2B,EAAK5sE,KAC3BqjG,EAAqBz2B,EAAK5sE,KAC1BsjG,EAAsB12B,EAAK5sE,KAC3Bs+E,EAAmB1R,EAAK5sE,KACxBk+E,EAAetR,EAAK5sE,KACpBu+E,EAAuB3R,EAAK5sE,KAC5Bw+E,EAAuB5R,EAAK5sE,KAChC,OAAO,IAAIqrE,GAA0BY,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAauR,EAAaC,EAAiBG,EAAkBklB,EAAkBC,EAAoBC,EAAqBC,EAAoBC,EAAqBhlB,EAAkBJ,EAAcK,EAAsBC,GAE7S3R,SACE,IAAIxwF,EAAO,GAiCX,OAhCAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKwhG,aAEfvhG,EAAKqG,KAAKtG,KAAKyhG,iBAEfxhG,EAAKqG,KAAKtG,KAAK4hG,kBAEf3hG,EAAKqG,KAAKtG,KAAK8mH,kBAEf7mH,EAAKqG,KAAKtG,KAAK+mH,oBAEf9mH,EAAKqG,KAAKtG,KAAKgnH,qBAEf/mH,EAAKqG,KAAKtG,KAAKinH,oBAEfhnH,EAAKqG,KAAKtG,KAAKknH,qBAEfjnH,EAAKqG,KAAKtG,KAAKkiG,kBAEfjiG,EAAKqG,KAAKtG,KAAK8hG,cAEf7hG,EAAKqG,KAAKtG,KAAKmiG,sBAEfliG,EAAKqG,KAAKtG,KAAKoiG,sBAERniG,IAGPivF,GAA2B,MAC7BjoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAChIliG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKshG,cAAgBA,EACrBthG,KAAKwiG,cAAgBA,EACrBxiG,KAAK+uG,WAAaA,EAClB/uG,KAAKgvG,eAAiBA,EACtBhvG,KAAKkiG,iBAAmBA,EAE1B3R,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnB09E,EAAgB9Q,EAAK5sE,KACrB4+E,EAAgBhS,EAAK5sE,KACrBmrF,EAAave,EAAK5sE,KAClBorF,EAAiBxe,EAAK5sE,KACtBs+E,EAAmB1R,EAAK5sE,KAC5B,OAAO,IAAIsrE,GAAyBW,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaqR,EAAekB,EAAeuM,EAAYC,EAAgB9M,GAE5JzR,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAKwiG,eAEfviG,EAAKqG,KAAKtG,KAAK+uG,YAEf9uG,EAAKqG,KAAKtG,KAAKgvG,gBAEf/uG,EAAKqG,KAAKtG,KAAKkiG,kBAERjiG,IAGPkvF,GAAwB,MAC1BloF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBw2B,EAAkBC,GACvL7mH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAK6wF,gBAAkBA,EACvB7wF,KAAK8wF,eAAiBA,EACtB9wF,KAAK+wF,IAAMA,EACX/wF,KAAKohG,cAAgBA,EACrBphG,KAAKqhG,aAAeA,EACpBrhG,KAAKowF,eAAiBA,EACtBpwF,KAAK4mH,iBAAmBA,EACxB5mH,KAAK6mH,4BAA8BA,EAErCt2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBitE,EAAkBL,EAAK5sE,KACvBktE,EAAiBN,EAAK5sE,KACtBmtE,EAAMP,EAAK5sE,KACXw9E,EAAgB5Q,EAAK5sE,KACrBy9E,EAAe7Q,EAAK5sE,KACpBwsE,EAAiBI,EAAK5sE,KACtBgjG,EAAmBp2B,EAAK5sE,KACxBijG,EAA8Br2B,EAAK5sE,KACvC,OAAO,IAAIurE,GAAsBU,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYW,EAAiBC,EAAgBC,EAAKqQ,EAAeC,EAAcjR,EAAgBw2B,EAAkBC,GAEhNp2B,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAK6wF,iBAEf5wF,EAAKqG,KAAKtG,KAAK8wF,gBAEf7wF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKohG,eAEfnhG,EAAKqG,KAAKtG,KAAKqhG,cAEfphG,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK4mH,kBAEf3mH,EAAKqG,KAAKtG,KAAK6mH,6BAER5mH,IAGPmvF,GAAiB,MACnBnoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAK0R,EAAkBnB,EAAeoB,EAA0BC,GACjM3iG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKyiG,iBAAmBA,EACxBziG,KAAKshG,cAAgBA,EACrBthG,KAAK0iG,yBAA2BA,EAChC1iG,KAAK2iG,SAAWA,EAElBpS,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACX6+E,EAAmBjS,EAAK5sE,KACxB09E,EAAgB9Q,EAAK5sE,KACrB8+E,EAA2BlS,EAAK5sE,KAChC++E,EAAWnS,EAAK5sE,KACpB,OAAO,IAAIwrE,GAAeS,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAK0R,EAAkBnB,EAAeoB,EAA0BC,GAEnNlS,SACE,IAAIxwF,EAAO,GAyBX,OAxBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKyiG,kBAEfxiG,EAAKqG,KAAKtG,KAAKshG,eAEfrhG,EAAKqG,KAAKtG,KAAK0iG,0BAEfziG,EAAKqG,KAAKtG,KAAK2iG,UAER1iG,IAGPovF,GAAgB,MAClBpoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBw2B,EAAkBlkB,EAA0BmkB,GAC/M7mH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKgxF,qBAAuBA,EAC5BhxF,KAAKixF,gBAAkBA,EACvBjxF,KAAKkxF,mBAAqBA,EAC1BlxF,KAAK+wF,IAAMA,EACX/wF,KAAKmxF,YAAcA,EACnBnxF,KAAKowF,eAAiBA,EACtBpwF,KAAK4mH,iBAAmBA,EACxB5mH,KAAK0iG,yBAA2BA,EAChC1iG,KAAK6mH,4BAA8BA,EAErCt2B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBotE,EAAuBR,EAAK5sE,KAC5BqtE,EAAkBT,EAAK5sE,KACvBstE,EAAqBV,EAAK5sE,KAC1BmtE,EAAMP,EAAK5sE,KACXutE,EAAcX,EAAK5sE,KACnBwsE,EAAiBI,EAAK5sE,KACtBgjG,EAAmBp2B,EAAK5sE,KACxB8+E,EAA2BlS,EAAK5sE,KAChCijG,EAA8Br2B,EAAK5sE,KACvC,OAAO,IAAIyrE,GAAcQ,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAae,EAAsBC,EAAiBC,EAAoBH,EAAKI,EAAaf,EAAgBw2B,EAAkBlkB,EAA0BmkB,GAEhOp2B,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKgxF,sBAEf/wF,EAAKqG,KAAKtG,KAAKixF,iBAEfhxF,EAAKqG,KAAKtG,KAAKkxF,oBAEfjxF,EAAKqG,KAAKtG,KAAK+wF,KAEf9wF,EAAKqG,KAAKtG,KAAKmxF,aAEflxF,EAAKqG,KAAKtG,KAAKowF,gBAEfnwF,EAAKqG,KAAKtG,KAAK4mH,kBAEf3mH,EAAKqG,KAAKtG,KAAK0iG,0BAEfziG,EAAKqG,KAAKtG,KAAK6mH,6BAER5mH,IAGPqvF,GAAkB,MACpBroF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBg3B,EAAcC,EAAgBh3B,GAChIpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAKmnH,aAAeA,EACpBnnH,KAAKonH,eAAiBA,EACtBpnH,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBujG,EAAe32B,EAAK5sE,KACpBwjG,EAAiB52B,EAAK5sE,KACtBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI0rE,GAAgBO,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBg3B,EAAcC,EAAgBh3B,GAEnJK,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAKmnH,cAEflnH,EAAKqG,KAAKtG,KAAKonH,gBAEfnnH,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPsvF,GAAiB,MACnBtoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,GACpKvnH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAK4uG,aAAeA,EACpB5uG,KAAKqnH,SAAWA,EAChBrnH,KAAKoxF,QAAUA,EACfpxF,KAAKsnH,SAAWA,EAChBtnH,KAAK+iH,WAAaA,EAClB/iH,KAAKooG,UAAYA,EACjBpoG,KAAKunH,WAAaA,EAEpBh3B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBgrF,EAAepe,EAAK5sE,KACpByjG,EAAW72B,EAAK5sE,KAChBwtE,EAAUZ,EAAK5sE,KACf0jG,EAAW92B,EAAK5sE,KAChBm/F,EAAavyB,EAAK5sE,KAClBwkF,EAAY5X,EAAK5sE,KACjB2jG,EAAa/2B,EAAK5sE,KACtB,OAAO,IAAI2rE,GAAeM,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,GAEtL92B,SACE,IAAIxwF,EAAO,GA2BX,OA1BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAK4uG,cAEf3uG,EAAKqG,KAAKtG,KAAKqnH,UAEfpnH,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKsnH,UAEfrnH,EAAKqG,KAAKtG,KAAK+iH,YAEf9iH,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKunH,YAERtnH,IAGPuvF,GAAc,MAChBvoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,EAAYn3B,GAChLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAK4uG,aAAeA,EACpB5uG,KAAKqnH,SAAWA,EAChBrnH,KAAKoxF,QAAUA,EACfpxF,KAAKsnH,SAAWA,EAChBtnH,KAAK+iH,WAAaA,EAClB/iH,KAAKooG,UAAYA,EACjBpoG,KAAKunH,WAAaA,EAClBvnH,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBgrF,EAAepe,EAAK5sE,KACpByjG,EAAW72B,EAAK5sE,KAChBwtE,EAAUZ,EAAK5sE,KACf0jG,EAAW92B,EAAK5sE,KAChBm/F,EAAavyB,EAAK5sE,KAClBwkF,EAAY5X,EAAK5sE,KACjB2jG,EAAa/2B,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI4rE,GAAYK,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,EAAYn3B,GAE/LK,SACE,IAAIxwF,EAAO,GA6BX,OA5BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAK4uG,cAEf3uG,EAAKqG,KAAKtG,KAAKqnH,UAEfpnH,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKsnH,UAEfrnH,EAAKqG,KAAKtG,KAAK+iH,YAEf9iH,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKunH,YAEftnH,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPwvF,GAAkB,MACpBxoF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,EAAYn3B,GAChLpwF,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKmwF,eAAiBA,EACtBnwF,KAAK4uG,aAAeA,EACpB5uG,KAAKqnH,SAAWA,EAChBrnH,KAAKoxF,QAAUA,EACfpxF,KAAKsnH,SAAWA,EAChBtnH,KAAK+iH,WAAaA,EAClB/iH,KAAKooG,UAAYA,EACjBpoG,KAAKunH,WAAaA,EAClBvnH,KAAKowF,eAAiBA,EAExBG,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBusE,EAAiBK,EAAK5sE,KACtBgrF,EAAepe,EAAK5sE,KACpByjG,EAAW72B,EAAK5sE,KAChBwtE,EAAUZ,EAAK5sE,KACf0jG,EAAW92B,EAAK5sE,KAChBm/F,EAAavyB,EAAK5sE,KAClBwkF,EAAY5X,EAAK5sE,KACjB2jG,EAAa/2B,EAAK5sE,KAClBwsE,EAAiBI,EAAK5sE,KAC1B,OAAO,IAAI6rE,GAAgBI,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAYC,EAAgBye,EAAcyY,EAAUj2B,EAASk2B,EAAUvE,EAAY3a,EAAWmf,EAAYn3B,GAEnMK,SACE,IAAIxwF,EAAO,GA6BX,OA5BAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKmwF,gBAEflwF,EAAKqG,KAAKtG,KAAK4uG,cAEf3uG,EAAKqG,KAAKtG,KAAKqnH,UAEfpnH,EAAKqG,KAAKtG,KAAKoxF,SAEfnxF,EAAKqG,KAAKtG,KAAKsnH,UAEfrnH,EAAKqG,KAAKtG,KAAK+iH,YAEf9iH,EAAKqG,KAAKtG,KAAKooG,WAEfnoG,EAAKqG,KAAKtG,KAAKunH,YAEftnH,EAAKqG,KAAKtG,KAAKowF,gBAERnwF,IAGPyvF,GAAc,MAChBzoF,YAAY4oF,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuB+jB,EAAmBC,EAAOC,GAC9F1nH,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKgwF,KAAOA,EACZhwF,KAAKwjG,WAAaA,EAClBxjG,KAAKyjG,sBAAwBA,EAC7BzjG,KAAKwnH,kBAAoBA,EACzBxnH,KAAKynH,MAAQA,EACbznH,KAAK0nH,OAASA,EAEhBn3B,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNosE,EAAOQ,EAAK5sE,KACZ4/E,EAAahT,EAAK5sE,KAClB6/E,EAAwBjT,EAAK5sE,KAC7B4jG,EAAoBh3B,EAAK5sE,KACzB6jG,EAAQj3B,EAAK5sE,KACb8jG,EAASl3B,EAAK5sE,KAClB,OAAO,IAAI8rE,GAAYG,EAAWxrF,EAAM2rF,EAAMwT,EAAYC,EAAuB+jB,EAAmBC,EAAOC,GAE7Gj3B,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKwjG,YAEfvjG,EAAKqG,KAAKtG,KAAKyjG,uBAEfxjG,EAAKqG,KAAKtG,KAAKwnH,mBAEfvnH,EAAKqG,KAAKtG,KAAKynH,OAEfxnH,EAAKqG,KAAKtG,KAAK0nH,QAERznH,IAGP0vF,GAAsB,MACxB1oF,YAAY4oF,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAc0B,GAChI1oG,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAKg0F,YAAcA,EACnBh0F,KAAKi0F,YAAcA,EACnBj0F,KAAK60F,SAAWA,EAChB70F,KAAKu5F,MAAQA,EACbv5F,KAAK+hH,YAAcA,EACnB/hH,KAAKg1F,aAAeA,EACpBh1F,KAAK+mG,gBAAkBA,EACvB/mG,KAAKgnG,aAAeA,EACpBhnG,KAAK0oG,WAAaA,EAEpBnY,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNowE,EAAcxD,EAAK5sE,KACnBqwE,EAAczD,EAAK5sE,KACnBixE,EAAWrE,EAAK5sE,KAChB21E,EAAQ/I,EAAK5sE,KACbm+F,EAAcvxB,EAAK5sE,KACnBoxE,EAAexE,EAAK5sE,KACpBmjF,EAAkBvW,EAAK5sE,KACvBojF,EAAexW,EAAK5sE,KACpB8kF,EAAalY,EAAK5sE,KACtB,OAAO,IAAI+rE,GAAoBE,EAAWxrF,EAAM2vF,EAAaC,EAAaY,EAAU0E,EAAOwoB,EAAa/sB,EAAc+R,EAAiBC,EAAc0B,GAEvJjY,SACE,IAAIxwF,EAAO,GAmBX,OAlBAA,EAAKqG,KAAKtG,KAAKg0F,aAEf/zF,EAAKqG,KAAKtG,KAAKi0F,aAEfh0F,EAAKqG,KAAKtG,KAAK60F,UAEf50F,EAAKqG,KAAKtG,KAAKu5F,OAEft5F,EAAKqG,KAAKtG,KAAK+hH,aAEf9hH,EAAKqG,KAAKtG,KAAKg1F,cAEf/0F,EAAKqG,KAAKtG,KAAK+mG,iBAEf9mG,EAAKqG,KAAKtG,KAAKgnG,cAEf/mG,EAAKqG,KAAKtG,KAAK0oG,YAERzoG,IAGP2vF,GAAU,MACZ3oF,YAAY4oF,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,GAClFj5F,KAAK6vF,UAAYA,EACjB7vF,KAAKqE,KAAOA,EACZrE,KAAK8vF,SAAWA,EAChB9vF,KAAK+vF,aAAeA,EACpB/vF,KAAKgwF,KAAOA,EACZhwF,KAAKiwF,YAAcA,EACnBjwF,KAAKkwF,WAAaA,EAClBlwF,KAAKi5F,SAAWA,EAElB1I,gBAAgBV,EAAWxrF,EAAMmsF,GAC/B,IAAI5sE,EAAM,EACNksE,EAAWU,EAAK5sE,KAChBmsE,EAAeS,EAAK5sE,KACpBosE,EAAOQ,EAAK5sE,KACZqsE,EAAcO,EAAK5sE,KACnBssE,EAAaM,EAAK5sE,KAClBq1E,EAAWzI,EAAK5sE,KACpB,OAAO,IAAIgsE,GAAQC,EAAWxrF,EAAMyrF,EAAUC,EAAcC,EAAMC,EAAaC,EAAY+I,GAE7FxI,SACE,IAAIxwF,EAAO,GAaX,OAZAA,EAAKqG,KAAKtG,KAAK8vF,UAEf7vF,EAAKqG,KAAKtG,KAAK+vF,cAEf9vF,EAAKqG,KAAKtG,KAAKgwF,MAEf/vF,EAAKqG,KAAKtG,KAAKiwF,aAEfhwF,EAAKqG,KAAKtG,KAAKkwF,YAEfjwF,EAAKqG,KAAKtG,KAAKi5F,UAERh5F,IAKP0nH,GAAe,CACjB,UAAW,aACX,WAAY,UACZ,WAAY,cACZ,WAAY,oBACZ,WAAY,WACZ,WAAY,gBACZ,SAAU,gBACV,SAAU,YACV,SAAU,UACV,SAAU,UACV,UAAW,oBACX,UAAW,oBACX,UAAW,uBACX,UAAW,uBACX,UAAW,0BACX,UAAW,iBACX,UAAW,WACX,UAAW,iBACX,UAAW,wBACX,UAAW,UACX,UAAW,mBACX,UAAW,4BACX,UAAW,gBACX,UAAW,wBACX,UAAW,kBACX,UAAW,2BACX,UAAW,yBACX,UAAW,UACX,UAAW,cACX,UAAW,uBACX,UAAW,sBACX,UAAW,UACX,UAAW,UACX,UAAW,YACX,UAAW,YACX,UAAW,+BACX,UAAW,aACX,UAAW,wBACX,UAAW,oBACX,UAAW,oBACX,UAAW,iBACX,WAAY,yBACZ,WAAY,kBACZ,WAAY,gCACZ,WAAY,gCACZ,WAAY,YACZ,WAAY,0BACZ,WAAY,uBACZ,WAAY,qBACZ,WAAY,mBACZ,WAAY,uBACZ,WAAY,kBACZ,WAAY,mBACZ,WAAY,6BACZ,WAAY,mBACZ,WAAY,eACZ,WAAY,UACZ,WAAY,sBACZ,WAAY,iBACZ,WAAY,4BACZ,WAAY,kBACZ,WAAY,UACZ,WAAY,uBACZ,WAAY,wBACZ,WAAY,yBACZ,WAAY,cACZ,WAAY,iBACZ,WAAY,UACZ,WAAY,0BACZ,WAAY,oBACZ,WAAY,gBACZ,WAAY,iBACZ,WAAY,eACZ,WAAY,kBACZ,WAAY,aACZ,WAAY,eACZ,WAAY,kCACZ,WAAY,qBACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,UACZ,WAAY,qBACZ,WAAY,oBACZ,WAAY,YACZ,WAAY,sBACZ,WAAY,YACZ,WAAY,yBACZ,WAAY,UACZ,WAAY,gBACZ,WAAY,sBACZ,WAAY,6BACZ,WAAY,sBACZ,WAAY,yBACZ,WAAY,WACZ,WAAY,oBACZ,WAAY,uBACZ,WAAY,sBACZ,WAAY,WACZ,WAAY,6BACZ,WAAY,sBACZ,WAAY,gBACZ,WAAY,aACZ,WAAY,YACZ,WAAY,+BACZ,WAAY,mBACZ,WAAY,SACZ,WAAY,iBACZ,WAAY,uBACZ,WAAY,iBACZ,WAAY,yBACZ,WAAY,sBACZ,WAAY,iBACZ,WAAY,gBACZ,WAAY,oBACZ,WAAY,iBACZ,WAAY,kBACZ,WAAY,uBACZ,WAAY,YACZ,WAAY,uBACZ,WAAY,yBACZ,WAAY,YACZ,WAAY,iBACZ,WAAY,aACZ,WAAY,YACZ,WAAY,YACZ,WAAY,qBACZ,WAAY,gBACZ,WAAY,uBACZ,WAAY,iBACZ,WAAY,WACZ,WAAY,kBACZ,WAAY,mBACZ,WAAY,iBACZ,WAAY,iBACZ,WAAY,cACZ,WAAY,sBACZ,WAAY,WAIVC,GAAa,CACfC,WAAY,CACV3gH,KAAM4wD,GACNgwD,SAAU,iBACVC,QAAS,iBACT1oH,IAAK,YAEP2oH,QAAS,CACP9gH,KAAMixD,GACN2vD,SAAU,oBACVC,QAAS,kBACT1oH,IAAK,YAEP4oH,MAAO,CACL/gH,KAAMkxD,GACN0vD,SAAU,6BACVC,QAAS,iBACT1oH,IAAK,YAEP6oH,UAAW,CACThhH,KAAM8wD,GACN8vD,SAAU,mBACVC,QAAS,iBACT1oH,IAAK,eAEPgF,KAAM,CACJ6C,KAAMmxD,GACNyvD,SAAU,eACVC,QAAS,iBACT1oH,IAAK,YAGL2kG,GAAa,MACf/8F,YAAYkhH,GACVnoH,KAAKmoH,IAAMA,EAEbC,kBAAkBC,EAAShiG,EAAIiiG,GAAY,GACzC,OAAOhrG,GAAQtd,KAAM,MAAM,YACzB,OAAOA,KAAKmoH,IAAII,QAAQF,EAAShiG,EAAIiiG,MAGzCE,gBAAgBH,EAASI,EAAWH,GAAY,GAC9C,OAAOhrG,GAAQtd,KAAM,MAAM,YACzB,aAAaA,KAAK0oH,YAAYL,EAASI,EAAWH,EAAWV,GAAWK,UAG5EU,kBAAkBN,EAASI,EAAWH,GAAY,GAChD,OAAOhrG,GAAQtd,KAAM,MAAM,YACzB,aAAaA,KAAK0oH,YAAYL,EAASI,EAAWH,EAAWV,GAAWvjH,SAG5EukH,uBAAuBP,EAASI,EAAWH,GAAY,GACrD,OAAOhrG,GAAQtd,KAAM,MAAM,YACzB,aAAaA,KAAK0oH,YAAYL,EAASI,EAAWH,EAAWV,GAAWM,cAG5EW,oBAAoBR,EAASS,GAC3B,OAAOxrG,GAAQtd,KAAM,MAAM,kBACnBA,KAAK+oH,mBAAmBV,GAC9B,MAAMpnF,QAAejhC,KAAKgpH,qBAAqBX,GAEzCY,SADiBjpH,KAAKmoH,IAAIe,mBAAmBb,EAASpxD,KACjCpvC,IAAI,GACzBshG,EAAUnlB,GAAWolB,cAAcH,GAGzC,aAFMjpH,KAAKqpH,eAAehB,EAASc,EAASloF,EAAQ6nF,GACpD9oH,KAAKspH,eACEH,KAGXI,kBAAkBlB,EAAShkH,EAAMmlH,GAC/B,OAAOlsG,GAAQtd,KAAM,MAAM,YACzB,IAAIypH,EAAQ,GACZ,MAAMC,QAAc1pH,KAAKmoH,IAAIe,mBAAmBb,EAAShkH,GACzD,IAAK,IAAIxD,EAAI,EAAGA,EAAI6oH,EAAMx3G,OAAQrR,IAChC4oH,EAAMnjH,KAAKojH,EAAM7hG,IAAIhnB,IACvB,IAAK2oH,EACH,OAAOC,EACT,MAAMnkH,EAAS,GACf,IAAK,IAAIzE,EAAI,EAAGA,EAAI4oH,EAAM3oH,OAAQD,IAChCyE,EAAOgB,WAAWtG,KAAKmoH,IAAII,QAAQF,EAASoB,EAAM5oH,KAEpD,OAAOyE,KAGXojH,YAAYL,EAASI,EAAWH,GAAY,EAAOqB,GACjD,OAAOrsG,GAAQtd,KAAM,MAAM,YACzB,MAAM4pH,QAAmB5pH,KAAK6pH,yBAAyBxB,EAASI,EAAWkB,GACrErkH,EAAS,GACf,IAAK,IAAIzE,EAAI,EAAGA,EAAI+oH,EAAW9oH,OAAQD,IACrCyE,EAAOgB,WAAWtG,KAAKmoH,IAAII,QAAQF,EAASuB,EAAW/oH,GAAIynH,IAE7D,OAAOhjH,KAGXwkH,UAAUzB,EAASpnF,EAAQ8oF,GACzB,OAAOzsG,GAAQtd,KAAM,MAAM,YACzB,MAAMgqH,QAAiBhqH,KAAKmoH,IAAIe,mBAAmBb,EAAS0B,EAAU7iH,MACtE,IAAK,IAAIrG,EAAI,EAAGA,EAAImpH,EAAS93G,OAAQrR,IAAK,CACxC,MAAMopH,QAAYjqH,KAAKmoH,IAAII,QAAQF,EAAS2B,EAASniG,IAAIhnB,IAAI,GAC7Db,KAAKkqH,UAAUjpF,EAAQ8oF,EAAWE,OAIxC15B,iBAAiBlqE,EAAI4jG,EAAKF,GACxB,MAAMI,EAAeF,EAAIF,EAAUhC,SACnC,GAAI57G,MAAMmE,QAAQ65G,GAAe,CAE/B,OADeA,EAAan6E,KAAKo6E,GAASA,EAAK5qH,QACjCmY,SAAS0O,GAEzB,OAAO8jG,EAAa3qH,QAAU6mB,EAEhCkqE,qBAAqBlqE,GACnB,MAAO,CACLwpE,UAAWxpE,EACXhiB,KAAM,aACNgmH,SAAU,IAGdhB,eAAehB,EAASloG,EAAMmqG,EAAYxB,GACxC,OAAOxrG,GAAQtd,KAAM,MAAM,kBACnBA,KAAKuqH,YAAYlC,EAASloG,EAAMmqG,EAAY1C,GAAWC,WAAYiB,SACnE9oH,KAAKuqH,YAAYlC,EAASloG,EAAMmqG,EAAY1C,GAAWI,QAASc,MAG1EyB,YAAYlC,EAASloG,EAAMmqG,EAAYP,EAAWjB,GAChD,OAAOxrG,GAAQtd,KAAM,MAAM,YACzB,MAAMqqH,EAAWC,EAAWnqG,EAAK0vE,WACjC,GAAgB,MAAZw6B,EACF,OACF,MAAMrtG,EAAO+sG,EAAU1qH,IACjBmrH,EAAQ,GACd,IAAK,IAAI3pH,EAAI,EAAGA,EAAIwpH,EAASvpH,OAAQD,IAAK,CACxC,MAAM4pH,EAAQJ,EAASxpH,GACvB,IAAI6pH,EAAQ1qH,KAAK2qH,QAAQF,GACzB,GAAI3B,EAAmB,CACrB,MAAMroF,QAAmBzgC,KAAKooH,kBAAkBC,EAASqC,EAAM76B,WAC/D66B,EAAQ3tG,GAAeA,GAAe,GAAI0jB,GAAaiqF,SAEnD1qH,KAAKqpH,eAAehB,EAASqC,EAAOJ,EAAYxB,GACtD0B,EAAMlkH,KAAKokH,GAEbvqG,EAAKnD,GAAQwtG,KAGjBG,QAAQtkG,GAEN,MAAO,CACLwpE,UAAWxpE,EACXhiB,KAHerE,KAAK4qH,YAAYvkG,GAIhCgkG,SAAU,IAGdO,YAAYvkG,GACV,MAAMwkG,EAAS7qH,KAAK4vC,MAAMvpB,GAC1B,OAAOshG,GAAakD,GAEtB7B,qBAAqBX,GACnB,OAAO/qG,GAAQtd,KAAM,MAAM,YACzB,MAAMsqH,EAAa,GAGnB,aAFMtqH,KAAK8pH,UAAUzB,EAASiC,EAAY1C,GAAWC,kBAC/C7nH,KAAK8pH,UAAUzB,EAASiC,EAAY1C,GAAWI,SAC9CsC,KAGXJ,UAAUjpF,EAAQ8oF,EAAWE,GAC3B,MAAMnC,EAAWmC,EAAIF,EAAUjC,UAAUtoH,MACnCuoH,EAAUkC,EAAIF,EAAUhC,SAAS/3E,KAAK5f,GAAMA,EAAE5wB,QAC5B,MAApByhC,EAAO6mF,GACT7mF,EAAO6mF,GAAYC,EAEnB9mF,EAAO6mF,GAAY7mF,EAAO6mF,GAAUv9G,OAAOw9G,GAG/C+C,WAAWb,EAAKF,EAAWgB,GACzB,MAAMC,EAAUf,EAAIF,EAAUjC,UACzB37G,MAAMmE,QAAQ06G,GAGjBA,EAAQ9lH,SAAS+lH,GAAQF,EAAIzkH,KAAK2kH,EAAIzrH,SAFtCurH,EAAIzkH,KAAK0kH,EAAQxrH,OAIrBqqH,yBAAyBxB,EAAShiG,EAAI0jG,GACpC,OAAOzsG,GAAQtd,KAAM,MAAM,YACzB,MAAM0pH,QAAc1pH,KAAKmoH,IAAIe,mBAAmBb,EAAS0B,EAAU7iH,MAC7D6jH,EAAM,GACZ,IAAK,IAAIlqH,EAAI,EAAGA,EAAI6oH,EAAMx3G,OAAQrR,IAAK,CACrC,MAAMopH,QAAYjqH,KAAKmoH,IAAII,QAAQF,EAASqB,EAAM7hG,IAAIhnB,IACpCmjG,GAAWknB,UAAU7kG,EAAI4jG,EAAKF,IAE9C/pH,KAAK8qH,WAAWb,EAAKF,EAAWgB,GAEpC,OAAOA,KAGXzB,eACEtpH,KAAK4vC,MAAQ,GAEfm5E,mBAAmBV,GACjB,OAAO/qG,GAAQtd,KAAM,MAAM,YACzB,MAAMsF,EAAS,GACTg+C,EAAWniD,OAAOsG,KAAKkgH,IAAc33E,KAAKhmC,GAAMqK,SAASrK,KAC/D,IAAK,IAAInJ,EAAI,EAAGA,EAAIyiD,EAASxiD,OAAQD,IAAK,CACxC,MAAMmqH,EAAU1nE,EAASziD,GACnB6oH,QAAc1pH,KAAKmoH,IAAIe,mBAAmBb,EAAS2C,GACnD94G,EAAOw3G,EAAMx3G,OACnB,IAAK,IAAI4hC,EAAK,EAAGA,EAAK5hC,EAAM4hC,IAC1BxuC,EAAOokH,EAAM7hG,IAAIisB,IAAOk3E,EAE5BhrH,KAAK4vC,MAAQtqC,OAQjBiX,GADkB,oBAATxc,MAAwBA,KAAKorH,oBACzBrtG,KAEA0xC,KAef,IAAI47D,GAAU,MACZnkH,cACEjH,KAAKuiB,gBAAa,EAClBviB,KAAKqrH,QAAK,EACVrrH,KAAKsrH,SAAW,GAChBtrH,KAAKurH,WAAa,IAAIC,IACtBxrH,KAAKygC,WAAa,IAAIujE,GAAWhkG,MAEnCyrH,KAAKC,GACH,OAAOpuG,GAAQtd,KAAM,MAAM,YACzB,GAAIuc,GAAY,CACd,IAAIovG,EAAoB,CAAChrG,EAAMiG,IACzBjG,EAAKirG,SAAS,SACThlG,EAAS5mB,KAAKsrH,SAAW3qG,EAE3BiG,EAASjG,EAElB3gB,KAAKuiB,iBAAmBhG,GAAW,CAAEsvG,cAAc,EAAMnrG,WAAYgrG,GAA2BC,IAChG3rH,KAAKqrH,GAAKrrH,KAAKuiB,WAAWiO,QAE1BtP,QAAQzhB,MAAM,oEAIpBqsH,UAAU/5G,EAAMg6G,GACd,IAAIp8G,EAAIoN,GAAe,CACrBivG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAqB,EACrBC,uBAAwB,EACxBC,qBAAsB,GACtBC,qBAAsB,KACrBN,GACCO,EAAc,EASlB,OARatsH,KAAKuiB,WAAWupG,UAAUn8G,GAAG,CAAC48G,EAASC,KAClD,IAAIC,EAAUt/G,KAAKkI,IAAItD,EAAKZ,WAAam7G,EAAaE,GAClDrhE,EAAOnrD,KAAKuiB,WAAW7D,OAAO1F,SAASuzG,EAASA,EAAUC,GAC1DnwG,EAAMtK,EAAKiH,SAASszG,EAAaA,EAAcG,GAGnD,OAFAthE,EAAK1vC,IAAIY,GACTiwG,GAAeG,EACRA,KAIXC,YAAYX,GACV,IAAIp8G,EAAIoN,GAAe,CACrBivG,sBAAsB,EACtBC,gBAAgB,EAChBC,oBAAqB,EACrBC,uBAAwB,EACxBC,qBAAsB,GACtBC,qBAAsB,KACrBN,GAEH,OADa/rH,KAAKuiB,WAAWmqG,YAAY/8G,GAG3Cg9G,gBAAgBtE,GACdroH,KAAKuiB,WAAWoqG,gBAAgBtE,GAChC,IAAI/iH,EAAStF,KAAKqrH,GAAG5sF,SAAS,eAE9B,OADAz+B,KAAKuiB,WAAsB,UAAE,eACtBjd,EAETsnH,YAAYvE,EAASwE,GACnB,OAAO7sH,KAAKuiB,WAAWqqG,YAAYvE,EAASwE,GAE9CtE,QAAQF,EAASx4B,EAAWi9B,GAAU,GACpC,IAAIC,EAAc/sH,KAAKgtH,eAAe3E,EAASx4B,GAC3Co9B,EAAWvwD,GAAgBqwD,EAAY1oH,MAAM0oH,GAIjD,OAHID,GACF9sH,KAAKktH,YAAY7E,EAAS4E,GAErBA,EAETE,kBAAkB9E,GAChB,OAAOroH,KAAKuiB,WAAW4qG,kBAAkB9E,GAE3C+E,UAAU/E,EAASgF,GACjBlsH,OAAOsG,KAAK4lH,GAAYnoH,SAASooH,IAC/B,IAAIC,EAAWF,EAAWC,GAC1B,GAAIC,QAAmC,IAAvBA,EAAS19B,UACvB7vF,KAAKotH,UAAU/E,EAASkF,GACxBF,EAAWC,GAAgB,CACzBjpH,KAAM,EACN7E,MAAO+tH,EAAS19B,gBAEb,GAAI1jF,MAAMmE,QAAQi9G,IAAaA,EAASzsH,OAAS,EACtD,IAAK,IAAID,EAAI,EAAGA,EAAI0sH,EAASzsH,OAAQD,SACL,IAA1B0sH,EAAS1sH,GAAGgvF,YACd7vF,KAAKotH,UAAU/E,EAASkF,EAAS1sH,IACjCwsH,EAAWC,GAAczsH,GAAK,CAC5BwD,KAAM,EACN7E,MAAO+tH,EAAS1sH,GAAGgvF,eAM7B,IAAIk9B,EAAc,CAChBlwD,GAAIwwD,EAAWx9B,UACfxrF,KAAMgpH,EAAWhpH,KACjBnE,UAAWmtH,EAAW58B,UAExBzwF,KAAKwtH,iBAAiBnF,EAAS0E,GAEjCG,YAAY7E,EAASvlE,GACnB3hD,OAAOsG,KAAKq7C,GAAM59C,SAASooH,IACzB,IAAIC,EAAWzqE,EAAKwqE,GACpB,GAAIC,GAA8B,IAAlBA,EAASlpH,KACvBy+C,EAAKwqE,GAAgBttH,KAAKuoH,QAAQF,EAASkF,EAAS/tH,OAAO,QACtD,GAAI2M,MAAMmE,QAAQi9G,IAAaA,EAASzsH,OAAS,GAA0B,IAArBysH,EAAS,GAAGlpH,KACvE,IAAK,IAAIxD,EAAI,EAAGA,EAAI0sH,EAASzsH,OAAQD,IACnCiiD,EAAKwqE,GAAczsH,GAAKb,KAAKuoH,QAAQF,EAASkF,EAAS1sH,GAAGrB,OAAO,MAKzEwtH,eAAe3E,EAASx4B,GACtB,OAAO7vF,KAAKuiB,WAAWgmG,QAAQF,EAASx4B,GAE1C29B,iBAAiBnF,EAASt2G,GACxB,OAAO/R,KAAKuiB,WAAW6qG,UAAU/E,EAASt2G,EAAK8qD,GAAI9qD,EAAK1N,KAAM0N,EAAK7R,WAErEgpH,mBAAmBb,EAAShkH,GAC1B,OAAOrE,KAAKuiB,WAAW2mG,mBAAmBb,EAAShkH,GAErDopH,YAAYpF,GACV,OAAOroH,KAAKuiB,WAAWkrG,YAAYpF,GAErCqF,0BAA0BrF,EAASsF,GACE,IAA/BA,EAAqB7sH,OAIzBd,KAAKuiB,WAAWmrG,0BAA0BrF,EAASsF,GAHjDzsG,QAAQ/Q,IAAI,mCAAmCw9G,EAAqB7sH,UAKxE8sH,sBAAsBvF,GACpB,OAAOroH,KAAKuiB,WAAWqrG,sBAAsBvF,GAE/CwF,eAAejqG,EAAK1R,GAClB,OAAOlS,KAAK8tH,YAAY9tH,KAAKuiB,WAAWO,QAASc,EAAK1R,GAExD67G,cAAcnqG,EAAK1R,GACjB,OAAOlS,KAAK8tH,YAAY9tH,KAAKuiB,WAAWrD,QAAS0E,EAAK1R,GAExD47G,YAAY3qG,EAAMqB,EAAUwpG,GAC1B,OAAO7qG,EAAKnK,SAASwL,EAAW,EAAGA,EAAW,EAAIwpG,GAAWhmH,MAAM,GAErEimH,WAAW5F,GACTroH,KAAKurH,WAAW2C,OAAO7F,GACvBroH,KAAKuiB,WAAW0rG,WAAW5F,GAE7B8F,gBAAgB9F,EAAS+F,GACvBpuH,KAAKuiB,WAAW4rG,gBAAgB9F,EAAS+F,GAE3CC,yBAAyBhG,EAASz4E,EAAOw+E,GACvCpuH,KAAKuiB,WAAW8rG,yBAAyBhG,EAASz4E,EAAOw+E,GAE3DE,YAAYjG,GACV,OAAOroH,KAAKuiB,WAAW+rG,YAAYjG,GAErCkG,gBAAgBlG,GACd,OAAOroH,KAAKuiB,WAAWgsG,gBAAgBlG,GAEzCmG,YAAYnG,EAASx4B,GACnB,OAAO7vF,KAAKuiB,WAAWisG,YAAYnG,EAASx4B,GAE9C4+B,gCAAgCpG,GAC9B,MAAMr4E,EAAM,IAAIw7E,IAChB,IAAK,IAAI30G,EAAI,EAAGA,EAAI4lD,GAAY37D,OAAQ+V,IAAK,CAC3C,MAAMxS,EAAOo4D,GAAY5lD,GACnB6yG,EAAQ1pH,KAAKkpH,mBAAmBb,EAAShkH,GACzC6N,EAAOw3G,EAAMx3G,OACnB,IAAK,IAAI4E,EAAI,EAAGA,EAAI5E,EAAM4E,IAAK,CAC7B,MAAM+4E,EAAY65B,EAAM7hG,IAAI/Q,GAEtB43G,EADO1uH,KAAKuoH,QAAQF,EAASx4B,GACbC,SAAStwF,MAC/BwwC,EAAIv0B,IAAIo0E,EAAW6+B,GACnB1+E,EAAIv0B,IAAIizG,EAAU7+B,IAGtB7vF,KAAKurH,WAAW9vG,IAAI4sG,EAASr4E,GAE/B2+E,YAAYhuG,GACV3gB,KAAKsrH,SAAW3qG,IC32lDL,SAASiuG,GAAkBr+G,EAAK7F,IAClC,MAAPA,GAAeA,EAAM6F,EAAIzP,UAAQ4J,EAAM6F,EAAIzP,QAE/C,IAAK,IAAID,EAAI,EAAGguH,EAAO,IAAI1iH,MAAMzB,GAAM7J,EAAI6J,EAAK7J,IAC9CguH,EAAKhuH,GAAK0P,EAAI1P,GAGhB,OAAOguH,ECNM,SAASC,GAA4BjkF,EAAGkkF,GACrD,GAAKlkF,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOmkF,GAAiBnkF,EAAGkkF,GACtD,IAAI77G,EAAI/R,OAAOK,UAAU6O,SAAS7L,KAAKqmC,GAAG7iC,MAAM,GAAI,GAEpD,MADU,WAANkL,GAAkB23B,EAAE5jC,cAAaiM,EAAI23B,EAAE5jC,YAAYC,MAC7C,QAANgM,GAAqB,QAANA,EAAoB/G,MAAM6E,KAAK65B,GACxC,cAAN33B,GAAqB,2CAA2C+7G,KAAK/7G,GAAW87G,GAAiBnkF,EAAGkkF,QAAxG,GCHa,SAASG,GAAmB3+G,GACzC,OCJa,SAA4BA,GACzC,GAAIpE,MAAMmE,QAAQC,GAAM,OAAOy+G,GAAiBz+G,GDGzC4+G,CAAkB5+G,IELZ,SAA0B/I,GACvC,GAAsB,oBAAXvF,QAAmD,MAAzBuF,EAAKvF,OAAOE,WAA2C,MAAtBqF,EAAK,cAAuB,OAAO2E,MAAM6E,KAAKxJ,GFInF4nH,CAAgB7+G,IAAQ8+G,GAA2B9+G,IGLvE,WACb,MAAM,IAAI9P,UAAU,wIHIwE6uH,GIL/E,SAASC,GAAgB1kF,EAAGhb,GAMzC,OALA0/F,GAAkBpuH,OAAOiG,gBAAkB,SAAyByjC,EAAGhb,GAErE,OADAgb,EAAExjC,UAAYwoB,EACPgb,GAGF0kF,GAAgB1kF,EAAGhb,GCLb,SAAS2/F,GAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIjvH,UAAU,sDAGtBU,OAAOC,eAAequH,EAAU,YAAa,CAC3CjwH,MAAO2B,OAAO6B,OAAO0sH,GAAcA,EAAWluH,UAAW,CACvDyF,YAAa,CACXzH,MAAOiwH,EACPvuH,UAAU,EACVD,cAAc,KAGlBC,UAAU,IAERwuH,GAAYtoH,GAAeqoH,EAAUC,GChB5B,SAASC,GAAQjuH,GAG9B,OAAOiuH,GAAU,mBAAqB1tH,QAAU,iBAAmBA,OAAOE,SAAW,SAAUT,GAC7F,cAAcA,GACZ,SAAUA,GACZ,OAAOA,GAAO,mBAAqBO,QAAUP,EAAIuF,cAAgBhF,QAAUP,IAAQO,OAAOT,UAAY,gBAAkBE,GACvHiuH,GAAQjuH,GCPE,SAASkuH,GAAuB7vH,GAC7C,QAAa,IAATA,EACF,MAAM,IAAI8vH,eAAe,6DAG3B,OAAO9vH,ECHM,SAAS+vH,GAA2B/vH,EAAMyE,GACvD,GAAIA,IAA2B,WAAlBmrH,GAAQnrH,IAAsC,mBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAI/D,UAAU,4DAGtB,OAAOsvH,GAAsBhwH,GCThB,SAASiwH,GAAgBnlF,GAItC,OAHAmlF,GAAkB7uH,OAAOiG,eAAiBjG,OAAO0D,eAAiB,SAAyBgmC,GACzF,OAAOA,EAAExjC,WAAalG,OAAO0D,eAAegmC,IAEvCmlF,GAAgBnlF,GCAV,SAASolF,GAAe1/G,EAAK1P,GAC1C,OCLa,SAAyB0P,GACtC,GAAIpE,MAAMmE,QAAQC,GAAM,OAAOA,EDIxB2/G,CAAe3/G,IELT,SAA+BA,EAAK1P,GACjD,IAAIsvH,EAAY,MAAP5/G,EAAc,KAAyB,oBAAXtO,QAA0BsO,EAAItO,OAAOE,WAAaoO,EAAI,cAE3F,GAAU,MAAN4/G,EAAJ,CACA,IAIIC,EAAIC,EAJJv4G,EAAO,GACPw4G,GAAK,EACLC,GAAK,EAIT,IACE,IAAKJ,EAAKA,EAAG3rH,KAAK+L,KAAQ+/G,GAAMF,EAAKD,EAAGvqH,QAAQlG,QAC9CoY,EAAKxR,KAAK8pH,EAAG5wH,QAETqB,GAAKiX,EAAKhX,SAAWD,GAH4ByvH,GAAK,IAK5D,MAAOlwH,GACPmwH,GAAK,EACLF,EAAKjwH,UAEL,IACOkwH,GAAsB,MAAhBH,EAAW,QAAWA,EAAW,iBAE5C,GAAII,EAAI,MAAMF,GAIlB,OAAOv4G,GFtBuB04G,CAAqBjgH,EAAK1P,IAAMwuH,GAA2B9+G,EAAK1P,IGLjF,WACb,MAAM,IAAIJ,UAAU,6IHIgFgwH,GIL/F,SAASC,GAAkBC,wBACfC,mBAAmBD,aC4BhBE,wEAAf,WAAgCnhH,iGAEVrP,MAAtBqP,EAAEohH,mBAA+BphH,EAAEohH,kBAAmB,GAC/BzwH,MAAvBqP,EAAEqhH,oBAAgCrhH,EAAEqhH,kBAAoB,IAClC1wH,MAAtBqP,EAAEshH,mBAA+BthH,EAAEshH,iBAAmB,IAEtDthH,EAAEqhH,kBAAkBjwH,QAAQogB,QAAQ/Q,IAAI,4DACxCT,EAAEshH,iBAAiBlwH,QAAQogB,QAAQ/Q,IAAI,2DAElB9P,MAArBqP,EAAEuhH,iBAAyD5wH,MAAzBqP,EAAEwhH,2CACnChwG,QAAQzhB,MAAM,qFACP,kBAGL0xH,EAAQ,aAEKzhH,EAAE0hH,OAAO3wF,WAAW8oF,kBAAkB75G,EAAE24G,QAAS34G,EAAE2hH,iBAAiB,WAAjFC,SAEGzwH,EAAI,eAAGA,EAAIywH,EAAKxwH,gCAEfywH,EAAQD,EAAKzwH,aAEI6O,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASkJ,eAAlEC,UAGO9hH,EAAE+hH,gBAAmBD,EAAS9hH,EAAEgiH,uFAGb/xH,QAAQgyH,IAAI,CACxCjiH,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASmJ,EAAS9hH,EAAE+hH,eAAejyH,OAC3EkQ,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASmJ,EAAS9hH,EAAEgiH,cAAclyH,oCAFvEoyH,OAASjxH,OAKa,0BAA1BixH,EAAQ9hC,SAAStwF,OAChB0hB,QAAQ/Q,IAAI,WAGY,0BAAzBxP,EAAOmvF,SAAStwF,OACf0hB,QAAQ/Q,IAAI,UAGV0hH,EAAanB,GAAkBkB,EAAQ9hC,SAAStwF,OAChDsyH,EAAYpB,GAAkB/vH,EAAOmvF,SAAStwF,OAC9CuyH,EAAerB,GAAkBc,EAAS1hC,SAAStwF,OAGjCa,MAArBqP,EAAEuhH,iBACDE,EAAM7qH,cACKurH,GACNniH,EAAEuhH,gBAAkB,OAAQa,KAKTzxH,MAAzBqP,EAAEwhH,qBACDC,EAAM7qH,cACKwrH,GACNpiH,EAAEwhH,oBAAsB,OAAQW,KAKtCniH,EAAEohH,kBACDK,EAAM7qH,KAAK,OACAyrH,UACE,+BACOP,EAAS3hC,4BACN,CACf,OAAQgiC,GACR,OAAQC,cAnDSjxH,qDA0D1BswH,+EAKWa,wEAAf,WAAiCtiH,iFAEXrP,MAAtBqP,EAAEohH,mBAA+BphH,EAAEohH,kBAAmB,GAC/BzwH,MAAvBqP,EAAEqhH,oBAAgCrhH,EAAEqhH,kBAAoB,IAClC1wH,MAAtBqP,EAAEshH,mBAA+BthH,EAAEshH,iBAAmB,IAEtDthH,EAAEohH,kBAAkB5vG,QAAQ/Q,IAAI,6DAEX9P,MAArBqP,EAAEuhH,iBAAyD5wH,MAAzBqP,EAAEwhH,2CACnChwG,QAAQzhB,MAAM,qFACP,kBAGL0xH,EAAQ,aAEKzhH,EAAE0hH,OAAO3wF,WAAW8oF,kBAAkB75G,EAAE24G,QAAS34G,EAAE2hH,iBAAiB,WAAjFC,8BAEGzwH,+FAEC0wH,EAAQD,EAAKzwH,YAEI6O,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASkJ,cAAlEC,UAGO9hH,EAAE+hH,gBAAmBD,EAAS9hH,EAAEgiH,0FAEvBhiH,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASmJ,EAAS9hH,EAAE+hH,eAAejyH,iBAA3FoyH,UAEHliH,EAAEqhH,kBAAkBjwH,SAAwD,GAA9C4O,EAAEqhH,kBAAkB19G,QAAQu+G,EAAQvtH,wEAE/D4tH,EAAsB,GACnBpxH,EAAI,EAAGA,EAAI2wH,EAAS9hH,EAAEgiH,cAAc5wH,OAAQD,IACjDoxH,EAAe3rH,KAAKoJ,EAAE0hH,OAAO3wF,WAAW2nF,kBAAkB14G,EAAE24G,QAASmJ,EAAS9hH,EAAEgiH,cAAc7wH,GAAGrB,yBAE/EG,QAAQgyH,IAAIM,cAA5BC,SAEFtiF,EAAQ,IAAIuiF,KACVC,EAAgBF,EACjBtiG,QAAO,SAACrE,UAELqkB,EAAM9gB,IAAIvD,EAAElnB,OACTqL,EAAEshH,iBAAiBlwH,SAAiD,GAAvC4O,EAAEshH,iBAAiB39G,QAAQkY,EAAElnB,SAGhE2rC,KAAI,SAACzkB,SAEK,OADWmlG,GAAkBnlG,EAAEukE,SAAStwF,YAKrCsB,qEAEZ+wH,EAAanB,GAAkBkB,EAAQ9hC,SAAStwF,OAG9Ba,MAArBqP,EAAEuhH,iBACDE,EAAM7qH,cACKurH,GACNniH,EAAEuhH,gBAAkBmB,IAKD/xH,MAAzBqP,EAAEwhH,qBACDkB,EAAcltH,SAAQ,SAAAklH,OACZ1oH,EAAM2wH,KAAKC,MAAMD,KAAKE,UAAUnI,IACtC+G,EAAM7qH,KAAKnF,OAAOqxH,OAAO9wH,OAAOgO,EAAEwhH,oBAAsB,OAAQW,oDAjDnEhxH,EAAI,eAAGA,EAAIywH,EAAKxwH,kDAAhBD,iGAAwBA,qDAuD1BswH,sECpLJ,ICSKsB,GAKAC,GAUAC,GDxBCC,GAAyB,UACzB,CACX,UACa,CACX,UACa,CACX,MACS,gBACF,WAEP,MACS,uBACF,iBAGA,gBACF,YAEP,UACa,CACX,UACa,CACX,MACS,iBACF,kBAGA,cACF,YAEP,UACa,CACX,MACS,sBACF,YAEP,MACS,iBACF,YAEP,MACS,qBACF,YAEP,MACS,2BACF,YAEP,MACS,eACF,YAEP,MACS,qBACF,YAEP,MACS,qBACF,YAEP,UACa,CACX,MACS,iBACF,YAEP,MACS,qBACF,kBAGA,oBACF,kBAGA,gBACF,YAEP,UACa,CACX,MACS,cACF,YAEP,MACS,kBACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,4BACF,YAEP,MACS,8BACF,YAEP,UACa,CACX,MACS,uBACF,YAEP,UACa,CACX,MACS,4BACF,iBAGA,2BACF,YAEP,MACS,gCACF,YAEP,MACS,aACF,kBAGA,eACF,kBAGA,cACF,YAEP,UACa,CACX,MACS,cACF,YAEP,MACS,kBACF,YAEP,MACS,aACF,kBAGA,gBACF,YAEP,UACa,CACX,MACS,mBACF,YAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,yBACF,kBAGA,aACF,WAEP,MACS,6BACF,YAEP,MACS,gBACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,eACF,WAEP,MACS,iBACF,YAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,yBACF,kBAGA,aACF,WAEP,MACS,gBACF,WAEP,UACa,CACX,MACS,2BACF,kBAGA,eACF,YAEP,MACS,aACF,YAEP,UACa,CACX,MACS,0BACF,kBAGA,cACF,YAEP,MACS,gBACF,YAEP,MACS,aACF,YAEP,MACS,mBACF,YAEP,MACS,aACF,YAEP,MACS,sBACF,YAEP,UACa,CACX,MACS,0BACF,YAEP,MACS,yBACF,kBAGA,aACF,YAEP,MACS,cACF,WAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,0BACF,YAEP,MACS,yBACF,kBAGA,aACF,YAEP,UACa,CACX,MACS,2BACF,iBAGA,eACF,kBAGA,wBACF,YAEP,MACS,qBACF,YAEP,UACa,CACX,UACa,CACX,MACS,iBACF,YAEP,MACS,cACF,YAEP,MACS,mBACF,UAEP,MACS,uBACF,WAEP,MACS,qCACF,YAEP,MACS,eACF,YAEP,MACS,8BACF,iBAGA,mCACF,YAEP,UACa,CACX,MACS,mCACF,YAEP,UACa,CACX,MACS,6BACF,YAEP,MACS,eACF,UAEP,MACS,eACF,YAEP,MACS,gBACF,YAEP,MACS,aACF,WAEP,MACS,kBACF,YAEP,MACS,mBACF,YAEP,MACS,qBACF,YAEP,MACS,0BACF,WAEP,MACS,sBACF,WAEP,MACS,eACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,WAEP,MACS,sBACF,YAEP,MACS,mBACF,YAEP,MACS,wBACF,YAEP,MACS,oBACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,YAEP,MACS,yBACF,kBAGA,+BACF,YAEP,UACa,CACX,MACS,uBACF,WAEP,MACS,eACF,YAEP,MACS,kCACF,WAEP,MACS,4BACF,YAEP,MACS,kBACF,YAEP,MACS,yBACF,WAEP,MACS,wBACF,YAEP,MACS,cACF,kBAGA,uBACF,YAEP,UACa,CACX,MACS,4BACF,WAEP,MACS,qBACF,YAEP,MACS,oBACF,WAEP,MACS,oBACF,YAEP,MACS,oBACF,iBAGA,oBACF,YAEP,UACa,CACX,MACS,mBACF,YAEP,MACS,YACF,YAEP,MACS,aACF,gBAGA,yBACF,YAEP,UACa,CACX,MACS,4BACF,YAEP,MACS,qBACF,YAEP,MACS,oBACF,YAEP,MACS,oBACF,kBAGA,oBACF,WAEP,UACa,CACX,MACS,kCACF,YAEP,MACS,aACF,iBAGA,0BACF,WAEP,UACa,CACX,MACS,oBACF,YAEP,MACS,6BACF,WAEP,MACS,gCACF,YAEP,MACS,0BACF,YAEP,MACS,gCACF,YAEP,MACS,aACF,UAEP,MACS,qBACF,WAEP,MACS,sBACF,YAEP,MACS,eACF,YAEP,MACS,yBACF,YAEP,MACS,oBACF,YAEP,MACS,sBACF,YAEP,MACS,sBACF,kBAGA,qBACF,YAEP,UACa,CACX,MACS,qBACF,YAEP,MACS,eACF,WAEP,MACS,oBACF,kBAGA,4BACF,kBAGA,gCACF,kBAGA,4BACF,YAEP,MACS,wBACF,YAEP,UACa,CACX,MACS,4BACF,YAEP,MACS,0BACF,YAEP,MACS,iBACF,WAEP,MACS,2BACF,WAEP,UACa,CACX,MACS,uBACF,WAEP,MACS,wBACF,YAEP,MACS,eACF,YAEP,MACS,qBACF,kBAGA,2BACF,YAEP,MACS,0BACF,kBAGA,yBACF,YAEP,UACa,CACX,UACa,CACX,MACS,0BACF,kBAGA,+BACF,YAEP,UACa,CACX,UACa,CACX,MACS,4BACF,kBAGA,uBACF,YAEP,MACS,uBACF,iBAGA,kCACF,YAEP,MACS,uBACF,kBAGA,uBACF,YAEP,UACa,CACX,MACS,kBACF,YAEP,MACS,+BACF,iBAGA,0BACF,WAEP,MACS,0BACF,YAEP,MACS,yBACF,YAEP,MACS,uBACF,kBAGA,gBACF,YAEP,MACS,aACF,YAEP,UACa,CACX,MACS,yBACF,kBAGA,aACF,YAEP,MACS,cACF,YAEP,UACa,CACX,UACa,CACX,MACS,+BACF,kBAGA,wCACF,YAEP,UACa,CACX,MACS,iBACF,YAEP,MACS,uBACF,YAEP,MACS,aACF,YAEP,MACS,cACF,kBAGA,gCACF,YAEP,MACS,oBACF,iBAGA,uBACF,YAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,+BACF,kBAGA,8BACF,YAEP,MACS,8BACF,YAEP,UACa,CACX,MACS,+BACF,kBAGA,gCACF,kBAGA,yBACF,WAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,gCACF,YAEP,MACS,kCACF,iBAGA,2BACF,kBAGA,2BACF,YAEP,UACa,CACX,UACa,CACX,MACS,kCACF,YAEP,MACS,kCACF,WAEP,MACS,oCACF,kBAGA,6BACF,YAEP,UACa,CACX,UACa,CACX,MACS,qCACF,kBAGA,8BACF,WAEP,UACa,CACX,MACS,uCACF,kBAGA,gCACF,kBAGA,yBACF,iBAGA,uBACF,kBAGA,gBACF,YAEP,UACa,CACX,UACa,CACX,MACS,sCACF,YAEP,MACS,qCACF,YAEP,MACS,oCACF,WAEP,MACS,qBACF,YAEP,MACS,sBACF,YAEP,MACS,4BACF,iBAGA,6BACF,kBAGA,iBACF,kBAGA,eACF,YAEP,UACa,CACX,UACa,CACX,MACS,kBACF,YAEP,MACS,sBACF,WAEP,MACS,iBACF,kBAGA,oBACF,YAEP,UACa,CACX,MACS,kBACF,WAEP,UACa,CACX,UACa,CACX,MACS,iBACF,WAEP,MACS,iCACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,WAEP,MACS,qBACF,YAEP,MACS,wBACF,YAEP,MACS,iBACF,YAEP,MACS,oBACF,YAEP,MACS,mBACF,YAEP,MACS,iBACF,YAEP,MACS,kBACF,YAEP,MACS,oBACF,YAEP,MACS,uBACF,YAEP,MACS,iBACF,YAEP,MACS,iBACF,YAEP,MACS,0BACF,YAEP,MACS,iBACF,YAEP,MACS,wBACF,YAEP,MACS,kBACF,WAEP,MACS,iBACF,YAEP,MACS,mBACF,kBAGA,4BACF,YAEP,MACS,yBACF,YAEP,UACa,CACX,UACa,CACX,MACS,qBACF,YAEP,MACS,kBACF,YAEP,MACS,uBACF,WAEP,MACS,2BACF,YAEP,MACS,yCACF,WAEP,MACS,mBACF,YAEP,MACS,kCACF,kBAGA,uCACF,YAEP,UACa,CACX,MACS,uCACF,YAEP,UACa,CACX,MACS,iCACF,YAEP,MACS,mBACF,WAEP,MACS,mBACF,YAEP,MACS,oBACF,YAEP,MACS,iBACF,YAEP,MACS,sBACF,YAEP,MACS,uBACF,WAEP,MACS,yBACF,YAEP,MACS,8BACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,WAEP,MACS,8BACF,YAEP,MACS,uBACF,YAEP,MACS,0BACF,YAEP,MACS,uBACF,YAEP,MACS,4BACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,YAEP,MACS,uBACF,YAEP,MACS,6BACF,kBAGA,mCACF,YAEP,UACa,CACX,MACS,2BACF,YAEP,MACS,mBACF,YAEP,MACS,sCACF,YAEP,MACS,gCACF,WAEP,MACS,sBACF,YAEP,MACS,6BACF,YAEP,MACS,4BACF,YAEP,MACS,kBACF,iBAGA,2BACF,YAEP,UACa,CACX,MACS,gCACF,WAEP,MACS,yBACF,YAEP,MACS,wBACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,iBAGA,wBACF,YAEP,UACa,CACX,MACS,uBACF,YAEP,MACS,gBACF,WAEP,MACS,iBACF,kBAGA,6BACF,YAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,yBACF,YAEP,MACS,wBACF,YAEP,MACS,wBACF,kBAGA,wBACF,YAEP,UACa,CACX,MACS,sCACF,YAEP,MACS,iBACF,eAGA,8BACF,YAEP,UACa,CACX,MACS,wBACF,YAEP,MACS,iCACF,YAEP,MACS,oCACF,WAEP,MACS,8BACF,WAEP,MACS,oCACF,YAEP,MACS,iBACF,YAEP,MACS,yBACF,YAEP,MACS,0BACF,YAEP,MACS,mBACF,YAEP,MACS,6BACF,YAEP,MACS,wBACF,YAEP,MACS,0BACF,YAEP,MACS,0BACF,kBAGA,yBACF,YAEP,UACa,CACX,MACS,yBACF,YAEP,MACS,mBACF,YAEP,MACS,wBACF,kBAGA,gCACF,kBAGA,oCACF,kBAGA,gCACF,YAEP,MACS,4BACF,YAEP,UACa,CACX,MACS,gCACF,UAEP,MACS,8BACF,YAEP,MACS,qBACF,YAEP,MACS,+BACF,YAEP,UACa,CACX,MACS,2BACF,YAEP,MACS,4BACF,YAEP,MACS,yBACF,YAEP,MACS,mBACF,kBAGA,+BACF,WAEP,MACS,8BACF,kBAGA,6BACF,YAEP,UACa,CACX,MACS,sBACF,YAEP,MACS,mCACF,kBAGA,8BACF,YAEP,MACS,8BACF,YAEP,MACS,6BACF,kBAGA,oBACF,WAEP,UACa,CACX,UACa,CACX,MACS,kBACF,kBAGA,oCACF,YAEP,MACS,wBACF,kBAGA,2BACF,WAEP,MACS,oBACF,kBAGA,oBACF,YAEP,UACa,CACX,UACa,CACX,MACS,0CACF,YAEP,MACS,yCACF,YAEP,MACS,wCACF,YAEP,MACS,yBACF,YAEP,MACS,0BACF,WAEP,MACS,gCACF,kBAGA,iCACF,kBAGA,qBACF,kBAGA,mBACF,kBAGA,yBACF,WAEP,UACa,CACX,UACa,CACX,UACa,CACX,MACS,6BACF,YAEP,MACS,4BACF,YAEP,MACS,oCACF,YAEP,MACS,0CACF,YAEP,MACS,+BACF,WAEP,MACS,8BACF,iBAGA,8BACF,YAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,wBACF,kBAGA,oBACF,kBAGA,8BACF,YAEP,UACa,CACX,MACS,4BACF,WAEP,UACa,CACX,MACS,gCACF,YAEP,MACS,+BACF,kBAGA,yBACF,kBAGA,mCACF,kBAGA,2BACF,YAEP,UACa,CACX,UACa,CACX,MACS,0BACF,YAEP,MACS,4BACF,YAEP,UACa,CACX,MACS,kCACF,kBAGA,0BACF,YAEP,MACS,4BACF,YAEP,MACS,4BACF,YAEP,MACS,6BACF,iBAGA,mBACF,YAEP,UACa,CACX,MACS,8BACF,YAEP,MACS,oCACF,WAEP,MACS,gCACF,YAEP,MACS,8BACF,WAEP,MACS,6BACF,YAEP,MACS,8BACF,kBAGA,sBACF,YAEP,UACa,CACX,UACa,CACX,MACS,gCACF,YAEP,MACS,yCACF,kBAGA,4BACF,YAEP,MACS,iCACF,YAEP,MACS,yBACF,YAEP,MACS,sCACF,YAEP,UACa,CACX,MACS,oCACF,iBAGA,oCACF,YAEP,MACS,uCACF,YAEP,MACS,8BACF,WAEP,MACS,wBACF,YAEP,MACS,wBACF,YAEP,MACS,+BACF,WAEP,MACS,8BACF,WAEP,MACS,wCACF,YAEP,MACS,oBACF,YAEP,MACS,6BACF,WAEP,UACa,CACX,UACa,CACX,MACS,iCACF,kBAGA,iCACF,kBAGA,yBACF,kBAGA,oBACF,WAEP,MACS,oBACF,YAEP,UACa,CACX,MACS,sBACF,WAEP,MACS,iBACF,YAEP,MACS,2BACF,WAEP,MACS,wBACF,kBAGA,sBAC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ACjBF,kBAAmB,CAACl4D,IACpBm4D,iBAAkB,CAACpgE,cAGVohE,GAAkB3gG,6IApNR2qG,ICjBlBv/D,GAAuC,SACxC,uBACC,sCACA,yBACA,qBACA,wBACA,sCACA,0CACA,8CACA,mBACA,oBACC,qCACA,uBACA,kCACA,kCACA,wBACA,0BACA,kCACA,mCACA,8CACA,6BACA,kCACA,uCACA,8BACA,6BACA,oCACA,8BACA,8BACA,oCACA,yBACA,qCACA,gCACA,qBACA,4BACA,0BACA,6BACA,iCACA,iCACA,oCACA,sCACA,iCACA,kCACA,0BACA,oCACA,2BACA,kCACA,qBACA,8BACA,sCACA,yBACA,2BACA,2BACA,uBACA,oCACA,gCACA,qCACA,kCACA,kCACA,uCACA,oBACA,2CACA,6BACA,4BACA,sCACA,gCACA,qCACA,iCACA,0CACA,sBACA,sBACA,2BACA,yBACA,iCACA,4BACA,0BACA,kCACA,2CACA,mCACA,2CACA,qCACA,yBACA,gCACA,wBACA,oCACA,0CACA,mCACA,6BACA,gCACA,kCACA,8BACA,+BACA,4BACA,yBACA,yBACA,yCACA,sCACA,2BACA,uBACA,8BACA,4BACA,qCACA,mCACA,oBACA,2BACA,wBACA,uCACA,8BACA,gDACA,qCACA,kCACA,sCACA,gCACA,gCACA,+CACA,0BACA,4BACA,iCACA,kCACA,uCACA,0BACA,yBACA,yCACA,gCACA,6BACA,8BACA,kCACA,oBACA,gCACA,kCACA,+CACA,wCACA,yBACA,gCACA,8BACA,+BACA,2BACA,8BACA,oBACA,mDACA,sBACA,wBACA,8BACA,2BACA,sBACA,mCACA,wBACA,oCACA,yCACA,2BACA,+BACA,oCACA,qCACA,uCACA,uBACA,+BACA,kCACA,8BACA,2CACA,8BACA,8BACA,sCACA,sCACA,mCACA,8BACA,qCACA,qBACA,mCACA,2BACA,kCACC,oCACA,sCACA,qBACA,0CACA,4BACA,6BACA,qBACA,gCACA,8CACA,6BACA,mCACA,yBACA,6BACA,2CACA,+BACA,6CACA,2CACA,gCACA,uBACA,+BACA,qCACA,wCACA,+BACA,kCACA,+BACA,kCACA,8BACA,oCACA,kCACA,yBACA,iCACA,gCACA,+BACA,qCACA,iDACA,2BACA,oCACA,6BACA,uCACA,8BACA,mCACA,kCACA,8CACA,wCACA,yBACA,gDACA,kCACA,oCACA,6BACA,+BACA,8BACA,qBACA,iCACA,0CACA,4BACA,6BACA,sCACA,2CACA,gCACA,kCACA,wCACA,8BACA,sBACA,kCACA,sCACA,yCACA,6BACA,8CACA,iCACA,sCACA,gCACA,4BACA,8BACA,yCACA,mCACA,+BACA,4DACA,uBACA,6BACA,+BACA,kCACA,wCACA,8BACA,8CACA,kCACA,0BACA,4BACA,gCACA,mCACA,0CACA,yBACA,yBACA,2CACA,qCACA,iCACA,oCACA,wCACA,+BACA,0BACA,sCACA,yCACA,gDACA,qBACA,yCACA,sCACA,yBACA,sCACA,2CACA,2CACA,2CACA,wBACA,0CACA,0CACA,+CACA,+BACA,uCACA,+CACA,iCACA,uCACA,iCACA,2BACA,4BACA,6BACA,4CACA,mCACA,uCACA,kCACA,6BACA,2BACA,qCACA,6BACA,mCACA,uBACA,kCACA,qBACA,gCACA,wBACA,oCACA,uCACA,2CACA,wBACA,4BACA,qCACA,mCACA,2BACA,oCACA,+BACA,uCACA,0BACA,2BACA,iCACA,gCACA,yBACA,qCACA,mDACA,yCACA,kCACA,8BACA,yCACA,sCACA,gCACA,4BACA,yBACA,kCACA,4BACA,yCACA,qCACA,mCACA,6BACA,0BACA,gCACA,oCACA,oCACA,2BACA,6BACA,2DACA,yBACA,4CACA,wCACA,mCACA,4BACA,0BACA,qBACA,iDACA,4CACA,2CACA,iCACA,kCACA,4BACA,6BACA,sCACA,qCACA,+BACA,qCACA,+CACA,sBACA,2BACA,6CACA,uBACA,sCACA,4BACA,8BACA,sCACA,qCACA,2CACA,uCACA,8CACA,0CACA,uCACA,yBACA,0BACA,+BACA,4BACA,kDACA,0BACA,2BACA,4BACA,6BACA,4BACA,+CACA,6BACA,uCACA,wBACA,gCACA,4CACA,+BACA,yBACA,0BACA,uBACA,wBACA,0BACA,8CACA,8CACA,6CACA,sBACA,iCACA,yBACA,oCACA,oCACA,gCACA,yBACA,+BACA,qBACA,2BACA,6BACA,4BACA,yCACA,mCACA,mCACA,0BACA,kCACA,qBACA,oCACA,+BACA,2BACA,8CACA,4CACA,0BACA,0CACA,6CACA,4CACA,sCACA,iDACA,gCACA,gCACA,iCACA,sCACA,6BACA,oCACA,+BACA,sBACA,wBACA,wCACA,qBACA,qCACA,wCACA,yBACA,gCACA,iCACA,8BACA,2BACA,qBACA,oCACA,qCACA,4BACA,iCACA,mCACA,yCACA,4BACA,qCACA,gCACA,yBACA,sBACA,sCACA,uCACA,4CACA,uBACA,wCACA,+BACA,oCACA,sCACA,wCACA,6CACA,mCACA,sCACA,0BACA,0CACA,iCACA,6CACA,sBACA,wCACA,6BACA,+BACA,8CACA,oCACA,wCACA,0CACA,8BACA,iCACA,0BACA,kCACA,wCACA,2BACA,+BACA,0CACA,kCACA,0CACA,kCACA,2CACA,yBACA,mCACA,uBACA,gCACA,kCACA,yCACA,yCACA,uBACA,8BACA,+BACA,kCACA,2BACA,kCACA,2BACA,iCACA,uCACA,gDACA,oCACA,mCACA,6BACA,+BACA,oCACA,4BACA,iCACA,6BACA,iCACA,yBACA,oCACA,yBACA,yCACA,uCACA,uBACA,6CACA,wBACA,qCACA,4BACA,iCACA,qCACA,oCACA,sCACA,mCACA,0BACA,4BACA,mCACA,qBACA,wCACA,yCACA,wCACA,qBACA,2BACA,mCACA,iCACA,wCACA,iCACA,qCACA,qCACA,iCACA,8BACA,iCACA,wCACA,oCACA,iCACA,sBACA,2BACA,+BACA,kCACA,kCACA,kCACA,+BACA,sCACA,iCACA,kCACA,iCACA,+BACA,qCACA,sBACA,sCACA,0CACA,2BACA,iCACA,gCACA,kCACA,mCACA,yBACA,2CACA,sBACA,wCACA,iCACA,+CACA,yCACA,6BACA,wCACA,oCACA,mCACA,yBACA,8CACA,2BACA,8BACA,wBACA,wCACA,6BACA,wBACA,gCACA,qCACA,iCACA,uBACA,0CACA,sCACA,8BACA,uBACA,kDACA,6BACA,gCACA,8BACA,sCACA,sCACA,uBACA,sCACA,8BACA,+BACA,gDACA,6BACA,0CACA,kCACA,oBACA,wBACA,4BACA,gCACA,+CACA,iCACA,iCACA,0CACA,sBACA,qBACA,4CACA,4DACA,kCACA,4BACA,8BACA,oCACA,sCACA,iCACA,4BACA,iCACA,yCACA,mCACA,0CACA,4CACA,iCACA,2BACA,+BACA,6BACA,6BACA,kCACA,4BACA,oCACA,sCACA,0BACA,kCACA,6BACA,sCACA,oCACA,kCACA,wCACA,uCACA,iDACA,mCACA,+BACA,uBACA,6BACA,+BACA,oCACA,oCACA,yBACA,+BACA,kCACA,+BACA,4BACA,qCACA,qBACA,oCACA,kCACA,kDACA,oCACA,gCACA,kDACA,qCACA,0CACA,2BACA,0BACA,8BACA,8BACA,uBACA,4BACA,8BACA,qCACA,6BACA,4CACA,+BACA,sBACA,qCACA,wCACA,uBACA,4CACA,iCACA,yBACA,8CACA,qBACA,wBACA,6BACA,mCACA,kCACA,2BACA,gCACA,wCACA,gCACA,2BACA,2BACA,2BACA,sCACA,wCACA,2BACA,8CACA,2BACA,iCACA,0BACA,6BACA,0BACA,yBACA,kCACA,mCACA,uBACA,kCACA,uBACA,6BACA,sCACA,sCACA,wCACA,qBACA,iDACA,4BACA,gCACA,uCACA,oCACA,2BACA,kDACA,yBACA,sBACA,kCACA,kCACA,sCACA,+CACA,wCACA,4BACA,+BACA,uCACA,yCACA,sBACA,wBACA,6BACA,yBACA,2CACA,4CACA,gCACA,8BACA,sCACA,oCACA,0CACA,6BACA,4BACA,+BACA,uCACA,oCACA,4BACA,4BACA,yBACA,gCACA,iCACA,i+CCzvBF6iE,+IAET,oGAES9V,SAAWtoG,QAAQ/Q,IAAI,iCACvBq5G,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"}